<UserControl x:Class="STC.Projects.WPFControlLibrary.TrafficMapControl.TrafficMapUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:Primitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls.Navigation"
             xmlns:TabControl="clr-namespace:Telerik.Windows.Controls.TabControl;assembly=Telerik.Windows.Controls.Navigation"
             xmlns:EsriVM="clr-namespace:STC.Projects.ClassLibrary.Common;assembly=STC.Projects.ClassLibrary.Common"
             xmlns:Esri="http://schemas.esri.com/arcgis/runtime/2013"
             xmlns:p="clr-namespace:STC.Projects.WPFControlLibrary.TrafficMapControl.Properties"
             mc:Ignorable="d">

    <UserControl.Resources>

        <EsriVM:EsriMapViewModel x:Key="EsriVM"/>
        <Esri:SimpleFillSymbol x:Key="BufferSymbolCircleSmall"  Style="Solid" >
            <Esri:SimpleFillSymbol.Outline>
                <Esri:SimpleLineSymbol Color="#DE6A58" Width="2" />
            </Esri:SimpleFillSymbol.Outline>
        </Esri:SimpleFillSymbol>

        <Esri:SimpleFillSymbol x:Key="BufferSymbolCircleBig"  Style="Solid" >
            <Esri:SimpleFillSymbol.Outline>
                <Esri:SimpleLineSymbol Color="#DE6A58" Width="2" />
            </Esri:SimpleFillSymbol.Outline>
        </Esri:SimpleFillSymbol>

        <!--<Style x:Key="CustomRadioBtnToggleBtnStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource RadToggleButtonStyle}" />-->

        <Style x:Key="RadToggleButtonStyle" TargetType="{x:Type telerik:RadToggleButton}">

            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Background" Value="#5b5b5b"/>

            <Setter Property="CornerRadius" Value="1"/>

            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid Background="{TemplateBinding Background}">
                            <Border BorderBrush="#7f8183" BorderThickness="1" CornerRadius="2">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"></ContentPresenter>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="#00ffcc"/>

                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Foreground" Value="#7f8183"/>
                    <Setter Property="Background" Value="#5b5b5b"/>
                </Trigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="bg" />
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Opacity" Value="0.5"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RadToggleButtonStyle1" TargetType="{x:Type telerik:RadToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#171717"/>
            <Setter Property="Background" Value="#171717"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterPressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CommonStatesWrapper"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DisabledChecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOverChecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent" Offset="0"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerCheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="0.169"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BackgroundVisibility">
                                    <VisualState x:Name="BackgroundIsHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="BackgroundIsVisible"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStatesGroup">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterMouseOverBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterPressedBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Transparent"/>
                                            <GradientStop Color="Transparent" Offset="0.126"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Border x:Name="DisabledVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="#79bf00" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Grid x:Name="CommonStatesWrapper">
                                <Border x:Name="FocusVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="#79bf00" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                    <Border x:Name="FocusInnerVisual" BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                                <Border x:Name="CheckedVisual" BorderBrush="Transparent" BorderThickness="1" Background="#79bf00" Padding="0" CornerRadius="0">
                                    <Border x:Name="InnerCheckedVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}" Style="{DynamicResource FocusVisual}"/>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsChecked" Value="True"/>
        </Style>

        <Style x:Key="RadToggleButtonStyleSetting" TargetType="{x:Type telerik:RadToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#171717"/>
            <Setter Property="Background" Value="#171717"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterPressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CommonStatesWrapper"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DisabledChecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOverChecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent" Offset="0"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerCheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="0.169"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BackgroundVisibility">
                                    <VisualState x:Name="BackgroundIsHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="BackgroundIsVisible"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                        </Storyboard>

                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStatesGroup">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterMouseOverBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterPressedBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Transparent"/>
                                            <GradientStop Color="Transparent" Offset="0.126"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Border x:Name="DisabledVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Grid x:Name="CommonStatesWrapper">
                                <Border x:Name="FocusVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                    <Border x:Name="FocusInnerVisual" BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                                <Border x:Name="CheckedVisual" Opacity="0" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Padding="5" CornerRadius="5">
                                    <Border x:Name="InnerCheckedVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsChecked" Value="True"/>
        </Style>

        <Style x:Key="RadPanelBarItemStyle1" TargetType="{x:Type telerik:RadPanelBarItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                        <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOut"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="HeaderRow" Background="Transparent" Margin="5,0" MinHeight="{TemplateBinding MinHeight}">
                                <Border x:Name="MouseOverVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="SelectedVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="DisabledVisual" BorderBrush="#171717" BorderThickness="1" Background="#fff" CornerRadius="1" Opacity="0">
                                    <Border BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <ContentControl x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" RadiusY="2" RadiusX="2" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
                            </Grid>
                            <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                <ItemsPresenter/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White"/>
                        <GradientStop Color="#fff" Offset="0.43"/>
                        <GradientStop Color="#fff" Offset="0.44"/>
                        <GradientStop Color="#fff" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="ChildItemsTemplate">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                        <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOut"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="HeaderRow" Background="Transparent" Margin="5,0" MinHeight="{TemplateBinding MinHeight}">
                                <Border x:Name="MouseOverVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="SelectedVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="DisabledVisual" BorderBrush="#171717" BorderThickness="1" Background="#fff" CornerRadius="1" Opacity="0">
                                    <Border BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <ContentControl x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" RadiusY="2" RadiusX="2" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
                            </Grid>
                            <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                <ItemsPresenter/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <telerik:PanelBarPanel IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Level" Value="1">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                                <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Arrow"/>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOut"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected"/>
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ExpandStates">
                                            <VisualState x:Name="Expanded">
                                                <Storyboard>

                                                    <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Collapsed"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="HeaderRow" UseLayoutRounding="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="NormalVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="5" Margin="-1,0,-1,-1">
                                            <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}"/>
                                        </Border>
                                        <Border x:Name="MouseOverVisual" BorderBrush="#fff" BorderThickness="1" Grid.ColumnSpan="5" Margin="-1,0,-1,-1" Opacity="0">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#fff" Offset="1"/>
                                                    <GradientStop Color="#fff" Offset="0"/>
                                                    <GradientStop Color="#fff" Offset="0.43"/>
                                                    <GradientStop Color="#fff" Offset="0.42"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}"/>
                                        </Border>
                                        <Border x:Name="SelectedVisual" BorderThickness="1" Grid.ColumnSpan="5" Margin="-1,0,-1,-1" Opacity="0">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#fff"/>
                                                    <GradientStop Color="#fff" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#fff" Offset="0.996"/>
                                                    <GradientStop Color="#fff" Offset="0.17"/>
                                                    <GradientStop Color="#fff" Offset="0.57"/>
                                                    <GradientStop Color="#fff" Offset="0.56"/>
                                                    <GradientStop Color="#fff"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border BorderThickness="1" Background="{x:Null}">
                                                <Border.BorderBrush>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#fff"/>
                                                        <GradientStop Color="#fff" Offset="0.126"/>
                                                    </LinearGradientBrush>
                                                </Border.BorderBrush>
                                            </Border>
                                        </Border>
                                        <Path x:Name="Arrow" Grid.Column="5" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="left" Margin="7,0" Opacity="1" RenderTransformOrigin="0.5,0.5" Stretch="None" Stroke="Black" StrokeThickness="2" VerticalAlignment="Center">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0"/>
                                            </Path.RenderTransform>
                                        </Path>
                                        <ContentControl x:Name="Header" Grid.ColumnSpan="4" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Rectangle x:Name="FocusVisual" Grid.ColumnSpan="5" Grid.Column="0" IsHitTestVisible="False" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
                                    </Grid>
                                    <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                        <telerik:LayoutTransformControl x:Name="transformationRoot" IsTabStop="False">
                                            <ItemsPresenter/>
                                        </telerik:LayoutTransformControl>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="TextBlock">

            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="2" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Label">

            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="2" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style TargetType="Button">
            <Setter Property="Foreground" Value="#00ffcc" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="5" Opacity=".5" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>                       

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#49b13c" TargetName="bg" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style TargetType="TextBox">


            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#00ffcc"/>
            <!--<Setter Property="BorderThickness" Value="1"/>-->
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="CustomCheckBox" TargetType="CheckBox">
            <Grid>
                <Path x:Name="Equis"
          Opacity="0"
          Stroke="Red"
          Fill="Red"
          Stretch="UniformToFill"
          StrokeThickness="20"
          Data="M 30,100 L 80,140 L 160,60"
          Margin="0,0,2,2" />
                <ContentPresenter Margin="4"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked"
             Value="true">
                    <Setter TargetName="Equis"
              Property="Opacity"
              Value="1" />
                </Trigger>
                <Trigger Property="IsChecked"
             Value="false">
                    <Setter TargetName="Equis"
              Property="Opacity"
              Value="0" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="CheckBox" x:Key="chkboxStylekey">


            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="BorderBrush" Value="#00ffcc"/>

            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>

            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Opacity" Value=".5"/>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" Value="#ffd452"/>
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Opacity" Value=".5"/>
                </Trigger>

                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderBrush" Value="#ffd452"/>
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="Opacity" Value=".5"/>
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style TargetType="RadioButton">


            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".9" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>



        </Style>

        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background" Value="Yellow"/>
        </Style>

        <LinearGradientBrush x:Key="HorizontalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="Transparent" Offset="1.0" />
        </LinearGradientBrush>
        <RadialGradientBrush x:Key="RoundButtonDefaultBrush">
            <GradientStop Color="#38B24A" Offset="1"/>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="RoundButtonPressedBrush">
            <GradientStop Color="#38B24A" Offset="1"/>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="RoundButtonMouseOverBrush">
            <GradientStop Color="#38B24A" Offset="1"/>
        </RadialGradientBrush>
        <ControlTemplate x:Key="RoundButtonTemplate" TargetType="RepeatButton">
            <Grid>
                <Ellipse Name="PART_Ellipse" 
                         Width="20"
                         Height="30" 
                         Stroke="Black"
                         Fill="{StaticResource RoundButtonDefaultBrush}"/>
                <ContentPresenter Name="PART_ContentPresenter"  ContentSource="Content" Margin="0,0,0,6" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center"
                                  TextBlock.Foreground="White"
                                  TextBlock.FontSize="18"
                                  TextBlock.FontWeight="Bold"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="PART_Ellipse" Property="Fill" Value="{StaticResource RoundButtonMouseOverBrush}" />
                    <Setter TargetName="PART_ContentPresenter" Property="TextBlock.Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="PART_Ellipse" Property="Fill" Value="{StaticResource RoundButtonPressedBrush}" />
                    <Setter TargetName="PART_ContentPresenter" Property="TextBlock.Foreground" Value="White" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="DecreaseSliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Height="10" Background="#00ffcc" CornerRadius="5" Margin="1,0,-5,0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Gray" Height="{TemplateBinding Height}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundButtonStyle" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template" Value="{StaticResource RoundButtonTemplate}" />
        </Style>

        <Style x:Key="SliderThumbStyle" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="false"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Width" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Canvas>
                            <Path Margin="0,0" Data="M 8,3 L 0,15 0,30 15,30 15,15 8,3" Stroke="Black"
                              Name="Ellipse" Fill="Yellow" RenderTransformOrigin="0.5,0.5" Height="30" Canvas.Left="-10" Stretch="Fill" Canvas.Top="-5" Width="11" >
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Ellipse" Property="Fill" Value="#EAE9E4"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Ellipse" Property="Fill" Value="#EAE9E4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderCustomStyle" TargetType="Slider">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" Name="row" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" Name="column" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>



                            <Border Name="PART_Border" 
                            BorderBrush="Gray" BorderThickness="1" 
                            Padding="1"
                            CornerRadius="2" 
                            Grid.Row="1" Grid.Column="1"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            Background="{StaticResource HorizontalBrush}"
                            HorizontalAlignment="Stretch"  
                            VerticalAlignment="Center" />

                            <Track Name="PART_Track" 
                               HorizontalAlignment="Stretch" 
                               VerticalAlignment="Center"   
                               Grid.Row="1" Grid.Column="1"
                               Width="{TemplateBinding Width}" 
                               Height="{TemplateBinding Height}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="Slider.DecreaseLarge" 
                                          Style="{StaticResource DecreaseSliderButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="Slider.IncreaseLarge" 
                                          Style="{StaticResource SliderButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter TargetName="PART_Border" Property="HorizontalAlignment" Value="Center" />
                                <Setter TargetName="PART_Border" Property="VerticalAlignment" Value="Stretch" />
                                <Setter TargetName="PART_Track" Property="HorizontalAlignment" Value="Center" />

                                <Setter TargetName="PART_Track" Property="VerticalAlignment" Value="Stretch" />
                                <Setter TargetName="row" Property="Height" Value="*" />
                                <Setter TargetName="column" Property="Width" Value="auto" />

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <SolidColorBrush x:Key="Button.Static.Background2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="Transparent"/>

        <Style x:Key="MenuButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RadToggleButtonStyle2" TargetType="{x:Type telerik:RadToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="Background" Value="#171717"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="CornerRadius" Value="1"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterPressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CommonStatesWrapper"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DisabledChecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOverChecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774" Offset="0"/>
                                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                                            <GradientStop Color="#2bb774" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774"/>
                                                            <GradientStop Color="#2bb774" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerCheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774"/>
                                                            <GradientStop Color="#2bb774" Offset="0.169"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BackgroundVisibility">
                                    <VisualState x:Name="BackgroundIsHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="BackgroundIsVisible"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStatesGroup">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Border BorderBrush="#171717" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterMouseOverBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#2bb774" Offset="0"/>
                                        <GradientStop Color="#2bb774" Offset="0.5"/>
                                        <GradientStop Color="#2bb774" Offset="0.5"/>
                                        <GradientStop Color="#2bb774" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterPressedBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Transparent"/>
                                            <GradientStop Color="Transparent" Offset="0.126"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Border x:Name="DisabledVisual" BorderBrush="#2bb774" BorderThickness="{TemplateBinding BorderThickness}" Background="#2bb774" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Grid x:Name="CommonStatesWrapper">
                                <Border x:Name="FocusVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                    <Border x:Name="FocusInnerVisual" BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                                <Border x:Name="CheckedVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#2bb774" Offset="0"/>
                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                            <GradientStop Color="#2bb774" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border x:Name="InnerCheckedVisual" BorderBrush="#171717" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IsMoseOvernone" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="bg" />
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Opacity" Value="0.5"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IsMoseOverGrid" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="bg" />
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid Width="1310" Height="840" RenderTransformOrigin="0.5,0.5">
        <Grid.Style>
            <Style>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="UserControl.Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
                                                    BeginTime="0:0:0.1" Duration="0:0:0.5"  From="1600" To="0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>

                </Style.Triggers>
            </Style>
        </Grid.Style>

        <Grid.RenderTransform>
            <TransformGroup>
                <TranslateTransform/>
            </TransformGroup>
        </Grid.RenderTransform>

        <Grid.Resources>
            <DataTemplate x:Key="ListDataTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding Name}" />
                    <TextBlock Grid.Column="1" Text="{Binding Value}" />
                </Grid>
            </DataTemplate>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="39.1*"/>
            <RowDefinition Height="841*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Panel.ZIndex="1" Background="Transparent" Opacity="0.95" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250*"/>
                <ColumnDefinition Width="100*"/>
                <ColumnDefinition Width="60*"/>
            </Grid.ColumnDefinitions>

            <!--<Image Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/logo.png" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" />-->
            <TextBlock x:Name="TxtDate" FontSize="16" Foreground="#fcfcfc" Grid.Column="0" Margin="5,7,5,7"/>
            <TextBlock x:Name="TxtTime" FontSize="16" Foreground="#fcfcfc" Grid.Column="1" Margin="15,7,15,7"/>

            <Border Visibility="Collapsed" Grid.Column="2" Margin="10,8,10,8" BorderBrush="#008C99" BorderThickness="0.6">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <telerik:RadWatermarkTextBox x:Name="txtSearch" WatermarkContent="Search" Padding="2px" FontSize="14" Foreground="#00ffCC" ToolTip="{x:Static p:Resources.strSearch}" Background="Transparent" BorderBrush="Transparent" FontFamily="Helvetica" />

                    <Button x:Name="btnSearch" Grid.Column="1" ToolTip="{x:Static p:Resources.strSearchNow}" Style="{StaticResource IsMoseOverGrid}" Width="Auto" Height="24">
                        <Image Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/search.png"/>
                    </Button>

                </Grid>
            </Border>
            <Border x:Name="brdrBackgrond" Visibility="Collapsed" Grid.Column="0" Grid.ColumnSpan="2" Background="Black"></Border>

            <StackPanel  Orientation="Horizontal" Grid.Column="2" Margin="0,0">
                <telerik:RadToggleButton x:Name="radToggleBtnEsriMap" Content="Esri"
                                         IsChecked="True" 
                                         Width="90" MinHeight="30" Margin="0,2" 
                                         Style="{DynamicResource RadToggleButtonStyle}" Click="radToggleBtnEsriMap_Click"></telerik:RadToggleButton>
                <telerik:RadToggleButton x:Name="radToggleBtnGoogleMap" Content="Google"
                                         IsChecked="False" 
                                         Width="90" MinHeight="30" Margin="0,2" 
                                         Style="{DynamicResource RadToggleButtonStyle}" Click="radToggleBtnGoogleMap_Click">
                    
                </telerik:RadToggleButton>
            </StackPanel>

        </Grid>

        <Esri:MapView x:Name="esriMapView" Visibility="Visible" Grid.Column="0" Grid.ColumnSpan="3" MouseDown="esriMapView_MouseDown" Grid.RowSpan="2" Margin="-10,-10,10,10" MouseLeftButtonDown="esriMapView_MouseLeftButtonDown">

            <Esri:MapView.Overlays>
                <Esri:OverlayItemsControl>

                </Esri:OverlayItemsControl>
            </Esri:MapView.Overlays>

            <Esri:Map >
                <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"/>-->
                <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer"/>-->
                <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer"/>-->

                <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Dark_Gray_Base/MapServer"/>-->

                <Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="{Binding Source={StaticResource EsriVM}, Path=MapLayerServiceUrl}"/>

                <!--<Esri:ArcGISLocalTiledLayer ID="BaseMap" Path="ESRI TPK File\EsriBaseMap.tpk" />-->
            </Esri:Map>
        </Esri:MapView>

        <WebBrowser x:Name="googleMapsBrowser" Grid.Column="0" Grid.ColumnSpan="3" 
                    Loaded="googleMapsBrowser_Loaded" 
                    MouseDown="googleMapsBrowser_MouseDown"
                    MouseLeftButtonDown="googleMapsBrowser_MouseLeftButtonDown"  
                    Grid.RowSpan="2" Margin="-10,36,10,0" Visibility="Collapsed">


        </WebBrowser>



        <Grid Height="120" VerticalAlignment="Bottom" Grid.Row="1" Grid.ColumnSpan="3"
              Background="DimGray"
              Margin="-10,10,10,5" x:Name="grdViolationSlider" Visibility="Visible">

            <Grid.RowDefinitions>
                <RowDefinition Height=".3*"/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="145"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Row="1" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,0,0,0">
                <Label x:Name="lblViewCurrentTime" FontSize="16" Content="{x:Static p:Resources.strCurrentTime}"/>
                <Label x:Name="lblViewCurrentTimeVal" Content="" FontSize="16"/>
            </StackPanel>

            <Slider x:Name="ViolationSlider" Grid.Row="1" Grid.Column="1" Margin="5"
                    VerticalAlignment="Center"
                    Background="Transparent" AutoToolTipPlacement="None" 
                    TickPlacement="BottomRight" Foreground="Yellow" TickFrequency="1" 
                    IsSnapToTickEnabled="True"  FontSize="18"
                    Style="{StaticResource SliderCustomStyle}" ValueChanged="ViolationSlider_ValueChanged"
                    IsMoveToPointEnabled="True">


            </Slider>


            <!--<StackPanel Grid.Row="1" Grid.RowSpan="3"  Grid.Column="2" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,0,0,0">
                <Label x:Name="lblViewEndTime" FontSize="16" Content="{x:Static p:Resources.strEndTime}"/>
                <Label x:Name="lblViewEndTimeVal" Content="" FontSize="16"/>
            </StackPanel>-->
            <Grid Grid.Row="2" Grid.Column="1" VerticalAlignment="Top" Margin="20,0,-20,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{x:Static p:Resources.strMins15}" Width="50" HorizontalAlignment="Right" TextAlignment="Right"></TextBlock>
                <TextBlock Text="{x:Static p:Resources.strMins30}" Grid.Column="1" Width="50" HorizontalAlignment="Right" TextAlignment="Right"></TextBlock>
                <TextBlock Text="{x:Static p:Resources.strMins45}" Grid.Column="2" Width="50" HorizontalAlignment="Right" TextAlignment="Right"></TextBlock>
            </Grid>

            <Button x:Name="btnPlayPause" Visibility="Collapsed" Grid.Row="1" Click="btnPlayPause_Click" Tag="Pause" Grid.Column="2" Background="Transparent" Height="25" Width="25" BorderThickness="0" Margin="0,-5,0,0">
                <StackPanel Orientation="Horizontal">
                    <Image x:Name="imgPausePlay" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_play.png" Height="30" Width="30" Margin="-5,-2,0,0"></Image>
                </StackPanel>
            </Button>

            <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Center" Width="400" Margin="0,0,45,0" Visibility="Collapsed">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="btnPlayBack" VerticalAlignment="Center" Background="Transparent"
                               Grid.Column="0" Margin="5,-10,0,0">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="#00ffcc">
                                    <Grid x:Name="grdBtn" Height="25">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image x:Name="img" FlowDirection="LeftToRight" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_playback.png" Margin="0,2,0,0"/>
                                        <!--<Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                        <TextBlock x:Name="txtBlkBtnName" Grid.Column="1" Foreground="#00ffcc" VerticalAlignment="Center" FontSize="16"  Text="PlayBack" TextAlignment="Left" HorizontalAlignment="Stretch" />

                                    </Grid>

                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"   Value="true">
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                        <!--<Setter TargetName="grdBtn" Property="Background" Value="#ffd452"/>-->
                                        <Setter TargetName="grdBtn" Property="Opacity" Value=".7"/>
                                        <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                        </Button.Template>
                    </Button>

                    <Button x:Name="btnToday" VerticalAlignment="Top" Background="Transparent"
                               Grid.Column="1" Margin="-10,-15,0,2">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="#00ffcc">
                                    <Grid x:Name="grdBtn" Height="44">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="18"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>


                                        <Image x:Name="img" FlowDirection="LeftToRight" Grid.Row="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/arrow_today.png" Margin="0,2,0,0"/>
                                        <!--<Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                        <TextBlock x:Name="txtBlkBtnName" Grid.Row="1" Foreground="#00ffcc" VerticalAlignment="Center" FontSize="16"  Text="Today" TextAlignment="Center" HorizontalAlignment="Stretch" />

                                    </Grid>

                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"   Value="true">
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                        <!--<Setter TargetName="grdBtn" Property="Background" Value="#ffd452"/>-->
                                        <Setter TargetName="grdBtn" Property="Opacity" Value=".7"/>
                                        <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                    </Trigger>

                                </ControlTemplate.Triggers>

                            </ControlTemplate>



                        </Button.Template>
                    </Button>

                    <Button VerticalAlignment="Center" Background="Transparent"
                               Grid.Column="2" Margin="5,-10,0,0">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="#00ffcc">
                                    <Grid x:Name="grdBtn" Height="25">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="30"/>
                                        </Grid.ColumnDefinitions>
                                        <Image x:Name="img" FlowDirection="LeftToRight" Grid.Column="1" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_forecast.png" Margin="0,2,0,0"/>
                                        <!--<Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                        <TextBlock x:Name="txtBlkBtnName" Grid.Column="0" Foreground="#00ffcc" VerticalAlignment="Center" FontSize="16"  Text="Forecast" TextAlignment="Right" HorizontalAlignment="Stretch" />

                                    </Grid>

                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"   Value="true">
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                        <!--<Setter TargetName="grdBtn" Property="Background" Value="#ffd452"/>-->
                                        <Setter TargetName="grdBtn" Property="Opacity" Value=".7"/>
                                        <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>


                        </Button.Template>
                    </Button>


                </Grid>
            </Grid>

            <!--<StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0,10" HorizontalAlignment="Center" Width="300">
                
                -->
            <!--<StackPanel Orientation="Horizontal" Width="100" HorizontalAlignment="Center">
                    <Image Width="30"></Image>
                    <TextBlock Text="Playback"/>
            
            
            
            
            
            
            
            
            
            
            
                </StackPanel>
                <StackPanel Orientation="Vertical" Width="100" HorizontalAlignment="Center">
                    <Image></Image>
                    <TextBlock x:Name="txtBlkthisDayMonthWeek" Text="Today"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Width="100" HorizontalAlignment="Center">
                    <TextBlock Text="Forecast"/>
                    <Image></Image>
                </StackPanel>-->
            <!--
            </StackPanel>-->
        </Grid>

        <Grid Grid.Column="2" Grid.Row="1" Width="230" Background="Transparent" HorizontalAlignment="right" VerticalAlignment="Top">

            <Grid Width="230" Background="Transparent" HorizontalAlignment="left" VerticalAlignment="Top" Margin="-290,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="81*"/>
                    <ColumnDefinition Width="149*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

            </Grid>
        </Grid>

        <StackPanel Visibility="Collapsed" Background="Transparent" Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Height="51" Width="142" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="430,10,0,0">
            <Button Margin="5,0,0,0" x:Name="btnESRITOPO" ToolTip="Topo View" Grid.Column="7" HorizontalAlignment="Left" Width="45" Height="45" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource IsMoseOvernone}"
                        Tag="http://services.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer" Click="btnESRITOPO_Click">
                <Image Width="40" Height="40" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/noti_icon/Topo icon.png"/>
            </Button>

            <Button x:Name="btnESRIStreet" ToolTip="Street View" Grid.Column="7" HorizontalAlignment="Left" Width="45" Height="45" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource IsMoseOvernone}"
                        Tag="http://services.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer" Click="btnESRIStreet_Click">
                <Image Width="40" Height="40" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/noti_icon/street icon.png"/>
            </Button>

            <Button x:Name="btnESRIImagery" ToolTip="Satellite View" Grid.Column="7" HorizontalAlignment="Left" Width="45" Height="45" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource IsMoseOvernone}"
                        Tag="http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer" Click="btnESRIImagery_Click">
                <Image Width="40" Height="40" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/noti_icon/sat icon.png"/>
            </Button>
        </StackPanel>

        <StackPanel Background="Transparent" Orientation="Vertical" Grid.Column="0" Grid.Row="1" Height="Auto" Width="Auto" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="5,120">
            <RepeatButton  x:Name="btnZoomIn" ToolTip="تكبير" Grid.Column="7" HorizontalAlignment="Left" Width="35" Height="35" Margin="0,0,0,5" BorderBrush="{x:Null}" Click="btnZoomIn_Click">
                <RepeatButton.Background>
                    <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Zoom_IN.png"/>
                </RepeatButton.Background>

                <RepeatButton.Style>
                    <Style TargetType="RepeatButton">

                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Cursor" Value="Hand"/>
                        <!--<Setter Property="Foreground" Value="#ffffff" />-->

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="bg">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Zoom_IN_hover.png" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="BorderBrush" Value="Transparent" />
                                            <Setter Property="Opacity" Value="1"></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RepeatButton.Style>
            </RepeatButton>

            <RepeatButton  x:Name="btnZoomOut" ToolTip="تصغير" Grid.Column="7" HorizontalAlignment="Left" Width="35" Height="35" Margin="0,0,0,5" BorderBrush="{x:Null}" Click="btnZoomOut_Click">
                <RepeatButton.Background>
                    <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Zoom_Out.png"/>
                </RepeatButton.Background>

                <RepeatButton.Style>
                    <Style TargetType="RepeatButton">

                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Cursor" Value="Hand"/>
                        <!--<Setter Property="Foreground" Value="#ffffff" />-->

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="bg">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Zoom_Out_hover.png" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="BorderBrush" Value="Transparent" />
                                            <Setter Property="Opacity" Value="1"></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RepeatButton.Style>
            </RepeatButton>

            <Button  x:Name="btnReturnToDefaultView" ToolTip="تصغير" Grid.Column="7" HorizontalAlignment="Left" Width="35" Height="35" BorderBrush="{x:Null}" Click="btnReturnToDefaultView_Click" Margin="0,0,0,5">
                <Button.Background>
                    <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/zoom_default.png"/>
                </Button.Background>

                <Button.Style>
                    <Style TargetType="Button">

                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Cursor" Value="Hand"/>
                        <!--<Setter Property="Foreground" Value="#ffffff" />-->

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="bg">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/zoom_default_hover.png" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="BorderBrush" Value="Transparent" />
                                            <Setter Property="Opacity" Value="1"></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>

        </StackPanel>

    </Grid>
</UserControl>
