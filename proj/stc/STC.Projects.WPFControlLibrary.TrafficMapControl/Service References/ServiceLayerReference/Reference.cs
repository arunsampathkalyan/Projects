//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationsGroupedByLocationsDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class ViolationsGroupedByLocationsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AltitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ViolationsCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ViolationsCount {
            get {
                return this.ViolationsCountField;
            }
            set {
                if ((this.ViolationsCountField.Equals(value) != true)) {
                    this.ViolationsCountField = value;
                    this.RaisePropertyChanged("ViolationsCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationNotificationDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class ViolationNotificationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AltitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackgroundColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapturedSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCriticalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNoticedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LPRIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LaneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MesuredSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateColorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateKindNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateSourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeedLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VehicleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ViolationNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViolationStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViolationStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViolationTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViolationTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetCode {
            get {
                return this.AssetCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetCodeField, value) != true)) {
                    this.AssetCodeField = value;
                    this.RaisePropertyChanged("AssetCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetId {
            get {
                return this.AssetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetIdField, value) != true)) {
                    this.AssetIdField = value;
                    this.RaisePropertyChanged("AssetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundColor {
            get {
                return this.BackgroundColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundColorField, value) != true)) {
                    this.BackgroundColorField = value;
                    this.RaisePropertyChanged("BackgroundColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapturedSpeed {
            get {
                return this.CapturedSpeedField;
            }
            set {
                if ((this.CapturedSpeedField.Equals(value) != true)) {
                    this.CapturedSpeedField = value;
                    this.RaisePropertyChanged("CapturedSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTaken {
            get {
                return this.DateTakenField;
            }
            set {
                if ((this.DateTakenField.Equals(value) != true)) {
                    this.DateTakenField = value;
                    this.RaisePropertyChanged("DateTaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectionName {
            get {
                return this.DirectionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionNameField, value) != true)) {
                    this.DirectionNameField = value;
                    this.RaisePropertyChanged("DirectionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCritical {
            get {
                return this.IsCriticalField;
            }
            set {
                if ((this.IsCriticalField.Equals(value) != true)) {
                    this.IsCriticalField = value;
                    this.RaisePropertyChanged("IsCritical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNoticed {
            get {
                return this.IsNoticedField;
            }
            set {
                if ((this.IsNoticedField.Equals(value) != true)) {
                    this.IsNoticedField = value;
                    this.RaisePropertyChanged("IsNoticed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LPRId {
            get {
                return this.LPRIdField;
            }
            set {
                if ((this.LPRIdField.Equals(value) != true)) {
                    this.LPRIdField = value;
                    this.RaisePropertyChanged("LPRId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LaneNo {
            get {
                return this.LaneNoField;
            }
            set {
                if ((this.LaneNoField.Equals(value) != true)) {
                    this.LaneNoField = value;
                    this.RaisePropertyChanged("LaneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageText {
            get {
                return this.MessageTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextField, value) != true)) {
                    this.MessageTextField = value;
                    this.RaisePropertyChanged("MessageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MesuredSpeed {
            get {
                return this.MesuredSpeedField;
            }
            set {
                if ((this.MesuredSpeedField.Equals(value) != true)) {
                    this.MesuredSpeedField = value;
                    this.RaisePropertyChanged("MesuredSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateColorName {
            get {
                return this.PlateColorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateColorNameField, value) != true)) {
                    this.PlateColorNameField = value;
                    this.RaisePropertyChanged("PlateColorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateKindName {
            get {
                return this.PlateKindNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateKindNameField, value) != true)) {
                    this.PlateKindNameField = value;
                    this.RaisePropertyChanged("PlateKindName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateNumber {
            get {
                return this.PlateNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateNumberField, value) != true)) {
                    this.PlateNumberField = value;
                    this.RaisePropertyChanged("PlateNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateSourceName {
            get {
                return this.PlateSourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateSourceNameField, value) != true)) {
                    this.PlateSourceNameField = value;
                    this.RaisePropertyChanged("PlateSourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateTypeName {
            get {
                return this.PlateTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateTypeNameField, value) != true)) {
                    this.PlateTypeNameField = value;
                    this.RaisePropertyChanged("PlateTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((this.SourceIdField.Equals(value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceName {
            get {
                return this.SourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceNameField, value) != true)) {
                    this.SourceNameField = value;
                    this.RaisePropertyChanged("SourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpeedLimit {
            get {
                return this.SpeedLimitField;
            }
            set {
                if ((this.SpeedLimitField.Equals(value) != true)) {
                    this.SpeedLimitField = value;
                    this.RaisePropertyChanged("SpeedLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleTypeId {
            get {
                return this.VehicleTypeIdField;
            }
            set {
                if ((this.VehicleTypeIdField.Equals(value) != true)) {
                    this.VehicleTypeIdField = value;
                    this.RaisePropertyChanged("VehicleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleTypeName {
            get {
                return this.VehicleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeNameField, value) != true)) {
                    this.VehicleTypeNameField = value;
                    this.RaisePropertyChanged("VehicleTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ViolationNotificationId {
            get {
                return this.ViolationNotificationIdField;
            }
            set {
                if ((this.ViolationNotificationIdField.Equals(value) != true)) {
                    this.ViolationNotificationIdField = value;
                    this.RaisePropertyChanged("ViolationNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViolationStatusId {
            get {
                return this.ViolationStatusIdField;
            }
            set {
                if ((this.ViolationStatusIdField.Equals(value) != true)) {
                    this.ViolationStatusIdField = value;
                    this.RaisePropertyChanged("ViolationStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViolationStatusName {
            get {
                return this.ViolationStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViolationStatusNameField, value) != true)) {
                    this.ViolationStatusNameField = value;
                    this.RaisePropertyChanged("ViolationStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViolationTypeId {
            get {
                return this.ViolationTypeIdField;
            }
            set {
                if ((this.ViolationTypeIdField.Equals(value) != true)) {
                    this.ViolationTypeIdField = value;
                    this.RaisePropertyChanged("ViolationTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViolationTypeName {
            get {
                return this.ViolationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViolationTypeNameField, value) != true)) {
                    this.ViolationTypeNameField = value;
                    this.RaisePropertyChanged("ViolationTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncidentsDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class IncidentsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArrivedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackgroundColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CallTakerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallTakerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallerLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DispatcheTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DispatcherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispatcherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IncidentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IncidentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCriticalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNoticedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArrivedTime {
            get {
                return this.ArrivedTimeField;
            }
            set {
                if ((this.ArrivedTimeField.Equals(value) != true)) {
                    this.ArrivedTimeField = value;
                    this.RaisePropertyChanged("ArrivedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundColor {
            get {
                return this.BackgroundColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundColorField, value) != true)) {
                    this.BackgroundColorField = value;
                    this.RaisePropertyChanged("BackgroundColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CallTakerId {
            get {
                return this.CallTakerIdField;
            }
            set {
                if ((this.CallTakerIdField.Equals(value) != true)) {
                    this.CallTakerIdField = value;
                    this.RaisePropertyChanged("CallTakerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallTakerName {
            get {
                return this.CallTakerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CallTakerNameField, value) != true)) {
                    this.CallTakerNameField = value;
                    this.RaisePropertyChanged("CallTakerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallerAddress {
            get {
                return this.CallerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CallerAddressField, value) != true)) {
                    this.CallerAddressField = value;
                    this.RaisePropertyChanged("CallerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallerLanguage {
            get {
                return this.CallerLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.CallerLanguageField, value) != true)) {
                    this.CallerLanguageField = value;
                    this.RaisePropertyChanged("CallerLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallerName {
            get {
                return this.CallerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CallerNameField, value) != true)) {
                    this.CallerNameField = value;
                    this.RaisePropertyChanged("CallerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallerNumber {
            get {
                return this.CallerNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CallerNumberField, value) != true)) {
                    this.CallerNumberField = value;
                    this.RaisePropertyChanged("CallerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DispatcheTime {
            get {
                return this.DispatcheTimeField;
            }
            set {
                if ((this.DispatcheTimeField.Equals(value) != true)) {
                    this.DispatcheTimeField = value;
                    this.RaisePropertyChanged("DispatcheTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DispatcherId {
            get {
                return this.DispatcherIdField;
            }
            set {
                if ((this.DispatcherIdField.Equals(value) != true)) {
                    this.DispatcherIdField = value;
                    this.RaisePropertyChanged("DispatcherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispatcherName {
            get {
                return this.DispatcherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DispatcherNameField, value) != true)) {
                    this.DispatcherNameField = value;
                    this.RaisePropertyChanged("DispatcherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentAddress {
            get {
                return this.IncidentAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentAddressField, value) != true)) {
                    this.IncidentAddressField = value;
                    this.RaisePropertyChanged("IncidentAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IncidentId {
            get {
                return this.IncidentIdField;
            }
            set {
                if ((this.IncidentIdField.Equals(value) != true)) {
                    this.IncidentIdField = value;
                    this.RaisePropertyChanged("IncidentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentNumber {
            get {
                return this.IncidentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentNumberField, value) != true)) {
                    this.IncidentNumberField = value;
                    this.RaisePropertyChanged("IncidentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IncidentTypeId {
            get {
                return this.IncidentTypeIdField;
            }
            set {
                if ((this.IncidentTypeIdField.Equals(value) != true)) {
                    this.IncidentTypeIdField = value;
                    this.RaisePropertyChanged("IncidentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentTypeName {
            get {
                return this.IncidentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentTypeNameField, value) != true)) {
                    this.IncidentTypeNameField = value;
                    this.RaisePropertyChanged("IncidentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCritical {
            get {
                return this.IsCriticalField;
            }
            set {
                if ((this.IsCriticalField.Equals(value) != true)) {
                    this.IsCriticalField = value;
                    this.RaisePropertyChanged("IsCritical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNoticed {
            get {
                return this.IsNoticedField;
            }
            set {
                if ((this.IsNoticedField.Equals(value) != true)) {
                    this.IsNoticedField = value;
                    this.RaisePropertyChanged("IsNoticed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageText {
            get {
                return this.MessageTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextField, value) != true)) {
                    this.MessageTextField = value;
                    this.RaisePropertyChanged("MessageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriorityId {
            get {
                return this.PriorityIdField;
            }
            set {
                if ((this.PriorityIdField.Equals(value) != true)) {
                    this.PriorityIdField = value;
                    this.RaisePropertyChanged("PriorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriorityName {
            get {
                return this.PriorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityNameField, value) != true)) {
                    this.PriorityNameField = value;
                    this.RaisePropertyChanged("PriorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationsDetailsByLocationDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class ViolationsDetailsByLocationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AltitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViolationTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViolationTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ViolationsCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetCode {
            get {
                return this.AssetCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetCodeField, value) != true)) {
                    this.AssetCodeField = value;
                    this.RaisePropertyChanged("AssetCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetId {
            get {
                return this.AssetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetIdField, value) != true)) {
                    this.AssetIdField = value;
                    this.RaisePropertyChanged("AssetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViolationTypeId {
            get {
                return this.ViolationTypeIdField;
            }
            set {
                if ((this.ViolationTypeIdField.Equals(value) != true)) {
                    this.ViolationTypeIdField = value;
                    this.RaisePropertyChanged("ViolationTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViolationTypeName {
            get {
                return this.ViolationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViolationTypeNameField, value) != true)) {
                    this.ViolationTypeNameField = value;
                    this.RaisePropertyChanged("ViolationTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ViolationsCount {
            get {
                return this.ViolationsCountField;
            }
            set {
                if ((this.ViolationsCountField.Equals(value) != true)) {
                    this.ViolationsCountField = value;
                    this.RaisePropertyChanged("ViolationsCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetsViewDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class AssetsViewDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsDetailsViewDTO[] AssetsDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ItemCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ItemStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalIdentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsDetailsViewDTO[] AssetsDetails {
            get {
                return this.AssetsDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetsDetailsField, value) != true)) {
                    this.AssetsDetailsField = value;
                    this.RaisePropertyChanged("AssetsDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ItemCategoryId {
            get {
                return this.ItemCategoryIdField;
            }
            set {
                if ((this.ItemCategoryIdField.Equals(value) != true)) {
                    this.ItemCategoryIdField = value;
                    this.RaisePropertyChanged("ItemCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemCategoryName {
            get {
                return this.ItemCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemCategoryNameField, value) != true)) {
                    this.ItemCategoryNameField = value;
                    this.RaisePropertyChanged("ItemCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemImage {
            get {
                return this.ItemImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemImageField, value) != true)) {
                    this.ItemImageField = value;
                    this.RaisePropertyChanged("ItemImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ItemStatusId {
            get {
                return this.ItemStatusIdField;
            }
            set {
                if ((this.ItemStatusIdField.Equals(value) != true)) {
                    this.ItemStatusIdField = value;
                    this.RaisePropertyChanged("ItemStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemStatusName {
            get {
                return this.ItemStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemStatusNameField, value) != true)) {
                    this.ItemStatusNameField = value;
                    this.RaisePropertyChanged("ItemStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalIdent {
            get {
                return this.OriginalIdentField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalIdentField, value) != true)) {
                    this.OriginalIdentField = value;
                    this.RaisePropertyChanged("OriginalIdent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetsDetailsViewDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class AssetsDetailsViewDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CameraURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CameraURL {
            get {
                return this.CameraURLField;
            }
            set {
                if ((object.ReferenceEquals(this.CameraURLField, value) != true)) {
                    this.CameraURLField = value;
                    this.RaisePropertyChanged("CameraURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetLastStatusDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class AssetLastStatusDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetLastStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AssetTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNoticedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetCode {
            get {
                return this.AssetCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetCodeField, value) != true)) {
                    this.AssetCodeField = value;
                    this.RaisePropertyChanged("AssetCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetId {
            get {
                return this.AssetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetIdField, value) != true)) {
                    this.AssetIdField = value;
                    this.RaisePropertyChanged("AssetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetLastStatusId {
            get {
                return this.AssetLastStatusIdField;
            }
            set {
                if ((this.AssetLastStatusIdField.Equals(value) != true)) {
                    this.AssetLastStatusIdField = value;
                    this.RaisePropertyChanged("AssetLastStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetStatusId {
            get {
                return this.AssetStatusIdField;
            }
            set {
                if ((this.AssetStatusIdField.Equals(value) != true)) {
                    this.AssetStatusIdField = value;
                    this.RaisePropertyChanged("AssetStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetStatusName {
            get {
                return this.AssetStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetStatusNameField, value) != true)) {
                    this.AssetStatusNameField = value;
                    this.RaisePropertyChanged("AssetStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AssetTypeId {
            get {
                return this.AssetTypeIdField;
            }
            set {
                if ((this.AssetTypeIdField.Equals(value) != true)) {
                    this.AssetTypeIdField = value;
                    this.RaisePropertyChanged("AssetTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetTypeName {
            get {
                return this.AssetTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetTypeNameField, value) != true)) {
                    this.AssetTypeNameField = value;
                    this.RaisePropertyChanged("AssetTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateChanged {
            get {
                return this.DateChangedField;
            }
            set {
                if ((this.DateChangedField.Equals(value) != true)) {
                    this.DateChangedField = value;
                    this.RaisePropertyChanged("DateChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNoticed {
            get {
                return this.IsNoticedField;
            }
            set {
                if ((this.IsNoticedField.Equals(value) != true)) {
                    this.IsNoticedField = value;
                    this.RaisePropertyChanged("IsNoticed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatrolLastLocationDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class PatrolLastLocationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AltitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNoticedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LocationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatrolCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PatrolIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PatrolLatLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PatrolOriginalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatrolPlateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNoticed {
            get {
                return this.IsNoticedField;
            }
            set {
                if ((this.IsNoticedField.Equals(value) != true)) {
                    this.IsNoticedField = value;
                    this.RaisePropertyChanged("IsNoticed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LocationDate {
            get {
                return this.LocationDateField;
            }
            set {
                if ((this.LocationDateField.Equals(value) != true)) {
                    this.LocationDateField = value;
                    this.RaisePropertyChanged("LocationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatrolCode {
            get {
                return this.PatrolCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PatrolCodeField, value) != true)) {
                    this.PatrolCodeField = value;
                    this.RaisePropertyChanged("PatrolCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PatrolId {
            get {
                return this.PatrolIdField;
            }
            set {
                if ((this.PatrolIdField.Equals(value) != true)) {
                    this.PatrolIdField = value;
                    this.RaisePropertyChanged("PatrolId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PatrolLatLocationId {
            get {
                return this.PatrolLatLocationIdField;
            }
            set {
                if ((this.PatrolLatLocationIdField.Equals(value) != true)) {
                    this.PatrolLatLocationIdField = value;
                    this.RaisePropertyChanged("PatrolLatLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PatrolOriginalId {
            get {
                return this.PatrolOriginalIdField;
            }
            set {
                if ((this.PatrolOriginalIdField.Equals(value) != true)) {
                    this.PatrolOriginalIdField = value;
                    this.RaisePropertyChanged("PatrolOriginalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatrolPlateNo {
            get {
                return this.PatrolPlateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PatrolPlateNoField, value) != true)) {
                    this.PatrolPlateNoField = value;
                    this.RaisePropertyChanged("PatrolPlateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatrolStatusDimDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class PatrolStatusDimDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatrolStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatrolStatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatrolStatus {
            get {
                return this.PatrolStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PatrolStatusField, value) != true)) {
                    this.PatrolStatusField = value;
                    this.RaisePropertyChanged("PatrolStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatrolStatusId {
            get {
                return this.PatrolStatusIdField;
            }
            set {
                if ((this.PatrolStatusIdField.Equals(value) != true)) {
                    this.PatrolStatusIdField = value;
                    this.RaisePropertyChanged("PatrolStatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetTypeDimDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class AssetTypeDimDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetType {
            get {
                return this.AssetTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetTypeField, value) != true)) {
                    this.AssetTypeField = value;
                    this.RaisePropertyChanged("AssetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetTypeId {
            get {
                return this.AssetTypeIdField;
            }
            set {
                if ((this.AssetTypeIdField.Equals(value) != true)) {
                    this.AssetTypeIdField = value;
                    this.RaisePropertyChanged("AssetTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetStatusDimDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class AssetStatusDimDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetStatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetStatus {
            get {
                return this.AssetStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetStatusField, value) != true)) {
                    this.AssetStatusField = value;
                    this.RaisePropertyChanged("AssetStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetStatusId {
            get {
                return this.AssetStatusIdField;
            }
            set {
                if ((this.AssetStatusIdField.Equals(value) != true)) {
                    this.AssetStatusIdField = value;
                    this.RaisePropertyChanged("AssetStatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationTypeDimDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class ViolationTypeDimDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViolationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViolationTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViolationType {
            get {
                return this.ViolationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ViolationTypeField, value) != true)) {
                    this.ViolationTypeField = value;
                    this.RaisePropertyChanged("ViolationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViolationTypeId {
            get {
                return this.ViolationTypeIdField;
            }
            set {
                if ((this.ViolationTypeIdField.Equals(value) != true)) {
                    this.ViolationTypeIdField = value;
                    this.RaisePropertyChanged("ViolationTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationsCountPerDayOfWeekDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class ViolationsCountPerDayOfWeekDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DayOfWeek {
            get {
                return this.DayOfWeekField;
            }
            set {
                if ((object.ReferenceEquals(this.DayOfWeekField, value) != true)) {
                    this.DayOfWeekField = value;
                    this.RaisePropertyChanged("DayOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationsCountPerDayOfWeekAndHourDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class ViolationsCountPerDayOfWeekAndHourDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ViolationHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DayOfWeek {
            get {
                return this.DayOfWeekField;
            }
            set {
                if ((object.ReferenceEquals(this.DayOfWeekField, value) != true)) {
                    this.DayOfWeekField = value;
                    this.RaisePropertyChanged("DayOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ViolationHour {
            get {
                return this.ViolationHourField;
            }
            set {
                if ((this.ViolationHourField.Equals(value) != true)) {
                    this.ViolationHourField = value;
                    this.RaisePropertyChanged("ViolationHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationsCountGroupedByTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class ViolationsCountGroupedByTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViolationTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViolationTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViolationTypeId {
            get {
                return this.ViolationTypeIdField;
            }
            set {
                if ((this.ViolationTypeIdField.Equals(value) != true)) {
                    this.ViolationTypeIdField = value;
                    this.RaisePropertyChanged("ViolationTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViolationTypeName {
            get {
                return this.ViolationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViolationTypeNameField, value) != true)) {
                    this.ViolationTypeNameField = value;
                    this.RaisePropertyChanged("ViolationTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationsCountGroupedByLocationDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class ViolationsCountGroupedByLocationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncidentDetailsDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class IncidentDetailsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedPatrolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispatchingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentFinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatrolArrivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedPatrol {
            get {
                return this.AssignedPatrolField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedPatrolField, value) != true)) {
                    this.AssignedPatrolField = value;
                    this.RaisePropertyChanged("AssignedPatrol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispatchingTime {
            get {
                return this.DispatchingTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DispatchingTimeField, value) != true)) {
                    this.DispatchingTimeField = value;
                    this.RaisePropertyChanged("DispatchingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentAddress {
            get {
                return this.IncidentAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentAddressField, value) != true)) {
                    this.IncidentAddressField = value;
                    this.RaisePropertyChanged("IncidentAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentFinishTime {
            get {
                return this.IncidentFinishTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentFinishTimeField, value) != true)) {
                    this.IncidentFinishTimeField = value;
                    this.RaisePropertyChanged("IncidentFinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentStatus {
            get {
                return this.IncidentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentStatusField, value) != true)) {
                    this.IncidentStatusField = value;
                    this.RaisePropertyChanged("IncidentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentTime {
            get {
                return this.IncidentTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentTimeField, value) != true)) {
                    this.IncidentTimeField = value;
                    this.RaisePropertyChanged("IncidentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentType {
            get {
                return this.IncidentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentTypeField, value) != true)) {
                    this.IncidentTypeField = value;
                    this.RaisePropertyChanged("IncidentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lon {
            get {
                return this.LonField;
            }
            set {
                if ((this.LonField.Equals(value) != true)) {
                    this.LonField = value;
                    this.RaisePropertyChanged("Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatrolArrived {
            get {
                return this.PatrolArrivedField;
            }
            set {
                if ((object.ReferenceEquals(this.PatrolArrivedField, value) != true)) {
                    this.PatrolArrivedField = value;
                    this.RaisePropertyChanged("PatrolArrived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XML {
            get {
                return this.XMLField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLField, value) != true)) {
                    this.XMLField = value;
                    this.RaisePropertyChanged("XML");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationDetailsDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class ViolationDetailsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetDetailsForViolation AssetsDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.TotalViolationValuesByStatus[] TotalsByStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.TotalViolationValuesByTypes[] TotalsByTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetDetailsForViolation AssetsDetails {
            get {
                return this.AssetsDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetsDetailsField, value) != true)) {
                    this.AssetsDetailsField = value;
                    this.RaisePropertyChanged("AssetsDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lon {
            get {
                return this.LonField;
            }
            set {
                if ((this.LonField.Equals(value) != true)) {
                    this.LonField = value;
                    this.RaisePropertyChanged("Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.TotalViolationValuesByStatus[] TotalsByStatus {
            get {
                return this.TotalsByStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalsByStatusField, value) != true)) {
                    this.TotalsByStatusField = value;
                    this.RaisePropertyChanged("TotalsByStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.TotalViolationValuesByTypes[] TotalsByTypes {
            get {
                return this.TotalsByTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalsByTypesField, value) != true)) {
                    this.TotalsByTypesField = value;
                    this.RaisePropertyChanged("TotalsByTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XML {
            get {
                return this.XMLField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLField, value) != true)) {
                    this.XMLField = value;
                    this.RaisePropertyChanged("XML");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetDetailsForViolation", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class AssetDetailsForViolation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastMainteanceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetName {
            get {
                return this.AssetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetNameField, value) != true)) {
                    this.AssetNameField = value;
                    this.RaisePropertyChanged("AssetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetStatus {
            get {
                return this.AssetStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetStatusField, value) != true)) {
                    this.AssetStatusField = value;
                    this.RaisePropertyChanged("AssetStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastMainteanceDate {
            get {
                return this.LastMainteanceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LastMainteanceDateField, value) != true)) {
                    this.LastMainteanceDateField = value;
                    this.RaisePropertyChanged("LastMainteanceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TotalViolationValuesByStatus", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class TotalViolationValuesByStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountOfViolationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VioltionStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VioltionStatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCountOfViolations {
            get {
                return this.TotalCountOfViolationsField;
            }
            set {
                if ((this.TotalCountOfViolationsField.Equals(value) != true)) {
                    this.TotalCountOfViolationsField = value;
                    this.RaisePropertyChanged("TotalCountOfViolations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VioltionStatusId {
            get {
                return this.VioltionStatusIdField;
            }
            set {
                if ((this.VioltionStatusIdField.Equals(value) != true)) {
                    this.VioltionStatusIdField = value;
                    this.RaisePropertyChanged("VioltionStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VioltionStatusName {
            get {
                return this.VioltionStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VioltionStatusNameField, value) != true)) {
                    this.VioltionStatusNameField = value;
                    this.RaisePropertyChanged("VioltionStatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TotalViolationValuesByTypes", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class TotalViolationValuesByTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountOfViolationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VioltionTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VioltionTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCountOfViolations {
            get {
                return this.TotalCountOfViolationsField;
            }
            set {
                if ((this.TotalCountOfViolationsField.Equals(value) != true)) {
                    this.TotalCountOfViolationsField = value;
                    this.RaisePropertyChanged("TotalCountOfViolations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VioltionTypeId {
            get {
                return this.VioltionTypeIdField;
            }
            set {
                if ((this.VioltionTypeIdField.Equals(value) != true)) {
                    this.VioltionTypeIdField = value;
                    this.RaisePropertyChanged("VioltionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VioltionTypeName {
            get {
                return this.VioltionTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VioltionTypeNameField, value) != true)) {
                    this.VioltionTypeNameField = value;
                    this.RaisePropertyChanged("VioltionTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatrolFullDetailsDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class PatrolFullDetailsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolDetailsDTO PatrolDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolOfficersDTO PatrolOfficersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolPerformanceDTO PatrolPerformanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolDetailsDTO PatrolDetails {
            get {
                return this.PatrolDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatrolDetailsField, value) != true)) {
                    this.PatrolDetailsField = value;
                    this.RaisePropertyChanged("PatrolDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolOfficersDTO PatrolOfficers {
            get {
                return this.PatrolOfficersField;
            }
            set {
                if ((object.ReferenceEquals(this.PatrolOfficersField, value) != true)) {
                    this.PatrolOfficersField = value;
                    this.RaisePropertyChanged("PatrolOfficers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolPerformanceDTO PatrolPerformance {
            get {
                return this.PatrolPerformanceField;
            }
            set {
                if ((object.ReferenceEquals(this.PatrolPerformanceField, value) != true)) {
                    this.PatrolPerformanceField = value;
                    this.RaisePropertyChanged("PatrolPerformance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatrolDetailsDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class PatrolDetailsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasicAllocationHubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatrolIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasicAllocationHub {
            get {
                return this.BasicAllocationHubField;
            }
            set {
                if ((object.ReferenceEquals(this.BasicAllocationHubField, value) != true)) {
                    this.BasicAllocationHubField = value;
                    this.RaisePropertyChanged("BasicAllocationHub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatrolId {
            get {
                return this.PatrolIdField;
            }
            set {
                if ((this.PatrolIdField.Equals(value) != true)) {
                    this.PatrolIdField = value;
                    this.RaisePropertyChanged("PatrolId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatrolOfficersDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class PatrolOfficersDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficersMilitaryNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficersNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficersPhoneNumbersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficersMilitaryNumbers {
            get {
                return this.OfficersMilitaryNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficersMilitaryNumbersField, value) != true)) {
                    this.OfficersMilitaryNumbersField = value;
                    this.RaisePropertyChanged("OfficersMilitaryNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficersName {
            get {
                return this.OfficersNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficersNameField, value) != true)) {
                    this.OfficersNameField = value;
                    this.RaisePropertyChanged("OfficersName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficersPhoneNumbers {
            get {
                return this.OfficersPhoneNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficersPhoneNumbersField, value) != true)) {
                    this.OfficersPhoneNumbersField = value;
                    this.RaisePropertyChanged("OfficersPhoneNumbers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatrolPerformanceDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class PatrolPerformanceDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AverageResponseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastIncidentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastResponseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumActiveHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfIncidentHandledField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AverageResponseTime {
            get {
                return this.AverageResponseTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.AverageResponseTimeField, value) != true)) {
                    this.AverageResponseTimeField = value;
                    this.RaisePropertyChanged("AverageResponseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastIncidentTime {
            get {
                return this.LastIncidentTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LastIncidentTimeField, value) != true)) {
                    this.LastIncidentTimeField = value;
                    this.RaisePropertyChanged("LastIncidentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastResponseTime {
            get {
                return this.LastResponseTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LastResponseTimeField, value) != true)) {
                    this.LastResponseTimeField = value;
                    this.RaisePropertyChanged("LastResponseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumActiveHours {
            get {
                return this.NumActiveHoursField;
            }
            set {
                if ((this.NumActiveHoursField.Equals(value) != true)) {
                    this.NumActiveHoursField = value;
                    this.RaisePropertyChanged("NumActiveHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfIncidentHandled {
            get {
                return this.NumberOfIncidentHandledField;
            }
            set {
                if ((this.NumberOfIncidentHandledField.Equals(value) != true)) {
                    this.NumberOfIncidentHandledField = value;
                    this.RaisePropertyChanged("NumberOfIncidentHandled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class UsersDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageTypeSOPDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class MessageTypeSOPDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SOPContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SOPControlNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SOPDetailsControlNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SOPDetailsDataMessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SOPDetailsXSLTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SOPIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SOPListDataMessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SOPListXSLTField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageTypeId {
            get {
                return this.MessageTypeIdField;
            }
            set {
                if ((this.MessageTypeIdField.Equals(value) != true)) {
                    this.MessageTypeIdField = value;
                    this.RaisePropertyChanged("MessageTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageTypeName {
            get {
                return this.MessageTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTypeNameField, value) != true)) {
                    this.MessageTypeNameField = value;
                    this.RaisePropertyChanged("MessageTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOPContent {
            get {
                return this.SOPContentField;
            }
            set {
                if ((object.ReferenceEquals(this.SOPContentField, value) != true)) {
                    this.SOPContentField = value;
                    this.RaisePropertyChanged("SOPContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOPControlName {
            get {
                return this.SOPControlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SOPControlNameField, value) != true)) {
                    this.SOPControlNameField = value;
                    this.RaisePropertyChanged("SOPControlName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOPDetailsControlName {
            get {
                return this.SOPDetailsControlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SOPDetailsControlNameField, value) != true)) {
                    this.SOPDetailsControlNameField = value;
                    this.RaisePropertyChanged("SOPDetailsControlName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOPDetailsDataMessageType {
            get {
                return this.SOPDetailsDataMessageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SOPDetailsDataMessageTypeField, value) != true)) {
                    this.SOPDetailsDataMessageTypeField = value;
                    this.RaisePropertyChanged("SOPDetailsDataMessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOPDetailsXSLT {
            get {
                return this.SOPDetailsXSLTField;
            }
            set {
                if ((object.ReferenceEquals(this.SOPDetailsXSLTField, value) != true)) {
                    this.SOPDetailsXSLTField = value;
                    this.RaisePropertyChanged("SOPDetailsXSLT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SOPId {
            get {
                return this.SOPIdField;
            }
            set {
                if ((this.SOPIdField.Equals(value) != true)) {
                    this.SOPIdField = value;
                    this.RaisePropertyChanged("SOPId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOPListDataMessageType {
            get {
                return this.SOPListDataMessageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SOPListDataMessageTypeField, value) != true)) {
                    this.SOPListDataMessageTypeField = value;
                    this.RaisePropertyChanged("SOPListDataMessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOPListXSLT {
            get {
                return this.SOPListXSLTField;
            }
            set {
                if ((object.ReferenceEquals(this.SOPListXSLTField, value) != true)) {
                    this.SOPListXSLTField = value;
                    this.RaisePropertyChanged("SOPListXSLT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TowerActionsDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class TowerActionsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TowerActionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TowerActionId {
            get {
                return this.TowerActionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TowerActionIdField, value) != true)) {
                    this.TowerActionIdField = value;
                    this.RaisePropertyChanged("TowerActionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageTypeConvertOutput", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class MessageTypeConvertOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewXMLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageName {
            get {
                return this.MessageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageNameField, value) != true)) {
                    this.MessageNameField = value;
                    this.RaisePropertyChanged("MessageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewXML {
            get {
                return this.NewXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.NewXMLField, value) != true)) {
                    this.NewXMLField = value;
                    this.RaisePropertyChanged("NewXML");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OfficersLastLocationViewDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class OfficersLastLocationViewDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AltitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CameraURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNoticedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LocationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OfficerHeartPulseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OfficerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OfficerLastLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CameraURL {
            get {
                return this.CameraURLField;
            }
            set {
                if ((object.ReferenceEquals(this.CameraURLField, value) != true)) {
                    this.CameraURLField = value;
                    this.RaisePropertyChanged("CameraURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNoticed {
            get {
                return this.IsNoticedField;
            }
            set {
                if ((this.IsNoticedField.Equals(value) != true)) {
                    this.IsNoticedField = value;
                    this.RaisePropertyChanged("IsNoticed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LocationDate {
            get {
                return this.LocationDateField;
            }
            set {
                if ((this.LocationDateField.Equals(value) != true)) {
                    this.LocationDateField = value;
                    this.RaisePropertyChanged("LocationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficerCode {
            get {
                return this.OfficerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficerCodeField, value) != true)) {
                    this.OfficerCodeField = value;
                    this.RaisePropertyChanged("OfficerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OfficerHeartPulse {
            get {
                return this.OfficerHeartPulseField;
            }
            set {
                if ((this.OfficerHeartPulseField.Equals(value) != true)) {
                    this.OfficerHeartPulseField = value;
                    this.RaisePropertyChanged("OfficerHeartPulse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OfficerId {
            get {
                return this.OfficerIdField;
            }
            set {
                if ((this.OfficerIdField.Equals(value) != true)) {
                    this.OfficerIdField = value;
                    this.RaisePropertyChanged("OfficerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OfficerLastLocationId {
            get {
                return this.OfficerLastLocationIdField;
            }
            set {
                if ((this.OfficerLastLocationIdField.Equals(value) != true)) {
                    this.OfficerLastLocationIdField = value;
                    this.RaisePropertyChanged("OfficerLastLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficerName {
            get {
                return this.OfficerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficerNameField, value) != true)) {
                    this.OfficerNameField = value;
                    this.RaisePropertyChanged("OfficerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleLiveTrackingDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class VehicleLiveTrackingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LicenseExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OwnerAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerMobileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TowerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LicenseExpiryDate {
            get {
                return this.LicenseExpiryDateField;
            }
            set {
                if ((this.LicenseExpiryDateField.Equals(value) != true)) {
                    this.LicenseExpiryDateField = value;
                    this.RaisePropertyChanged("LicenseExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseNumber {
            get {
                return this.LicenseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseNumberField, value) != true)) {
                    this.LicenseNumberField = value;
                    this.RaisePropertyChanged("LicenseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short OwnerAge {
            get {
                return this.OwnerAgeField;
            }
            set {
                if ((this.OwnerAgeField.Equals(value) != true)) {
                    this.OwnerAgeField = value;
                    this.RaisePropertyChanged("OwnerAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerMobileNumber {
            get {
                return this.OwnerMobileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerMobileNumberField, value) != true)) {
                    this.OwnerMobileNumberField = value;
                    this.RaisePropertyChanged("OwnerMobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerNationality {
            get {
                return this.OwnerNationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNationalityField, value) != true)) {
                    this.OwnerNationalityField = value;
                    this.RaisePropertyChanged("OwnerNationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateNumber {
            get {
                return this.PlateNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateNumberField, value) != true)) {
                    this.PlateNumberField = value;
                    this.RaisePropertyChanged("PlateNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TowerId {
            get {
                return this.TowerIdField;
            }
            set {
                if ((this.TowerIdField.Equals(value) != true)) {
                    this.TowerIdField = value;
                    this.RaisePropertyChanged("TowerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceLayerReference.IServiceLayer")]
    public interface IServiceLayer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetWantedCarRadius", ReplyAction="http://tempuri.org/IServiceLayer/GetWantedCarRadiusResponse")]
        decimal GetWantedCarRadius();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetWantedCarRadius", ReplyAction="http://tempuri.org/IServiceLayer/GetWantedCarRadiusResponse")]
        System.Threading.Tasks.Task<decimal> GetWantedCarRadiusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsListGroupedByLocation", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsListGroupedByLocationResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsGroupedByLocationsDTO[] GetViolationsListGroupedByLocation(System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsListGroupedByLocation", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsListGroupedByLocationResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsGroupedByLocationsDTO[]> GetViolationsListGroupedByLocationAsync(System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetUpdatedViolationsList", ReplyAction="http://tempuri.org/IServiceLayer/GetUpdatedViolationsListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationNotificationDTO[] GetUpdatedViolationsList(System.Nullable<bool> IsNoticed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetUpdatedViolationsList", ReplyAction="http://tempuri.org/IServiceLayer/GetUpdatedViolationsListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationNotificationDTO[]> GetUpdatedViolationsListAsync(System.Nullable<bool> IsNoticed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsListByDate", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsListByDateResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationNotificationDTO[] GetViolationsListByDate(System.Nullable<System.DateTime> StartDateTime, System.Nullable<System.DateTime> EndDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsListByDate", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsListByDateResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationNotificationDTO[]> GetViolationsListByDateAsync(System.Nullable<System.DateTime> StartDateTime, System.Nullable<System.DateTime> EndDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetIncidentsListByDate", ReplyAction="http://tempuri.org/IServiceLayer/GetIncidentsListByDateResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO[] GetIncidentsListByDate(System.Nullable<System.DateTime> StartDateTime, System.Nullable<System.DateTime> EndDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetIncidentsListByDate", ReplyAction="http://tempuri.org/IServiceLayer/GetIncidentsListByDateResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO[]> GetIncidentsListByDateAsync(System.Nullable<System.DateTime> StartDateTime, System.Nullable<System.DateTime> EndDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsDetailsForLocation", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsDetailsForLocationResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsDetailsByLocationDTO[] GetViolationsDetailsForLocation(string LocationCode, System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsDetailsForLocation", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsDetailsForLocationResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsDetailsByLocationDTO[]> GetViolationsDetailsForLocationAsync(string LocationCode, System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetActiveIncidentsList", ReplyAction="http://tempuri.org/IServiceLayer/GetActiveIncidentsListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO[] GetActiveIncidentsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetActiveIncidentsList", ReplyAction="http://tempuri.org/IServiceLayer/GetActiveIncidentsListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO[]> GetActiveIncidentsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetIncidentDetails", ReplyAction="http://tempuri.org/IServiceLayer/GetIncidentDetailsResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO GetIncidentDetails(int IncidentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetIncidentDetails", ReplyAction="http://tempuri.org/IServiceLayer/GetIncidentDetailsResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO> GetIncidentDetailsAsync(int IncidentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAssetsList", ReplyAction="http://tempuri.org/IServiceLayer/GetAssetsListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[] GetAssetsList(System.Nullable<int> AssetStatusId, System.Nullable<int> AssetTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAssetsList", ReplyAction="http://tempuri.org/IServiceLayer/GetAssetsListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[]> GetAssetsListAsync(System.Nullable<int> AssetStatusId, System.Nullable<int> AssetTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAssetsLastStatusList", ReplyAction="http://tempuri.org/IServiceLayer/GetAssetsLastStatusListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetLastStatusDTO[] GetAssetsLastStatusList(System.Nullable<bool> IsNoticed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAssetsLastStatusList", ReplyAction="http://tempuri.org/IServiceLayer/GetAssetsLastStatusListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetLastStatusDTO[]> GetAssetsLastStatusListAsync(System.Nullable<bool> IsNoticed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetPatrolsList", ReplyAction="http://tempuri.org/IServiceLayer/GetPatrolsListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolLastLocationDTO[] GetPatrolsList(System.Nullable<int> PatrolStatusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetPatrolsList", ReplyAction="http://tempuri.org/IServiceLayer/GetPatrolsListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolLastLocationDTO[]> GetPatrolsListAsync(System.Nullable<int> PatrolStatusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetEventsList", ReplyAction="http://tempuri.org/IServiceLayer/GetEventsListResponse")]
        void GetEventsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetEventsList", ReplyAction="http://tempuri.org/IServiceLayer/GetEventsListResponse")]
        System.Threading.Tasks.Task GetEventsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetPatrolStatusList", ReplyAction="http://tempuri.org/IServiceLayer/GetPatrolStatusListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolStatusDimDTO[] GetPatrolStatusList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetPatrolStatusList", ReplyAction="http://tempuri.org/IServiceLayer/GetPatrolStatusListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolStatusDimDTO[]> GetPatrolStatusListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAssetTypesList", ReplyAction="http://tempuri.org/IServiceLayer/GetAssetTypesListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetTypeDimDTO[] GetAssetTypesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAssetTypesList", ReplyAction="http://tempuri.org/IServiceLayer/GetAssetTypesListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetTypeDimDTO[]> GetAssetTypesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAssetStatusList", ReplyAction="http://tempuri.org/IServiceLayer/GetAssetStatusListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetStatusDimDTO[] GetAssetStatusList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAssetStatusList", ReplyAction="http://tempuri.org/IServiceLayer/GetAssetStatusListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetStatusDimDTO[]> GetAssetStatusListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationTypesList", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationTypesListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationTypeDimDTO[] GetViolationTypesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationTypesList", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationTypesListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationTypeDimDTO[]> GetViolationTypesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountPerDayOfWeek", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountPerDayOfWeekResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountPerDayOfWeekDTO[] GetViolationsCountPerDayOfWeek();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountPerDayOfWeek", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountPerDayOfWeekResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountPerDayOfWeekDTO[]> GetViolationsCountPerDayOfWeekAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountPerDayOfWeekAndHour", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountPerDayOfWeekAndHourResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountPerDayOfWeekAndHourDTO[] GetViolationsCountPerDayOfWeekAndHour();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountPerDayOfWeekAndHour", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountPerDayOfWeekAndHourResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountPerDayOfWeekAndHourDTO[]> GetViolationsCountPerDayOfWeekAndHourAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByType", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByTypeResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[] GetViolationsCountGroupedByType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByType", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByTypeResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[]> GetViolationsCountGroupedByTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByTypePerDayOfWeek", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByTypePerDayOfWeekRespo" +
            "nse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[] GetViolationsCountGroupedByTypePerDayOfWeek(string dayofWeek);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByTypePerDayOfWeek", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByTypePerDayOfWeekRespo" +
            "nse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[]> GetViolationsCountGroupedByTypePerDayOfWeekAsync(string dayofWeek);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByTypePerDayOfWeekAndHo" +
            "ur", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByTypePerDayOfWeekAndHo" +
            "urResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[] GetViolationsCountGroupedByTypePerDayOfWeekAndHour(string dayofWeek, int hour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByTypePerDayOfWeekAndHo" +
            "ur", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByTypePerDayOfWeekAndHo" +
            "urResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[]> GetViolationsCountGroupedByTypePerDayOfWeekAndHourAsync(string dayofWeek, int hour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocation", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocationResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[] GetViolationsCountGroupedByLocation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocation", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocationResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[]> GetViolationsCountGroupedByLocationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocationPerDayOfWeek", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocationPerDayOfWeekR" +
            "esponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[] GetViolationsCountGroupedByLocationPerDayOfWeek(string dayofWeek);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocationPerDayOfWeek", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocationPerDayOfWeekR" +
            "esponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[]> GetViolationsCountGroupedByLocationPerDayOfWeekAsync(string dayofWeek);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocationPerDayOfWeekA" +
            "ndHour", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocationPerDayOfWeekA" +
            "ndHourResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[] GetViolationsCountGroupedByLocationPerDayOfWeekAndHour(string dayofWeek, int hour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocationPerDayOfWeekA" +
            "ndHour", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationsCountGroupedByLocationPerDayOfWeekA" +
            "ndHourResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[]> GetViolationsCountGroupedByLocationPerDayOfWeekAndHourAsync(string dayofWeek, int hour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetMaxNotificationsCount", ReplyAction="http://tempuri.org/IServiceLayer/GetMaxNotificationsCountResponse")]
        int GetMaxNotificationsCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetMaxNotificationsCount", ReplyAction="http://tempuri.org/IServiceLayer/GetMaxNotificationsCountResponse")]
        System.Threading.Tasks.Task<int> GetMaxNotificationsCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetIncidentFullDetails", ReplyAction="http://tempuri.org/IServiceLayer/GetIncidentFullDetailsResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentDetailsDTO GetIncidentFullDetails(int IncidentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetIncidentFullDetails", ReplyAction="http://tempuri.org/IServiceLayer/GetIncidentFullDetailsResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentDetailsDTO> GetIncidentFullDetailsAsync(int IncidentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationDetailsByAsset", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationDetailsByAssetResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationDetailsDTO GetViolationDetailsByAsset(string LocationCode, System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetViolationDetailsByAsset", ReplyAction="http://tempuri.org/IServiceLayer/GetViolationDetailsByAssetResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationDetailsDTO> GetViolationDetailsByAssetAsync(string LocationCode, System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetPatrolDetails", ReplyAction="http://tempuri.org/IServiceLayer/GetPatrolDetailsResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolFullDetailsDTO GetPatrolDetails(int PatrolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetPatrolDetails", ReplyAction="http://tempuri.org/IServiceLayer/GetPatrolDetailsResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolFullDetailsDTO> GetPatrolDetailsAsync(int PatrolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAllUsersList", ReplyAction="http://tempuri.org/IServiceLayer/GetAllUsersListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.UsersDTO[] GetAllUsersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAllUsersList", ReplyAction="http://tempuri.org/IServiceLayer/GetAllUsersListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.UsersDTO[]> GetAllUsersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/SaveSendControlToUsers", ReplyAction="http://tempuri.org/IServiceLayer/SaveSendControlToUsersResponse")]
        bool SaveSendControlToUsers(string xmlToSend, string[] Usernames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/SaveSendControlToUsers", ReplyAction="http://tempuri.org/IServiceLayer/SaveSendControlToUsersResponse")]
        System.Threading.Tasks.Task<bool> SaveSendControlToUsersAsync(string xmlToSend, string[] Usernames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetMessageTypeSOP", ReplyAction="http://tempuri.org/IServiceLayer/GetMessageTypeSOPResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.MessageTypeSOPDTO[] GetMessageTypeSOP(int MessageType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetMessageTypeSOP", ReplyAction="http://tempuri.org/IServiceLayer/GetMessageTypeSOPResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.MessageTypeSOPDTO[]> GetMessageTypeSOPAsync(int MessageType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetNearByTowersByLatLon", ReplyAction="http://tempuri.org/IServiceLayer/GetNearByTowersByLatLonResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[] GetNearByTowersByLatLon(double longitude, double latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetNearByTowersByLatLon", ReplyAction="http://tempuri.org/IServiceLayer/GetNearByTowersByLatLonResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[]> GetNearByTowersByLatLonAsync(double longitude, double latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetNearByRadarsByLatLon", ReplyAction="http://tempuri.org/IServiceLayer/GetNearByRadarsByLatLonResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[] GetNearByRadarsByLatLon(double longitude, double latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetNearByRadarsByLatLon", ReplyAction="http://tempuri.org/IServiceLayer/GetNearByRadarsByLatLonResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[]> GetNearByRadarsByLatLonAsync(double longitude, double latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetNearByCamerasByLatLon", ReplyAction="http://tempuri.org/IServiceLayer/GetNearByCamerasByLatLonResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[] GetNearByCamerasByLatLon(double longitude, double latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetNearByCamerasByLatLon", ReplyAction="http://tempuri.org/IServiceLayer/GetNearByCamerasByLatLonResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[]> GetNearByCamerasByLatLonAsync(double longitude, double latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAllTowerActions", ReplyAction="http://tempuri.org/IServiceLayer/GetAllTowerActionsResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.TowerActionsDTO[] GetAllTowerActions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAllTowerActions", ReplyAction="http://tempuri.org/IServiceLayer/GetAllTowerActionsResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.TowerActionsDTO[]> GetAllTowerActionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetRadiusForNearByAssets", ReplyAction="http://tempuri.org/IServiceLayer/GetRadiusForNearByAssetsResponse")]
        double GetRadiusForNearByAssets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetRadiusForNearByAssets", ReplyAction="http://tempuri.org/IServiceLayer/GetRadiusForNearByAssetsResponse")]
        System.Threading.Tasks.Task<double> GetRadiusForNearByAssetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/ConvertXML", ReplyAction="http://tempuri.org/IServiceLayer/ConvertXMLResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.MessageTypeConvertOutput ConvertXML(string xml, int generalTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/ConvertXML", ReplyAction="http://tempuri.org/IServiceLayer/ConvertXMLResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.MessageTypeConvertOutput> ConvertXMLAsync(string xml, int generalTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAllTowerCameras", ReplyAction="http://tempuri.org/IServiceLayer/GetAllTowerCamerasResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsDetailsViewDTO[] GetAllTowerCameras(long TowerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetAllTowerCameras", ReplyAction="http://tempuri.org/IServiceLayer/GetAllTowerCamerasResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsDetailsViewDTO[]> GetAllTowerCamerasAsync(long TowerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetOfficersList", ReplyAction="http://tempuri.org/IServiceLayer/GetOfficersListResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.OfficersLastLocationViewDTO[] GetOfficersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetOfficersList", ReplyAction="http://tempuri.org/IServiceLayer/GetOfficersListResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.OfficersLastLocationViewDTO[]> GetOfficersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetNearByPatrolsByLatLon", ReplyAction="http://tempuri.org/IServiceLayer/GetNearByPatrolsByLatLonResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolLastLocationDTO[] GetNearByPatrolsByLatLon(double longitude, double latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetNearByPatrolsByLatLon", ReplyAction="http://tempuri.org/IServiceLayer/GetNearByPatrolsByLatLonResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolLastLocationDTO[]> GetNearByPatrolsByLatLonAsync(double longitude, double latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetVehicleDetailsByPlateNumber", ReplyAction="http://tempuri.org/IServiceLayer/GetVehicleDetailsByPlateNumberResponse")]
        STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.VehicleLiveTrackingDTO GetVehicleDetailsByPlateNumber(string plateNumer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayer/GetVehicleDetailsByPlateNumber", ReplyAction="http://tempuri.org/IServiceLayer/GetVehicleDetailsByPlateNumberResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.VehicleLiveTrackingDTO> GetVehicleDetailsByPlateNumberAsync(string plateNumer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceLayerChannel : STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IServiceLayer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceLayerClient : System.ServiceModel.ClientBase<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IServiceLayer>, STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IServiceLayer {
        
        public ServiceLayerClient() {
        }
        
        public ServiceLayerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceLayerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLayerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLayerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public decimal GetWantedCarRadius() {
            return base.Channel.GetWantedCarRadius();
        }
        
        public System.Threading.Tasks.Task<decimal> GetWantedCarRadiusAsync() {
            return base.Channel.GetWantedCarRadiusAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsGroupedByLocationsDTO[] GetViolationsListGroupedByLocation(System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId) {
            return base.Channel.GetViolationsListGroupedByLocation(StartDateTime, ViolationTypeId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsGroupedByLocationsDTO[]> GetViolationsListGroupedByLocationAsync(System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId) {
            return base.Channel.GetViolationsListGroupedByLocationAsync(StartDateTime, ViolationTypeId);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationNotificationDTO[] GetUpdatedViolationsList(System.Nullable<bool> IsNoticed) {
            return base.Channel.GetUpdatedViolationsList(IsNoticed);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationNotificationDTO[]> GetUpdatedViolationsListAsync(System.Nullable<bool> IsNoticed) {
            return base.Channel.GetUpdatedViolationsListAsync(IsNoticed);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationNotificationDTO[] GetViolationsListByDate(System.Nullable<System.DateTime> StartDateTime, System.Nullable<System.DateTime> EndDateTime) {
            return base.Channel.GetViolationsListByDate(StartDateTime, EndDateTime);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationNotificationDTO[]> GetViolationsListByDateAsync(System.Nullable<System.DateTime> StartDateTime, System.Nullable<System.DateTime> EndDateTime) {
            return base.Channel.GetViolationsListByDateAsync(StartDateTime, EndDateTime);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO[] GetIncidentsListByDate(System.Nullable<System.DateTime> StartDateTime, System.Nullable<System.DateTime> EndDateTime) {
            return base.Channel.GetIncidentsListByDate(StartDateTime, EndDateTime);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO[]> GetIncidentsListByDateAsync(System.Nullable<System.DateTime> StartDateTime, System.Nullable<System.DateTime> EndDateTime) {
            return base.Channel.GetIncidentsListByDateAsync(StartDateTime, EndDateTime);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsDetailsByLocationDTO[] GetViolationsDetailsForLocation(string LocationCode, System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId) {
            return base.Channel.GetViolationsDetailsForLocation(LocationCode, StartDateTime, ViolationTypeId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsDetailsByLocationDTO[]> GetViolationsDetailsForLocationAsync(string LocationCode, System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId) {
            return base.Channel.GetViolationsDetailsForLocationAsync(LocationCode, StartDateTime, ViolationTypeId);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO[] GetActiveIncidentsList() {
            return base.Channel.GetActiveIncidentsList();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO[]> GetActiveIncidentsListAsync() {
            return base.Channel.GetActiveIncidentsListAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO GetIncidentDetails(int IncidentId) {
            return base.Channel.GetIncidentDetails(IncidentId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentsDTO> GetIncidentDetailsAsync(int IncidentId) {
            return base.Channel.GetIncidentDetailsAsync(IncidentId);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[] GetAssetsList(System.Nullable<int> AssetStatusId, System.Nullable<int> AssetTypeId) {
            return base.Channel.GetAssetsList(AssetStatusId, AssetTypeId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[]> GetAssetsListAsync(System.Nullable<int> AssetStatusId, System.Nullable<int> AssetTypeId) {
            return base.Channel.GetAssetsListAsync(AssetStatusId, AssetTypeId);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetLastStatusDTO[] GetAssetsLastStatusList(System.Nullable<bool> IsNoticed) {
            return base.Channel.GetAssetsLastStatusList(IsNoticed);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetLastStatusDTO[]> GetAssetsLastStatusListAsync(System.Nullable<bool> IsNoticed) {
            return base.Channel.GetAssetsLastStatusListAsync(IsNoticed);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolLastLocationDTO[] GetPatrolsList(System.Nullable<int> PatrolStatusId) {
            return base.Channel.GetPatrolsList(PatrolStatusId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolLastLocationDTO[]> GetPatrolsListAsync(System.Nullable<int> PatrolStatusId) {
            return base.Channel.GetPatrolsListAsync(PatrolStatusId);
        }
        
        public void GetEventsList() {
            base.Channel.GetEventsList();
        }
        
        public System.Threading.Tasks.Task GetEventsListAsync() {
            return base.Channel.GetEventsListAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolStatusDimDTO[] GetPatrolStatusList() {
            return base.Channel.GetPatrolStatusList();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolStatusDimDTO[]> GetPatrolStatusListAsync() {
            return base.Channel.GetPatrolStatusListAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetTypeDimDTO[] GetAssetTypesList() {
            return base.Channel.GetAssetTypesList();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetTypeDimDTO[]> GetAssetTypesListAsync() {
            return base.Channel.GetAssetTypesListAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetStatusDimDTO[] GetAssetStatusList() {
            return base.Channel.GetAssetStatusList();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetStatusDimDTO[]> GetAssetStatusListAsync() {
            return base.Channel.GetAssetStatusListAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationTypeDimDTO[] GetViolationTypesList() {
            return base.Channel.GetViolationTypesList();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationTypeDimDTO[]> GetViolationTypesListAsync() {
            return base.Channel.GetViolationTypesListAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountPerDayOfWeekDTO[] GetViolationsCountPerDayOfWeek() {
            return base.Channel.GetViolationsCountPerDayOfWeek();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountPerDayOfWeekDTO[]> GetViolationsCountPerDayOfWeekAsync() {
            return base.Channel.GetViolationsCountPerDayOfWeekAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountPerDayOfWeekAndHourDTO[] GetViolationsCountPerDayOfWeekAndHour() {
            return base.Channel.GetViolationsCountPerDayOfWeekAndHour();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountPerDayOfWeekAndHourDTO[]> GetViolationsCountPerDayOfWeekAndHourAsync() {
            return base.Channel.GetViolationsCountPerDayOfWeekAndHourAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[] GetViolationsCountGroupedByType() {
            return base.Channel.GetViolationsCountGroupedByType();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[]> GetViolationsCountGroupedByTypeAsync() {
            return base.Channel.GetViolationsCountGroupedByTypeAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[] GetViolationsCountGroupedByTypePerDayOfWeek(string dayofWeek) {
            return base.Channel.GetViolationsCountGroupedByTypePerDayOfWeek(dayofWeek);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[]> GetViolationsCountGroupedByTypePerDayOfWeekAsync(string dayofWeek) {
            return base.Channel.GetViolationsCountGroupedByTypePerDayOfWeekAsync(dayofWeek);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[] GetViolationsCountGroupedByTypePerDayOfWeekAndHour(string dayofWeek, int hour) {
            return base.Channel.GetViolationsCountGroupedByTypePerDayOfWeekAndHour(dayofWeek, hour);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByTypeDTO[]> GetViolationsCountGroupedByTypePerDayOfWeekAndHourAsync(string dayofWeek, int hour) {
            return base.Channel.GetViolationsCountGroupedByTypePerDayOfWeekAndHourAsync(dayofWeek, hour);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[] GetViolationsCountGroupedByLocation() {
            return base.Channel.GetViolationsCountGroupedByLocation();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[]> GetViolationsCountGroupedByLocationAsync() {
            return base.Channel.GetViolationsCountGroupedByLocationAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[] GetViolationsCountGroupedByLocationPerDayOfWeek(string dayofWeek) {
            return base.Channel.GetViolationsCountGroupedByLocationPerDayOfWeek(dayofWeek);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[]> GetViolationsCountGroupedByLocationPerDayOfWeekAsync(string dayofWeek) {
            return base.Channel.GetViolationsCountGroupedByLocationPerDayOfWeekAsync(dayofWeek);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[] GetViolationsCountGroupedByLocationPerDayOfWeekAndHour(string dayofWeek, int hour) {
            return base.Channel.GetViolationsCountGroupedByLocationPerDayOfWeekAndHour(dayofWeek, hour);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationsCountGroupedByLocationDTO[]> GetViolationsCountGroupedByLocationPerDayOfWeekAndHourAsync(string dayofWeek, int hour) {
            return base.Channel.GetViolationsCountGroupedByLocationPerDayOfWeekAndHourAsync(dayofWeek, hour);
        }
        
        public int GetMaxNotificationsCount() {
            return base.Channel.GetMaxNotificationsCount();
        }
        
        public System.Threading.Tasks.Task<int> GetMaxNotificationsCountAsync() {
            return base.Channel.GetMaxNotificationsCountAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentDetailsDTO GetIncidentFullDetails(int IncidentId) {
            return base.Channel.GetIncidentFullDetails(IncidentId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.IncidentDetailsDTO> GetIncidentFullDetailsAsync(int IncidentId) {
            return base.Channel.GetIncidentFullDetailsAsync(IncidentId);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationDetailsDTO GetViolationDetailsByAsset(string LocationCode, System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId) {
            return base.Channel.GetViolationDetailsByAsset(LocationCode, StartDateTime, ViolationTypeId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.ViolationDetailsDTO> GetViolationDetailsByAssetAsync(string LocationCode, System.Nullable<System.DateTime> StartDateTime, System.Nullable<int> ViolationTypeId) {
            return base.Channel.GetViolationDetailsByAssetAsync(LocationCode, StartDateTime, ViolationTypeId);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolFullDetailsDTO GetPatrolDetails(int PatrolId) {
            return base.Channel.GetPatrolDetails(PatrolId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolFullDetailsDTO> GetPatrolDetailsAsync(int PatrolId) {
            return base.Channel.GetPatrolDetailsAsync(PatrolId);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.UsersDTO[] GetAllUsersList() {
            return base.Channel.GetAllUsersList();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.UsersDTO[]> GetAllUsersListAsync() {
            return base.Channel.GetAllUsersListAsync();
        }
        
        public bool SaveSendControlToUsers(string xmlToSend, string[] Usernames) {
            return base.Channel.SaveSendControlToUsers(xmlToSend, Usernames);
        }
        
        public System.Threading.Tasks.Task<bool> SaveSendControlToUsersAsync(string xmlToSend, string[] Usernames) {
            return base.Channel.SaveSendControlToUsersAsync(xmlToSend, Usernames);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.MessageTypeSOPDTO[] GetMessageTypeSOP(int MessageType) {
            return base.Channel.GetMessageTypeSOP(MessageType);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.MessageTypeSOPDTO[]> GetMessageTypeSOPAsync(int MessageType) {
            return base.Channel.GetMessageTypeSOPAsync(MessageType);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[] GetNearByTowersByLatLon(double longitude, double latitude) {
            return base.Channel.GetNearByTowersByLatLon(longitude, latitude);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[]> GetNearByTowersByLatLonAsync(double longitude, double latitude) {
            return base.Channel.GetNearByTowersByLatLonAsync(longitude, latitude);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[] GetNearByRadarsByLatLon(double longitude, double latitude) {
            return base.Channel.GetNearByRadarsByLatLon(longitude, latitude);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[]> GetNearByRadarsByLatLonAsync(double longitude, double latitude) {
            return base.Channel.GetNearByRadarsByLatLonAsync(longitude, latitude);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[] GetNearByCamerasByLatLon(double longitude, double latitude) {
            return base.Channel.GetNearByCamerasByLatLon(longitude, latitude);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsViewDTO[]> GetNearByCamerasByLatLonAsync(double longitude, double latitude) {
            return base.Channel.GetNearByCamerasByLatLonAsync(longitude, latitude);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.TowerActionsDTO[] GetAllTowerActions() {
            return base.Channel.GetAllTowerActions();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.TowerActionsDTO[]> GetAllTowerActionsAsync() {
            return base.Channel.GetAllTowerActionsAsync();
        }
        
        public double GetRadiusForNearByAssets() {
            return base.Channel.GetRadiusForNearByAssets();
        }
        
        public System.Threading.Tasks.Task<double> GetRadiusForNearByAssetsAsync() {
            return base.Channel.GetRadiusForNearByAssetsAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.MessageTypeConvertOutput ConvertXML(string xml, int generalTypeId) {
            return base.Channel.ConvertXML(xml, generalTypeId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.MessageTypeConvertOutput> ConvertXMLAsync(string xml, int generalTypeId) {
            return base.Channel.ConvertXMLAsync(xml, generalTypeId);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsDetailsViewDTO[] GetAllTowerCameras(long TowerId) {
            return base.Channel.GetAllTowerCameras(TowerId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.AssetsDetailsViewDTO[]> GetAllTowerCamerasAsync(long TowerId) {
            return base.Channel.GetAllTowerCamerasAsync(TowerId);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.OfficersLastLocationViewDTO[] GetOfficersList() {
            return base.Channel.GetOfficersList();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.OfficersLastLocationViewDTO[]> GetOfficersListAsync() {
            return base.Channel.GetOfficersListAsync();
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolLastLocationDTO[] GetNearByPatrolsByLatLon(double longitude, double latitude) {
            return base.Channel.GetNearByPatrolsByLatLon(longitude, latitude);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.PatrolLastLocationDTO[]> GetNearByPatrolsByLatLonAsync(double longitude, double latitude) {
            return base.Channel.GetNearByPatrolsByLatLonAsync(longitude, latitude);
        }
        
        public STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.VehicleLiveTrackingDTO GetVehicleDetailsByPlateNumber(string plateNumer) {
            return base.Channel.GetVehicleDetailsByPlateNumber(plateNumer);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.TrafficMapControl.ServiceLayerReference.VehicleLiveTrackingDTO> GetVehicleDetailsByPlateNumberAsync(string plateNumer) {
            return base.Channel.GetVehicleDetailsByPlateNumberAsync(plateNumer);
        }
    }
}
