//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace STC.Projects.WCF.ServiceLayer.BarcoWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PerspectiveMgtAPISoapBinding", Namespace="http://openapi.cms.barco.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dimension2D))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(point2D))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rectangularShape))]
    public partial class PerspectiveMgtAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getDisplaysWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemovePerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback listUsersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback findDisplayByComputerNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createLogoDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllNGPsOperationCompleted;
        
        private System.Threading.SendOrPostCallback findGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBorderDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDispletsDecoratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSystemVariableInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback bringDispletsToFrontOperationCompleted;
        
        private System.Threading.SendOrPostCallback bindOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPerspectiveWindowsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDateTimeDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback setApplicationsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDecoratorsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDispletToBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplayInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplayInfo3OperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback bringWindowForwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback findPerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyDecoratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVideoSourcesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback listofAssociatedSnapshotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setScreenScrapeSourceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTilersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusBorderDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsTilingInPerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDispletsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setBorderDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTilerForPerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeProVNCDefaultSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourceSignalDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSourceTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllPerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsPerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStatusBorderDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getModulesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTilerInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback listSourceRoutingResolutionTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback listSourceRoutingConfigsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createExternalWindowOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemPropertyInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWindowsInfo3OperationCompleted;
        
        private System.Threading.SendOrPostCallback applyDecoratorToDispletOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRoleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback findTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSquidModeConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribePerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeWindowOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWindowsInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback createStatusImageDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsUserTilingInDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback bindAllSystemPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWindowInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setDispletInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setWindowInfo3OperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsUserTilingInDisplay2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setDecoratorsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStatusImageDecoratorTemplate2OperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeTilerPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeDisplayByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllMGSOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAudioDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWindowsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback importFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSystemVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAudioDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback isRestoreFinishedOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTilerInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSquidModeConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback findNGPOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDisplayModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback loadDefaultSnapshotOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNGPInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPerspectiveWindowDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSystemVariablePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeProVNCDefaultSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback findMGSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStaticTextDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTilersInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback copyPerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStatusLabelDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSidebarDefaultSettingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribePerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemovePerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfAssociatedSnapshotsWithTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllTilersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfAssociatedPerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDisplayInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfAssociatedDisplaysWithTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchSystemVariableByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplicationWindowsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeDispletOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribePerspectivePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNGPsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unbindAllSystemVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLicenseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllPerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDisplet2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setLicenseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback backupToConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback setImageDecoratorsDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getScreenScrapeSourcesDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback removeApplicationsFromDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSourceOffsetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getKeyboardShortcutsDefaultSettingsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback partialRestoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback listConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createScreenScrapeSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback sharePerspectiveOnDisplay2OperationCompleted;
        
        private System.Threading.SendOrPostCallback bindAllSystemVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback copySourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourceNameDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTilersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourceNameDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSystemPropertyPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSidebarDefaultSettingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createVideoSource2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setLogoDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDateTimeDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllSnapshotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSystemVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback createObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback unshareApplicationFromDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplaysSnapshotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback listSystemVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeDisplayPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback findSystemVariableByPropertyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStatusImageDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplaysInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplayAllExternalWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendWindowToBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLabelDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback backupOperationCompleted;
        
        private System.Threading.SendOrPostCallback setImageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWebSourceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback listMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeDecoratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSnapshotsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfAssociatedPerspectivesWithTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDispletInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllSquidModeConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDispletOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeDisplayPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback getScreenScrapeSourceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setModulesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSourceNameDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribePerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLogoDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback acquireLicensesOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchSystemVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllDispletsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLabelDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDispletBackwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDateTimeDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDeviceURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAudioDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSquidModeConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setScreenScrapeSourcesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMiscellaneousDefaultSettingsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStatusLabelDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllSystemVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback listGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyPerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVideoAndAudioDefaultSettingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listSystemPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeDecoratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTilerForDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDisplaysInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback bringDispletForwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchTilingOperationCompleted;
        
        private System.Threading.SendOrPostCallback setActiveRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSidebarDefaultSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback setVideoSourceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClusterInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeWindowsFromDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeTilersOperationCompleted;
        
        private System.Threading.SendOrPostCallback configureSessionTimoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSquidModeConfigurationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDisplayInfo3OperationCompleted;
        
        private System.Threading.SendOrPostCallback setDisplayInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemVariablesInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback removeGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback sharePerspectiveWithDefaultGeometryOperationCompleted;
        
        private System.Threading.SendOrPostCallback listTilersOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTilersOperationCompleted;
        
        private System.Threading.SendOrPostCallback bringDispletToFrontOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback findConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveTilersOperationCompleted;
        
        private System.Threading.SendOrPostCallback setApplicationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDefaultAreaInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWindowInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback additionalDispletsForTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback listVideoTemplateURLsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createApplicationWindow2OperationCompleted;
        
        private System.Threading.SendOrPostCallback createApplicationWindow3OperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUsersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWebSourceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLoggedInUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback startSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPerspectiveInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setSystemVariablesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getModulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllSystemVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSnapshotInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWindowInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listSessionsByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback listRolesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createScreenScrapeSource2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setPerspectiveInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStaticTextDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback findDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplaysUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSnapshotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback loadSnapshotOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveSystemVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback findDisplayByUniqueIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback startPublishingEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeWindowOperationCompleted;
        
        private System.Threading.SendOrPostCallback listDecoratorTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDispletsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllSnapshotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPerspectiveWindow2OperationCompleted;
        
        private System.Threading.SendOrPostCallback removePerspectiveByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeMiscellaneousDefaultSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemEnvVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSourceInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDispletsToBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback listKeyboardShortcutSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createApplicationWindowOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyReadOnlyPerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMessageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsUserTilingForPerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPerspectiveInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplaysInfo3OperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplaysInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsUserTilingForDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback listPerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setImageDecoratorDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback listGroupsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeDispletsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getScreenScrapeSourceDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSystemPropertyPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplicationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeDecoratorTemplatePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback isValidControlPanelPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDecoratorInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribePerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMiscellaneousDefaultSettingsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback findSystemPropertyBindingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemVariableInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDecoratorBackwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback additionalWindowsForTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeDispletsOperationCompleted;
        
        private System.Threading.SendOrPostCallback copySystemVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback findDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemPropertiesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSquidModeConfigurationsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImageDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback isSystemVariableBindedOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDisplaysInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback isCMSServerReadyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setRolesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDisplaysInfo3OperationCompleted;
        
        private System.Threading.SendOrPostCallback removePerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSourceNameDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsUserTilingInPerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusImageDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback copySystemVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTilerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStatusLabelDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeTilerPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback findKeyboardShortcutSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback sharePerspectiveOnDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDefaultAreaInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSystemVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setApplicationWindowsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback setImagesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRolesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSystemVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSystemPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeVideoAudioDefaultSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTilerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfAssociatedVideoSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLogoDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplicationWindowDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeKeyboardShortcutSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback releaseLicensesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsedNoOfLicensesOperationCompleted;
        
        private System.Threading.SendOrPostCallback stopPublishingEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback identifyNGPsOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfAssociatedDisplaysWithSquidModeConfigsOperationCompleted;
        
        private System.Threading.SendOrPostCallback findRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setConfigurationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusBorderDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStaticTextDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeConfigurationPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSystemPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDispletsInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateVideoTemplateURLsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusLabelDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeDecoratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback listGridsOperationCompleted;
        
        private System.Threading.SendOrPostCallback unbindAllSystemPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExternalWindowDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusImageDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeDecoratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDecoratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLabelDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllSystemPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExternalWindowsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVideoSourceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPerspective2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getSnapshotInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setRoleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback sharePerspectiveWithStretchOnDisplay2OperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSystemVariablePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSquidModeConfigurationsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeMessagePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWindowsZOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback listUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback shareApplicationWithDefaultGeometryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImagesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLabelDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeVideoAudioDefaultSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectSystemVariableInStaticTextDecoratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback openPerspectiveWithDefaultGeometryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImageDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourcesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDecoratorToBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback isSystemPropertyBindedOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllTilersOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAudioDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllSystemPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeMiscellaneousDefaultSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVersionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDateTimeDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchTiling2OperationCompleted;
        
        private System.Threading.SendOrPostCallback createWebSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImageDecoratorsDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllDispletsOperationCompleted;
        
        private System.Threading.SendOrPostCallback findUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWindowInfo3FromDAOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPerspectivesInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback reloadLicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback createKeyboardShortcutDefaultSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback startRestoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback unshareAllApplicationsFromDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDateTimeDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback copySourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteExternalWindowOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllDisplaysPerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourcesInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback listDetailedPerspectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSystemVariable2OperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSourceRoutingConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplayTotalWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWebSourcesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback findSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback createLogoDecoratorTemplate2OperationCompleted;
        
        private System.Threading.SendOrPostCallback removeMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPerspectivesInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setBorderDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPerspectivesDispletsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllDisplaysApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSourcePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPerspectiveWindowOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPerspectiveInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setProVNCDefaultSettingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setApplicationWindowDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllDecoratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createVideoSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGroupInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDispletInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeDecoratorTemplatePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllDecoratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSystemVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeDispletOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setScreenScrapeSourcesDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback searchNGPsOperationCompleted;
        
        private System.Threading.SendOrPostCallback endSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback listRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeDecoratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStatusBorderDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback applySourceTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSourcesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSystemVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConfigurationsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllPerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourceRoutingConfigInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPerspectivesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTilersInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback saveTilingAsGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback findSystemPropertyByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback openPerspectiveOnDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWindowsInfo3OperationCompleted;
        
        private System.Threading.SendOrPostCallback getLogoDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWindowsInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback listLocalesSupportedByNGPOperationCompleted;
        
        private System.Threading.SendOrPostCallback unbindSystemPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback findSystemPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback bringDecoratorToFrontOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeDispletsOperationCompleted;
        
        private System.Threading.SendOrPostCallback bindSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback findSystemVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSystemPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDispletsOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyDecoratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllSquidModeConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDecoratorInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplicationsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribePerspectivePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback setConfigurationsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createBorderDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSourceRoutingConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback setVideoSourcesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourceInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setSystemPropertyInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback setExternalWindowDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSharedApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllSourceRoutingConfigsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateVideoTemplateURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendWindowBackwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStatusBorderDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSharedPerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback listSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSourcePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeTilersOperationCompleted;
        
        private System.Threading.SendOrPostCallback bindSystemPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemVariableInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDisplay2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setDispletInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConfigurationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllDispletsOperationCompleted;
        
        private System.Threading.SendOrPostCallback listDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSystemVariableInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setScreenScrapeSourceDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getWindowInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getWindowInfo3OperationCompleted;
        
        private System.Threading.SendOrPostCallback createWebSource2OperationCompleted;
        
        private System.Threading.SendOrPostCallback setImageDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSnapshotOperationCompleted;
        
        private System.Threading.SendOrPostCallback setVideoAndAudioDefaultSettingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSourceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback openPerspectiveOnDisplay2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStaticTextDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplayInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsUserTilingInPerspective2OperationCompleted;
        
        private System.Threading.SendOrPostCallback listDisplaysByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginSystemUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSystemPropertiesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAudioDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback bringWindowToFrontOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getModuleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsDispletTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWindowsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfSquidModeConfigsOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeMessagePoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPerspectiveWindowsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback createApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveAsTilingInDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSourcesInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback createUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGroupsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback shareApplicationOnDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsharePerspectiveFromDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImageDecoratorDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback cleanupConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMGSInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDisplayWindowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setImageDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSidebarDefaultSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback partialImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRemoveSystemVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllTilersOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeTilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDispletsInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback removeVideoTemplateURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSystemPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback shareApplicationOnDisplay2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusLabelDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSnapshotOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSnapshotsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllDecoratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback findBindingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProVNCDefaultSettingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchGridsOperationCompleted;
        
        private System.Threading.SendOrPostCallback markRestoreFinishedOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStaticTextDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBorderDecoratorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfAssociatedVDSPerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback unbindOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMessagesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeAllConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDisplayModulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSquidModeConfigurationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPerspectiveWindowDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGeneratedPerspectiveNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStatusImageDecoratorsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback unshareAllPerspectivesFromDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeSquidModeConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemVariablesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWebSourcesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeConfigurationPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeAllApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback restoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSourceNameDecoratorTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchPerspectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getKeyboardShortcutDefaultSettingsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback applyRoleToRecourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getScreenScrapeSourcesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchDecoratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback bringDecoratorForwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPerspectivesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback addVideoTemplateURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyTilersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PerspectiveMgtAPI() {
            this.Url = global::STC.Projects.WCF.ServiceLayer.Properties.Settings.Default.STC_Projects_WCF_ServiceLayer_BarcoWebReference_PerspectiveMgtAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getDisplaysWindowsCompletedEventHandler getDisplaysWindowsCompleted;
        
        /// <remarks/>
        public event forceRemovePerspectivesCompletedEventHandler forceRemovePerspectivesCompleted;
        
        /// <remarks/>
        public event listUsersInfoCompletedEventHandler listUsersInfoCompleted;
        
        /// <remarks/>
        public event unsubscribeSourcesCompletedEventHandler unsubscribeSourcesCompleted;
        
        /// <remarks/>
        public event findDisplayByComputerNameCompletedEventHandler findDisplayByComputerNameCompleted;
        
        /// <remarks/>
        public event subscribeAllWindowsCompletedEventHandler subscribeAllWindowsCompleted;
        
        /// <remarks/>
        public event createLogoDecoratorTemplateCompletedEventHandler createLogoDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event listAllNGPsCompletedEventHandler listAllNGPsCompleted;
        
        /// <remarks/>
        public event findGroupCompletedEventHandler findGroupCompleted;
        
        /// <remarks/>
        public event getBorderDecoratorsDetailCompletedEventHandler getBorderDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event getDispletsDecoratorsCompletedEventHandler getDispletsDecoratorsCompleted;
        
        /// <remarks/>
        public event setSystemVariableInfo2CompletedEventHandler setSystemVariableInfo2Completed;
        
        /// <remarks/>
        public event bringDispletsToFrontCompletedEventHandler bringDispletsToFrontCompleted;
        
        /// <remarks/>
        public event bindCompletedEventHandler bindCompleted;
        
        /// <remarks/>
        public event getPerspectiveWindowsDetailCompletedEventHandler getPerspectiveWindowsDetailCompleted;
        
        /// <remarks/>
        public event getEventsCompletedEventHandler getEventsCompleted;
        
        /// <remarks/>
        public event createDateTimeDecoratorTemplateCompletedEventHandler createDateTimeDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event copyTilerCompletedEventHandler copyTilerCompleted;
        
        /// <remarks/>
        public event setApplicationsInfoCompletedEventHandler setApplicationsInfoCompleted;
        
        /// <remarks/>
        public event getDecoratorsInfoCompletedEventHandler getDecoratorsInfoCompleted;
        
        /// <remarks/>
        public event sendDispletToBackCompletedEventHandler sendDispletToBackCompleted;
        
        /// <remarks/>
        public event getDisplayInfo2CompletedEventHandler getDisplayInfo2Completed;
        
        /// <remarks/>
        public event getDisplayInfo3CompletedEventHandler getDisplayInfo3Completed;
        
        /// <remarks/>
        public event forceRemoveSourcesCompletedEventHandler forceRemoveSourcesCompleted;
        
        /// <remarks/>
        public event bringWindowForwardCompletedEventHandler bringWindowForwardCompleted;
        
        /// <remarks/>
        public event findPerspectiveCompletedEventHandler findPerspectiveCompleted;
        
        /// <remarks/>
        public event copyDecoratorCompletedEventHandler copyDecoratorCompleted;
        
        /// <remarks/>
        public event getVideoSourcesDetailCompletedEventHandler getVideoSourcesDetailCompleted;
        
        /// <remarks/>
        public event listofAssociatedSnapshotsCompletedEventHandler listofAssociatedSnapshotsCompleted;
        
        /// <remarks/>
        public event removeSourcesCompletedEventHandler removeSourcesCompleted;
        
        /// <remarks/>
        public event setScreenScrapeSourceDetailCompletedEventHandler setScreenScrapeSourceDetailCompleted;
        
        /// <remarks/>
        public event forceRemoveApplicationsCompletedEventHandler forceRemoveApplicationsCompleted;
        
        /// <remarks/>
        public event setTilersInfoCompletedEventHandler setTilersInfoCompleted;
        
        /// <remarks/>
        public event getStatusBorderDecoratorsDetailCompletedEventHandler getStatusBorderDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event saveAsTilingInPerspectiveCompletedEventHandler saveAsTilingInPerspectiveCompleted;
        
        /// <remarks/>
        public event removeDecoratorTemplateCompletedEventHandler removeDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event setDispletsInfoCompletedEventHandler setDispletsInfoCompleted;
        
        /// <remarks/>
        public event setBorderDecoratorDetailCompletedEventHandler setBorderDecoratorDetailCompleted;
        
        /// <remarks/>
        public event updateTilerForPerspectiveCompletedEventHandler updateTilerForPerspectiveCompleted;
        
        /// <remarks/>
        public event unsubscribeProVNCDefaultSettingCompletedEventHandler unsubscribeProVNCDefaultSettingCompleted;
        
        /// <remarks/>
        public event getSourceSignalDetailCompletedEventHandler getSourceSignalDetailCompleted;
        
        /// <remarks/>
        public event setSourceTemplateCompletedEventHandler setSourceTemplateCompleted;
        
        /// <remarks/>
        public event unsubscribeAllPerspectivesCompletedEventHandler unsubscribeAllPerspectivesCompleted;
        
        /// <remarks/>
        public event saveAsPerspectiveCompletedEventHandler saveAsPerspectiveCompleted;
        
        /// <remarks/>
        public event setStatusBorderDecoratorsDetailCompletedEventHandler setStatusBorderDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event getModulesInfoCompletedEventHandler getModulesInfoCompleted;
        
        /// <remarks/>
        public event subscribeDisplayCompletedEventHandler subscribeDisplayCompleted;
        
        /// <remarks/>
        public event getTilerInfo2CompletedEventHandler getTilerInfo2Completed;
        
        /// <remarks/>
        public event listSourceRoutingResolutionTypeCompletedEventHandler listSourceRoutingResolutionTypeCompleted;
        
        /// <remarks/>
        public event listSourceRoutingConfigsCompletedEventHandler listSourceRoutingConfigsCompleted;
        
        /// <remarks/>
        public event searchDisplaysCompletedEventHandler searchDisplaysCompleted;
        
        /// <remarks/>
        public event unsubscribeAllApplicationsCompletedEventHandler unsubscribeAllApplicationsCompleted;
        
        /// <remarks/>
        public event createExternalWindowCompletedEventHandler createExternalWindowCompleted;
        
        /// <remarks/>
        public event getSystemPropertyInfoCompletedEventHandler getSystemPropertyInfoCompleted;
        
        /// <remarks/>
        public event getWindowsInfo3CompletedEventHandler getWindowsInfo3Completed;
        
        /// <remarks/>
        public event applyDecoratorToDispletCompletedEventHandler applyDecoratorToDispletCompleted;
        
        /// <remarks/>
        public event getRoleInfoCompletedEventHandler getRoleInfoCompleted;
        
        /// <remarks/>
        public event findTilerCompletedEventHandler findTilerCompleted;
        
        /// <remarks/>
        public event unsubscribeSquidModeConfigurationCompletedEventHandler unsubscribeSquidModeConfigurationCompleted;
        
        /// <remarks/>
        public event subscribePerspectiveCompletedEventHandler subscribePerspectiveCompleted;
        
        /// <remarks/>
        public event subscribeWindowCompletedEventHandler subscribeWindowCompleted;
        
        /// <remarks/>
        public event getWindowsInfo2CompletedEventHandler getWindowsInfo2Completed;
        
        /// <remarks/>
        public event createStatusImageDecoratorTemplateCompletedEventHandler createStatusImageDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event saveAsUserTilingInDisplayCompletedEventHandler saveAsUserTilingInDisplayCompleted;
        
        /// <remarks/>
        public event bindAllSystemPropertiesCompletedEventHandler bindAllSystemPropertiesCompleted;
        
        /// <remarks/>
        public event getActiveRolesCompletedEventHandler getActiveRolesCompleted;
        
        /// <remarks/>
        public event unsubscribeDisplaysCompletedEventHandler unsubscribeDisplaysCompleted;
        
        /// <remarks/>
        public event setWindowInfo2CompletedEventHandler setWindowInfo2Completed;
        
        /// <remarks/>
        public event setDispletInfo2CompletedEventHandler setDispletInfo2Completed;
        
        /// <remarks/>
        public event setWindowInfo3CompletedEventHandler setWindowInfo3Completed;
        
        /// <remarks/>
        public event saveAsUserTilingInDisplay2CompletedEventHandler saveAsUserTilingInDisplay2Completed;
        
        /// <remarks/>
        public event setDecoratorsInfoCompletedEventHandler setDecoratorsInfoCompleted;
        
        /// <remarks/>
        public event createStatusImageDecoratorTemplate2CompletedEventHandler createStatusImageDecoratorTemplate2Completed;
        
        /// <remarks/>
        public event subscribeTilerPoolCompletedEventHandler subscribeTilerPoolCompleted;
        
        /// <remarks/>
        public event copyRoleCompletedEventHandler copyRoleCompleted;
        
        /// <remarks/>
        public event removeDisplayByNameCompletedEventHandler removeDisplayByNameCompleted;
        
        /// <remarks/>
        public event listAllMGSCompletedEventHandler listAllMGSCompleted;
        
        /// <remarks/>
        public event setAudioDecoratorDetailCompletedEventHandler setAudioDecoratorDetailCompleted;
        
        /// <remarks/>
        public event copyGroupCompletedEventHandler copyGroupCompleted;
        
        /// <remarks/>
        public event getWindowsInfoCompletedEventHandler getWindowsInfoCompleted;
        
        /// <remarks/>
        public event importFileCompletedEventHandler importFileCompleted;
        
        /// <remarks/>
        public event unsubscribeSystemVariablesCompletedEventHandler unsubscribeSystemVariablesCompleted;
        
        /// <remarks/>
        public event setAudioDecoratorsDetailCompletedEventHandler setAudioDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event forceRemoveGroupsCompletedEventHandler forceRemoveGroupsCompleted;
        
        /// <remarks/>
        public event isRestoreFinishedCompletedEventHandler isRestoreFinishedCompleted;
        
        /// <remarks/>
        public event setTilerInfo2CompletedEventHandler setTilerInfo2Completed;
        
        /// <remarks/>
        public event unsubscribeSquidModeConfigurationsCompletedEventHandler unsubscribeSquidModeConfigurationsCompleted;
        
        /// <remarks/>
        public event findNGPCompletedEventHandler findNGPCompleted;
        
        /// <remarks/>
        public event createDisplayModuleCompletedEventHandler createDisplayModuleCompleted;
        
        /// <remarks/>
        public event subscribeAllCompletedEventHandler subscribeAllCompleted;
        
        /// <remarks/>
        public event loadDefaultSnapshotCompletedEventHandler loadDefaultSnapshotCompleted;
        
        /// <remarks/>
        public event getNGPInfoCompletedEventHandler getNGPInfoCompleted;
        
        /// <remarks/>
        public event removeTilerCompletedEventHandler removeTilerCompleted;
        
        /// <remarks/>
        public event getPerspectiveWindowDetailCompletedEventHandler getPerspectiveWindowDetailCompleted;
        
        /// <remarks/>
        public event subscribeSystemVariablePoolCompletedEventHandler subscribeSystemVariablePoolCompleted;
        
        /// <remarks/>
        public event subscribeProVNCDefaultSettingCompletedEventHandler subscribeProVNCDefaultSettingCompleted;
        
        /// <remarks/>
        public event findMGSCompletedEventHandler findMGSCompleted;
        
        /// <remarks/>
        public event getStaticTextDecoratorDetailCompletedEventHandler getStaticTextDecoratorDetailCompleted;
        
        /// <remarks/>
        public event subscribeTilerCompletedEventHandler subscribeTilerCompleted;
        
        /// <remarks/>
        public event forceRemoveUserCompletedEventHandler forceRemoveUserCompleted;
        
        /// <remarks/>
        public event getUsersInfoCompletedEventHandler getUsersInfoCompleted;
        
        /// <remarks/>
        public event getTilersInfo2CompletedEventHandler getTilersInfo2Completed;
        
        /// <remarks/>
        public event copyPerspectiveCompletedEventHandler copyPerspectiveCompleted;
        
        /// <remarks/>
        public event setStatusLabelDecoratorDetailCompletedEventHandler setStatusLabelDecoratorDetailCompleted;
        
        /// <remarks/>
        public event setSidebarDefaultSettingInfoCompletedEventHandler setSidebarDefaultSettingInfoCompleted;
        
        /// <remarks/>
        public event subscribePerspectivesCompletedEventHandler subscribePerspectivesCompleted;
        
        /// <remarks/>
        public event forceRemovePerspectiveCompletedEventHandler forceRemovePerspectiveCompleted;
        
        /// <remarks/>
        public event listAllUsersCompletedEventHandler listAllUsersCompleted;
        
        /// <remarks/>
        public event listOfAssociatedSnapshotsWithTilerCompletedEventHandler listOfAssociatedSnapshotsWithTilerCompleted;
        
        /// <remarks/>
        public event copyGroupsCompletedEventHandler copyGroupsCompleted;
        
        /// <remarks/>
        public event subscribeAllTilersCompletedEventHandler subscribeAllTilersCompleted;
        
        /// <remarks/>
        public event getSourceInfoCompletedEventHandler getSourceInfoCompleted;
        
        /// <remarks/>
        public event listOfAssociatedPerspectivesCompletedEventHandler listOfAssociatedPerspectivesCompleted;
        
        /// <remarks/>
        public event unsubscribeAllWindowsCompletedEventHandler unsubscribeAllWindowsCompleted;
        
        /// <remarks/>
        public event setDisplayInfoCompletedEventHandler setDisplayInfoCompleted;
        
        /// <remarks/>
        public event copyDisplaysCompletedEventHandler copyDisplaysCompleted;
        
        /// <remarks/>
        public event listOfAssociatedDisplaysWithTilerCompletedEventHandler listOfAssociatedDisplaysWithTilerCompleted;
        
        /// <remarks/>
        public event searchSystemVariableByTypeCompletedEventHandler searchSystemVariableByTypeCompleted;
        
        /// <remarks/>
        public event getApplicationWindowsDetailCompletedEventHandler getApplicationWindowsDetailCompleted;
        
        /// <remarks/>
        public event subscribeDispletCompletedEventHandler subscribeDispletCompleted;
        
        /// <remarks/>
        public event subscribePerspectivePoolCompletedEventHandler subscribePerspectivePoolCompleted;
        
        /// <remarks/>
        public event getNGPsInfoCompletedEventHandler getNGPsInfoCompleted;
        
        /// <remarks/>
        public event unbindAllSystemVariablesCompletedEventHandler unbindAllSystemVariablesCompleted;
        
        /// <remarks/>
        public event getLicenseInfoCompletedEventHandler getLicenseInfoCompleted;
        
        /// <remarks/>
        public event listAllPerspectivesCompletedEventHandler listAllPerspectivesCompleted;
        
        /// <remarks/>
        public event createDisplet2CompletedEventHandler createDisplet2Completed;
        
        /// <remarks/>
        public event setLicenseInfoCompletedEventHandler setLicenseInfoCompleted;
        
        /// <remarks/>
        public event backupToConfigCompletedEventHandler backupToConfigCompleted;
        
        /// <remarks/>
        public event setImageDecoratorsDetail2CompletedEventHandler setImageDecoratorsDetail2Completed;
        
        /// <remarks/>
        public event getScreenScrapeSourcesDetail2CompletedEventHandler getScreenScrapeSourcesDetail2Completed;
        
        /// <remarks/>
        public event removeApplicationsFromDisplayCompletedEventHandler removeApplicationsFromDisplayCompleted;
        
        /// <remarks/>
        public event setSourceOffsetCompletedEventHandler setSourceOffsetCompleted;
        
        /// <remarks/>
        public event getKeyboardShortcutsDefaultSettingsInfoCompletedEventHandler getKeyboardShortcutsDefaultSettingsInfoCompleted;
        
        /// <remarks/>
        public event partialRestoreCompletedEventHandler partialRestoreCompleted;
        
        /// <remarks/>
        public event listConfigurationsCompletedEventHandler listConfigurationsCompleted;
        
        /// <remarks/>
        public event createScreenScrapeSourceCompletedEventHandler createScreenScrapeSourceCompleted;
        
        /// <remarks/>
        public event sharePerspectiveOnDisplay2CompletedEventHandler sharePerspectiveOnDisplay2Completed;
        
        /// <remarks/>
        public event bindAllSystemVariablesCompletedEventHandler bindAllSystemVariablesCompleted;
        
        /// <remarks/>
        public event subscribeAllDisplaysCompletedEventHandler subscribeAllDisplaysCompleted;
        
        /// <remarks/>
        public event copySourcesCompletedEventHandler copySourcesCompleted;
        
        /// <remarks/>
        public event getSourceNameDecoratorDetailCompletedEventHandler getSourceNameDecoratorDetailCompleted;
        
        /// <remarks/>
        public event getTilersInfoCompletedEventHandler getTilersInfoCompleted;
        
        /// <remarks/>
        public event getSourceNameDecoratorsDetailCompletedEventHandler getSourceNameDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event subscribeSystemPropertyPoolCompletedEventHandler subscribeSystemPropertyPoolCompleted;
        
        /// <remarks/>
        public event listAllSourcesCompletedEventHandler listAllSourcesCompleted;
        
        /// <remarks/>
        public event getSidebarDefaultSettingInfoCompletedEventHandler getSidebarDefaultSettingInfoCompleted;
        
        /// <remarks/>
        public event unsubscribeApplicationsCompletedEventHandler unsubscribeApplicationsCompleted;
        
        /// <remarks/>
        public event createVideoSource2CompletedEventHandler createVideoSource2Completed;
        
        /// <remarks/>
        public event setLogoDecoratorsDetailCompletedEventHandler setLogoDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event getDateTimeDecoratorDetailCompletedEventHandler getDateTimeDecoratorDetailCompleted;
        
        /// <remarks/>
        public event subscribeAllSnapshotsCompletedEventHandler subscribeAllSnapshotsCompleted;
        
        /// <remarks/>
        public event unsubscribeSystemVariableCompletedEventHandler unsubscribeSystemVariableCompleted;
        
        /// <remarks/>
        public event createObjectCompletedEventHandler createObjectCompleted;
        
        /// <remarks/>
        public event unshareApplicationFromDisplayCompletedEventHandler unshareApplicationFromDisplayCompleted;
        
        /// <remarks/>
        public event getDisplaysSnapshotsCompletedEventHandler getDisplaysSnapshotsCompleted;
        
        /// <remarks/>
        public event listSystemVariablesCompletedEventHandler listSystemVariablesCompleted;
        
        /// <remarks/>
        public event subscribeDisplayPoolCompletedEventHandler subscribeDisplayPoolCompleted;
        
        /// <remarks/>
        public event findSystemVariableByPropertyNameCompletedEventHandler findSystemVariableByPropertyNameCompleted;
        
        /// <remarks/>
        public event setStatusImageDecoratorDetailCompletedEventHandler setStatusImageDecoratorDetailCompleted;
        
        /// <remarks/>
        public event subscribeSourcesCompletedEventHandler subscribeSourcesCompleted;
        
        /// <remarks/>
        public event getDisplaysInfoCompletedEventHandler getDisplaysInfoCompleted;
        
        /// <remarks/>
        public event getDisplayAllExternalWindowsCompletedEventHandler getDisplayAllExternalWindowsCompleted;
        
        /// <remarks/>
        public event sendWindowToBackCompletedEventHandler sendWindowToBackCompleted;
        
        /// <remarks/>
        public event setLabelDecoratorsDetailCompletedEventHandler setLabelDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event backupCompletedEventHandler backupCompleted;
        
        /// <remarks/>
        public event setImageInfoCompletedEventHandler setImageInfoCompleted;
        
        /// <remarks/>
        public event getWebSourceDetailCompletedEventHandler getWebSourceDetailCompleted;
        
        /// <remarks/>
        public event listMessagesCompletedEventHandler listMessagesCompleted;
        
        /// <remarks/>
        public event searchSourcesCompletedEventHandler searchSourcesCompleted;
        
        /// <remarks/>
        public event unsubscribeDecoratorsCompletedEventHandler unsubscribeDecoratorsCompleted;
        
        /// <remarks/>
        public event getSnapshotsInfoCompletedEventHandler getSnapshotsInfoCompleted;
        
        /// <remarks/>
        public event copyDisplayCompletedEventHandler copyDisplayCompleted;
        
        /// <remarks/>
        public event listOfAssociatedPerspectivesWithTilerCompletedEventHandler listOfAssociatedPerspectivesWithTilerCompleted;
        
        /// <remarks/>
        public event getDispletInfo2CompletedEventHandler getDispletInfo2Completed;
        
        /// <remarks/>
        public event unsubscribeAllSquidModeConfigurationsCompletedEventHandler unsubscribeAllSquidModeConfigurationsCompleted;
        
        /// <remarks/>
        public event createDispletCompletedEventHandler createDispletCompleted;
        
        /// <remarks/>
        public event unsubscribeDisplayPoolCompletedEventHandler unsubscribeDisplayPoolCompleted;
        
        /// <remarks/>
        public event getScreenScrapeSourceDetailCompletedEventHandler getScreenScrapeSourceDetailCompleted;
        
        /// <remarks/>
        public event setModulesInfoCompletedEventHandler setModulesInfoCompleted;
        
        /// <remarks/>
        public event setSourceNameDecoratorDetailCompletedEventHandler setSourceNameDecoratorDetailCompleted;
        
        /// <remarks/>
        public event unsubscribePerspectiveCompletedEventHandler unsubscribePerspectiveCompleted;
        
        /// <remarks/>
        public event subscribeSourceCompletedEventHandler subscribeSourceCompleted;
        
        /// <remarks/>
        public event getLogoDecoratorsDetailCompletedEventHandler getLogoDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event acquireLicensesCompletedEventHandler acquireLicensesCompleted;
        
        /// <remarks/>
        public event searchSystemVariablesCompletedEventHandler searchSystemVariablesCompleted;
        
        /// <remarks/>
        public event unsubscribeAllDispletsCompletedEventHandler unsubscribeAllDispletsCompleted;
        
        /// <remarks/>
        public event setLabelDecoratorDetailCompletedEventHandler setLabelDecoratorDetailCompleted;
        
        /// <remarks/>
        public event sendDispletBackwardCompletedEventHandler sendDispletBackwardCompleted;
        
        /// <remarks/>
        public event setDateTimeDecoratorsDetailCompletedEventHandler setDateTimeDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event updateDeviceURLCompletedEventHandler updateDeviceURLCompleted;
        
        /// <remarks/>
        public event getAudioDecoratorDetailCompletedEventHandler getAudioDecoratorDetailCompleted;
        
        /// <remarks/>
        public event forceRemoveGroupCompletedEventHandler forceRemoveGroupCompleted;
        
        /// <remarks/>
        public event subscribeSquidModeConfigurationsCompletedEventHandler subscribeSquidModeConfigurationsCompleted;
        
        /// <remarks/>
        public event setScreenScrapeSourcesDetailCompletedEventHandler setScreenScrapeSourcesDetailCompleted;
        
        /// <remarks/>
        public event setMiscellaneousDefaultSettingsInfoCompletedEventHandler setMiscellaneousDefaultSettingsInfoCompleted;
        
        /// <remarks/>
        public event subscribeWindowsCompletedEventHandler subscribeWindowsCompleted;
        
        /// <remarks/>
        public event createStatusLabelDecoratorTemplateCompletedEventHandler createStatusLabelDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event subscribeAllSystemVariablesCompletedEventHandler subscribeAllSystemVariablesCompleted;
        
        /// <remarks/>
        public event copyUserCompletedEventHandler copyUserCompleted;
        
        /// <remarks/>
        public event listGroupsCompletedEventHandler listGroupsCompleted;
        
        /// <remarks/>
        public event copyPerspectivesCompletedEventHandler copyPerspectivesCompleted;
        
        /// <remarks/>
        public event getVideoAndAudioDefaultSettingInfoCompletedEventHandler getVideoAndAudioDefaultSettingInfoCompleted;
        
        /// <remarks/>
        public event listSystemPropertiesCompletedEventHandler listSystemPropertiesCompleted;
        
        /// <remarks/>
        public event unsubscribeDecoratorCompletedEventHandler unsubscribeDecoratorCompleted;
        
        /// <remarks/>
        public event updateTilerForDisplayCompletedEventHandler updateTilerForDisplayCompleted;
        
        /// <remarks/>
        public event setDisplaysInfoCompletedEventHandler setDisplaysInfoCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event copyRolesCompletedEventHandler copyRolesCompleted;
        
        /// <remarks/>
        public event bringDispletForwardCompletedEventHandler bringDispletForwardCompleted;
        
        /// <remarks/>
        public event fetchTilingCompletedEventHandler fetchTilingCompleted;
        
        /// <remarks/>
        public event setActiveRolesCompletedEventHandler setActiveRolesCompleted;
        
        /// <remarks/>
        public event unsubscribeSidebarDefaultSettingCompletedEventHandler unsubscribeSidebarDefaultSettingCompleted;
        
        /// <remarks/>
        public event setVideoSourceDetailCompletedEventHandler setVideoSourceDetailCompleted;
        
        /// <remarks/>
        public event forceRemoveRolesCompletedEventHandler forceRemoveRolesCompleted;
        
        /// <remarks/>
        public event getClusterInfoCompletedEventHandler getClusterInfoCompleted;
        
        /// <remarks/>
        public event removeWindowsFromDisplayCompletedEventHandler removeWindowsFromDisplayCompleted;
        
        /// <remarks/>
        public event removeSourceCompletedEventHandler removeSourceCompleted;
        
        /// <remarks/>
        public event removeDisplaysCompletedEventHandler removeDisplaysCompleted;
        
        /// <remarks/>
        public event unsubscribeTilersCompletedEventHandler unsubscribeTilersCompleted;
        
        /// <remarks/>
        public event configureSessionTimoutCompletedEventHandler configureSessionTimoutCompleted;
        
        /// <remarks/>
        public event setSquidModeConfigurationInfoCompletedEventHandler setSquidModeConfigurationInfoCompleted;
        
        /// <remarks/>
        public event setDisplayInfo3CompletedEventHandler setDisplayInfo3Completed;
        
        /// <remarks/>
        public event setDisplayInfo2CompletedEventHandler setDisplayInfo2Completed;
        
        /// <remarks/>
        public event getSystemVariablesInfo2CompletedEventHandler getSystemVariablesInfo2Completed;
        
        /// <remarks/>
        public event removeGroupCompletedEventHandler removeGroupCompleted;
        
        /// <remarks/>
        public event sharePerspectiveWithDefaultGeometryCompletedEventHandler sharePerspectiveWithDefaultGeometryCompleted;
        
        /// <remarks/>
        public event listTilersCompletedEventHandler listTilersCompleted;
        
        /// <remarks/>
        public event searchTilersCompletedEventHandler searchTilersCompleted;
        
        /// <remarks/>
        public event bringDispletToFrontCompletedEventHandler bringDispletToFrontCompleted;
        
        /// <remarks/>
        public event removeDisplayCompletedEventHandler removeDisplayCompleted;
        
        /// <remarks/>
        public event saveAsDecoratorTemplateCompletedEventHandler saveAsDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event findConfigurationCompletedEventHandler findConfigurationCompleted;
        
        /// <remarks/>
        public event forceRemoveTilersCompletedEventHandler forceRemoveTilersCompleted;
        
        /// <remarks/>
        public event setApplicationInfoCompletedEventHandler setApplicationInfoCompleted;
        
        /// <remarks/>
        public event setDefaultAreaInfoCompletedEventHandler setDefaultAreaInfoCompleted;
        
        /// <remarks/>
        public event getWindowInfoCompletedEventHandler getWindowInfoCompleted;
        
        /// <remarks/>
        public event additionalDispletsForTilerCompletedEventHandler additionalDispletsForTilerCompleted;
        
        /// <remarks/>
        public event listVideoTemplateURLsCompletedEventHandler listVideoTemplateURLsCompleted;
        
        /// <remarks/>
        public event createApplicationWindow2CompletedEventHandler createApplicationWindow2Completed;
        
        /// <remarks/>
        public event createApplicationWindow3CompletedEventHandler createApplicationWindow3Completed;
        
        /// <remarks/>
        public event listAllDisplaysCompletedEventHandler listAllDisplaysCompleted;
        
        /// <remarks/>
        public event setUsersInfoCompletedEventHandler setUsersInfoCompleted;
        
        /// <remarks/>
        public event unsubscribeSystemCompletedEventHandler unsubscribeSystemCompleted;
        
        /// <remarks/>
        public event setWebSourceDetailCompletedEventHandler setWebSourceDetailCompleted;
        
        /// <remarks/>
        public event getLoggedInUserCompletedEventHandler getLoggedInUserCompleted;
        
        /// <remarks/>
        public event startSessionCompletedEventHandler startSessionCompleted;
        
        /// <remarks/>
        public event getPerspectiveInfo2CompletedEventHandler getPerspectiveInfo2Completed;
        
        /// <remarks/>
        public event setSystemVariablesInfoCompletedEventHandler setSystemVariablesInfoCompleted;
        
        /// <remarks/>
        public event getModulesCompletedEventHandler getModulesCompleted;
        
        /// <remarks/>
        public event unsubscribeAllSystemVariablesCompletedEventHandler unsubscribeAllSystemVariablesCompleted;
        
        /// <remarks/>
        public event setSnapshotInfoCompletedEventHandler setSnapshotInfoCompleted;
        
        /// <remarks/>
        public event setWindowInfoCompletedEventHandler setWindowInfoCompleted;
        
        /// <remarks/>
        public event listSessionsByUserNameCompletedEventHandler listSessionsByUserNameCompleted;
        
        /// <remarks/>
        public event createDisplayCompletedEventHandler createDisplayCompleted;
        
        /// <remarks/>
        public event listRolesInfoCompletedEventHandler listRolesInfoCompleted;
        
        /// <remarks/>
        public event createScreenScrapeSource2CompletedEventHandler createScreenScrapeSource2Completed;
        
        /// <remarks/>
        public event setPerspectiveInfoCompletedEventHandler setPerspectiveInfoCompleted;
        
        /// <remarks/>
        public event setStaticTextDecoratorsDetailCompletedEventHandler setStaticTextDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event listAllApplicationsCompletedEventHandler listAllApplicationsCompleted;
        
        /// <remarks/>
        public event findDisplayCompletedEventHandler findDisplayCompleted;
        
        /// <remarks/>
        public event getDisplaysUserNameCompletedEventHandler getDisplaysUserNameCompleted;
        
        /// <remarks/>
        public event getSnapshotsCompletedEventHandler getSnapshotsCompleted;
        
        /// <remarks/>
        public event loadSnapshotCompletedEventHandler loadSnapshotCompleted;
        
        /// <remarks/>
        public event forceRemoveSystemVariablesCompletedEventHandler forceRemoveSystemVariablesCompleted;
        
        /// <remarks/>
        public event findDisplayByUniqueIdCompletedEventHandler findDisplayByUniqueIdCompleted;
        
        /// <remarks/>
        public event unsubscribeConfigurationsCompletedEventHandler unsubscribeConfigurationsCompleted;
        
        /// <remarks/>
        public event createMessageCompletedEventHandler createMessageCompleted;
        
        /// <remarks/>
        public event startPublishingEventCompletedEventHandler startPublishingEventCompleted;
        
        /// <remarks/>
        public event unsubscribeWindowCompletedEventHandler unsubscribeWindowCompleted;
        
        /// <remarks/>
        public event listDecoratorTemplatesCompletedEventHandler listDecoratorTemplatesCompleted;
        
        /// <remarks/>
        public event getDispletsInfoCompletedEventHandler getDispletsInfoCompleted;
        
        /// <remarks/>
        public event unsubscribeAllSnapshotsCompletedEventHandler unsubscribeAllSnapshotsCompleted;
        
        /// <remarks/>
        public event createPerspectiveWindow2CompletedEventHandler createPerspectiveWindow2Completed;
        
        /// <remarks/>
        public event removePerspectiveByNameCompletedEventHandler removePerspectiveByNameCompleted;
        
        /// <remarks/>
        public event unsubscribeMiscellaneousDefaultSettingCompletedEventHandler unsubscribeMiscellaneousDefaultSettingCompleted;
        
        /// <remarks/>
        public event getSystemEnvVariableCompletedEventHandler getSystemEnvVariableCompleted;
        
        /// <remarks/>
        public event setSourceInfo2CompletedEventHandler setSourceInfo2Completed;
        
        /// <remarks/>
        public event sendDispletsToBackCompletedEventHandler sendDispletsToBackCompleted;
        
        /// <remarks/>
        public event listKeyboardShortcutSettingsCompletedEventHandler listKeyboardShortcutSettingsCompleted;
        
        /// <remarks/>
        public event createApplicationWindowCompletedEventHandler createApplicationWindowCompleted;
        
        /// <remarks/>
        public event copyReadOnlyPerspectiveCompletedEventHandler copyReadOnlyPerspectiveCompleted;
        
        /// <remarks/>
        public event getMessageInfoCompletedEventHandler getMessageInfoCompleted;
        
        /// <remarks/>
        public event saveAsUserTilingForPerspectiveCompletedEventHandler saveAsUserTilingForPerspectiveCompleted;
        
        /// <remarks/>
        public event getPerspectiveInfoCompletedEventHandler getPerspectiveInfoCompleted;
        
        /// <remarks/>
        public event getDisplaysInfo3CompletedEventHandler getDisplaysInfo3Completed;
        
        /// <remarks/>
        public event getDisplaysInfo2CompletedEventHandler getDisplaysInfo2Completed;
        
        /// <remarks/>
        public event saveAsUserTilingForDisplayCompletedEventHandler saveAsUserTilingForDisplayCompleted;
        
        /// <remarks/>
        public event forceRemoveUsersCompletedEventHandler forceRemoveUsersCompleted;
        
        /// <remarks/>
        public event listPerspectivesCompletedEventHandler listPerspectivesCompleted;
        
        /// <remarks/>
        public event setImageDecoratorDetail2CompletedEventHandler setImageDecoratorDetail2Completed;
        
        /// <remarks/>
        public event listGroupsInfoCompletedEventHandler listGroupsInfoCompleted;
        
        /// <remarks/>
        public event subscribeDispletsCompletedEventHandler subscribeDispletsCompleted;
        
        /// <remarks/>
        public event getScreenScrapeSourceDetail2CompletedEventHandler getScreenScrapeSourceDetail2Completed;
        
        /// <remarks/>
        public event unsubscribeSystemPropertyPoolCompletedEventHandler unsubscribeSystemPropertyPoolCompleted;
        
        /// <remarks/>
        public event getApplicationInfoCompletedEventHandler getApplicationInfoCompleted;
        
        /// <remarks/>
        public event subscribeDecoratorTemplatePoolCompletedEventHandler subscribeDecoratorTemplatePoolCompleted;
        
        /// <remarks/>
        public event isValidControlPanelPasswordCompletedEventHandler isValidControlPanelPasswordCompleted;
        
        /// <remarks/>
        public event setDecoratorInfoCompletedEventHandler setDecoratorInfoCompleted;
        
        /// <remarks/>
        public event unsubscribePerspectivesCompletedEventHandler unsubscribePerspectivesCompleted;
        
        /// <remarks/>
        public event getMiscellaneousDefaultSettingsInfoCompletedEventHandler getMiscellaneousDefaultSettingsInfoCompleted;
        
        /// <remarks/>
        public event findSystemPropertyBindingsCompletedEventHandler findSystemPropertyBindingsCompleted;
        
        /// <remarks/>
        public event getSystemVariableInfoCompletedEventHandler getSystemVariableInfoCompleted;
        
        /// <remarks/>
        public event sendDecoratorBackwardCompletedEventHandler sendDecoratorBackwardCompleted;
        
        /// <remarks/>
        public event additionalWindowsForTilerCompletedEventHandler additionalWindowsForTilerCompleted;
        
        /// <remarks/>
        public event unsubscribeDispletsCompletedEventHandler unsubscribeDispletsCompleted;
        
        /// <remarks/>
        public event copySystemVariableCompletedEventHandler copySystemVariableCompleted;
        
        /// <remarks/>
        public event findDecoratorTemplateCompletedEventHandler findDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event getSystemPropertiesInfoCompletedEventHandler getSystemPropertiesInfoCompleted;
        
        /// <remarks/>
        public event getSquidModeConfigurationsInfoCompletedEventHandler getSquidModeConfigurationsInfoCompleted;
        
        /// <remarks/>
        public event getImageDecoratorDetailCompletedEventHandler getImageDecoratorDetailCompleted;
        
        /// <remarks/>
        public event isSystemVariableBindedCompletedEventHandler isSystemVariableBindedCompleted;
        
        /// <remarks/>
        public event setDisplaysInfo2CompletedEventHandler setDisplaysInfo2Completed;
        
        /// <remarks/>
        public event isCMSServerReadyCompletedEventHandler isCMSServerReadyCompleted;
        
        /// <remarks/>
        public event setRolesInfoCompletedEventHandler setRolesInfoCompleted;
        
        /// <remarks/>
        public event setDisplaysInfo3CompletedEventHandler setDisplaysInfo3Completed;
        
        /// <remarks/>
        public event removePerspectiveCompletedEventHandler removePerspectiveCompleted;
        
        /// <remarks/>
        public event createRoleCompletedEventHandler createRoleCompleted;
        
        /// <remarks/>
        public event setSourceNameDecoratorsDetailCompletedEventHandler setSourceNameDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event searchUsersCompletedEventHandler searchUsersCompleted;
        
        /// <remarks/>
        public event saveAsUserTilingInPerspectiveCompletedEventHandler saveAsUserTilingInPerspectiveCompleted;
        
        /// <remarks/>
        public event getStatusImageDecoratorDetailCompletedEventHandler getStatusImageDecoratorDetailCompleted;
        
        /// <remarks/>
        public event copySystemVariablesCompletedEventHandler copySystemVariablesCompleted;
        
        /// <remarks/>
        public event setTilerInfoCompletedEventHandler setTilerInfoCompleted;
        
        /// <remarks/>
        public event setStatusLabelDecoratorsDetailCompletedEventHandler setStatusLabelDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event unsubscribeConfigurationCompletedEventHandler unsubscribeConfigurationCompleted;
        
        /// <remarks/>
        public event getGroupInfoCompletedEventHandler getGroupInfoCompleted;
        
        /// <remarks/>
        public event unsubscribeTilerPoolCompletedEventHandler unsubscribeTilerPoolCompleted;
        
        /// <remarks/>
        public event findKeyboardShortcutSettingsCompletedEventHandler findKeyboardShortcutSettingsCompleted;
        
        /// <remarks/>
        public event sharePerspectiveOnDisplayCompletedEventHandler sharePerspectiveOnDisplayCompleted;
        
        /// <remarks/>
        public event getDefaultAreaInfoCompletedEventHandler getDefaultAreaInfoCompleted;
        
        /// <remarks/>
        public event subscribeSystemVariablesCompletedEventHandler subscribeSystemVariablesCompleted;
        
        /// <remarks/>
        public event setApplicationWindowsDetailCompletedEventHandler setApplicationWindowsDetailCompleted;
        
        /// <remarks/>
        public event createPerspectiveCompletedEventHandler createPerspectiveCompleted;
        
        /// <remarks/>
        public event setImagesInfoCompletedEventHandler setImagesInfoCompleted;
        
        /// <remarks/>
        public event getRolesInfoCompletedEventHandler getRolesInfoCompleted;
        
        /// <remarks/>
        public event createSystemVariableCompletedEventHandler createSystemVariableCompleted;
        
        /// <remarks/>
        public event removeSystemPropertyCompletedEventHandler removeSystemPropertyCompleted;
        
        /// <remarks/>
        public event subscribeVideoAudioDefaultSettingCompletedEventHandler subscribeVideoAudioDefaultSettingCompleted;
        
        /// <remarks/>
        public event getTilerInfoCompletedEventHandler getTilerInfoCompleted;
        
        /// <remarks/>
        public event listOfAssociatedVideoSourcesCompletedEventHandler listOfAssociatedVideoSourcesCompleted;
        
        /// <remarks/>
        public event setLogoDecoratorDetailCompletedEventHandler setLogoDecoratorDetailCompleted;
        
        /// <remarks/>
        public event subscribeConfigurationsCompletedEventHandler subscribeConfigurationsCompleted;
        
        /// <remarks/>
        public event getApplicationWindowDetailCompletedEventHandler getApplicationWindowDetailCompleted;
        
        /// <remarks/>
        public event removeKeyboardShortcutSettingsCompletedEventHandler removeKeyboardShortcutSettingsCompleted;
        
        /// <remarks/>
        public event releaseLicensesCompletedEventHandler releaseLicensesCompleted;
        
        /// <remarks/>
        public event getUsedNoOfLicensesCompletedEventHandler getUsedNoOfLicensesCompleted;
        
        /// <remarks/>
        public event stopPublishingEventCompletedEventHandler stopPublishingEventCompleted;
        
        /// <remarks/>
        public event identifyNGPsCompletedEventHandler identifyNGPsCompleted;
        
        /// <remarks/>
        public event listOfAssociatedDisplaysWithSquidModeConfigsCompletedEventHandler listOfAssociatedDisplaysWithSquidModeConfigsCompleted;
        
        /// <remarks/>
        public event findRoleCompletedEventHandler findRoleCompleted;
        
        /// <remarks/>
        public event unsubscribeApplicationCompletedEventHandler unsubscribeApplicationCompleted;
        
        /// <remarks/>
        public event subscribeAllSourcesCompletedEventHandler subscribeAllSourcesCompleted;
        
        /// <remarks/>
        public event setConfigurationInfoCompletedEventHandler setConfigurationInfoCompleted;
        
        /// <remarks/>
        public event getStatusBorderDecoratorDetailCompletedEventHandler getStatusBorderDecoratorDetailCompleted;
        
        /// <remarks/>
        public event setStaticTextDecoratorDetailCompletedEventHandler setStaticTextDecoratorDetailCompleted;
        
        /// <remarks/>
        public event subscribeConfigurationPoolCompletedEventHandler subscribeConfigurationPoolCompleted;
        
        /// <remarks/>
        public event createSystemPropertyCompletedEventHandler createSystemPropertyCompleted;
        
        /// <remarks/>
        public event setDispletsInfo2CompletedEventHandler setDispletsInfo2Completed;
        
        /// <remarks/>
        public event subscribeAllConfigurationsCompletedEventHandler subscribeAllConfigurationsCompleted;
        
        /// <remarks/>
        public event updateVideoTemplateURLsCompletedEventHandler updateVideoTemplateURLsCompleted;
        
        /// <remarks/>
        public event getStatusLabelDecoratorDetailCompletedEventHandler getStatusLabelDecoratorDetailCompleted;
        
        /// <remarks/>
        public event subscribeDecoratorsCompletedEventHandler subscribeDecoratorsCompleted;
        
        /// <remarks/>
        public event listGridsCompletedEventHandler listGridsCompleted;
        
        /// <remarks/>
        public event unbindAllSystemPropertiesCompletedEventHandler unbindAllSystemPropertiesCompleted;
        
        /// <remarks/>
        public event getExternalWindowDetailCompletedEventHandler getExternalWindowDetailCompleted;
        
        /// <remarks/>
        public event getStatusImageDecoratorsDetailCompletedEventHandler getStatusImageDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event removeDecoratorsCompletedEventHandler removeDecoratorsCompleted;
        
        /// <remarks/>
        public event subscribeConfigurationCompletedEventHandler subscribeConfigurationCompleted;
        
        /// <remarks/>
        public event getVersionCompletedEventHandler getVersionCompleted;
        
        /// <remarks/>
        public event getDecoratorsCompletedEventHandler getDecoratorsCompleted;
        
        /// <remarks/>
        public event removeRoleCompletedEventHandler removeRoleCompleted;
        
        /// <remarks/>
        public event getLabelDecoratorDetailCompletedEventHandler getLabelDecoratorDetailCompleted;
        
        /// <remarks/>
        public event unsubscribeAllSystemPropertiesCompletedEventHandler unsubscribeAllSystemPropertiesCompleted;
        
        /// <remarks/>
        public event getExternalWindowsDetailCompletedEventHandler getExternalWindowsDetailCompleted;
        
        /// <remarks/>
        public event getVideoSourceDetailCompletedEventHandler getVideoSourceDetailCompleted;
        
        /// <remarks/>
        public event createPerspective2CompletedEventHandler createPerspective2Completed;
        
        /// <remarks/>
        public event getSnapshotInfoCompletedEventHandler getSnapshotInfoCompleted;
        
        /// <remarks/>
        public event setRoleInfoCompletedEventHandler setRoleInfoCompleted;
        
        /// <remarks/>
        public event sharePerspectiveWithStretchOnDisplay2CompletedEventHandler sharePerspectiveWithStretchOnDisplay2Completed;
        
        /// <remarks/>
        public event unsubscribeSystemVariablePoolCompletedEventHandler unsubscribeSystemVariablePoolCompleted;
        
        /// <remarks/>
        public event setSquidModeConfigurationsInfoCompletedEventHandler setSquidModeConfigurationsInfoCompleted;
        
        /// <remarks/>
        public event unsubscribeMessagePoolCompletedEventHandler unsubscribeMessagePoolCompleted;
        
        /// <remarks/>
        public event updateWindowsZOrderCompletedEventHandler updateWindowsZOrderCompleted;
        
        /// <remarks/>
        public event listUsersCompletedEventHandler listUsersCompleted;
        
        /// <remarks/>
        public event shareApplicationWithDefaultGeometryCompletedEventHandler shareApplicationWithDefaultGeometryCompleted;
        
        /// <remarks/>
        public event getImagesInfoCompletedEventHandler getImagesInfoCompleted;
        
        /// <remarks/>
        public event getLabelDecoratorsDetailCompletedEventHandler getLabelDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event unsubscribeVideoAudioDefaultSettingCompletedEventHandler unsubscribeVideoAudioDefaultSettingCompleted;
        
        /// <remarks/>
        public event selectSystemVariableInStaticTextDecoratorCompletedEventHandler selectSystemVariableInStaticTextDecoratorCompleted;
        
        /// <remarks/>
        public event openPerspectiveWithDefaultGeometryCompletedEventHandler openPerspectiveWithDefaultGeometryCompleted;
        
        /// <remarks/>
        public event getImageDecoratorsDetailCompletedEventHandler getImageDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event getSourcesInfoCompletedEventHandler getSourcesInfoCompleted;
        
        /// <remarks/>
        public event sendDecoratorToBackCompletedEventHandler sendDecoratorToBackCompleted;
        
        /// <remarks/>
        public event isSystemPropertyBindedCompletedEventHandler isSystemPropertyBindedCompleted;
        
        /// <remarks/>
        public event listAllTilersCompletedEventHandler listAllTilersCompleted;
        
        /// <remarks/>
        public event forceRemoveSourceCompletedEventHandler forceRemoveSourceCompleted;
        
        /// <remarks/>
        public event getAudioDecoratorsDetailCompletedEventHandler getAudioDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event subscribeAllSystemPropertiesCompletedEventHandler subscribeAllSystemPropertiesCompleted;
        
        /// <remarks/>
        public event subscribeMiscellaneousDefaultSettingCompletedEventHandler subscribeMiscellaneousDefaultSettingCompleted;
        
        /// <remarks/>
        public event getVersionInfoCompletedEventHandler getVersionInfoCompleted;
        
        /// <remarks/>
        public event getDateTimeDecoratorsDetailCompletedEventHandler getDateTimeDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event fetchTiling2CompletedEventHandler fetchTiling2Completed;
        
        /// <remarks/>
        public event createWebSourceCompletedEventHandler createWebSourceCompleted;
        
        /// <remarks/>
        public event getImageDecoratorsDetail2CompletedEventHandler getImageDecoratorsDetail2Completed;
        
        /// <remarks/>
        public event subscribeAllDispletsCompletedEventHandler subscribeAllDispletsCompleted;
        
        /// <remarks/>
        public event findUserCompletedEventHandler findUserCompleted;
        
        /// <remarks/>
        public event setWindowInfo3FromDACompletedEventHandler setWindowInfo3FromDACompleted;
        
        /// <remarks/>
        public event getPerspectivesInfo2CompletedEventHandler getPerspectivesInfo2Completed;
        
        /// <remarks/>
        public event reloadLicenseCompletedEventHandler reloadLicenseCompleted;
        
        /// <remarks/>
        public event removeConfigurationCompletedEventHandler removeConfigurationCompleted;
        
        /// <remarks/>
        public event createKeyboardShortcutDefaultSettingsCompletedEventHandler createKeyboardShortcutDefaultSettingsCompleted;
        
        /// <remarks/>
        public event startRestoreCompletedEventHandler startRestoreCompleted;
        
        /// <remarks/>
        public event unshareAllApplicationsFromDisplayCompletedEventHandler unshareAllApplicationsFromDisplayCompleted;
        
        /// <remarks/>
        public event setDateTimeDecoratorDetailCompletedEventHandler setDateTimeDecoratorDetailCompleted;
        
        /// <remarks/>
        public event copySourceCompletedEventHandler copySourceCompleted;
        
        /// <remarks/>
        public event forceRemoveApplicationCompletedEventHandler forceRemoveApplicationCompleted;
        
        /// <remarks/>
        public event deleteExternalWindowCompletedEventHandler deleteExternalWindowCompleted;
        
        /// <remarks/>
        public event getAllDisplaysPerspectivesCompletedEventHandler getAllDisplaysPerspectivesCompleted;
        
        /// <remarks/>
        public event getSourcesInfo2CompletedEventHandler getSourcesInfo2Completed;
        
        /// <remarks/>
        public event listDetailedPerspectiveCompletedEventHandler listDetailedPerspectiveCompleted;
        
        /// <remarks/>
        public event createSystemVariable2CompletedEventHandler createSystemVariable2Completed;
        
        /// <remarks/>
        public event subscribeApplicationCompletedEventHandler subscribeApplicationCompleted;
        
        /// <remarks/>
        public event removeSourceRoutingConfigCompletedEventHandler removeSourceRoutingConfigCompleted;
        
        /// <remarks/>
        public event getDisplayTotalWindowsCompletedEventHandler getDisplayTotalWindowsCompleted;
        
        /// <remarks/>
        public event getWebSourcesDetailCompletedEventHandler getWebSourcesDetailCompleted;
        
        /// <remarks/>
        public event findSourceCompletedEventHandler findSourceCompleted;
        
        /// <remarks/>
        public event createLogoDecoratorTemplate2CompletedEventHandler createLogoDecoratorTemplate2Completed;
        
        /// <remarks/>
        public event removeMessageCompletedEventHandler removeMessageCompleted;
        
        /// <remarks/>
        public event setPerspectivesInfo2CompletedEventHandler setPerspectivesInfo2Completed;
        
        /// <remarks/>
        public event setBorderDecoratorsDetailCompletedEventHandler setBorderDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event getPerspectivesDispletsCompletedEventHandler getPerspectivesDispletsCompleted;
        
        /// <remarks/>
        public event getAllDisplaysApplicationCompletedEventHandler getAllDisplaysApplicationCompleted;
        
        /// <remarks/>
        public event unsubscribeSourcePoolCompletedEventHandler unsubscribeSourcePoolCompleted;
        
        /// <remarks/>
        public event searchRolesCompletedEventHandler searchRolesCompleted;
        
        /// <remarks/>
        public event createPerspectiveWindowCompletedEventHandler createPerspectiveWindowCompleted;
        
        /// <remarks/>
        public event setPerspectiveInfo2CompletedEventHandler setPerspectiveInfo2Completed;
        
        /// <remarks/>
        public event setProVNCDefaultSettingInfoCompletedEventHandler setProVNCDefaultSettingInfoCompleted;
        
        /// <remarks/>
        public event setApplicationWindowDetailCompletedEventHandler setApplicationWindowDetailCompleted;
        
        /// <remarks/>
        public event unsubscribeAllDecoratorsCompletedEventHandler unsubscribeAllDecoratorsCompleted;
        
        /// <remarks/>
        public event createVideoSourceCompletedEventHandler createVideoSourceCompleted;
        
        /// <remarks/>
        public event setGroupInfoCompletedEventHandler setGroupInfoCompleted;
        
        /// <remarks/>
        public event getDispletInfoCompletedEventHandler getDispletInfoCompleted;
        
        /// <remarks/>
        public event unsubscribeDecoratorTemplatePoolCompletedEventHandler unsubscribeDecoratorTemplatePoolCompleted;
        
        /// <remarks/>
        public event subscribeAllDecoratorsCompletedEventHandler subscribeAllDecoratorsCompleted;
        
        /// <remarks/>
        public event getImageInfoCompletedEventHandler getImageInfoCompleted;
        
        /// <remarks/>
        public event subscribeSystemVariableCompletedEventHandler subscribeSystemVariableCompleted;
        
        /// <remarks/>
        public event unsubscribeDispletCompletedEventHandler unsubscribeDispletCompleted;
        
        /// <remarks/>
        public event searchConfigurationsCompletedEventHandler searchConfigurationsCompleted;
        
        /// <remarks/>
        public event setScreenScrapeSourcesDetail2CompletedEventHandler setScreenScrapeSourcesDetail2Completed;
        
        /// <remarks/>
        public event searchNGPsCompletedEventHandler searchNGPsCompleted;
        
        /// <remarks/>
        public event endSessionCompletedEventHandler endSessionCompleted;
        
        /// <remarks/>
        public event unsubscribeWindowsCompletedEventHandler unsubscribeWindowsCompleted;
        
        /// <remarks/>
        public event listRolesCompletedEventHandler listRolesCompleted;
        
        /// <remarks/>
        public event subscribeDecoratorCompletedEventHandler subscribeDecoratorCompleted;
        
        /// <remarks/>
        public event setStatusBorderDecoratorDetailCompletedEventHandler setStatusBorderDecoratorDetailCompleted;
        
        /// <remarks/>
        public event applySourceTemplateCompletedEventHandler applySourceTemplateCompleted;
        
        /// <remarks/>
        public event setSourcesInfoCompletedEventHandler setSourcesInfoCompleted;
        
        /// <remarks/>
        public event removeSystemVariableCompletedEventHandler removeSystemVariableCompleted;
        
        /// <remarks/>
        public event getConfigurationsInfoCompletedEventHandler getConfigurationsInfoCompleted;
        
        /// <remarks/>
        public event subscribeAllPerspectivesCompletedEventHandler subscribeAllPerspectivesCompleted;
        
        /// <remarks/>
        public event getSourceRoutingConfigInfoCompletedEventHandler getSourceRoutingConfigInfoCompleted;
        
        /// <remarks/>
        public event getPerspectivesInfoCompletedEventHandler getPerspectivesInfoCompleted;
        
        /// <remarks/>
        public event setTilersInfo2CompletedEventHandler setTilersInfo2Completed;
        
        /// <remarks/>
        public event saveTilingAsGridCompletedEventHandler saveTilingAsGridCompleted;
        
        /// <remarks/>
        public event findSystemPropertyByNameCompletedEventHandler findSystemPropertyByNameCompleted;
        
        /// <remarks/>
        public event openPerspectiveOnDisplayCompletedEventHandler openPerspectiveOnDisplayCompleted;
        
        /// <remarks/>
        public event setWindowsInfo3CompletedEventHandler setWindowsInfo3Completed;
        
        /// <remarks/>
        public event getLogoDecoratorDetailCompletedEventHandler getLogoDecoratorDetailCompleted;
        
        /// <remarks/>
        public event setWindowsInfo2CompletedEventHandler setWindowsInfo2Completed;
        
        /// <remarks/>
        public event listLocalesSupportedByNGPCompletedEventHandler listLocalesSupportedByNGPCompleted;
        
        /// <remarks/>
        public event unbindSystemPropertyCompletedEventHandler unbindSystemPropertyCompleted;
        
        /// <remarks/>
        public event findSystemPropertyCompletedEventHandler findSystemPropertyCompleted;
        
        /// <remarks/>
        public event bringDecoratorToFrontCompletedEventHandler bringDecoratorToFrontCompleted;
        
        /// <remarks/>
        public event removeDispletsCompletedEventHandler removeDispletsCompleted;
        
        /// <remarks/>
        public event bindSessionCompletedEventHandler bindSessionCompleted;
        
        /// <remarks/>
        public event findSystemVariableCompletedEventHandler findSystemVariableCompleted;
        
        /// <remarks/>
        public event unsubscribeSystemPropertyCompletedEventHandler unsubscribeSystemPropertyCompleted;
        
        /// <remarks/>
        public event getDispletsCompletedEventHandler getDispletsCompleted;
        
        /// <remarks/>
        public event copyDecoratorsCompletedEventHandler copyDecoratorsCompleted;
        
        /// <remarks/>
        public event listAllWindowsCompletedEventHandler listAllWindowsCompleted;
        
        /// <remarks/>
        public event searchGroupsCompletedEventHandler searchGroupsCompleted;
        
        /// <remarks/>
        public event subscribeAllSquidModeConfigurationsCompletedEventHandler subscribeAllSquidModeConfigurationsCompleted;
        
        /// <remarks/>
        public event getDecoratorInfoCompletedEventHandler getDecoratorInfoCompleted;
        
        /// <remarks/>
        public event listWindowsCompletedEventHandler listWindowsCompleted;
        
        /// <remarks/>
        public event getApplicationsInfoCompletedEventHandler getApplicationsInfoCompleted;
        
        /// <remarks/>
        public event unsubscribePerspectivePoolCompletedEventHandler unsubscribePerspectivePoolCompleted;
        
        /// <remarks/>
        public event setConfigurationsInfoCompletedEventHandler setConfigurationsInfoCompleted;
        
        /// <remarks/>
        public event createBorderDecoratorTemplateCompletedEventHandler createBorderDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event addSourceRoutingConfigCompletedEventHandler addSourceRoutingConfigCompleted;
        
        /// <remarks/>
        public event removeUserCompletedEventHandler removeUserCompleted;
        
        /// <remarks/>
        public event setVideoSourcesDetailCompletedEventHandler setVideoSourcesDetailCompleted;
        
        /// <remarks/>
        public event getSourceInfo2CompletedEventHandler getSourceInfo2Completed;
        
        /// <remarks/>
        public event setSystemPropertyInfoCompletedEventHandler setSystemPropertyInfoCompleted;
        
        /// <remarks/>
        public event unsubscribeAllCompletedEventHandler unsubscribeAllCompleted;
        
        /// <remarks/>
        public event changeUserPasswordCompletedEventHandler changeUserPasswordCompleted;
        
        /// <remarks/>
        public event getGroupsInfoCompletedEventHandler getGroupsInfoCompleted;
        
        /// <remarks/>
        public event exportFileCompletedEventHandler exportFileCompleted;
        
        /// <remarks/>
        public event setExternalWindowDetailCompletedEventHandler setExternalWindowDetailCompleted;
        
        /// <remarks/>
        public event getSharedApplicationsCompletedEventHandler getSharedApplicationsCompleted;
        
        /// <remarks/>
        public event unsubscribeSourceCompletedEventHandler unsubscribeSourceCompleted;
        
        /// <remarks/>
        public event listAllSourceRoutingConfigsCompletedEventHandler listAllSourceRoutingConfigsCompleted;
        
        /// <remarks/>
        public event updateVideoTemplateURLCompletedEventHandler updateVideoTemplateURLCompleted;
        
        /// <remarks/>
        public event sendWindowBackwardCompletedEventHandler sendWindowBackwardCompleted;
        
        /// <remarks/>
        public event createStatusBorderDecoratorTemplateCompletedEventHandler createStatusBorderDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event getSharedPerspectivesCompletedEventHandler getSharedPerspectivesCompleted;
        
        /// <remarks/>
        public event listSourcesCompletedEventHandler listSourcesCompleted;
        
        /// <remarks/>
        public event subscribeSourcePoolCompletedEventHandler subscribeSourcePoolCompleted;
        
        /// <remarks/>
        public event subscribeTilersCompletedEventHandler subscribeTilersCompleted;
        
        /// <remarks/>
        public event bindSystemPropertyCompletedEventHandler bindSystemPropertyCompleted;
        
        /// <remarks/>
        public event getSystemVariableInfo2CompletedEventHandler getSystemVariableInfo2Completed;
        
        /// <remarks/>
        public event setUserInfoCompletedEventHandler setUserInfoCompleted;
        
        /// <remarks/>
        public event createDisplay2CompletedEventHandler createDisplay2Completed;
        
        /// <remarks/>
        public event setDispletInfoCompletedEventHandler setDispletInfoCompleted;
        
        /// <remarks/>
        public event getConfigurationInfoCompletedEventHandler getConfigurationInfoCompleted;
        
        /// <remarks/>
        public event listAllDispletsCompletedEventHandler listAllDispletsCompleted;
        
        /// <remarks/>
        public event listDisplaysCompletedEventHandler listDisplaysCompleted;
        
        /// <remarks/>
        public event setSystemVariableInfoCompletedEventHandler setSystemVariableInfoCompleted;
        
        /// <remarks/>
        public event setScreenScrapeSourceDetail2CompletedEventHandler setScreenScrapeSourceDetail2Completed;
        
        /// <remarks/>
        public event getWindowInfo2CompletedEventHandler getWindowInfo2Completed;
        
        /// <remarks/>
        public event getWindowInfo3CompletedEventHandler getWindowInfo3Completed;
        
        /// <remarks/>
        public event createWebSource2CompletedEventHandler createWebSource2Completed;
        
        /// <remarks/>
        public event setImageDecoratorDetailCompletedEventHandler setImageDecoratorDetailCompleted;
        
        /// <remarks/>
        public event saveSnapshotCompletedEventHandler saveSnapshotCompleted;
        
        /// <remarks/>
        public event setVideoAndAudioDefaultSettingInfoCompletedEventHandler setVideoAndAudioDefaultSettingInfoCompleted;
        
        /// <remarks/>
        public event setSourceInfoCompletedEventHandler setSourceInfoCompleted;
        
        /// <remarks/>
        public event forceRemoveRoleCompletedEventHandler forceRemoveRoleCompleted;
        
        /// <remarks/>
        public event openPerspectiveOnDisplay2CompletedEventHandler openPerspectiveOnDisplay2Completed;
        
        /// <remarks/>
        public event getApplicationsCompletedEventHandler getApplicationsCompleted;
        
        /// <remarks/>
        public event getStaticTextDecoratorsDetailCompletedEventHandler getStaticTextDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event listAllRolesCompletedEventHandler listAllRolesCompleted;
        
        /// <remarks/>
        public event getDisplayInfoCompletedEventHandler getDisplayInfoCompleted;
        
        /// <remarks/>
        public event saveAsUserTilingInPerspective2CompletedEventHandler saveAsUserTilingInPerspective2Completed;
        
        /// <remarks/>
        public event listDisplaysByUserNameCompletedEventHandler listDisplaysByUserNameCompleted;
        
        /// <remarks/>
        public event loginSystemUserCompletedEventHandler loginSystemUserCompleted;
        
        /// <remarks/>
        public event setSystemPropertiesInfoCompletedEventHandler setSystemPropertiesInfoCompleted;
        
        /// <remarks/>
        public event createAudioDecoratorTemplateCompletedEventHandler createAudioDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event bringWindowToFrontCompletedEventHandler bringWindowToFrontCompleted;
        
        /// <remarks/>
        public event forceRemoveTilerCompletedEventHandler forceRemoveTilerCompleted;
        
        /// <remarks/>
        public event getModuleInfoCompletedEventHandler getModuleInfoCompleted;
        
        /// <remarks/>
        public event saveAsDispletTemplateCompletedEventHandler saveAsDispletTemplateCompleted;
        
        /// <remarks/>
        public event setWindowsInfoCompletedEventHandler setWindowsInfoCompleted;
        
        /// <remarks/>
        public event listOfSquidModeConfigsCompletedEventHandler listOfSquidModeConfigsCompleted;
        
        /// <remarks/>
        public event subscribeMessagePoolCompletedEventHandler subscribeMessagePoolCompleted;
        
        /// <remarks/>
        public event setPerspectiveWindowsDetailCompletedEventHandler setPerspectiveWindowsDetailCompleted;
        
        /// <remarks/>
        public event createApplicationCompletedEventHandler createApplicationCompleted;
        
        /// <remarks/>
        public event saveAsTilingInDisplayCompletedEventHandler saveAsTilingInDisplayCompleted;
        
        /// <remarks/>
        public event setSourcesInfo2CompletedEventHandler setSourcesInfo2Completed;
        
        /// <remarks/>
        public event createUserCompletedEventHandler createUserCompleted;
        
        /// <remarks/>
        public event unsubscribeDisplayCompletedEventHandler unsubscribeDisplayCompleted;
        
        /// <remarks/>
        public event setGroupsInfoCompletedEventHandler setGroupsInfoCompleted;
        
        /// <remarks/>
        public event subscribeDisplaysCompletedEventHandler subscribeDisplaysCompleted;
        
        /// <remarks/>
        public event shareApplicationOnDisplayCompletedEventHandler shareApplicationOnDisplayCompleted;
        
        /// <remarks/>
        public event getUserInfoCompletedEventHandler getUserInfoCompleted;
        
        /// <remarks/>
        public event unsharePerspectiveFromDisplayCompletedEventHandler unsharePerspectiveFromDisplayCompleted;
        
        /// <remarks/>
        public event getImageDecoratorDetail2CompletedEventHandler getImageDecoratorDetail2Completed;
        
        /// <remarks/>
        public event cleanupConfigurationCompletedEventHandler cleanupConfigurationCompleted;
        
        /// <remarks/>
        public event getMGSInfoCompletedEventHandler getMGSInfoCompleted;
        
        /// <remarks/>
        public event getDisplayWindowsCompletedEventHandler getDisplayWindowsCompleted;
        
        /// <remarks/>
        public event setImageDecoratorsDetailCompletedEventHandler setImageDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event subscribeSidebarDefaultSettingCompletedEventHandler subscribeSidebarDefaultSettingCompleted;
        
        /// <remarks/>
        public event partialImportCompletedEventHandler partialImportCompleted;
        
        /// <remarks/>
        public event unsubscribeAllDisplaysCompletedEventHandler unsubscribeAllDisplaysCompleted;
        
        /// <remarks/>
        public event forceRemoveSystemVariableCompletedEventHandler forceRemoveSystemVariableCompleted;
        
        /// <remarks/>
        public event unsubscribeAllSourcesCompletedEventHandler unsubscribeAllSourcesCompleted;
        
        /// <remarks/>
        public event unsubscribeAllTilersCompletedEventHandler unsubscribeAllTilersCompleted;
        
        /// <remarks/>
        public event unsubscribeTilerCompletedEventHandler unsubscribeTilerCompleted;
        
        /// <remarks/>
        public event getDispletsInfo2CompletedEventHandler getDispletsInfo2Completed;
        
        /// <remarks/>
        public event removeVideoTemplateURLCompletedEventHandler removeVideoTemplateURLCompleted;
        
        /// <remarks/>
        public event subscribeSystemPropertyCompletedEventHandler subscribeSystemPropertyCompleted;
        
        /// <remarks/>
        public event shareApplicationOnDisplay2CompletedEventHandler shareApplicationOnDisplay2Completed;
        
        /// <remarks/>
        public event getStatusLabelDecoratorsDetailCompletedEventHandler getStatusLabelDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event removeSnapshotCompletedEventHandler removeSnapshotCompleted;
        
        /// <remarks/>
        public event setSnapshotsInfoCompletedEventHandler setSnapshotsInfoCompleted;
        
        /// <remarks/>
        public event listAllGroupsCompletedEventHandler listAllGroupsCompleted;
        
        /// <remarks/>
        public event createGroupCompletedEventHandler createGroupCompleted;
        
        /// <remarks/>
        public event listAllDecoratorsCompletedEventHandler listAllDecoratorsCompleted;
        
        /// <remarks/>
        public event findBindingsCompletedEventHandler findBindingsCompleted;
        
        /// <remarks/>
        public event getProVNCDefaultSettingInfoCompletedEventHandler getProVNCDefaultSettingInfoCompleted;
        
        /// <remarks/>
        public event searchGridsCompletedEventHandler searchGridsCompleted;
        
        /// <remarks/>
        public event markRestoreFinishedCompletedEventHandler markRestoreFinishedCompleted;
        
        /// <remarks/>
        public event createStaticTextDecoratorTemplateCompletedEventHandler createStaticTextDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event getBorderDecoratorDetailCompletedEventHandler getBorderDecoratorDetailCompleted;
        
        /// <remarks/>
        public event listOfAssociatedVDSPerspectivesCompletedEventHandler listOfAssociatedVDSPerspectivesCompleted;
        
        /// <remarks/>
        public event unbindCompletedEventHandler unbindCompleted;
        
        /// <remarks/>
        public event subscribeSystemCompletedEventHandler subscribeSystemCompleted;
        
        /// <remarks/>
        public event getMessagesInfoCompletedEventHandler getMessagesInfoCompleted;
        
        /// <remarks/>
        public event unsubscribeAllConfigurationsCompletedEventHandler unsubscribeAllConfigurationsCompleted;
        
        /// <remarks/>
        public event createDisplayModulesCompletedEventHandler createDisplayModulesCompleted;
        
        /// <remarks/>
        public event getSquidModeConfigurationInfoCompletedEventHandler getSquidModeConfigurationInfoCompleted;
        
        /// <remarks/>
        public event setPerspectiveWindowDetailCompletedEventHandler setPerspectiveWindowDetailCompleted;
        
        /// <remarks/>
        public event getGeneratedPerspectiveNameCompletedEventHandler getGeneratedPerspectiveNameCompleted;
        
        /// <remarks/>
        public event setStatusImageDecoratorsDetailCompletedEventHandler setStatusImageDecoratorsDetailCompleted;
        
        /// <remarks/>
        public event unshareAllPerspectivesFromDisplayCompletedEventHandler unshareAllPerspectivesFromDisplayCompleted;
        
        /// <remarks/>
        public event subscribeSquidModeConfigurationCompletedEventHandler subscribeSquidModeConfigurationCompleted;
        
        /// <remarks/>
        public event getSystemVariablesInfoCompletedEventHandler getSystemVariablesInfoCompleted;
        
        /// <remarks/>
        public event setWebSourcesDetailCompletedEventHandler setWebSourcesDetailCompleted;
        
        /// <remarks/>
        public event subscribeApplicationsCompletedEventHandler subscribeApplicationsCompleted;
        
        /// <remarks/>
        public event unsubscribeConfigurationPoolCompletedEventHandler unsubscribeConfigurationPoolCompleted;
        
        /// <remarks/>
        public event subscribeAllApplicationsCompletedEventHandler subscribeAllApplicationsCompleted;
        
        /// <remarks/>
        public event restoreCompletedEventHandler restoreCompleted;
        
        /// <remarks/>
        public event createSourceNameDecoratorTemplateCompletedEventHandler createSourceNameDecoratorTemplateCompleted;
        
        /// <remarks/>
        public event searchPerspectivesCompletedEventHandler searchPerspectivesCompleted;
        
        /// <remarks/>
        public event getKeyboardShortcutDefaultSettingsInfoCompletedEventHandler getKeyboardShortcutDefaultSettingsInfoCompleted;
        
        /// <remarks/>
        public event applyRoleToRecourcesCompletedEventHandler applyRoleToRecourcesCompleted;
        
        /// <remarks/>
        public event getScreenScrapeSourcesDetailCompletedEventHandler getScreenScrapeSourcesDetailCompleted;
        
        /// <remarks/>
        public event searchDecoratorsCompletedEventHandler searchDecoratorsCompleted;
        
        /// <remarks/>
        public event bringDecoratorForwardCompletedEventHandler bringDecoratorForwardCompleted;
        
        /// <remarks/>
        public event setPerspectivesInfoCompletedEventHandler setPerspectivesInfoCompleted;
        
        /// <remarks/>
        public event addVideoTemplateURLCompletedEventHandler addVideoTemplateURLCompleted;
        
        /// <remarks/>
        public event copyTilersCompletedEventHandler copyTilersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("idList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, NestingLevel=1)]
        public objectId[][] getDisplaysWindows(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, bool arg2) {
            object[] results = this.Invoke("getDisplaysWindows", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId[][])(results[0]));
        }
        
        /// <remarks/>
        public void getDisplaysWindowsAsync(sessionId arg0, objectId[] arg1, bool arg2) {
            this.getDisplaysWindowsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getDisplaysWindowsAsync(sessionId arg0, objectId[] arg1, bool arg2, object userState) {
            if ((this.getDisplaysWindowsOperationCompleted == null)) {
                this.getDisplaysWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplaysWindowsOperationCompleted);
            }
            this.InvokeAsync("getDisplaysWindows", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getDisplaysWindowsOperationCompleted, userState);
        }
        
        private void OngetDisplaysWindowsOperationCompleted(object arg) {
            if ((this.getDisplaysWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplaysWindowsCompleted(this, new getDisplaysWindowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<bool>[] forceRemovePerspectives(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("forceRemovePerspectives", new object[] {
                        arg0,
                        arg1});
            return ((System.Nullable<bool>[])(results[0]));
        }
        
        /// <remarks/>
        public void forceRemovePerspectivesAsync(sessionId arg0, objectId[] arg1) {
            this.forceRemovePerspectivesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemovePerspectivesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.forceRemovePerspectivesOperationCompleted == null)) {
                this.forceRemovePerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemovePerspectivesOperationCompleted);
            }
            this.InvokeAsync("forceRemovePerspectives", new object[] {
                        arg0,
                        arg1}, this.forceRemovePerspectivesOperationCompleted, userState);
        }
        
        private void OnforceRemovePerspectivesOperationCompleted(object arg) {
            if ((this.forceRemovePerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemovePerspectivesCompleted(this, new forceRemovePerspectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userInfo[] listUsersInfo(sessionId arg0) {
            object[] results = this.Invoke("listUsersInfo", new object[] {
                        arg0});
            return ((userInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void listUsersInfoAsync(sessionId arg0) {
            this.listUsersInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listUsersInfoAsync(sessionId arg0, object userState) {
            if ((this.listUsersInfoOperationCompleted == null)) {
                this.listUsersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistUsersInfoOperationCompleted);
            }
            this.InvokeAsync("listUsersInfo", new object[] {
                        arg0}, this.listUsersInfoOperationCompleted, userState);
        }
        
        private void OnlistUsersInfoOperationCompleted(object arg) {
            if ((this.listUsersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listUsersInfoCompleted(this, new listUsersInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSources(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeSources", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeSourcesAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribeSourcesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeSourcesAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribeSourcesOperationCompleted == null)) {
                this.unsubscribeSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSourcesOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSources", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeSourcesOperationCompleted, userState);
        }
        
        private void OnunsubscribeSourcesOperationCompleted(object arg) {
            if ((this.unsubscribeSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSourcesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findDisplayByComputerName(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findDisplayByComputerName", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findDisplayByComputerNameAsync(sessionId arg0, string arg1) {
            this.findDisplayByComputerNameAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findDisplayByComputerNameAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findDisplayByComputerNameOperationCompleted == null)) {
                this.findDisplayByComputerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindDisplayByComputerNameOperationCompleted);
            }
            this.InvokeAsync("findDisplayByComputerName", new object[] {
                        arg0,
                        arg1}, this.findDisplayByComputerNameOperationCompleted, userState);
        }
        
        private void OnfindDisplayByComputerNameOperationCompleted(object arg) {
            if ((this.findDisplayByComputerNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findDisplayByComputerNameCompleted(this, new findDisplayByComputerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllWindows(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllWindows", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllWindowsAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllWindowsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllWindowsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllWindowsOperationCompleted == null)) {
                this.subscribeAllWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllWindowsOperationCompleted);
            }
            this.InvokeAsync("subscribeAllWindows", new object[] {
                        arg0,
                        arg1}, this.subscribeAllWindowsOperationCompleted, userState);
        }
        
        private void OnsubscribeAllWindowsOperationCompleted(object arg) {
            if ((this.subscribeAllWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllWindowsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createLogoDecoratorTemplate(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail arg2, logoDecoratorDetail arg3) {
            object[] results = this.Invoke("createLogoDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createLogoDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail arg2, logoDecoratorDetail arg3) {
            this.createLogoDecoratorTemplateAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createLogoDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail arg2, logoDecoratorDetail arg3, object userState) {
            if ((this.createLogoDecoratorTemplateOperationCompleted == null)) {
                this.createLogoDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateLogoDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("createLogoDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createLogoDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OncreateLogoDecoratorTemplateOperationCompleted(object arg) {
            if ((this.createLogoDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createLogoDecoratorTemplateCompleted(this, new createLogoDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listAllNGPs(sessionId arg0) {
            object[] results = this.Invoke("listAllNGPs", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllNGPsAsync(sessionId arg0) {
            this.listAllNGPsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllNGPsAsync(sessionId arg0, object userState) {
            if ((this.listAllNGPsOperationCompleted == null)) {
                this.listAllNGPsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllNGPsOperationCompleted);
            }
            this.InvokeAsync("listAllNGPs", new object[] {
                        arg0}, this.listAllNGPsOperationCompleted, userState);
        }
        
        private void OnlistAllNGPsOperationCompleted(object arg) {
            if ((this.listAllNGPsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllNGPsCompleted(this, new listAllNGPsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findGroup(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findGroup", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findGroupAsync(sessionId arg0, string arg1) {
            this.findGroupAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findGroupAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findGroupOperationCompleted == null)) {
                this.findGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindGroupOperationCompleted);
            }
            this.InvokeAsync("findGroup", new object[] {
                        arg0,
                        arg1}, this.findGroupOperationCompleted, userState);
        }
        
        private void OnfindGroupOperationCompleted(object arg) {
            if ((this.findGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findGroupCompleted(this, new findGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public borderDecoratorDetail[] getBorderDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getBorderDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((borderDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getBorderDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getBorderDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getBorderDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getBorderDecoratorsDetailOperationCompleted == null)) {
                this.getBorderDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBorderDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getBorderDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getBorderDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetBorderDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getBorderDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBorderDecoratorsDetailCompleted(this, new getBorderDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("idList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, NestingLevel=1)]
        public objectId[][] getDispletsDecorators(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getDispletsDecorators", new object[] {
                        arg0,
                        arg1});
            return ((objectId[][])(results[0]));
        }
        
        /// <remarks/>
        public void getDispletsDecoratorsAsync(sessionId arg0, objectId[] arg1) {
            this.getDispletsDecoratorsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDispletsDecoratorsAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getDispletsDecoratorsOperationCompleted == null)) {
                this.getDispletsDecoratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDispletsDecoratorsOperationCompleted);
            }
            this.InvokeAsync("getDispletsDecorators", new object[] {
                        arg0,
                        arg1}, this.getDispletsDecoratorsOperationCompleted, userState);
        }
        
        private void OngetDispletsDecoratorsOperationCompleted(object arg) {
            if ((this.getDispletsDecoratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDispletsDecoratorsCompleted(this, new getDispletsDecoratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSystemVariableInfo2(sessionId arg0, objectId arg1, systemVariableInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSystemVariableInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSystemVariableInfo2Async(sessionId arg0, objectId arg1, systemVariableInfo arg2, string[] arg3) {
            this.setSystemVariableInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSystemVariableInfo2Async(sessionId arg0, objectId arg1, systemVariableInfo arg2, string[] arg3, object userState) {
            if ((this.setSystemVariableInfo2OperationCompleted == null)) {
                this.setSystemVariableInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSystemVariableInfo2OperationCompleted);
            }
            this.InvokeAsync("setSystemVariableInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSystemVariableInfo2OperationCompleted, userState);
        }
        
        private void OnsetSystemVariableInfo2OperationCompleted(object arg) {
            if ((this.setSystemVariableInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSystemVariableInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bringDispletsToFront(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            this.Invoke("bringDispletsToFront", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void bringDispletsToFrontAsync(sessionId arg0, objectId[] arg1) {
            this.bringDispletsToFrontAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void bringDispletsToFrontAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.bringDispletsToFrontOperationCompleted == null)) {
                this.bringDispletsToFrontOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbringDispletsToFrontOperationCompleted);
            }
            this.InvokeAsync("bringDispletsToFront", new object[] {
                        arg0,
                        arg1}, this.bringDispletsToFrontOperationCompleted, userState);
        }
        
        private void OnbringDispletsToFrontOperationCompleted(object arg) {
            if ((this.bringDispletsToFrontCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bringDispletsToFrontCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bind(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4) {
            this.Invoke("bind", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
        }
        
        /// <remarks/>
        public void bindAsync(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4) {
            this.bindAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void bindAsync(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4, object userState) {
            if ((this.bindOperationCompleted == null)) {
                this.bindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbindOperationCompleted);
            }
            this.InvokeAsync("bind", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.bindOperationCompleted, userState);
        }
        
        private void OnbindOperationCompleted(object arg) {
            if ((this.bindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bindCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public perspectiveWindowDetail[] getPerspectiveWindowsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getPerspectiveWindowsDetail", new object[] {
                        arg0,
                        arg1});
            return ((perspectiveWindowDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getPerspectiveWindowsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getPerspectiveWindowsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getPerspectiveWindowsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getPerspectiveWindowsDetailOperationCompleted == null)) {
                this.getPerspectiveWindowsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPerspectiveWindowsDetailOperationCompleted);
            }
            this.InvokeAsync("getPerspectiveWindowsDetail", new object[] {
                        arg0,
                        arg1}, this.getPerspectiveWindowsDetailOperationCompleted, userState);
        }
        
        private void OngetPerspectiveWindowsDetailOperationCompleted(object arg) {
            if ((this.getPerspectiveWindowsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPerspectiveWindowsDetailCompleted(this, new getPerspectiveWindowsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public eventInfo[] getEvents(sessionId arg0) {
            object[] results = this.Invoke("getEvents", new object[] {
                        arg0});
            return ((eventInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getEventsAsync(sessionId arg0) {
            this.getEventsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getEventsAsync(sessionId arg0, object userState) {
            if ((this.getEventsOperationCompleted == null)) {
                this.getEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventsOperationCompleted);
            }
            this.InvokeAsync("getEvents", new object[] {
                        arg0}, this.getEventsOperationCompleted, userState);
        }
        
        private void OngetEventsOperationCompleted(object arg) {
            if ((this.getEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventsCompleted(this, new getEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createDateTimeDecoratorTemplate(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, dateTimeDecoratorDetail arg3) {
            object[] results = this.Invoke("createDateTimeDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createDateTimeDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, dateTimeDecoratorDetail arg3) {
            this.createDateTimeDecoratorTemplateAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createDateTimeDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, dateTimeDecoratorDetail arg3, object userState) {
            if ((this.createDateTimeDecoratorTemplateOperationCompleted == null)) {
                this.createDateTimeDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDateTimeDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("createDateTimeDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createDateTimeDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OncreateDateTimeDecoratorTemplateOperationCompleted(object arg) {
            if ((this.createDateTimeDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDateTimeDecoratorTemplateCompleted(this, new createDateTimeDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId copyTiler(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("copyTiler", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void copyTilerAsync(sessionId arg0, objectId arg1) {
            this.copyTilerAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyTilerAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.copyTilerOperationCompleted == null)) {
                this.copyTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyTilerOperationCompleted);
            }
            this.InvokeAsync("copyTiler", new object[] {
                        arg0,
                        arg1}, this.copyTilerOperationCompleted, userState);
        }
        
        private void OncopyTilerOperationCompleted(object arg) {
            if ((this.copyTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyTilerCompleted(this, new copyTilerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setApplicationsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] applicationInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setApplicationsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setApplicationsInfoAsync(sessionId arg0, objectId[] arg1, applicationInfo[] arg2, string[] arg3) {
            this.setApplicationsInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setApplicationsInfoAsync(sessionId arg0, objectId[] arg1, applicationInfo[] arg2, string[] arg3, object userState) {
            if ((this.setApplicationsInfoOperationCompleted == null)) {
                this.setApplicationsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetApplicationsInfoOperationCompleted);
            }
            this.InvokeAsync("setApplicationsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setApplicationsInfoOperationCompleted, userState);
        }
        
        private void OnsetApplicationsInfoOperationCompleted(object arg) {
            if ((this.setApplicationsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setApplicationsInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decoratorInfo[] getDecoratorsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getDecoratorsInfo", new object[] {
                        arg0,
                        arg1});
            return ((decoratorInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getDecoratorsInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getDecoratorsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDecoratorsInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getDecoratorsInfoOperationCompleted == null)) {
                this.getDecoratorsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDecoratorsInfoOperationCompleted);
            }
            this.InvokeAsync("getDecoratorsInfo", new object[] {
                        arg0,
                        arg1}, this.getDecoratorsInfoOperationCompleted, userState);
        }
        
        private void OngetDecoratorsInfoOperationCompleted(object arg) {
            if ((this.getDecoratorsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDecoratorsInfoCompleted(this, new getDecoratorsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sendDispletToBack(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("sendDispletToBack", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void sendDispletToBackAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.sendDispletToBackAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void sendDispletToBackAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.sendDispletToBackOperationCompleted == null)) {
                this.sendDispletToBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDispletToBackOperationCompleted);
            }
            this.InvokeAsync("sendDispletToBack", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.sendDispletToBackOperationCompleted, userState);
        }
        
        private void OnsendDispletToBackOperationCompleted(object arg) {
            if ((this.sendDispletToBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDispletToBackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public displayInfo2 getDisplayInfo2(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDisplayInfo2", new object[] {
                        arg0,
                        arg1});
            return ((displayInfo2)(results[0]));
        }
        
        /// <remarks/>
        public void getDisplayInfo2Async(sessionId arg0, objectId arg1) {
            this.getDisplayInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDisplayInfo2Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDisplayInfo2OperationCompleted == null)) {
                this.getDisplayInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplayInfo2OperationCompleted);
            }
            this.InvokeAsync("getDisplayInfo2", new object[] {
                        arg0,
                        arg1}, this.getDisplayInfo2OperationCompleted, userState);
        }
        
        private void OngetDisplayInfo2OperationCompleted(object arg) {
            if ((this.getDisplayInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplayInfo2Completed(this, new getDisplayInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public displayInfo3 getDisplayInfo3(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDisplayInfo3", new object[] {
                        arg0,
                        arg1});
            return ((displayInfo3)(results[0]));
        }
        
        /// <remarks/>
        public void getDisplayInfo3Async(sessionId arg0, objectId arg1) {
            this.getDisplayInfo3Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDisplayInfo3Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDisplayInfo3OperationCompleted == null)) {
                this.getDisplayInfo3OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplayInfo3OperationCompleted);
            }
            this.InvokeAsync("getDisplayInfo3", new object[] {
                        arg0,
                        arg1}, this.getDisplayInfo3OperationCompleted, userState);
        }
        
        private void OngetDisplayInfo3OperationCompleted(object arg) {
            if ((this.getDisplayInfo3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplayInfo3Completed(this, new getDisplayInfo3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool forceRemoveSources(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("forceRemoveSources", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveSourcesAsync(sessionId arg0, objectId[] arg1) {
            this.forceRemoveSourcesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveSourcesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.forceRemoveSourcesOperationCompleted == null)) {
                this.forceRemoveSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveSourcesOperationCompleted);
            }
            this.InvokeAsync("forceRemoveSources", new object[] {
                        arg0,
                        arg1}, this.forceRemoveSourcesOperationCompleted, userState);
        }
        
        private void OnforceRemoveSourcesOperationCompleted(object arg) {
            if ((this.forceRemoveSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveSourcesCompleted(this, new forceRemoveSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bringWindowForward(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("bringWindowForward", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void bringWindowForwardAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.bringWindowForwardAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void bringWindowForwardAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.bringWindowForwardOperationCompleted == null)) {
                this.bringWindowForwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbringWindowForwardOperationCompleted);
            }
            this.InvokeAsync("bringWindowForward", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.bringWindowForwardOperationCompleted, userState);
        }
        
        private void OnbringWindowForwardOperationCompleted(object arg) {
            if ((this.bringWindowForwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bringWindowForwardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findPerspective(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findPerspective", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findPerspectiveAsync(sessionId arg0, string arg1) {
            this.findPerspectiveAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findPerspectiveAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findPerspectiveOperationCompleted == null)) {
                this.findPerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPerspectiveOperationCompleted);
            }
            this.InvokeAsync("findPerspective", new object[] {
                        arg0,
                        arg1}, this.findPerspectiveOperationCompleted, userState);
        }
        
        private void OnfindPerspectiveOperationCompleted(object arg) {
            if ((this.findPerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findPerspectiveCompleted(this, new findPerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId copyDecorator(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("copyDecorator", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void copyDecoratorAsync(sessionId arg0, objectId arg1) {
            this.copyDecoratorAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyDecoratorAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.copyDecoratorOperationCompleted == null)) {
                this.copyDecoratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyDecoratorOperationCompleted);
            }
            this.InvokeAsync("copyDecorator", new object[] {
                        arg0,
                        arg1}, this.copyDecoratorOperationCompleted, userState);
        }
        
        private void OncopyDecoratorOperationCompleted(object arg) {
            if ((this.copyDecoratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyDecoratorCompleted(this, new copyDecoratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public videoSourceDetail[] getVideoSourcesDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getVideoSourcesDetail", new object[] {
                        arg0,
                        arg1});
            return ((videoSourceDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getVideoSourcesDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getVideoSourcesDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getVideoSourcesDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getVideoSourcesDetailOperationCompleted == null)) {
                this.getVideoSourcesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVideoSourcesDetailOperationCompleted);
            }
            this.InvokeAsync("getVideoSourcesDetail", new object[] {
                        arg0,
                        arg1}, this.getVideoSourcesDetailOperationCompleted, userState);
        }
        
        private void OngetVideoSourcesDetailOperationCompleted(object arg) {
            if ((this.getVideoSourcesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVideoSourcesDetailCompleted(this, new getVideoSourcesDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listofAssociatedSnapshots(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("listofAssociatedSnapshots", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listofAssociatedSnapshotsAsync(sessionId arg0, objectId arg1) {
            this.listofAssociatedSnapshotsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listofAssociatedSnapshotsAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.listofAssociatedSnapshotsOperationCompleted == null)) {
                this.listofAssociatedSnapshotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistofAssociatedSnapshotsOperationCompleted);
            }
            this.InvokeAsync("listofAssociatedSnapshots", new object[] {
                        arg0,
                        arg1}, this.listofAssociatedSnapshotsOperationCompleted, userState);
        }
        
        private void OnlistofAssociatedSnapshotsOperationCompleted(object arg) {
            if ((this.listofAssociatedSnapshotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listofAssociatedSnapshotsCompleted(this, new listofAssociatedSnapshotsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeSources(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("removeSources", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeSourcesAsync(sessionId arg0, objectId[] arg1) {
            this.removeSourcesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeSourcesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.removeSourcesOperationCompleted == null)) {
                this.removeSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSourcesOperationCompleted);
            }
            this.InvokeAsync("removeSources", new object[] {
                        arg0,
                        arg1}, this.removeSourcesOperationCompleted, userState);
        }
        
        private void OnremoveSourcesOperationCompleted(object arg) {
            if ((this.removeSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSourcesCompleted(this, new removeSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setScreenScrapeSourceDetail(sessionId arg0, objectId arg1, screenScrapeSourceDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setScreenScrapeSourceDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setScreenScrapeSourceDetailAsync(sessionId arg0, objectId arg1, screenScrapeSourceDetail arg2, string[] arg3) {
            this.setScreenScrapeSourceDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setScreenScrapeSourceDetailAsync(sessionId arg0, objectId arg1, screenScrapeSourceDetail arg2, string[] arg3, object userState) {
            if ((this.setScreenScrapeSourceDetailOperationCompleted == null)) {
                this.setScreenScrapeSourceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetScreenScrapeSourceDetailOperationCompleted);
            }
            this.InvokeAsync("setScreenScrapeSourceDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setScreenScrapeSourceDetailOperationCompleted, userState);
        }
        
        private void OnsetScreenScrapeSourceDetailOperationCompleted(object arg) {
            if ((this.setScreenScrapeSourceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setScreenScrapeSourceDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<bool>[] forceRemoveApplications(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("forceRemoveApplications", new object[] {
                        arg0,
                        arg1});
            return ((System.Nullable<bool>[])(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveApplicationsAsync(sessionId arg0, objectId[] arg1) {
            this.forceRemoveApplicationsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveApplicationsAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.forceRemoveApplicationsOperationCompleted == null)) {
                this.forceRemoveApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveApplicationsOperationCompleted);
            }
            this.InvokeAsync("forceRemoveApplications", new object[] {
                        arg0,
                        arg1}, this.forceRemoveApplicationsOperationCompleted, userState);
        }
        
        private void OnforceRemoveApplicationsOperationCompleted(object arg) {
            if ((this.forceRemoveApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveApplicationsCompleted(this, new forceRemoveApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setTilersInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] tilerInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setTilersInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setTilersInfoAsync(sessionId arg0, objectId[] arg1, tilerInfo[] arg2, string[] arg3) {
            this.setTilersInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setTilersInfoAsync(sessionId arg0, objectId[] arg1, tilerInfo[] arg2, string[] arg3, object userState) {
            if ((this.setTilersInfoOperationCompleted == null)) {
                this.setTilersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTilersInfoOperationCompleted);
            }
            this.InvokeAsync("setTilersInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setTilersInfoOperationCompleted, userState);
        }
        
        private void OnsetTilersInfoOperationCompleted(object arg) {
            if ((this.setTilersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTilersInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public statusBorderDecoratorDetail[] getStatusBorderDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getStatusBorderDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((statusBorderDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getStatusBorderDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getStatusBorderDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getStatusBorderDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getStatusBorderDecoratorsDetailOperationCompleted == null)) {
                this.getStatusBorderDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusBorderDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getStatusBorderDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getStatusBorderDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetStatusBorderDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getStatusBorderDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusBorderDecoratorsDetailCompleted(this, new getStatusBorderDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveAsTilingInPerspective(sessionId arg0, objectId arg1, string arg2) {
            object[] results = this.Invoke("saveAsTilingInPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveAsTilingInPerspectiveAsync(sessionId arg0, objectId arg1, string arg2) {
            this.saveAsTilingInPerspectiveAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void saveAsTilingInPerspectiveAsync(sessionId arg0, objectId arg1, string arg2, object userState) {
            if ((this.saveAsTilingInPerspectiveOperationCompleted == null)) {
                this.saveAsTilingInPerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsTilingInPerspectiveOperationCompleted);
            }
            this.InvokeAsync("saveAsTilingInPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.saveAsTilingInPerspectiveOperationCompleted, userState);
        }
        
        private void OnsaveAsTilingInPerspectiveOperationCompleted(object arg) {
            if ((this.saveAsTilingInPerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsTilingInPerspectiveCompleted(this, new saveAsTilingInPerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeDecoratorTemplate(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("removeDecoratorTemplate", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeDecoratorTemplateAsync(sessionId arg0, objectId arg1) {
            this.removeDecoratorTemplateAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeDecoratorTemplateAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeDecoratorTemplateOperationCompleted == null)) {
                this.removeDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("removeDecoratorTemplate", new object[] {
                        arg0,
                        arg1}, this.removeDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OnremoveDecoratorTemplateOperationCompleted(object arg) {
            if ((this.removeDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeDecoratorTemplateCompleted(this, new removeDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDispletsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displetInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDispletsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDispletsInfoAsync(sessionId arg0, objectId[] arg1, displetInfo[] arg2, string[] arg3) {
            this.setDispletsInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDispletsInfoAsync(sessionId arg0, objectId[] arg1, displetInfo[] arg2, string[] arg3, object userState) {
            if ((this.setDispletsInfoOperationCompleted == null)) {
                this.setDispletsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDispletsInfoOperationCompleted);
            }
            this.InvokeAsync("setDispletsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDispletsInfoOperationCompleted, userState);
        }
        
        private void OnsetDispletsInfoOperationCompleted(object arg) {
            if ((this.setDispletsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDispletsInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setBorderDecoratorDetail(sessionId arg0, objectId arg1, borderDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setBorderDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setBorderDecoratorDetailAsync(sessionId arg0, objectId arg1, borderDecoratorDetail arg2, string[] arg3) {
            this.setBorderDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setBorderDecoratorDetailAsync(sessionId arg0, objectId arg1, borderDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setBorderDecoratorDetailOperationCompleted == null)) {
                this.setBorderDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetBorderDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setBorderDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setBorderDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetBorderDecoratorDetailOperationCompleted(object arg) {
            if ((this.setBorderDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setBorderDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateTilerForPerspective(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("updateTilerForPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void updateTilerForPerspectiveAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.updateTilerForPerspectiveAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void updateTilerForPerspectiveAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.updateTilerForPerspectiveOperationCompleted == null)) {
                this.updateTilerForPerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTilerForPerspectiveOperationCompleted);
            }
            this.InvokeAsync("updateTilerForPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updateTilerForPerspectiveOperationCompleted, userState);
        }
        
        private void OnupdateTilerForPerspectiveOperationCompleted(object arg) {
            if ((this.updateTilerForPerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTilerForPerspectiveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeProVNCDefaultSetting(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeProVNCDefaultSetting", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeProVNCDefaultSettingAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeProVNCDefaultSettingAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeProVNCDefaultSettingAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeProVNCDefaultSettingOperationCompleted == null)) {
                this.unsubscribeProVNCDefaultSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeProVNCDefaultSettingOperationCompleted);
            }
            this.InvokeAsync("unsubscribeProVNCDefaultSetting", new object[] {
                        arg0,
                        arg1}, this.unsubscribeProVNCDefaultSettingOperationCompleted, userState);
        }
        
        private void OnunsubscribeProVNCDefaultSettingOperationCompleted(object arg) {
            if ((this.unsubscribeProVNCDefaultSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeProVNCDefaultSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public sourceSignalDetail getSourceSignalDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSourceSignalDetail", new object[] {
                        arg0,
                        arg1});
            return ((sourceSignalDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getSourceSignalDetailAsync(sessionId arg0, objectId arg1) {
            this.getSourceSignalDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSourceSignalDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSourceSignalDetailOperationCompleted == null)) {
                this.getSourceSignalDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourceSignalDetailOperationCompleted);
            }
            this.InvokeAsync("getSourceSignalDetail", new object[] {
                        arg0,
                        arg1}, this.getSourceSignalDetailOperationCompleted, userState);
        }
        
        private void OngetSourceSignalDetailOperationCompleted(object arg) {
            if ((this.getSourceSignalDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourceSignalDetailCompleted(this, new getSourceSignalDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSourceTemplate(sessionId arg0, objectId arg1) {
            this.Invoke("setSourceTemplate", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void setSourceTemplateAsync(sessionId arg0, objectId arg1) {
            this.setSourceTemplateAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void setSourceTemplateAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.setSourceTemplateOperationCompleted == null)) {
                this.setSourceTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSourceTemplateOperationCompleted);
            }
            this.InvokeAsync("setSourceTemplate", new object[] {
                        arg0,
                        arg1}, this.setSourceTemplateOperationCompleted, userState);
        }
        
        private void OnsetSourceTemplateOperationCompleted(object arg) {
            if ((this.setSourceTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSourceTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllPerspectives(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllPerspectives", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllPerspectivesAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllPerspectivesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllPerspectivesAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllPerspectivesOperationCompleted == null)) {
                this.unsubscribeAllPerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllPerspectivesOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllPerspectives", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllPerspectivesOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllPerspectivesOperationCompleted(object arg) {
            if ((this.unsubscribeAllPerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllPerspectivesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveAsPerspective(sessionId arg0, objectId arg1, string arg2, bool arg3) {
            object[] results = this.Invoke("saveAsPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveAsPerspectiveAsync(sessionId arg0, objectId arg1, string arg2, bool arg3) {
            this.saveAsPerspectiveAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void saveAsPerspectiveAsync(sessionId arg0, objectId arg1, string arg2, bool arg3, object userState) {
            if ((this.saveAsPerspectiveOperationCompleted == null)) {
                this.saveAsPerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsPerspectiveOperationCompleted);
            }
            this.InvokeAsync("saveAsPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.saveAsPerspectiveOperationCompleted, userState);
        }
        
        private void OnsaveAsPerspectiveOperationCompleted(object arg) {
            if ((this.saveAsPerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsPerspectiveCompleted(this, new saveAsPerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setStatusBorderDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] statusBorderDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setStatusBorderDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setStatusBorderDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, statusBorderDecoratorDetail[] arg2, string[] arg3) {
            this.setStatusBorderDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setStatusBorderDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, statusBorderDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setStatusBorderDecoratorsDetailOperationCompleted == null)) {
                this.setStatusBorderDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStatusBorderDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setStatusBorderDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setStatusBorderDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetStatusBorderDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setStatusBorderDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStatusBorderDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public moduleInfo[] getModulesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getModulesInfo", new object[] {
                        arg0,
                        arg1});
            return ((moduleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getModulesInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getModulesInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getModulesInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getModulesInfoOperationCompleted == null)) {
                this.getModulesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetModulesInfoOperationCompleted);
            }
            this.InvokeAsync("getModulesInfo", new object[] {
                        arg0,
                        arg1}, this.getModulesInfoOperationCompleted, userState);
        }
        
        private void OngetModulesInfoOperationCompleted(object arg) {
            if ((this.getModulesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getModulesInfoCompleted(this, new getModulesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeDisplay(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeDisplayAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeDisplayAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeDisplayAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeDisplayOperationCompleted == null)) {
                this.subscribeDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeDisplayOperationCompleted);
            }
            this.InvokeAsync("subscribeDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeDisplayOperationCompleted, userState);
        }
        
        private void OnsubscribeDisplayOperationCompleted(object arg) {
            if ((this.subscribeDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeDisplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public tilerInfo2 getTilerInfo2(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getTilerInfo2", new object[] {
                        arg0,
                        arg1});
            return ((tilerInfo2)(results[0]));
        }
        
        /// <remarks/>
        public void getTilerInfo2Async(sessionId arg0, objectId arg1) {
            this.getTilerInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getTilerInfo2Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getTilerInfo2OperationCompleted == null)) {
                this.getTilerInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTilerInfo2OperationCompleted);
            }
            this.InvokeAsync("getTilerInfo2", new object[] {
                        arg0,
                        arg1}, this.getTilerInfo2OperationCompleted, userState);
        }
        
        private void OngetTilerInfo2OperationCompleted(object arg) {
            if ((this.getTilerInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTilerInfo2Completed(this, new getTilerInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] listSourceRoutingResolutionType(sessionId arg0) {
            object[] results = this.Invoke("listSourceRoutingResolutionType", new object[] {
                        arg0});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listSourceRoutingResolutionTypeAsync(sessionId arg0) {
            this.listSourceRoutingResolutionTypeAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listSourceRoutingResolutionTypeAsync(sessionId arg0, object userState) {
            if ((this.listSourceRoutingResolutionTypeOperationCompleted == null)) {
                this.listSourceRoutingResolutionTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistSourceRoutingResolutionTypeOperationCompleted);
            }
            this.InvokeAsync("listSourceRoutingResolutionType", new object[] {
                        arg0}, this.listSourceRoutingResolutionTypeOperationCompleted, userState);
        }
        
        private void OnlistSourceRoutingResolutionTypeOperationCompleted(object arg) {
            if ((this.listSourceRoutingResolutionTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listSourceRoutingResolutionTypeCompleted(this, new listSourceRoutingResolutionTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listSourceRoutingConfigs(sessionId arg0) {
            object[] results = this.Invoke("listSourceRoutingConfigs", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listSourceRoutingConfigsAsync(sessionId arg0) {
            this.listSourceRoutingConfigsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listSourceRoutingConfigsAsync(sessionId arg0, object userState) {
            if ((this.listSourceRoutingConfigsOperationCompleted == null)) {
                this.listSourceRoutingConfigsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistSourceRoutingConfigsOperationCompleted);
            }
            this.InvokeAsync("listSourceRoutingConfigs", new object[] {
                        arg0}, this.listSourceRoutingConfigsOperationCompleted, userState);
        }
        
        private void OnlistSourceRoutingConfigsOperationCompleted(object arg) {
            if ((this.listSourceRoutingConfigsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listSourceRoutingConfigsCompleted(this, new listSourceRoutingConfigsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchDisplays(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchDisplays", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchDisplaysAsync(sessionId arg0, string arg1) {
            this.searchDisplaysAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchDisplaysAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchDisplaysOperationCompleted == null)) {
                this.searchDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchDisplaysOperationCompleted);
            }
            this.InvokeAsync("searchDisplays", new object[] {
                        arg0,
                        arg1}, this.searchDisplaysOperationCompleted, userState);
        }
        
        private void OnsearchDisplaysOperationCompleted(object arg) {
            if ((this.searchDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchDisplaysCompleted(this, new searchDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllApplications(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllApplications", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllApplicationsAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllApplicationsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllApplicationsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllApplicationsOperationCompleted == null)) {
                this.unsubscribeAllApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllApplicationsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllApplications", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllApplicationsOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllApplicationsOperationCompleted(object arg) {
            if ((this.unsubscribeAllApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllApplicationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createExternalWindow(sessionId arg0, objectId arg1, int arg2, rectangleInfo arg3, int arg4) {
            object[] results = this.Invoke("createExternalWindow", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createExternalWindowAsync(sessionId arg0, objectId arg1, int arg2, rectangleInfo arg3, int arg4) {
            this.createExternalWindowAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void createExternalWindowAsync(sessionId arg0, objectId arg1, int arg2, rectangleInfo arg3, int arg4, object userState) {
            if ((this.createExternalWindowOperationCompleted == null)) {
                this.createExternalWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateExternalWindowOperationCompleted);
            }
            this.InvokeAsync("createExternalWindow", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.createExternalWindowOperationCompleted, userState);
        }
        
        private void OncreateExternalWindowOperationCompleted(object arg) {
            if ((this.createExternalWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createExternalWindowCompleted(this, new createExternalWindowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public systemPropertyInfo getSystemPropertyInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSystemPropertyInfo", new object[] {
                        arg0,
                        arg1});
            return ((systemPropertyInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemPropertyInfoAsync(sessionId arg0, objectId arg1) {
            this.getSystemPropertyInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSystemPropertyInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSystemPropertyInfoOperationCompleted == null)) {
                this.getSystemPropertyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemPropertyInfoOperationCompleted);
            }
            this.InvokeAsync("getSystemPropertyInfo", new object[] {
                        arg0,
                        arg1}, this.getSystemPropertyInfoOperationCompleted, userState);
        }
        
        private void OngetSystemPropertyInfoOperationCompleted(object arg) {
            if ((this.getSystemPropertyInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemPropertyInfoCompleted(this, new getSystemPropertyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public windowInfo3[] getWindowsInfo3(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getWindowsInfo3", new object[] {
                        arg0,
                        arg1});
            return ((windowInfo3[])(results[0]));
        }
        
        /// <remarks/>
        public void getWindowsInfo3Async(sessionId arg0, objectId[] arg1) {
            this.getWindowsInfo3Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getWindowsInfo3Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getWindowsInfo3OperationCompleted == null)) {
                this.getWindowsInfo3OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWindowsInfo3OperationCompleted);
            }
            this.InvokeAsync("getWindowsInfo3", new object[] {
                        arg0,
                        arg1}, this.getWindowsInfo3OperationCompleted, userState);
        }
        
        private void OngetWindowsInfo3OperationCompleted(object arg) {
            if ((this.getWindowsInfo3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWindowsInfo3Completed(this, new getWindowsInfo3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId applyDecoratorToDisplet(sessionId arg0, objectId arg1, objectId arg2) {
            object[] results = this.Invoke("applyDecoratorToDisplet", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void applyDecoratorToDispletAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.applyDecoratorToDispletAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void applyDecoratorToDispletAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.applyDecoratorToDispletOperationCompleted == null)) {
                this.applyDecoratorToDispletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplyDecoratorToDispletOperationCompleted);
            }
            this.InvokeAsync("applyDecoratorToDisplet", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.applyDecoratorToDispletOperationCompleted, userState);
        }
        
        private void OnapplyDecoratorToDispletOperationCompleted(object arg) {
            if ((this.applyDecoratorToDispletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applyDecoratorToDispletCompleted(this, new applyDecoratorToDispletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public roleInfo getRoleInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getRoleInfo", new object[] {
                        arg0,
                        arg1});
            return ((roleInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getRoleInfoAsync(sessionId arg0, objectId arg1) {
            this.getRoleInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getRoleInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getRoleInfoOperationCompleted == null)) {
                this.getRoleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRoleInfoOperationCompleted);
            }
            this.InvokeAsync("getRoleInfo", new object[] {
                        arg0,
                        arg1}, this.getRoleInfoOperationCompleted, userState);
        }
        
        private void OngetRoleInfoOperationCompleted(object arg) {
            if ((this.getRoleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRoleInfoCompleted(this, new getRoleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findTiler(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findTiler", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findTilerAsync(sessionId arg0, string arg1) {
            this.findTilerAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findTilerAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findTilerOperationCompleted == null)) {
                this.findTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindTilerOperationCompleted);
            }
            this.InvokeAsync("findTiler", new object[] {
                        arg0,
                        arg1}, this.findTilerOperationCompleted, userState);
        }
        
        private void OnfindTilerOperationCompleted(object arg) {
            if ((this.findTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findTilerCompleted(this, new findTilerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSquidModeConfiguration(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeSquidModeConfiguration", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeSquidModeConfigurationAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeSquidModeConfigurationAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeSquidModeConfigurationAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeSquidModeConfigurationOperationCompleted == null)) {
                this.unsubscribeSquidModeConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSquidModeConfigurationOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSquidModeConfiguration", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeSquidModeConfigurationOperationCompleted, userState);
        }
        
        private void OnunsubscribeSquidModeConfigurationOperationCompleted(object arg) {
            if ((this.unsubscribeSquidModeConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSquidModeConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribePerspective(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribePerspective", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribePerspectiveAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribePerspectiveAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribePerspectiveAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribePerspectiveOperationCompleted == null)) {
                this.subscribePerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribePerspectiveOperationCompleted);
            }
            this.InvokeAsync("subscribePerspective", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribePerspectiveOperationCompleted, userState);
        }
        
        private void OnsubscribePerspectiveOperationCompleted(object arg) {
            if ((this.subscribePerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribePerspectiveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeWindow(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeWindow", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeWindowAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeWindowAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeWindowAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeWindowOperationCompleted == null)) {
                this.subscribeWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeWindowOperationCompleted);
            }
            this.InvokeAsync("subscribeWindow", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeWindowOperationCompleted, userState);
        }
        
        private void OnsubscribeWindowOperationCompleted(object arg) {
            if ((this.subscribeWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeWindowCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public windowInfo2[] getWindowsInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getWindowsInfo2", new object[] {
                        arg0,
                        arg1});
            return ((windowInfo2[])(results[0]));
        }
        
        /// <remarks/>
        public void getWindowsInfo2Async(sessionId arg0, objectId[] arg1) {
            this.getWindowsInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getWindowsInfo2Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getWindowsInfo2OperationCompleted == null)) {
                this.getWindowsInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWindowsInfo2OperationCompleted);
            }
            this.InvokeAsync("getWindowsInfo2", new object[] {
                        arg0,
                        arg1}, this.getWindowsInfo2OperationCompleted, userState);
        }
        
        private void OngetWindowsInfo2OperationCompleted(object arg) {
            if ((this.getWindowsInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWindowsInfo2Completed(this, new getWindowsInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createStatusImageDecoratorTemplate(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail arg2, statusImageDecoratorDetail arg3) {
            object[] results = this.Invoke("createStatusImageDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createStatusImageDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail arg2, statusImageDecoratorDetail arg3) {
            this.createStatusImageDecoratorTemplateAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createStatusImageDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail arg2, statusImageDecoratorDetail arg3, object userState) {
            if ((this.createStatusImageDecoratorTemplateOperationCompleted == null)) {
                this.createStatusImageDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStatusImageDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("createStatusImageDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createStatusImageDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OncreateStatusImageDecoratorTemplateOperationCompleted(object arg) {
            if ((this.createStatusImageDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStatusImageDecoratorTemplateCompleted(this, new createStatusImageDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveAsUserTilingInDisplay(sessionId arg0, objectId arg1, string arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] rectangle[] arg3, dimension arg4) {
            object[] results = this.Invoke("saveAsUserTilingInDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveAsUserTilingInDisplayAsync(sessionId arg0, objectId arg1, string arg2, rectangle[] arg3, dimension arg4) {
            this.saveAsUserTilingInDisplayAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void saveAsUserTilingInDisplayAsync(sessionId arg0, objectId arg1, string arg2, rectangle[] arg3, dimension arg4, object userState) {
            if ((this.saveAsUserTilingInDisplayOperationCompleted == null)) {
                this.saveAsUserTilingInDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsUserTilingInDisplayOperationCompleted);
            }
            this.InvokeAsync("saveAsUserTilingInDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.saveAsUserTilingInDisplayOperationCompleted, userState);
        }
        
        private void OnsaveAsUserTilingInDisplayOperationCompleted(object arg) {
            if ((this.saveAsUserTilingInDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsUserTilingInDisplayCompleted(this, new saveAsUserTilingInDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bindAllSystemProperties(sessionId arg0, string arg1, objectId arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectSystemPropertiesInfo[] arg3) {
            this.Invoke("bindAllSystemProperties", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void bindAllSystemPropertiesAsync(sessionId arg0, string arg1, objectId arg2, objectSystemPropertiesInfo[] arg3) {
            this.bindAllSystemPropertiesAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void bindAllSystemPropertiesAsync(sessionId arg0, string arg1, objectId arg2, objectSystemPropertiesInfo[] arg3, object userState) {
            if ((this.bindAllSystemPropertiesOperationCompleted == null)) {
                this.bindAllSystemPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbindAllSystemPropertiesOperationCompleted);
            }
            this.InvokeAsync("bindAllSystemProperties", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.bindAllSystemPropertiesOperationCompleted, userState);
        }
        
        private void OnbindAllSystemPropertiesOperationCompleted(object arg) {
            if ((this.bindAllSystemPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bindAllSystemPropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getActiveRoles(sessionId arg0) {
            object[] results = this.Invoke("getActiveRoles", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getActiveRolesAsync(sessionId arg0) {
            this.getActiveRolesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getActiveRolesAsync(sessionId arg0, object userState) {
            if ((this.getActiveRolesOperationCompleted == null)) {
                this.getActiveRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveRolesOperationCompleted);
            }
            this.InvokeAsync("getActiveRoles", new object[] {
                        arg0}, this.getActiveRolesOperationCompleted, userState);
        }
        
        private void OngetActiveRolesOperationCompleted(object arg) {
            if ((this.getActiveRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveRolesCompleted(this, new getActiveRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeDisplays(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeDisplays", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeDisplaysAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribeDisplaysAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeDisplaysAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribeDisplaysOperationCompleted == null)) {
                this.unsubscribeDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeDisplaysOperationCompleted);
            }
            this.InvokeAsync("unsubscribeDisplays", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeDisplaysOperationCompleted, userState);
        }
        
        private void OnunsubscribeDisplaysOperationCompleted(object arg) {
            if ((this.unsubscribeDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeDisplaysCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setWindowInfo2(sessionId arg0, objectId arg1, windowInfo2 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setWindowInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setWindowInfo2Async(sessionId arg0, objectId arg1, windowInfo2 arg2, string[] arg3) {
            this.setWindowInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setWindowInfo2Async(sessionId arg0, objectId arg1, windowInfo2 arg2, string[] arg3, object userState) {
            if ((this.setWindowInfo2OperationCompleted == null)) {
                this.setWindowInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWindowInfo2OperationCompleted);
            }
            this.InvokeAsync("setWindowInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setWindowInfo2OperationCompleted, userState);
        }
        
        private void OnsetWindowInfo2OperationCompleted(object arg) {
            if ((this.setWindowInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWindowInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDispletInfo2(sessionId arg0, objectId arg1, displetInfo2 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDispletInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDispletInfo2Async(sessionId arg0, objectId arg1, displetInfo2 arg2, string[] arg3) {
            this.setDispletInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDispletInfo2Async(sessionId arg0, objectId arg1, displetInfo2 arg2, string[] arg3, object userState) {
            if ((this.setDispletInfo2OperationCompleted == null)) {
                this.setDispletInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDispletInfo2OperationCompleted);
            }
            this.InvokeAsync("setDispletInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDispletInfo2OperationCompleted, userState);
        }
        
        private void OnsetDispletInfo2OperationCompleted(object arg) {
            if ((this.setDispletInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDispletInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setWindowInfo3(sessionId arg0, objectId arg1, windowInfo3 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setWindowInfo3", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setWindowInfo3Async(sessionId arg0, objectId arg1, windowInfo3 arg2, string[] arg3) {
            this.setWindowInfo3Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setWindowInfo3Async(sessionId arg0, objectId arg1, windowInfo3 arg2, string[] arg3, object userState) {
            if ((this.setWindowInfo3OperationCompleted == null)) {
                this.setWindowInfo3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWindowInfo3OperationCompleted);
            }
            this.InvokeAsync("setWindowInfo3", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setWindowInfo3OperationCompleted, userState);
        }
        
        private void OnsetWindowInfo3OperationCompleted(object arg) {
            if ((this.setWindowInfo3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWindowInfo3Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveAsUserTilingInDisplay2(sessionId arg0, objectId arg1, string arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] rectangleInfo[] arg3, dimensionInfo arg4) {
            object[] results = this.Invoke("saveAsUserTilingInDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveAsUserTilingInDisplay2Async(sessionId arg0, objectId arg1, string arg2, rectangleInfo[] arg3, dimensionInfo arg4) {
            this.saveAsUserTilingInDisplay2Async(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void saveAsUserTilingInDisplay2Async(sessionId arg0, objectId arg1, string arg2, rectangleInfo[] arg3, dimensionInfo arg4, object userState) {
            if ((this.saveAsUserTilingInDisplay2OperationCompleted == null)) {
                this.saveAsUserTilingInDisplay2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsUserTilingInDisplay2OperationCompleted);
            }
            this.InvokeAsync("saveAsUserTilingInDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.saveAsUserTilingInDisplay2OperationCompleted, userState);
        }
        
        private void OnsaveAsUserTilingInDisplay2OperationCompleted(object arg) {
            if ((this.saveAsUserTilingInDisplay2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsUserTilingInDisplay2Completed(this, new saveAsUserTilingInDisplay2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDecoratorsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] decoratorInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDecoratorsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDecoratorsInfoAsync(sessionId arg0, objectId[] arg1, decoratorInfo[] arg2, string[] arg3) {
            this.setDecoratorsInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDecoratorsInfoAsync(sessionId arg0, objectId[] arg1, decoratorInfo[] arg2, string[] arg3, object userState) {
            if ((this.setDecoratorsInfoOperationCompleted == null)) {
                this.setDecoratorsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDecoratorsInfoOperationCompleted);
            }
            this.InvokeAsync("setDecoratorsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDecoratorsInfoOperationCompleted, userState);
        }
        
        private void OnsetDecoratorsInfoOperationCompleted(object arg) {
            if ((this.setDecoratorsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDecoratorsInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createStatusImageDecoratorTemplate2(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail2 arg2, statusImageDecoratorDetail arg3) {
            object[] results = this.Invoke("createStatusImageDecoratorTemplate2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createStatusImageDecoratorTemplate2Async(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail2 arg2, statusImageDecoratorDetail arg3) {
            this.createStatusImageDecoratorTemplate2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createStatusImageDecoratorTemplate2Async(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail2 arg2, statusImageDecoratorDetail arg3, object userState) {
            if ((this.createStatusImageDecoratorTemplate2OperationCompleted == null)) {
                this.createStatusImageDecoratorTemplate2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStatusImageDecoratorTemplate2OperationCompleted);
            }
            this.InvokeAsync("createStatusImageDecoratorTemplate2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createStatusImageDecoratorTemplate2OperationCompleted, userState);
        }
        
        private void OncreateStatusImageDecoratorTemplate2OperationCompleted(object arg) {
            if ((this.createStatusImageDecoratorTemplate2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStatusImageDecoratorTemplate2Completed(this, new createStatusImageDecoratorTemplate2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeTilerPool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeTilerPool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeTilerPoolAsync(sessionId arg0, string[] arg1) {
            this.subscribeTilerPoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeTilerPoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeTilerPoolOperationCompleted == null)) {
                this.subscribeTilerPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeTilerPoolOperationCompleted);
            }
            this.InvokeAsync("subscribeTilerPool", new object[] {
                        arg0,
                        arg1}, this.subscribeTilerPoolOperationCompleted, userState);
        }
        
        private void OnsubscribeTilerPoolOperationCompleted(object arg) {
            if ((this.subscribeTilerPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeTilerPoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId copyRole(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("copyRole", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void copyRoleAsync(sessionId arg0, objectId arg1) {
            this.copyRoleAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyRoleAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.copyRoleOperationCompleted == null)) {
                this.copyRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyRoleOperationCompleted);
            }
            this.InvokeAsync("copyRole", new object[] {
                        arg0,
                        arg1}, this.copyRoleOperationCompleted, userState);
        }
        
        private void OncopyRoleOperationCompleted(object arg) {
            if ((this.copyRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyRoleCompleted(this, new copyRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeDisplayByName(sessionId arg0, string arg1) {
            this.Invoke("removeDisplayByName", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removeDisplayByNameAsync(sessionId arg0, string arg1) {
            this.removeDisplayByNameAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeDisplayByNameAsync(sessionId arg0, string arg1, object userState) {
            if ((this.removeDisplayByNameOperationCompleted == null)) {
                this.removeDisplayByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveDisplayByNameOperationCompleted);
            }
            this.InvokeAsync("removeDisplayByName", new object[] {
                        arg0,
                        arg1}, this.removeDisplayByNameOperationCompleted, userState);
        }
        
        private void OnremoveDisplayByNameOperationCompleted(object arg) {
            if ((this.removeDisplayByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeDisplayByNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listAllMGS(sessionId arg0) {
            object[] results = this.Invoke("listAllMGS", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllMGSAsync(sessionId arg0) {
            this.listAllMGSAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllMGSAsync(sessionId arg0, object userState) {
            if ((this.listAllMGSOperationCompleted == null)) {
                this.listAllMGSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllMGSOperationCompleted);
            }
            this.InvokeAsync("listAllMGS", new object[] {
                        arg0}, this.listAllMGSOperationCompleted, userState);
        }
        
        private void OnlistAllMGSOperationCompleted(object arg) {
            if ((this.listAllMGSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllMGSCompleted(this, new listAllMGSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setAudioDecoratorDetail(sessionId arg0, objectId arg1, audioDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setAudioDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setAudioDecoratorDetailAsync(sessionId arg0, objectId arg1, audioDecoratorDetail arg2, string[] arg3) {
            this.setAudioDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setAudioDecoratorDetailAsync(sessionId arg0, objectId arg1, audioDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setAudioDecoratorDetailOperationCompleted == null)) {
                this.setAudioDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAudioDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setAudioDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setAudioDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetAudioDecoratorDetailOperationCompleted(object arg) {
            if ((this.setAudioDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAudioDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId copyGroup(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("copyGroup", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void copyGroupAsync(sessionId arg0, objectId arg1) {
            this.copyGroupAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyGroupAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.copyGroupOperationCompleted == null)) {
                this.copyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyGroupOperationCompleted);
            }
            this.InvokeAsync("copyGroup", new object[] {
                        arg0,
                        arg1}, this.copyGroupOperationCompleted, userState);
        }
        
        private void OncopyGroupOperationCompleted(object arg) {
            if ((this.copyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyGroupCompleted(this, new copyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public windowInfo[] getWindowsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getWindowsInfo", new object[] {
                        arg0,
                        arg1});
            return ((windowInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getWindowsInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getWindowsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getWindowsInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getWindowsInfoOperationCompleted == null)) {
                this.getWindowsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWindowsInfoOperationCompleted);
            }
            this.InvokeAsync("getWindowsInfo", new object[] {
                        arg0,
                        arg1}, this.getWindowsInfoOperationCompleted, userState);
        }
        
        private void OngetWindowsInfoOperationCompleted(object arg) {
            if ((this.getWindowsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWindowsInfoCompleted(this, new getWindowsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void importFile(sessionId arg0, string arg1) {
            this.Invoke("importFile", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void importFileAsync(sessionId arg0, string arg1) {
            this.importFileAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void importFileAsync(sessionId arg0, string arg1, object userState) {
            if ((this.importFileOperationCompleted == null)) {
                this.importFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportFileOperationCompleted);
            }
            this.InvokeAsync("importFile", new object[] {
                        arg0,
                        arg1}, this.importFileOperationCompleted, userState);
        }
        
        private void OnimportFileOperationCompleted(object arg) {
            if ((this.importFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSystemVariables(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeSystemVariables", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeSystemVariablesAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribeSystemVariablesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeSystemVariablesAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribeSystemVariablesOperationCompleted == null)) {
                this.unsubscribeSystemVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSystemVariablesOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSystemVariables", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeSystemVariablesOperationCompleted, userState);
        }
        
        private void OnunsubscribeSystemVariablesOperationCompleted(object arg) {
            if ((this.unsubscribeSystemVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSystemVariablesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setAudioDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] audioDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setAudioDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setAudioDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, audioDecoratorDetail[] arg2, string[] arg3) {
            this.setAudioDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setAudioDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, audioDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setAudioDecoratorsDetailOperationCompleted == null)) {
                this.setAudioDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAudioDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setAudioDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setAudioDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetAudioDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setAudioDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAudioDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<bool>[] forceRemoveGroups(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("forceRemoveGroups", new object[] {
                        arg0,
                        arg1});
            return ((System.Nullable<bool>[])(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveGroupsAsync(sessionId arg0, objectId[] arg1) {
            this.forceRemoveGroupsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveGroupsAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.forceRemoveGroupsOperationCompleted == null)) {
                this.forceRemoveGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveGroupsOperationCompleted);
            }
            this.InvokeAsync("forceRemoveGroups", new object[] {
                        arg0,
                        arg1}, this.forceRemoveGroupsOperationCompleted, userState);
        }
        
        private void OnforceRemoveGroupsOperationCompleted(object arg) {
            if ((this.forceRemoveGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveGroupsCompleted(this, new forceRemoveGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool isRestoreFinished() {
            object[] results = this.Invoke("isRestoreFinished", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isRestoreFinishedAsync() {
            this.isRestoreFinishedAsync(null);
        }
        
        /// <remarks/>
        public void isRestoreFinishedAsync(object userState) {
            if ((this.isRestoreFinishedOperationCompleted == null)) {
                this.isRestoreFinishedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisRestoreFinishedOperationCompleted);
            }
            this.InvokeAsync("isRestoreFinished", new object[0], this.isRestoreFinishedOperationCompleted, userState);
        }
        
        private void OnisRestoreFinishedOperationCompleted(object arg) {
            if ((this.isRestoreFinishedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isRestoreFinishedCompleted(this, new isRestoreFinishedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setTilerInfo2(sessionId arg0, objectId arg1, tilerInfo2 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setTilerInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setTilerInfo2Async(sessionId arg0, objectId arg1, tilerInfo2 arg2, string[] arg3) {
            this.setTilerInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setTilerInfo2Async(sessionId arg0, objectId arg1, tilerInfo2 arg2, string[] arg3, object userState) {
            if ((this.setTilerInfo2OperationCompleted == null)) {
                this.setTilerInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTilerInfo2OperationCompleted);
            }
            this.InvokeAsync("setTilerInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setTilerInfo2OperationCompleted, userState);
        }
        
        private void OnsetTilerInfo2OperationCompleted(object arg) {
            if ((this.setTilerInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTilerInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSquidModeConfigurations(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeSquidModeConfigurations", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeSquidModeConfigurationsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribeSquidModeConfigurationsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeSquidModeConfigurationsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribeSquidModeConfigurationsOperationCompleted == null)) {
                this.unsubscribeSquidModeConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSquidModeConfigurationsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSquidModeConfigurations", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeSquidModeConfigurationsOperationCompleted, userState);
        }
        
        private void OnunsubscribeSquidModeConfigurationsOperationCompleted(object arg) {
            if ((this.unsubscribeSquidModeConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSquidModeConfigurationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findNGP(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findNGP", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findNGPAsync(sessionId arg0, string arg1) {
            this.findNGPAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findNGPAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findNGPOperationCompleted == null)) {
                this.findNGPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindNGPOperationCompleted);
            }
            this.InvokeAsync("findNGP", new object[] {
                        arg0,
                        arg1}, this.findNGPOperationCompleted, userState);
        }
        
        private void OnfindNGPOperationCompleted(object arg) {
            if ((this.findNGPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findNGPCompleted(this, new findNGPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void createDisplayModule(sessionId arg0, objectId arg1, moduleInfo arg2) {
            this.Invoke("createDisplayModule", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void createDisplayModuleAsync(sessionId arg0, objectId arg1, moduleInfo arg2) {
            this.createDisplayModuleAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createDisplayModuleAsync(sessionId arg0, objectId arg1, moduleInfo arg2, object userState) {
            if ((this.createDisplayModuleOperationCompleted == null)) {
                this.createDisplayModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDisplayModuleOperationCompleted);
            }
            this.InvokeAsync("createDisplayModule", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createDisplayModuleOperationCompleted, userState);
        }
        
        private void OncreateDisplayModuleOperationCompleted(object arg) {
            if ((this.createDisplayModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDisplayModuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAll(sessionId arg0) {
            this.Invoke("subscribeAll", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void subscribeAllAsync(sessionId arg0) {
            this.subscribeAllAsync(arg0, null);
        }
        
        /// <remarks/>
        public void subscribeAllAsync(sessionId arg0, object userState) {
            if ((this.subscribeAllOperationCompleted == null)) {
                this.subscribeAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllOperationCompleted);
            }
            this.InvokeAsync("subscribeAll", new object[] {
                        arg0}, this.subscribeAllOperationCompleted, userState);
        }
        
        private void OnsubscribeAllOperationCompleted(object arg) {
            if ((this.subscribeAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void loadDefaultSnapshot(sessionId arg0, objectId arg1) {
            this.Invoke("loadDefaultSnapshot", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void loadDefaultSnapshotAsync(sessionId arg0, objectId arg1) {
            this.loadDefaultSnapshotAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void loadDefaultSnapshotAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.loadDefaultSnapshotOperationCompleted == null)) {
                this.loadDefaultSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloadDefaultSnapshotOperationCompleted);
            }
            this.InvokeAsync("loadDefaultSnapshot", new object[] {
                        arg0,
                        arg1}, this.loadDefaultSnapshotOperationCompleted, userState);
        }
        
        private void OnloadDefaultSnapshotOperationCompleted(object arg) {
            if ((this.loadDefaultSnapshotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loadDefaultSnapshotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public ngpInfo getNGPInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getNGPInfo", new object[] {
                        arg0,
                        arg1});
            return ((ngpInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getNGPInfoAsync(sessionId arg0, objectId arg1) {
            this.getNGPInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getNGPInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getNGPInfoOperationCompleted == null)) {
                this.getNGPInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNGPInfoOperationCompleted);
            }
            this.InvokeAsync("getNGPInfo", new object[] {
                        arg0,
                        arg1}, this.getNGPInfoOperationCompleted, userState);
        }
        
        private void OngetNGPInfoOperationCompleted(object arg) {
            if ((this.getNGPInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNGPInfoCompleted(this, new getNGPInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeTiler(sessionId arg0, objectId arg1) {
            this.Invoke("removeTiler", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removeTilerAsync(sessionId arg0, objectId arg1) {
            this.removeTilerAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeTilerAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeTilerOperationCompleted == null)) {
                this.removeTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveTilerOperationCompleted);
            }
            this.InvokeAsync("removeTiler", new object[] {
                        arg0,
                        arg1}, this.removeTilerOperationCompleted, userState);
        }
        
        private void OnremoveTilerOperationCompleted(object arg) {
            if ((this.removeTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeTilerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public perspectiveWindowDetail getPerspectiveWindowDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getPerspectiveWindowDetail", new object[] {
                        arg0,
                        arg1});
            return ((perspectiveWindowDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getPerspectiveWindowDetailAsync(sessionId arg0, objectId arg1) {
            this.getPerspectiveWindowDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getPerspectiveWindowDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getPerspectiveWindowDetailOperationCompleted == null)) {
                this.getPerspectiveWindowDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPerspectiveWindowDetailOperationCompleted);
            }
            this.InvokeAsync("getPerspectiveWindowDetail", new object[] {
                        arg0,
                        arg1}, this.getPerspectiveWindowDetailOperationCompleted, userState);
        }
        
        private void OngetPerspectiveWindowDetailOperationCompleted(object arg) {
            if ((this.getPerspectiveWindowDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPerspectiveWindowDetailCompleted(this, new getPerspectiveWindowDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSystemVariablePool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeSystemVariablePool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeSystemVariablePoolAsync(sessionId arg0, string[] arg1) {
            this.subscribeSystemVariablePoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeSystemVariablePoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeSystemVariablePoolOperationCompleted == null)) {
                this.subscribeSystemVariablePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSystemVariablePoolOperationCompleted);
            }
            this.InvokeAsync("subscribeSystemVariablePool", new object[] {
                        arg0,
                        arg1}, this.subscribeSystemVariablePoolOperationCompleted, userState);
        }
        
        private void OnsubscribeSystemVariablePoolOperationCompleted(object arg) {
            if ((this.subscribeSystemVariablePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSystemVariablePoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeProVNCDefaultSetting(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeProVNCDefaultSetting", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeProVNCDefaultSettingAsync(sessionId arg0, string[] arg1) {
            this.subscribeProVNCDefaultSettingAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeProVNCDefaultSettingAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeProVNCDefaultSettingOperationCompleted == null)) {
                this.subscribeProVNCDefaultSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeProVNCDefaultSettingOperationCompleted);
            }
            this.InvokeAsync("subscribeProVNCDefaultSetting", new object[] {
                        arg0,
                        arg1}, this.subscribeProVNCDefaultSettingOperationCompleted, userState);
        }
        
        private void OnsubscribeProVNCDefaultSettingOperationCompleted(object arg) {
            if ((this.subscribeProVNCDefaultSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeProVNCDefaultSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findMGS(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findMGS", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findMGSAsync(sessionId arg0, string arg1) {
            this.findMGSAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findMGSAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findMGSOperationCompleted == null)) {
                this.findMGSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindMGSOperationCompleted);
            }
            this.InvokeAsync("findMGS", new object[] {
                        arg0,
                        arg1}, this.findMGSOperationCompleted, userState);
        }
        
        private void OnfindMGSOperationCompleted(object arg) {
            if ((this.findMGSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findMGSCompleted(this, new findMGSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public staticTextDecoratorDetail getStaticTextDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getStaticTextDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((staticTextDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getStaticTextDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getStaticTextDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getStaticTextDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getStaticTextDecoratorDetailOperationCompleted == null)) {
                this.getStaticTextDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStaticTextDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getStaticTextDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getStaticTextDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetStaticTextDecoratorDetailOperationCompleted(object arg) {
            if ((this.getStaticTextDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStaticTextDecoratorDetailCompleted(this, new getStaticTextDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeTiler(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeTiler", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeTilerAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeTilerAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeTilerAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeTilerOperationCompleted == null)) {
                this.subscribeTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeTilerOperationCompleted);
            }
            this.InvokeAsync("subscribeTiler", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeTilerOperationCompleted, userState);
        }
        
        private void OnsubscribeTilerOperationCompleted(object arg) {
            if ((this.subscribeTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeTilerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool forceRemoveUser(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("forceRemoveUser", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveUserAsync(sessionId arg0, objectId arg1) {
            this.forceRemoveUserAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveUserAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.forceRemoveUserOperationCompleted == null)) {
                this.forceRemoveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveUserOperationCompleted);
            }
            this.InvokeAsync("forceRemoveUser", new object[] {
                        arg0,
                        arg1}, this.forceRemoveUserOperationCompleted, userState);
        }
        
        private void OnforceRemoveUserOperationCompleted(object arg) {
            if ((this.forceRemoveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveUserCompleted(this, new forceRemoveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userInfo[] getUsersInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getUsersInfo", new object[] {
                        arg0,
                        arg1});
            return ((userInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getUsersInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getUsersInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getUsersInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getUsersInfoOperationCompleted == null)) {
                this.getUsersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersInfoOperationCompleted);
            }
            this.InvokeAsync("getUsersInfo", new object[] {
                        arg0,
                        arg1}, this.getUsersInfoOperationCompleted, userState);
        }
        
        private void OngetUsersInfoOperationCompleted(object arg) {
            if ((this.getUsersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersInfoCompleted(this, new getUsersInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public tilerInfo2[] getTilersInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getTilersInfo2", new object[] {
                        arg0,
                        arg1});
            return ((tilerInfo2[])(results[0]));
        }
        
        /// <remarks/>
        public void getTilersInfo2Async(sessionId arg0, objectId[] arg1) {
            this.getTilersInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getTilersInfo2Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getTilersInfo2OperationCompleted == null)) {
                this.getTilersInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTilersInfo2OperationCompleted);
            }
            this.InvokeAsync("getTilersInfo2", new object[] {
                        arg0,
                        arg1}, this.getTilersInfo2OperationCompleted, userState);
        }
        
        private void OngetTilersInfo2OperationCompleted(object arg) {
            if ((this.getTilersInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTilersInfo2Completed(this, new getTilersInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId copyPerspective(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("copyPerspective", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void copyPerspectiveAsync(sessionId arg0, objectId arg1) {
            this.copyPerspectiveAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyPerspectiveAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.copyPerspectiveOperationCompleted == null)) {
                this.copyPerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyPerspectiveOperationCompleted);
            }
            this.InvokeAsync("copyPerspective", new object[] {
                        arg0,
                        arg1}, this.copyPerspectiveOperationCompleted, userState);
        }
        
        private void OncopyPerspectiveOperationCompleted(object arg) {
            if ((this.copyPerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyPerspectiveCompleted(this, new copyPerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setStatusLabelDecoratorDetail(sessionId arg0, objectId arg1, statusLabelDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setStatusLabelDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setStatusLabelDecoratorDetailAsync(sessionId arg0, objectId arg1, statusLabelDecoratorDetail arg2, string[] arg3) {
            this.setStatusLabelDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setStatusLabelDecoratorDetailAsync(sessionId arg0, objectId arg1, statusLabelDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setStatusLabelDecoratorDetailOperationCompleted == null)) {
                this.setStatusLabelDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStatusLabelDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setStatusLabelDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setStatusLabelDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetStatusLabelDecoratorDetailOperationCompleted(object arg) {
            if ((this.setStatusLabelDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStatusLabelDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSidebarDefaultSettingInfo(sessionId arg0, sidebarDefaultSettingInfo arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("setSidebarDefaultSettingInfo", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setSidebarDefaultSettingInfoAsync(sessionId arg0, sidebarDefaultSettingInfo arg1, string[] arg2) {
            this.setSidebarDefaultSettingInfoAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setSidebarDefaultSettingInfoAsync(sessionId arg0, sidebarDefaultSettingInfo arg1, string[] arg2, object userState) {
            if ((this.setSidebarDefaultSettingInfoOperationCompleted == null)) {
                this.setSidebarDefaultSettingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSidebarDefaultSettingInfoOperationCompleted);
            }
            this.InvokeAsync("setSidebarDefaultSettingInfo", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setSidebarDefaultSettingInfoOperationCompleted, userState);
        }
        
        private void OnsetSidebarDefaultSettingInfoOperationCompleted(object arg) {
            if ((this.setSidebarDefaultSettingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSidebarDefaultSettingInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribePerspectives(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribePerspectives", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribePerspectivesAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribePerspectivesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribePerspectivesAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribePerspectivesOperationCompleted == null)) {
                this.subscribePerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribePerspectivesOperationCompleted);
            }
            this.InvokeAsync("subscribePerspectives", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribePerspectivesOperationCompleted, userState);
        }
        
        private void OnsubscribePerspectivesOperationCompleted(object arg) {
            if ((this.subscribePerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribePerspectivesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool forceRemovePerspective(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("forceRemovePerspective", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forceRemovePerspectiveAsync(sessionId arg0, objectId arg1) {
            this.forceRemovePerspectiveAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemovePerspectiveAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.forceRemovePerspectiveOperationCompleted == null)) {
                this.forceRemovePerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemovePerspectiveOperationCompleted);
            }
            this.InvokeAsync("forceRemovePerspective", new object[] {
                        arg0,
                        arg1}, this.forceRemovePerspectiveOperationCompleted, userState);
        }
        
        private void OnforceRemovePerspectiveOperationCompleted(object arg) {
            if ((this.forceRemovePerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemovePerspectiveCompleted(this, new forceRemovePerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userWrapper[] listAllUsers(sessionId arg0) {
            object[] results = this.Invoke("listAllUsers", new object[] {
                        arg0});
            return ((userWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllUsersAsync(sessionId arg0) {
            this.listAllUsersAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllUsersAsync(sessionId arg0, object userState) {
            if ((this.listAllUsersOperationCompleted == null)) {
                this.listAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllUsersOperationCompleted);
            }
            this.InvokeAsync("listAllUsers", new object[] {
                        arg0}, this.listAllUsersOperationCompleted, userState);
        }
        
        private void OnlistAllUsersOperationCompleted(object arg) {
            if ((this.listAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllUsersCompleted(this, new listAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listOfAssociatedSnapshotsWithTiler(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("listOfAssociatedSnapshotsWithTiler", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfAssociatedSnapshotsWithTilerAsync(sessionId arg0, objectId arg1) {
            this.listOfAssociatedSnapshotsWithTilerAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listOfAssociatedSnapshotsWithTilerAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.listOfAssociatedSnapshotsWithTilerOperationCompleted == null)) {
                this.listOfAssociatedSnapshotsWithTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfAssociatedSnapshotsWithTilerOperationCompleted);
            }
            this.InvokeAsync("listOfAssociatedSnapshotsWithTiler", new object[] {
                        arg0,
                        arg1}, this.listOfAssociatedSnapshotsWithTilerOperationCompleted, userState);
        }
        
        private void OnlistOfAssociatedSnapshotsWithTilerOperationCompleted(object arg) {
            if ((this.listOfAssociatedSnapshotsWithTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfAssociatedSnapshotsWithTilerCompleted(this, new listOfAssociatedSnapshotsWithTilerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] copyGroups(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("copyGroups", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void copyGroupsAsync(sessionId arg0, objectId[] arg1) {
            this.copyGroupsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyGroupsAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.copyGroupsOperationCompleted == null)) {
                this.copyGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyGroupsOperationCompleted);
            }
            this.InvokeAsync("copyGroups", new object[] {
                        arg0,
                        arg1}, this.copyGroupsOperationCompleted, userState);
        }
        
        private void OncopyGroupsOperationCompleted(object arg) {
            if ((this.copyGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyGroupsCompleted(this, new copyGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllTilers(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllTilers", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllTilersAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllTilersAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllTilersAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllTilersOperationCompleted == null)) {
                this.subscribeAllTilersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllTilersOperationCompleted);
            }
            this.InvokeAsync("subscribeAllTilers", new object[] {
                        arg0,
                        arg1}, this.subscribeAllTilersOperationCompleted, userState);
        }
        
        private void OnsubscribeAllTilersOperationCompleted(object arg) {
            if ((this.subscribeAllTilersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllTilersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public sourceInfo getSourceInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSourceInfo", new object[] {
                        arg0,
                        arg1});
            return ((sourceInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSourceInfoAsync(sessionId arg0, objectId arg1) {
            this.getSourceInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSourceInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSourceInfoOperationCompleted == null)) {
                this.getSourceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourceInfoOperationCompleted);
            }
            this.InvokeAsync("getSourceInfo", new object[] {
                        arg0,
                        arg1}, this.getSourceInfoOperationCompleted, userState);
        }
        
        private void OngetSourceInfoOperationCompleted(object arg) {
            if ((this.getSourceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourceInfoCompleted(this, new getSourceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listOfAssociatedPerspectives(sessionId arg0, string arg1) {
            object[] results = this.Invoke("listOfAssociatedPerspectives", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfAssociatedPerspectivesAsync(sessionId arg0, string arg1) {
            this.listOfAssociatedPerspectivesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listOfAssociatedPerspectivesAsync(sessionId arg0, string arg1, object userState) {
            if ((this.listOfAssociatedPerspectivesOperationCompleted == null)) {
                this.listOfAssociatedPerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfAssociatedPerspectivesOperationCompleted);
            }
            this.InvokeAsync("listOfAssociatedPerspectives", new object[] {
                        arg0,
                        arg1}, this.listOfAssociatedPerspectivesOperationCompleted, userState);
        }
        
        private void OnlistOfAssociatedPerspectivesOperationCompleted(object arg) {
            if ((this.listOfAssociatedPerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfAssociatedPerspectivesCompleted(this, new listOfAssociatedPerspectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllWindows(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllWindows", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllWindowsAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllWindowsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllWindowsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllWindowsOperationCompleted == null)) {
                this.unsubscribeAllWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllWindowsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllWindows", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllWindowsOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllWindowsOperationCompleted(object arg) {
            if ((this.unsubscribeAllWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllWindowsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDisplayInfo(sessionId arg0, objectId arg1, displayInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDisplayInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDisplayInfoAsync(sessionId arg0, objectId arg1, displayInfo arg2, string[] arg3) {
            this.setDisplayInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDisplayInfoAsync(sessionId arg0, objectId arg1, displayInfo arg2, string[] arg3, object userState) {
            if ((this.setDisplayInfoOperationCompleted == null)) {
                this.setDisplayInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDisplayInfoOperationCompleted);
            }
            this.InvokeAsync("setDisplayInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDisplayInfoOperationCompleted, userState);
        }
        
        private void OnsetDisplayInfoOperationCompleted(object arg) {
            if ((this.setDisplayInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDisplayInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] copyDisplays(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("copyDisplays", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void copyDisplaysAsync(sessionId arg0, objectId[] arg1) {
            this.copyDisplaysAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyDisplaysAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.copyDisplaysOperationCompleted == null)) {
                this.copyDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyDisplaysOperationCompleted);
            }
            this.InvokeAsync("copyDisplays", new object[] {
                        arg0,
                        arg1}, this.copyDisplaysOperationCompleted, userState);
        }
        
        private void OncopyDisplaysOperationCompleted(object arg) {
            if ((this.copyDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyDisplaysCompleted(this, new copyDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listOfAssociatedDisplaysWithTiler(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("listOfAssociatedDisplaysWithTiler", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfAssociatedDisplaysWithTilerAsync(sessionId arg0, objectId arg1) {
            this.listOfAssociatedDisplaysWithTilerAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listOfAssociatedDisplaysWithTilerAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.listOfAssociatedDisplaysWithTilerOperationCompleted == null)) {
                this.listOfAssociatedDisplaysWithTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfAssociatedDisplaysWithTilerOperationCompleted);
            }
            this.InvokeAsync("listOfAssociatedDisplaysWithTiler", new object[] {
                        arg0,
                        arg1}, this.listOfAssociatedDisplaysWithTilerOperationCompleted, userState);
        }
        
        private void OnlistOfAssociatedDisplaysWithTilerOperationCompleted(object arg) {
            if ((this.listOfAssociatedDisplaysWithTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfAssociatedDisplaysWithTilerCompleted(this, new listOfAssociatedDisplaysWithTilerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchSystemVariableByType(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchSystemVariableByType", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchSystemVariableByTypeAsync(sessionId arg0, string arg1) {
            this.searchSystemVariableByTypeAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchSystemVariableByTypeAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchSystemVariableByTypeOperationCompleted == null)) {
                this.searchSystemVariableByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchSystemVariableByTypeOperationCompleted);
            }
            this.InvokeAsync("searchSystemVariableByType", new object[] {
                        arg0,
                        arg1}, this.searchSystemVariableByTypeOperationCompleted, userState);
        }
        
        private void OnsearchSystemVariableByTypeOperationCompleted(object arg) {
            if ((this.searchSystemVariableByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchSystemVariableByTypeCompleted(this, new searchSystemVariableByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public applicationWindowDetail[] getApplicationWindowsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getApplicationWindowsDetail", new object[] {
                        arg0,
                        arg1});
            return ((applicationWindowDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getApplicationWindowsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getApplicationWindowsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getApplicationWindowsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getApplicationWindowsDetailOperationCompleted == null)) {
                this.getApplicationWindowsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplicationWindowsDetailOperationCompleted);
            }
            this.InvokeAsync("getApplicationWindowsDetail", new object[] {
                        arg0,
                        arg1}, this.getApplicationWindowsDetailOperationCompleted, userState);
        }
        
        private void OngetApplicationWindowsDetailOperationCompleted(object arg) {
            if ((this.getApplicationWindowsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplicationWindowsDetailCompleted(this, new getApplicationWindowsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeDisplet(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeDisplet", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeDispletAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeDispletAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeDispletAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeDispletOperationCompleted == null)) {
                this.subscribeDispletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeDispletOperationCompleted);
            }
            this.InvokeAsync("subscribeDisplet", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeDispletOperationCompleted, userState);
        }
        
        private void OnsubscribeDispletOperationCompleted(object arg) {
            if ((this.subscribeDispletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeDispletCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribePerspectivePool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribePerspectivePool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribePerspectivePoolAsync(sessionId arg0, string[] arg1) {
            this.subscribePerspectivePoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribePerspectivePoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribePerspectivePoolOperationCompleted == null)) {
                this.subscribePerspectivePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribePerspectivePoolOperationCompleted);
            }
            this.InvokeAsync("subscribePerspectivePool", new object[] {
                        arg0,
                        arg1}, this.subscribePerspectivePoolOperationCompleted, userState);
        }
        
        private void OnsubscribePerspectivePoolOperationCompleted(object arg) {
            if ((this.subscribePerspectivePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribePerspectivePoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ngpInfo[] getNGPsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getNGPsInfo", new object[] {
                        arg0,
                        arg1});
            return ((ngpInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getNGPsInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getNGPsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getNGPsInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getNGPsInfoOperationCompleted == null)) {
                this.getNGPsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNGPsInfoOperationCompleted);
            }
            this.InvokeAsync("getNGPsInfo", new object[] {
                        arg0,
                        arg1}, this.getNGPsInfoOperationCompleted, userState);
        }
        
        private void OngetNGPsInfoOperationCompleted(object arg) {
            if ((this.getNGPsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNGPsInfoCompleted(this, new getNGPsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unbindAllSystemVariables(sessionId arg0, string arg1, objectId arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectSystemVariablesInfo[] arg3) {
            this.Invoke("unbindAllSystemVariables", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void unbindAllSystemVariablesAsync(sessionId arg0, string arg1, objectId arg2, objectSystemVariablesInfo[] arg3) {
            this.unbindAllSystemVariablesAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void unbindAllSystemVariablesAsync(sessionId arg0, string arg1, objectId arg2, objectSystemVariablesInfo[] arg3, object userState) {
            if ((this.unbindAllSystemVariablesOperationCompleted == null)) {
                this.unbindAllSystemVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunbindAllSystemVariablesOperationCompleted);
            }
            this.InvokeAsync("unbindAllSystemVariables", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.unbindAllSystemVariablesOperationCompleted, userState);
        }
        
        private void OnunbindAllSystemVariablesOperationCompleted(object arg) {
            if ((this.unbindAllSystemVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unbindAllSystemVariablesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public licenseInfo getLicenseInfo(sessionId arg0) {
            object[] results = this.Invoke("getLicenseInfo", new object[] {
                        arg0});
            return ((licenseInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getLicenseInfoAsync(sessionId arg0) {
            this.getLicenseInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getLicenseInfoAsync(sessionId arg0, object userState) {
            if ((this.getLicenseInfoOperationCompleted == null)) {
                this.getLicenseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLicenseInfoOperationCompleted);
            }
            this.InvokeAsync("getLicenseInfo", new object[] {
                        arg0}, this.getLicenseInfoOperationCompleted, userState);
        }
        
        private void OngetLicenseInfoOperationCompleted(object arg) {
            if ((this.getLicenseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLicenseInfoCompleted(this, new getLicenseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public perspectiveWrapper[] listAllPerspectives(sessionId arg0) {
            object[] results = this.Invoke("listAllPerspectives", new object[] {
                        arg0});
            return ((perspectiveWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllPerspectivesAsync(sessionId arg0) {
            this.listAllPerspectivesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllPerspectivesAsync(sessionId arg0, object userState) {
            if ((this.listAllPerspectivesOperationCompleted == null)) {
                this.listAllPerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllPerspectivesOperationCompleted);
            }
            this.InvokeAsync("listAllPerspectives", new object[] {
                        arg0}, this.listAllPerspectivesOperationCompleted, userState);
        }
        
        private void OnlistAllPerspectivesOperationCompleted(object arg) {
            if ((this.listAllPerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllPerspectivesCompleted(this, new listAllPerspectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createDisplet2(sessionId arg0, objectId arg1, displetInfo2 arg2, bool arg3) {
            object[] results = this.Invoke("createDisplet2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createDisplet2Async(sessionId arg0, objectId arg1, displetInfo2 arg2, bool arg3) {
            this.createDisplet2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createDisplet2Async(sessionId arg0, objectId arg1, displetInfo2 arg2, bool arg3, object userState) {
            if ((this.createDisplet2OperationCompleted == null)) {
                this.createDisplet2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDisplet2OperationCompleted);
            }
            this.InvokeAsync("createDisplet2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createDisplet2OperationCompleted, userState);
        }
        
        private void OncreateDisplet2OperationCompleted(object arg) {
            if ((this.createDisplet2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDisplet2Completed(this, new createDisplet2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setLicenseInfo(sessionId arg0, licenseInfo arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("setLicenseInfo", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setLicenseInfoAsync(sessionId arg0, licenseInfo arg1, string[] arg2) {
            this.setLicenseInfoAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setLicenseInfoAsync(sessionId arg0, licenseInfo arg1, string[] arg2, object userState) {
            if ((this.setLicenseInfoOperationCompleted == null)) {
                this.setLicenseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLicenseInfoOperationCompleted);
            }
            this.InvokeAsync("setLicenseInfo", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setLicenseInfoOperationCompleted, userState);
        }
        
        private void OnsetLicenseInfoOperationCompleted(object arg) {
            if ((this.setLicenseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLicenseInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void backupToConfig(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2, string arg3) {
            this.Invoke("backupToConfig", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void backupToConfigAsync(sessionId arg0, objectId arg1, string[] arg2, string arg3) {
            this.backupToConfigAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void backupToConfigAsync(sessionId arg0, objectId arg1, string[] arg2, string arg3, object userState) {
            if ((this.backupToConfigOperationCompleted == null)) {
                this.backupToConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbackupToConfigOperationCompleted);
            }
            this.InvokeAsync("backupToConfig", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.backupToConfigOperationCompleted, userState);
        }
        
        private void OnbackupToConfigOperationCompleted(object arg) {
            if ((this.backupToConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.backupToConfigCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setImageDecoratorsDetail2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] imageDecoratorDetail2[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setImageDecoratorsDetail2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setImageDecoratorsDetail2Async(sessionId arg0, objectId[] arg1, imageDecoratorDetail2[] arg2, string[] arg3) {
            this.setImageDecoratorsDetail2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setImageDecoratorsDetail2Async(sessionId arg0, objectId[] arg1, imageDecoratorDetail2[] arg2, string[] arg3, object userState) {
            if ((this.setImageDecoratorsDetail2OperationCompleted == null)) {
                this.setImageDecoratorsDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetImageDecoratorsDetail2OperationCompleted);
            }
            this.InvokeAsync("setImageDecoratorsDetail2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setImageDecoratorsDetail2OperationCompleted, userState);
        }
        
        private void OnsetImageDecoratorsDetail2OperationCompleted(object arg) {
            if ((this.setImageDecoratorsDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setImageDecoratorsDetail2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public screenScrapeSourceDetail2[] getScreenScrapeSourcesDetail2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getScreenScrapeSourcesDetail2", new object[] {
                        arg0,
                        arg1});
            return ((screenScrapeSourceDetail2[])(results[0]));
        }
        
        /// <remarks/>
        public void getScreenScrapeSourcesDetail2Async(sessionId arg0, objectId[] arg1) {
            this.getScreenScrapeSourcesDetail2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getScreenScrapeSourcesDetail2Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getScreenScrapeSourcesDetail2OperationCompleted == null)) {
                this.getScreenScrapeSourcesDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetScreenScrapeSourcesDetail2OperationCompleted);
            }
            this.InvokeAsync("getScreenScrapeSourcesDetail2", new object[] {
                        arg0,
                        arg1}, this.getScreenScrapeSourcesDetail2OperationCompleted, userState);
        }
        
        private void OngetScreenScrapeSourcesDetail2OperationCompleted(object arg) {
            if ((this.getScreenScrapeSourcesDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getScreenScrapeSourcesDetail2Completed(this, new getScreenScrapeSourcesDetail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeApplicationsFromDisplay(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg2) {
            object[] results = this.Invoke("removeApplicationsFromDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeApplicationsFromDisplayAsync(sessionId arg0, objectId arg1, objectId[] arg2) {
            this.removeApplicationsFromDisplayAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void removeApplicationsFromDisplayAsync(sessionId arg0, objectId arg1, objectId[] arg2, object userState) {
            if ((this.removeApplicationsFromDisplayOperationCompleted == null)) {
                this.removeApplicationsFromDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveApplicationsFromDisplayOperationCompleted);
            }
            this.InvokeAsync("removeApplicationsFromDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.removeApplicationsFromDisplayOperationCompleted, userState);
        }
        
        private void OnremoveApplicationsFromDisplayOperationCompleted(object arg) {
            if ((this.removeApplicationsFromDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeApplicationsFromDisplayCompleted(this, new removeApplicationsFromDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSourceOffset(sessionId arg0, objectId arg1, string arg2) {
            this.Invoke("setSourceOffset", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setSourceOffsetAsync(sessionId arg0, objectId arg1, string arg2) {
            this.setSourceOffsetAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setSourceOffsetAsync(sessionId arg0, objectId arg1, string arg2, object userState) {
            if ((this.setSourceOffsetOperationCompleted == null)) {
                this.setSourceOffsetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSourceOffsetOperationCompleted);
            }
            this.InvokeAsync("setSourceOffset", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setSourceOffsetOperationCompleted, userState);
        }
        
        private void OnsetSourceOffsetOperationCompleted(object arg) {
            if ((this.setSourceOffsetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSourceOffsetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public keyboardShortcutDefaultSettingsInfo[] getKeyboardShortcutsDefaultSettingsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getKeyboardShortcutsDefaultSettingsInfo", new object[] {
                        arg0,
                        arg1});
            return ((keyboardShortcutDefaultSettingsInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getKeyboardShortcutsDefaultSettingsInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getKeyboardShortcutsDefaultSettingsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getKeyboardShortcutsDefaultSettingsInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getKeyboardShortcutsDefaultSettingsInfoOperationCompleted == null)) {
                this.getKeyboardShortcutsDefaultSettingsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKeyboardShortcutsDefaultSettingsInfoOperationCompleted);
            }
            this.InvokeAsync("getKeyboardShortcutsDefaultSettingsInfo", new object[] {
                        arg0,
                        arg1}, this.getKeyboardShortcutsDefaultSettingsInfoOperationCompleted, userState);
        }
        
        private void OngetKeyboardShortcutsDefaultSettingsInfoOperationCompleted(object arg) {
            if ((this.getKeyboardShortcutsDefaultSettingsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKeyboardShortcutsDefaultSettingsInfoCompleted(this, new getKeyboardShortcutsDefaultSettingsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void partialRestore(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2, bool arg3) {
            this.Invoke("partialRestore", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void partialRestoreAsync(sessionId arg0, objectId arg1, string[] arg2, bool arg3) {
            this.partialRestoreAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void partialRestoreAsync(sessionId arg0, objectId arg1, string[] arg2, bool arg3, object userState) {
            if ((this.partialRestoreOperationCompleted == null)) {
                this.partialRestoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpartialRestoreOperationCompleted);
            }
            this.InvokeAsync("partialRestore", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.partialRestoreOperationCompleted, userState);
        }
        
        private void OnpartialRestoreOperationCompleted(object arg) {
            if ((this.partialRestoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.partialRestoreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listConfigurations(sessionId arg0) {
            object[] results = this.Invoke("listConfigurations", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listConfigurationsAsync(sessionId arg0) {
            this.listConfigurationsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listConfigurationsAsync(sessionId arg0, object userState) {
            if ((this.listConfigurationsOperationCompleted == null)) {
                this.listConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistConfigurationsOperationCompleted);
            }
            this.InvokeAsync("listConfigurations", new object[] {
                        arg0}, this.listConfigurationsOperationCompleted, userState);
        }
        
        private void OnlistConfigurationsOperationCompleted(object arg) {
            if ((this.listConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listConfigurationsCompleted(this, new listConfigurationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createScreenScrapeSource(sessionId arg0, sourceInfo arg1, screenScrapeSourceDetail arg2) {
            object[] results = this.Invoke("createScreenScrapeSource", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createScreenScrapeSourceAsync(sessionId arg0, sourceInfo arg1, screenScrapeSourceDetail arg2) {
            this.createScreenScrapeSourceAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createScreenScrapeSourceAsync(sessionId arg0, sourceInfo arg1, screenScrapeSourceDetail arg2, object userState) {
            if ((this.createScreenScrapeSourceOperationCompleted == null)) {
                this.createScreenScrapeSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateScreenScrapeSourceOperationCompleted);
            }
            this.InvokeAsync("createScreenScrapeSource", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createScreenScrapeSourceOperationCompleted, userState);
        }
        
        private void OncreateScreenScrapeSourceOperationCompleted(object arg) {
            if ((this.createScreenScrapeSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createScreenScrapeSourceCompleted(this, new createScreenScrapeSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sharePerspectiveOnDisplay2(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6) {
            this.Invoke("sharePerspectiveOnDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
        }
        
        /// <remarks/>
        public void sharePerspectiveOnDisplay2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6) {
            this.sharePerspectiveOnDisplay2Async(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void sharePerspectiveOnDisplay2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6, object userState) {
            if ((this.sharePerspectiveOnDisplay2OperationCompleted == null)) {
                this.sharePerspectiveOnDisplay2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsharePerspectiveOnDisplay2OperationCompleted);
            }
            this.InvokeAsync("sharePerspectiveOnDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.sharePerspectiveOnDisplay2OperationCompleted, userState);
        }
        
        private void OnsharePerspectiveOnDisplay2OperationCompleted(object arg) {
            if ((this.sharePerspectiveOnDisplay2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sharePerspectiveOnDisplay2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bindAllSystemVariables(sessionId arg0, string arg1, objectId arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectSystemVariablesInfo[] arg3) {
            this.Invoke("bindAllSystemVariables", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void bindAllSystemVariablesAsync(sessionId arg0, string arg1, objectId arg2, objectSystemVariablesInfo[] arg3) {
            this.bindAllSystemVariablesAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void bindAllSystemVariablesAsync(sessionId arg0, string arg1, objectId arg2, objectSystemVariablesInfo[] arg3, object userState) {
            if ((this.bindAllSystemVariablesOperationCompleted == null)) {
                this.bindAllSystemVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbindAllSystemVariablesOperationCompleted);
            }
            this.InvokeAsync("bindAllSystemVariables", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.bindAllSystemVariablesOperationCompleted, userState);
        }
        
        private void OnbindAllSystemVariablesOperationCompleted(object arg) {
            if ((this.bindAllSystemVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bindAllSystemVariablesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllDisplays(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllDisplays", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllDisplaysAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllDisplaysAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllDisplaysAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllDisplaysOperationCompleted == null)) {
                this.subscribeAllDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllDisplaysOperationCompleted);
            }
            this.InvokeAsync("subscribeAllDisplays", new object[] {
                        arg0,
                        arg1}, this.subscribeAllDisplaysOperationCompleted, userState);
        }
        
        private void OnsubscribeAllDisplaysOperationCompleted(object arg) {
            if ((this.subscribeAllDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllDisplaysCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] copySources(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("copySources", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void copySourcesAsync(sessionId arg0, objectId[] arg1) {
            this.copySourcesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copySourcesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.copySourcesOperationCompleted == null)) {
                this.copySourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopySourcesOperationCompleted);
            }
            this.InvokeAsync("copySources", new object[] {
                        arg0,
                        arg1}, this.copySourcesOperationCompleted, userState);
        }
        
        private void OncopySourcesOperationCompleted(object arg) {
            if ((this.copySourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copySourcesCompleted(this, new copySourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public sourceNameDecoratorDetail getSourceNameDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSourceNameDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((sourceNameDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getSourceNameDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getSourceNameDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSourceNameDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSourceNameDecoratorDetailOperationCompleted == null)) {
                this.getSourceNameDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourceNameDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getSourceNameDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getSourceNameDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetSourceNameDecoratorDetailOperationCompleted(object arg) {
            if ((this.getSourceNameDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourceNameDecoratorDetailCompleted(this, new getSourceNameDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public tilerInfo[] getTilersInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getTilersInfo", new object[] {
                        arg0,
                        arg1});
            return ((tilerInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getTilersInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getTilersInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getTilersInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getTilersInfoOperationCompleted == null)) {
                this.getTilersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTilersInfoOperationCompleted);
            }
            this.InvokeAsync("getTilersInfo", new object[] {
                        arg0,
                        arg1}, this.getTilersInfoOperationCompleted, userState);
        }
        
        private void OngetTilersInfoOperationCompleted(object arg) {
            if ((this.getTilersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTilersInfoCompleted(this, new getTilersInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sourceNameDecoratorDetail[] getSourceNameDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getSourceNameDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((sourceNameDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getSourceNameDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getSourceNameDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSourceNameDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getSourceNameDecoratorsDetailOperationCompleted == null)) {
                this.getSourceNameDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourceNameDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getSourceNameDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getSourceNameDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetSourceNameDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getSourceNameDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourceNameDecoratorsDetailCompleted(this, new getSourceNameDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSystemPropertyPool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeSystemPropertyPool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeSystemPropertyPoolAsync(sessionId arg0, string[] arg1) {
            this.subscribeSystemPropertyPoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeSystemPropertyPoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeSystemPropertyPoolOperationCompleted == null)) {
                this.subscribeSystemPropertyPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSystemPropertyPoolOperationCompleted);
            }
            this.InvokeAsync("subscribeSystemPropertyPool", new object[] {
                        arg0,
                        arg1}, this.subscribeSystemPropertyPoolOperationCompleted, userState);
        }
        
        private void OnsubscribeSystemPropertyPoolOperationCompleted(object arg) {
            if ((this.subscribeSystemPropertyPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSystemPropertyPoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sourceWrapper[] listAllSources(sessionId arg0) {
            object[] results = this.Invoke("listAllSources", new object[] {
                        arg0});
            return ((sourceWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllSourcesAsync(sessionId arg0) {
            this.listAllSourcesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllSourcesAsync(sessionId arg0, object userState) {
            if ((this.listAllSourcesOperationCompleted == null)) {
                this.listAllSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllSourcesOperationCompleted);
            }
            this.InvokeAsync("listAllSources", new object[] {
                        arg0}, this.listAllSourcesOperationCompleted, userState);
        }
        
        private void OnlistAllSourcesOperationCompleted(object arg) {
            if ((this.listAllSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllSourcesCompleted(this, new listAllSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public sidebarDefaultSettingInfo getSidebarDefaultSettingInfo(sessionId arg0) {
            object[] results = this.Invoke("getSidebarDefaultSettingInfo", new object[] {
                        arg0});
            return ((sidebarDefaultSettingInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSidebarDefaultSettingInfoAsync(sessionId arg0) {
            this.getSidebarDefaultSettingInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getSidebarDefaultSettingInfoAsync(sessionId arg0, object userState) {
            if ((this.getSidebarDefaultSettingInfoOperationCompleted == null)) {
                this.getSidebarDefaultSettingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSidebarDefaultSettingInfoOperationCompleted);
            }
            this.InvokeAsync("getSidebarDefaultSettingInfo", new object[] {
                        arg0}, this.getSidebarDefaultSettingInfoOperationCompleted, userState);
        }
        
        private void OngetSidebarDefaultSettingInfoOperationCompleted(object arg) {
            if ((this.getSidebarDefaultSettingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSidebarDefaultSettingInfoCompleted(this, new getSidebarDefaultSettingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeApplications(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeApplications", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeApplicationsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribeApplicationsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeApplicationsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribeApplicationsOperationCompleted == null)) {
                this.unsubscribeApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeApplicationsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeApplications", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeApplicationsOperationCompleted, userState);
        }
        
        private void OnunsubscribeApplicationsOperationCompleted(object arg) {
            if ((this.unsubscribeApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeApplicationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createVideoSource2(sessionId arg0, sourceInfo2 arg1, videoSourceDetail arg2) {
            object[] results = this.Invoke("createVideoSource2", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createVideoSource2Async(sessionId arg0, sourceInfo2 arg1, videoSourceDetail arg2) {
            this.createVideoSource2Async(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createVideoSource2Async(sessionId arg0, sourceInfo2 arg1, videoSourceDetail arg2, object userState) {
            if ((this.createVideoSource2OperationCompleted == null)) {
                this.createVideoSource2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateVideoSource2OperationCompleted);
            }
            this.InvokeAsync("createVideoSource2", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createVideoSource2OperationCompleted, userState);
        }
        
        private void OncreateVideoSource2OperationCompleted(object arg) {
            if ((this.createVideoSource2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createVideoSource2Completed(this, new createVideoSource2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setLogoDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] logoDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setLogoDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setLogoDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, logoDecoratorDetail[] arg2, string[] arg3) {
            this.setLogoDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setLogoDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, logoDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setLogoDecoratorsDetailOperationCompleted == null)) {
                this.setLogoDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLogoDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setLogoDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setLogoDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetLogoDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setLogoDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLogoDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public dateTimeDecoratorDetail getDateTimeDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDateTimeDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((dateTimeDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getDateTimeDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getDateTimeDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDateTimeDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDateTimeDecoratorDetailOperationCompleted == null)) {
                this.getDateTimeDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDateTimeDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getDateTimeDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getDateTimeDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetDateTimeDecoratorDetailOperationCompleted(object arg) {
            if ((this.getDateTimeDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDateTimeDecoratorDetailCompleted(this, new getDateTimeDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllSnapshots(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllSnapshots", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllSnapshotsAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllSnapshotsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllSnapshotsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllSnapshotsOperationCompleted == null)) {
                this.subscribeAllSnapshotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllSnapshotsOperationCompleted);
            }
            this.InvokeAsync("subscribeAllSnapshots", new object[] {
                        arg0,
                        arg1}, this.subscribeAllSnapshotsOperationCompleted, userState);
        }
        
        private void OnsubscribeAllSnapshotsOperationCompleted(object arg) {
            if ((this.subscribeAllSnapshotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllSnapshotsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSystemVariable(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeSystemVariable", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeSystemVariableAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeSystemVariableAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeSystemVariableAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeSystemVariableOperationCompleted == null)) {
                this.unsubscribeSystemVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSystemVariableOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSystemVariable", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeSystemVariableOperationCompleted, userState);
        }
        
        private void OnunsubscribeSystemVariableOperationCompleted(object arg) {
            if ((this.unsubscribeSystemVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSystemVariableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public infoObject createObject(sessionId arg0, string arg1, infoObject arg2) {
            object[] results = this.Invoke("createObject", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((infoObject)(results[0]));
        }
        
        /// <remarks/>
        public void createObjectAsync(sessionId arg0, string arg1, infoObject arg2) {
            this.createObjectAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createObjectAsync(sessionId arg0, string arg1, infoObject arg2, object userState) {
            if ((this.createObjectOperationCompleted == null)) {
                this.createObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateObjectOperationCompleted);
            }
            this.InvokeAsync("createObject", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createObjectOperationCompleted, userState);
        }
        
        private void OncreateObjectOperationCompleted(object arg) {
            if ((this.createObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createObjectCompleted(this, new createObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool unshareApplicationFromDisplay(sessionId arg0, objectId arg1, objectId arg2) {
            object[] results = this.Invoke("unshareApplicationFromDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void unshareApplicationFromDisplayAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.unshareApplicationFromDisplayAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unshareApplicationFromDisplayAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.unshareApplicationFromDisplayOperationCompleted == null)) {
                this.unshareApplicationFromDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunshareApplicationFromDisplayOperationCompleted);
            }
            this.InvokeAsync("unshareApplicationFromDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unshareApplicationFromDisplayOperationCompleted, userState);
        }
        
        private void OnunshareApplicationFromDisplayOperationCompleted(object arg) {
            if ((this.unshareApplicationFromDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unshareApplicationFromDisplayCompleted(this, new unshareApplicationFromDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("idList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, NestingLevel=1)]
        public objectId[][] getDisplaysSnapshots(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getDisplaysSnapshots", new object[] {
                        arg0,
                        arg1});
            return ((objectId[][])(results[0]));
        }
        
        /// <remarks/>
        public void getDisplaysSnapshotsAsync(sessionId arg0, objectId[] arg1) {
            this.getDisplaysSnapshotsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDisplaysSnapshotsAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getDisplaysSnapshotsOperationCompleted == null)) {
                this.getDisplaysSnapshotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplaysSnapshotsOperationCompleted);
            }
            this.InvokeAsync("getDisplaysSnapshots", new object[] {
                        arg0,
                        arg1}, this.getDisplaysSnapshotsOperationCompleted, userState);
        }
        
        private void OngetDisplaysSnapshotsOperationCompleted(object arg) {
            if ((this.getDisplaysSnapshotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplaysSnapshotsCompleted(this, new getDisplaysSnapshotsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listSystemVariables(sessionId arg0) {
            object[] results = this.Invoke("listSystemVariables", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listSystemVariablesAsync(sessionId arg0) {
            this.listSystemVariablesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listSystemVariablesAsync(sessionId arg0, object userState) {
            if ((this.listSystemVariablesOperationCompleted == null)) {
                this.listSystemVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistSystemVariablesOperationCompleted);
            }
            this.InvokeAsync("listSystemVariables", new object[] {
                        arg0}, this.listSystemVariablesOperationCompleted, userState);
        }
        
        private void OnlistSystemVariablesOperationCompleted(object arg) {
            if ((this.listSystemVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listSystemVariablesCompleted(this, new listSystemVariablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeDisplayPool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeDisplayPool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeDisplayPoolAsync(sessionId arg0, string[] arg1) {
            this.subscribeDisplayPoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeDisplayPoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeDisplayPoolOperationCompleted == null)) {
                this.subscribeDisplayPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeDisplayPoolOperationCompleted);
            }
            this.InvokeAsync("subscribeDisplayPool", new object[] {
                        arg0,
                        arg1}, this.subscribeDisplayPoolOperationCompleted, userState);
        }
        
        private void OnsubscribeDisplayPoolOperationCompleted(object arg) {
            if ((this.subscribeDisplayPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeDisplayPoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findSystemVariableByPropertyName(sessionId arg0, string arg1, objectId arg2, string arg3) {
            object[] results = this.Invoke("findSystemVariableByPropertyName", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findSystemVariableByPropertyNameAsync(sessionId arg0, string arg1, objectId arg2, string arg3) {
            this.findSystemVariableByPropertyNameAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void findSystemVariableByPropertyNameAsync(sessionId arg0, string arg1, objectId arg2, string arg3, object userState) {
            if ((this.findSystemVariableByPropertyNameOperationCompleted == null)) {
                this.findSystemVariableByPropertyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindSystemVariableByPropertyNameOperationCompleted);
            }
            this.InvokeAsync("findSystemVariableByPropertyName", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.findSystemVariableByPropertyNameOperationCompleted, userState);
        }
        
        private void OnfindSystemVariableByPropertyNameOperationCompleted(object arg) {
            if ((this.findSystemVariableByPropertyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findSystemVariableByPropertyNameCompleted(this, new findSystemVariableByPropertyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setStatusImageDecoratorDetail(sessionId arg0, objectId arg1, statusImageDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setStatusImageDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setStatusImageDecoratorDetailAsync(sessionId arg0, objectId arg1, statusImageDecoratorDetail arg2, string[] arg3) {
            this.setStatusImageDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setStatusImageDecoratorDetailAsync(sessionId arg0, objectId arg1, statusImageDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setStatusImageDecoratorDetailOperationCompleted == null)) {
                this.setStatusImageDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStatusImageDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setStatusImageDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setStatusImageDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetStatusImageDecoratorDetailOperationCompleted(object arg) {
            if ((this.setStatusImageDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStatusImageDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSources(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeSources", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeSourcesAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribeSourcesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeSourcesAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribeSourcesOperationCompleted == null)) {
                this.subscribeSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSourcesOperationCompleted);
            }
            this.InvokeAsync("subscribeSources", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeSourcesOperationCompleted, userState);
        }
        
        private void OnsubscribeSourcesOperationCompleted(object arg) {
            if ((this.subscribeSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSourcesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displayInfo[] getDisplaysInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getDisplaysInfo", new object[] {
                        arg0,
                        arg1});
            return ((displayInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getDisplaysInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getDisplaysInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDisplaysInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getDisplaysInfoOperationCompleted == null)) {
                this.getDisplaysInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplaysInfoOperationCompleted);
            }
            this.InvokeAsync("getDisplaysInfo", new object[] {
                        arg0,
                        arg1}, this.getDisplaysInfoOperationCompleted, userState);
        }
        
        private void OngetDisplaysInfoOperationCompleted(object arg) {
            if ((this.getDisplaysInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplaysInfoCompleted(this, new getDisplaysInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getDisplayAllExternalWindows(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDisplayAllExternalWindows", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getDisplayAllExternalWindowsAsync(sessionId arg0, objectId arg1) {
            this.getDisplayAllExternalWindowsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDisplayAllExternalWindowsAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDisplayAllExternalWindowsOperationCompleted == null)) {
                this.getDisplayAllExternalWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplayAllExternalWindowsOperationCompleted);
            }
            this.InvokeAsync("getDisplayAllExternalWindows", new object[] {
                        arg0,
                        arg1}, this.getDisplayAllExternalWindowsOperationCompleted, userState);
        }
        
        private void OngetDisplayAllExternalWindowsOperationCompleted(object arg) {
            if ((this.getDisplayAllExternalWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplayAllExternalWindowsCompleted(this, new getDisplayAllExternalWindowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sendWindowToBack(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("sendWindowToBack", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void sendWindowToBackAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.sendWindowToBackAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void sendWindowToBackAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.sendWindowToBackOperationCompleted == null)) {
                this.sendWindowToBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendWindowToBackOperationCompleted);
            }
            this.InvokeAsync("sendWindowToBack", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.sendWindowToBackOperationCompleted, userState);
        }
        
        private void OnsendWindowToBackOperationCompleted(object arg) {
            if ((this.sendWindowToBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendWindowToBackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setLabelDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] labelDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setLabelDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setLabelDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, labelDecoratorDetail[] arg2, string[] arg3) {
            this.setLabelDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setLabelDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, labelDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setLabelDecoratorsDetailOperationCompleted == null)) {
                this.setLabelDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLabelDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setLabelDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setLabelDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetLabelDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setLabelDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLabelDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void backup(sessionId arg0, string arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2, string arg3) {
            this.Invoke("backup", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void backupAsync(sessionId arg0, string arg1, string[] arg2, string arg3) {
            this.backupAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void backupAsync(sessionId arg0, string arg1, string[] arg2, string arg3, object userState) {
            if ((this.backupOperationCompleted == null)) {
                this.backupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbackupOperationCompleted);
            }
            this.InvokeAsync("backup", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.backupOperationCompleted, userState);
        }
        
        private void OnbackupOperationCompleted(object arg) {
            if ((this.backupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.backupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setImageInfo(sessionId arg0, objectId arg1, imageInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setImageInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setImageInfoAsync(sessionId arg0, objectId arg1, imageInfo arg2, string[] arg3) {
            this.setImageInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setImageInfoAsync(sessionId arg0, objectId arg1, imageInfo arg2, string[] arg3, object userState) {
            if ((this.setImageInfoOperationCompleted == null)) {
                this.setImageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetImageInfoOperationCompleted);
            }
            this.InvokeAsync("setImageInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setImageInfoOperationCompleted, userState);
        }
        
        private void OnsetImageInfoOperationCompleted(object arg) {
            if ((this.setImageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setImageInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public webSourceDetail getWebSourceDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getWebSourceDetail", new object[] {
                        arg0,
                        arg1});
            return ((webSourceDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getWebSourceDetailAsync(sessionId arg0, objectId arg1) {
            this.getWebSourceDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getWebSourceDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getWebSourceDetailOperationCompleted == null)) {
                this.getWebSourceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWebSourceDetailOperationCompleted);
            }
            this.InvokeAsync("getWebSourceDetail", new object[] {
                        arg0,
                        arg1}, this.getWebSourceDetailOperationCompleted, userState);
        }
        
        private void OngetWebSourceDetailOperationCompleted(object arg) {
            if ((this.getWebSourceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWebSourceDetailCompleted(this, new getWebSourceDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listMessages(sessionId arg0) {
            object[] results = this.Invoke("listMessages", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listMessagesAsync(sessionId arg0) {
            this.listMessagesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listMessagesAsync(sessionId arg0, object userState) {
            if ((this.listMessagesOperationCompleted == null)) {
                this.listMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistMessagesOperationCompleted);
            }
            this.InvokeAsync("listMessages", new object[] {
                        arg0}, this.listMessagesOperationCompleted, userState);
        }
        
        private void OnlistMessagesOperationCompleted(object arg) {
            if ((this.listMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listMessagesCompleted(this, new listMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchSources(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchSources", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchSourcesAsync(sessionId arg0, string arg1) {
            this.searchSourcesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchSourcesAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchSourcesOperationCompleted == null)) {
                this.searchSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchSourcesOperationCompleted);
            }
            this.InvokeAsync("searchSources", new object[] {
                        arg0,
                        arg1}, this.searchSourcesOperationCompleted, userState);
        }
        
        private void OnsearchSourcesOperationCompleted(object arg) {
            if ((this.searchSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchSourcesCompleted(this, new searchSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeDecorators(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeDecorators", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeDecoratorsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribeDecoratorsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeDecoratorsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribeDecoratorsOperationCompleted == null)) {
                this.unsubscribeDecoratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeDecoratorsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeDecorators", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeDecoratorsOperationCompleted, userState);
        }
        
        private void OnunsubscribeDecoratorsOperationCompleted(object arg) {
            if ((this.unsubscribeDecoratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeDecoratorsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public snapshotInfo[] getSnapshotsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getSnapshotsInfo", new object[] {
                        arg0,
                        arg1});
            return ((snapshotInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getSnapshotsInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getSnapshotsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSnapshotsInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getSnapshotsInfoOperationCompleted == null)) {
                this.getSnapshotsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSnapshotsInfoOperationCompleted);
            }
            this.InvokeAsync("getSnapshotsInfo", new object[] {
                        arg0,
                        arg1}, this.getSnapshotsInfoOperationCompleted, userState);
        }
        
        private void OngetSnapshotsInfoOperationCompleted(object arg) {
            if ((this.getSnapshotsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSnapshotsInfoCompleted(this, new getSnapshotsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId copyDisplay(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("copyDisplay", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void copyDisplayAsync(sessionId arg0, objectId arg1) {
            this.copyDisplayAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyDisplayAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.copyDisplayOperationCompleted == null)) {
                this.copyDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyDisplayOperationCompleted);
            }
            this.InvokeAsync("copyDisplay", new object[] {
                        arg0,
                        arg1}, this.copyDisplayOperationCompleted, userState);
        }
        
        private void OncopyDisplayOperationCompleted(object arg) {
            if ((this.copyDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyDisplayCompleted(this, new copyDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listOfAssociatedPerspectivesWithTiler(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("listOfAssociatedPerspectivesWithTiler", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfAssociatedPerspectivesWithTilerAsync(sessionId arg0, objectId arg1) {
            this.listOfAssociatedPerspectivesWithTilerAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listOfAssociatedPerspectivesWithTilerAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.listOfAssociatedPerspectivesWithTilerOperationCompleted == null)) {
                this.listOfAssociatedPerspectivesWithTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfAssociatedPerspectivesWithTilerOperationCompleted);
            }
            this.InvokeAsync("listOfAssociatedPerspectivesWithTiler", new object[] {
                        arg0,
                        arg1}, this.listOfAssociatedPerspectivesWithTilerOperationCompleted, userState);
        }
        
        private void OnlistOfAssociatedPerspectivesWithTilerOperationCompleted(object arg) {
            if ((this.listOfAssociatedPerspectivesWithTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfAssociatedPerspectivesWithTilerCompleted(this, new listOfAssociatedPerspectivesWithTilerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public displetInfo2 getDispletInfo2(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDispletInfo2", new object[] {
                        arg0,
                        arg1});
            return ((displetInfo2)(results[0]));
        }
        
        /// <remarks/>
        public void getDispletInfo2Async(sessionId arg0, objectId arg1) {
            this.getDispletInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDispletInfo2Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDispletInfo2OperationCompleted == null)) {
                this.getDispletInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDispletInfo2OperationCompleted);
            }
            this.InvokeAsync("getDispletInfo2", new object[] {
                        arg0,
                        arg1}, this.getDispletInfo2OperationCompleted, userState);
        }
        
        private void OngetDispletInfo2OperationCompleted(object arg) {
            if ((this.getDispletInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDispletInfo2Completed(this, new getDispletInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllSquidModeConfigurations(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllSquidModeConfigurations", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllSquidModeConfigurationsAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllSquidModeConfigurationsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllSquidModeConfigurationsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllSquidModeConfigurationsOperationCompleted == null)) {
                this.unsubscribeAllSquidModeConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllSquidModeConfigurationsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllSquidModeConfigurations", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllSquidModeConfigurationsOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllSquidModeConfigurationsOperationCompleted(object arg) {
            if ((this.unsubscribeAllSquidModeConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllSquidModeConfigurationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createDisplet(sessionId arg0, objectId arg1, displetInfo arg2, bool arg3) {
            object[] results = this.Invoke("createDisplet", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createDispletAsync(sessionId arg0, objectId arg1, displetInfo arg2, bool arg3) {
            this.createDispletAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createDispletAsync(sessionId arg0, objectId arg1, displetInfo arg2, bool arg3, object userState) {
            if ((this.createDispletOperationCompleted == null)) {
                this.createDispletOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDispletOperationCompleted);
            }
            this.InvokeAsync("createDisplet", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createDispletOperationCompleted, userState);
        }
        
        private void OncreateDispletOperationCompleted(object arg) {
            if ((this.createDispletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDispletCompleted(this, new createDispletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeDisplayPool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeDisplayPool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeDisplayPoolAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeDisplayPoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeDisplayPoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeDisplayPoolOperationCompleted == null)) {
                this.unsubscribeDisplayPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeDisplayPoolOperationCompleted);
            }
            this.InvokeAsync("unsubscribeDisplayPool", new object[] {
                        arg0,
                        arg1}, this.unsubscribeDisplayPoolOperationCompleted, userState);
        }
        
        private void OnunsubscribeDisplayPoolOperationCompleted(object arg) {
            if ((this.unsubscribeDisplayPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeDisplayPoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public screenScrapeSourceDetail getScreenScrapeSourceDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getScreenScrapeSourceDetail", new object[] {
                        arg0,
                        arg1});
            return ((screenScrapeSourceDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getScreenScrapeSourceDetailAsync(sessionId arg0, objectId arg1) {
            this.getScreenScrapeSourceDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getScreenScrapeSourceDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getScreenScrapeSourceDetailOperationCompleted == null)) {
                this.getScreenScrapeSourceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetScreenScrapeSourceDetailOperationCompleted);
            }
            this.InvokeAsync("getScreenScrapeSourceDetail", new object[] {
                        arg0,
                        arg1}, this.getScreenScrapeSourceDetailOperationCompleted, userState);
        }
        
        private void OngetScreenScrapeSourceDetailOperationCompleted(object arg) {
            if ((this.getScreenScrapeSourceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getScreenScrapeSourceDetailCompleted(this, new getScreenScrapeSourceDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setModulesInfo(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] moduleInfo[] arg2) {
            this.Invoke("setModulesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setModulesInfoAsync(sessionId arg0, objectId arg1, moduleInfo[] arg2) {
            this.setModulesInfoAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setModulesInfoAsync(sessionId arg0, objectId arg1, moduleInfo[] arg2, object userState) {
            if ((this.setModulesInfoOperationCompleted == null)) {
                this.setModulesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetModulesInfoOperationCompleted);
            }
            this.InvokeAsync("setModulesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setModulesInfoOperationCompleted, userState);
        }
        
        private void OnsetModulesInfoOperationCompleted(object arg) {
            if ((this.setModulesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setModulesInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSourceNameDecoratorDetail(sessionId arg0, objectId arg1, sourceNameDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSourceNameDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSourceNameDecoratorDetailAsync(sessionId arg0, objectId arg1, sourceNameDecoratorDetail arg2, string[] arg3) {
            this.setSourceNameDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSourceNameDecoratorDetailAsync(sessionId arg0, objectId arg1, sourceNameDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setSourceNameDecoratorDetailOperationCompleted == null)) {
                this.setSourceNameDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSourceNameDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setSourceNameDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSourceNameDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetSourceNameDecoratorDetailOperationCompleted(object arg) {
            if ((this.setSourceNameDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSourceNameDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribePerspective(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribePerspective", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribePerspectiveAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribePerspectiveAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribePerspectiveAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribePerspectiveOperationCompleted == null)) {
                this.unsubscribePerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribePerspectiveOperationCompleted);
            }
            this.InvokeAsync("unsubscribePerspective", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribePerspectiveOperationCompleted, userState);
        }
        
        private void OnunsubscribePerspectiveOperationCompleted(object arg) {
            if ((this.unsubscribePerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribePerspectiveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSource(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeSource", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeSourceAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeSourceAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeSourceAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeSourceOperationCompleted == null)) {
                this.subscribeSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSourceOperationCompleted);
            }
            this.InvokeAsync("subscribeSource", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeSourceOperationCompleted, userState);
        }
        
        private void OnsubscribeSourceOperationCompleted(object arg) {
            if ((this.subscribeSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSourceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public logoDecoratorDetail[] getLogoDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getLogoDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((logoDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getLogoDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getLogoDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getLogoDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getLogoDecoratorsDetailOperationCompleted == null)) {
                this.getLogoDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLogoDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getLogoDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getLogoDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetLogoDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getLogoDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLogoDecoratorsDetailCompleted(this, new getLogoDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<bool>[] acquireLicenses(sessionId arg0, string arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            object[] results = this.Invoke("acquireLicenses", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((System.Nullable<bool>[])(results[0]));
        }
        
        /// <remarks/>
        public void acquireLicensesAsync(sessionId arg0, string arg1, string[] arg2) {
            this.acquireLicensesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void acquireLicensesAsync(sessionId arg0, string arg1, string[] arg2, object userState) {
            if ((this.acquireLicensesOperationCompleted == null)) {
                this.acquireLicensesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnacquireLicensesOperationCompleted);
            }
            this.InvokeAsync("acquireLicenses", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.acquireLicensesOperationCompleted, userState);
        }
        
        private void OnacquireLicensesOperationCompleted(object arg) {
            if ((this.acquireLicensesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.acquireLicensesCompleted(this, new acquireLicensesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchSystemVariables(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchSystemVariables", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchSystemVariablesAsync(sessionId arg0, string arg1) {
            this.searchSystemVariablesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchSystemVariablesAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchSystemVariablesOperationCompleted == null)) {
                this.searchSystemVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchSystemVariablesOperationCompleted);
            }
            this.InvokeAsync("searchSystemVariables", new object[] {
                        arg0,
                        arg1}, this.searchSystemVariablesOperationCompleted, userState);
        }
        
        private void OnsearchSystemVariablesOperationCompleted(object arg) {
            if ((this.searchSystemVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchSystemVariablesCompleted(this, new searchSystemVariablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllDisplets(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllDisplets", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllDispletsAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllDispletsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllDispletsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllDispletsOperationCompleted == null)) {
                this.unsubscribeAllDispletsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllDispletsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllDisplets", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllDispletsOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllDispletsOperationCompleted(object arg) {
            if ((this.unsubscribeAllDispletsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllDispletsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setLabelDecoratorDetail(sessionId arg0, objectId arg1, labelDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setLabelDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setLabelDecoratorDetailAsync(sessionId arg0, objectId arg1, labelDecoratorDetail arg2, string[] arg3) {
            this.setLabelDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setLabelDecoratorDetailAsync(sessionId arg0, objectId arg1, labelDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setLabelDecoratorDetailOperationCompleted == null)) {
                this.setLabelDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLabelDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setLabelDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setLabelDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetLabelDecoratorDetailOperationCompleted(object arg) {
            if ((this.setLabelDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLabelDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sendDispletBackward(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("sendDispletBackward", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void sendDispletBackwardAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.sendDispletBackwardAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void sendDispletBackwardAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.sendDispletBackwardOperationCompleted == null)) {
                this.sendDispletBackwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDispletBackwardOperationCompleted);
            }
            this.InvokeAsync("sendDispletBackward", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.sendDispletBackwardOperationCompleted, userState);
        }
        
        private void OnsendDispletBackwardOperationCompleted(object arg) {
            if ((this.sendDispletBackwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDispletBackwardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDateTimeDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] dateTimeDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDateTimeDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDateTimeDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, dateTimeDecoratorDetail[] arg2, string[] arg3) {
            this.setDateTimeDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDateTimeDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, dateTimeDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setDateTimeDecoratorsDetailOperationCompleted == null)) {
                this.setDateTimeDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDateTimeDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setDateTimeDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDateTimeDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetDateTimeDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setDateTimeDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDateTimeDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateDeviceURL(sessionId arg0, objectId arg1) {
            this.Invoke("updateDeviceURL", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void updateDeviceURLAsync(sessionId arg0, objectId arg1) {
            this.updateDeviceURLAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void updateDeviceURLAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.updateDeviceURLOperationCompleted == null)) {
                this.updateDeviceURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDeviceURLOperationCompleted);
            }
            this.InvokeAsync("updateDeviceURL", new object[] {
                        arg0,
                        arg1}, this.updateDeviceURLOperationCompleted, userState);
        }
        
        private void OnupdateDeviceURLOperationCompleted(object arg) {
            if ((this.updateDeviceURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDeviceURLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public audioDecoratorDetail getAudioDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getAudioDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((audioDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getAudioDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getAudioDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getAudioDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getAudioDecoratorDetailOperationCompleted == null)) {
                this.getAudioDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAudioDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getAudioDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getAudioDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetAudioDecoratorDetailOperationCompleted(object arg) {
            if ((this.getAudioDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAudioDecoratorDetailCompleted(this, new getAudioDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool forceRemoveGroup(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("forceRemoveGroup", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveGroupAsync(sessionId arg0, objectId arg1) {
            this.forceRemoveGroupAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveGroupAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.forceRemoveGroupOperationCompleted == null)) {
                this.forceRemoveGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveGroupOperationCompleted);
            }
            this.InvokeAsync("forceRemoveGroup", new object[] {
                        arg0,
                        arg1}, this.forceRemoveGroupOperationCompleted, userState);
        }
        
        private void OnforceRemoveGroupOperationCompleted(object arg) {
            if ((this.forceRemoveGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveGroupCompleted(this, new forceRemoveGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSquidModeConfigurations(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeSquidModeConfigurations", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeSquidModeConfigurationsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribeSquidModeConfigurationsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeSquidModeConfigurationsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribeSquidModeConfigurationsOperationCompleted == null)) {
                this.subscribeSquidModeConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSquidModeConfigurationsOperationCompleted);
            }
            this.InvokeAsync("subscribeSquidModeConfigurations", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeSquidModeConfigurationsOperationCompleted, userState);
        }
        
        private void OnsubscribeSquidModeConfigurationsOperationCompleted(object arg) {
            if ((this.subscribeSquidModeConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSquidModeConfigurationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setScreenScrapeSourcesDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] screenScrapeSourceDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setScreenScrapeSourcesDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setScreenScrapeSourcesDetailAsync(sessionId arg0, objectId[] arg1, screenScrapeSourceDetail[] arg2, string[] arg3) {
            this.setScreenScrapeSourcesDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setScreenScrapeSourcesDetailAsync(sessionId arg0, objectId[] arg1, screenScrapeSourceDetail[] arg2, string[] arg3, object userState) {
            if ((this.setScreenScrapeSourcesDetailOperationCompleted == null)) {
                this.setScreenScrapeSourcesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetScreenScrapeSourcesDetailOperationCompleted);
            }
            this.InvokeAsync("setScreenScrapeSourcesDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setScreenScrapeSourcesDetailOperationCompleted, userState);
        }
        
        private void OnsetScreenScrapeSourcesDetailOperationCompleted(object arg) {
            if ((this.setScreenScrapeSourcesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setScreenScrapeSourcesDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setMiscellaneousDefaultSettingsInfo(sessionId arg0, miscellaneousDefaultSettingsInfo arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("setMiscellaneousDefaultSettingsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setMiscellaneousDefaultSettingsInfoAsync(sessionId arg0, miscellaneousDefaultSettingsInfo arg1, string[] arg2) {
            this.setMiscellaneousDefaultSettingsInfoAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setMiscellaneousDefaultSettingsInfoAsync(sessionId arg0, miscellaneousDefaultSettingsInfo arg1, string[] arg2, object userState) {
            if ((this.setMiscellaneousDefaultSettingsInfoOperationCompleted == null)) {
                this.setMiscellaneousDefaultSettingsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMiscellaneousDefaultSettingsInfoOperationCompleted);
            }
            this.InvokeAsync("setMiscellaneousDefaultSettingsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setMiscellaneousDefaultSettingsInfoOperationCompleted, userState);
        }
        
        private void OnsetMiscellaneousDefaultSettingsInfoOperationCompleted(object arg) {
            if ((this.setMiscellaneousDefaultSettingsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMiscellaneousDefaultSettingsInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeWindows(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeWindows", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeWindowsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribeWindowsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeWindowsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribeWindowsOperationCompleted == null)) {
                this.subscribeWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeWindowsOperationCompleted);
            }
            this.InvokeAsync("subscribeWindows", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeWindowsOperationCompleted, userState);
        }
        
        private void OnsubscribeWindowsOperationCompleted(object arg) {
            if ((this.subscribeWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeWindowsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createStatusLabelDecoratorTemplate(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, statusLabelDecoratorDetail arg3) {
            object[] results = this.Invoke("createStatusLabelDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createStatusLabelDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, statusLabelDecoratorDetail arg3) {
            this.createStatusLabelDecoratorTemplateAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createStatusLabelDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, statusLabelDecoratorDetail arg3, object userState) {
            if ((this.createStatusLabelDecoratorTemplateOperationCompleted == null)) {
                this.createStatusLabelDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStatusLabelDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("createStatusLabelDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createStatusLabelDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OncreateStatusLabelDecoratorTemplateOperationCompleted(object arg) {
            if ((this.createStatusLabelDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStatusLabelDecoratorTemplateCompleted(this, new createStatusLabelDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllSystemVariables(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllSystemVariables", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllSystemVariablesAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllSystemVariablesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllSystemVariablesAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllSystemVariablesOperationCompleted == null)) {
                this.subscribeAllSystemVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllSystemVariablesOperationCompleted);
            }
            this.InvokeAsync("subscribeAllSystemVariables", new object[] {
                        arg0,
                        arg1}, this.subscribeAllSystemVariablesOperationCompleted, userState);
        }
        
        private void OnsubscribeAllSystemVariablesOperationCompleted(object arg) {
            if ((this.subscribeAllSystemVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllSystemVariablesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId copyUser(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("copyUser", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void copyUserAsync(sessionId arg0, objectId arg1) {
            this.copyUserAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyUserAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.copyUserOperationCompleted == null)) {
                this.copyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyUserOperationCompleted);
            }
            this.InvokeAsync("copyUser", new object[] {
                        arg0,
                        arg1}, this.copyUserOperationCompleted, userState);
        }
        
        private void OncopyUserOperationCompleted(object arg) {
            if ((this.copyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyUserCompleted(this, new copyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listGroups(sessionId arg0) {
            object[] results = this.Invoke("listGroups", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listGroupsAsync(sessionId arg0) {
            this.listGroupsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listGroupsAsync(sessionId arg0, object userState) {
            if ((this.listGroupsOperationCompleted == null)) {
                this.listGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistGroupsOperationCompleted);
            }
            this.InvokeAsync("listGroups", new object[] {
                        arg0}, this.listGroupsOperationCompleted, userState);
        }
        
        private void OnlistGroupsOperationCompleted(object arg) {
            if ((this.listGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listGroupsCompleted(this, new listGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] copyPerspectives(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("copyPerspectives", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void copyPerspectivesAsync(sessionId arg0, objectId[] arg1) {
            this.copyPerspectivesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyPerspectivesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.copyPerspectivesOperationCompleted == null)) {
                this.copyPerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyPerspectivesOperationCompleted);
            }
            this.InvokeAsync("copyPerspectives", new object[] {
                        arg0,
                        arg1}, this.copyPerspectivesOperationCompleted, userState);
        }
        
        private void OncopyPerspectivesOperationCompleted(object arg) {
            if ((this.copyPerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyPerspectivesCompleted(this, new copyPerspectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public videoAndAudioDefaultSettingsInfo getVideoAndAudioDefaultSettingInfo(sessionId arg0) {
            object[] results = this.Invoke("getVideoAndAudioDefaultSettingInfo", new object[] {
                        arg0});
            return ((videoAndAudioDefaultSettingsInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getVideoAndAudioDefaultSettingInfoAsync(sessionId arg0) {
            this.getVideoAndAudioDefaultSettingInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getVideoAndAudioDefaultSettingInfoAsync(sessionId arg0, object userState) {
            if ((this.getVideoAndAudioDefaultSettingInfoOperationCompleted == null)) {
                this.getVideoAndAudioDefaultSettingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVideoAndAudioDefaultSettingInfoOperationCompleted);
            }
            this.InvokeAsync("getVideoAndAudioDefaultSettingInfo", new object[] {
                        arg0}, this.getVideoAndAudioDefaultSettingInfoOperationCompleted, userState);
        }
        
        private void OngetVideoAndAudioDefaultSettingInfoOperationCompleted(object arg) {
            if ((this.getVideoAndAudioDefaultSettingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVideoAndAudioDefaultSettingInfoCompleted(this, new getVideoAndAudioDefaultSettingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listSystemProperties(sessionId arg0) {
            object[] results = this.Invoke("listSystemProperties", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listSystemPropertiesAsync(sessionId arg0) {
            this.listSystemPropertiesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listSystemPropertiesAsync(sessionId arg0, object userState) {
            if ((this.listSystemPropertiesOperationCompleted == null)) {
                this.listSystemPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistSystemPropertiesOperationCompleted);
            }
            this.InvokeAsync("listSystemProperties", new object[] {
                        arg0}, this.listSystemPropertiesOperationCompleted, userState);
        }
        
        private void OnlistSystemPropertiesOperationCompleted(object arg) {
            if ((this.listSystemPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listSystemPropertiesCompleted(this, new listSystemPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeDecorator(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeDecorator", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeDecoratorAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeDecoratorAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeDecoratorAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeDecoratorOperationCompleted == null)) {
                this.unsubscribeDecoratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeDecoratorOperationCompleted);
            }
            this.InvokeAsync("unsubscribeDecorator", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeDecoratorOperationCompleted, userState);
        }
        
        private void OnunsubscribeDecoratorOperationCompleted(object arg) {
            if ((this.unsubscribeDecoratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeDecoratorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateTilerForDisplay(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("updateTilerForDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void updateTilerForDisplayAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.updateTilerForDisplayAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void updateTilerForDisplayAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.updateTilerForDisplayOperationCompleted == null)) {
                this.updateTilerForDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTilerForDisplayOperationCompleted);
            }
            this.InvokeAsync("updateTilerForDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updateTilerForDisplayOperationCompleted, userState);
        }
        
        private void OnupdateTilerForDisplayOperationCompleted(object arg) {
            if ((this.updateTilerForDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTilerForDisplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDisplaysInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displayInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDisplaysInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDisplaysInfoAsync(sessionId arg0, objectId[] arg1, displayInfo[] arg2, string[] arg3) {
            this.setDisplaysInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDisplaysInfoAsync(sessionId arg0, objectId[] arg1, displayInfo[] arg2, string[] arg3, object userState) {
            if ((this.setDisplaysInfoOperationCompleted == null)) {
                this.setDisplaysInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDisplaysInfoOperationCompleted);
            }
            this.InvokeAsync("setDisplaysInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDisplaysInfoOperationCompleted, userState);
        }
        
        private void OnsetDisplaysInfoOperationCompleted(object arg) {
            if ((this.setDisplaysInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDisplaysInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId login(sessionId arg0, string arg1) {
            object[] results = this.Invoke("login", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(sessionId arg0, string arg1) {
            this.loginAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void loginAsync(sessionId arg0, string arg1, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        arg0,
                        arg1}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] copyRoles(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("copyRoles", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void copyRolesAsync(sessionId arg0, objectId[] arg1) {
            this.copyRolesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyRolesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.copyRolesOperationCompleted == null)) {
                this.copyRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyRolesOperationCompleted);
            }
            this.InvokeAsync("copyRoles", new object[] {
                        arg0,
                        arg1}, this.copyRolesOperationCompleted, userState);
        }
        
        private void OncopyRolesOperationCompleted(object arg) {
            if ((this.copyRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyRolesCompleted(this, new copyRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bringDispletForward(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("bringDispletForward", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void bringDispletForwardAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.bringDispletForwardAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void bringDispletForwardAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.bringDispletForwardOperationCompleted == null)) {
                this.bringDispletForwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbringDispletForwardOperationCompleted);
            }
            this.InvokeAsync("bringDispletForward", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.bringDispletForwardOperationCompleted, userState);
        }
        
        private void OnbringDispletForwardOperationCompleted(object arg) {
            if ((this.bringDispletForwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bringDispletForwardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public tileDetail fetchTiling(sessionId arg0, objectId arg1, int arg2, int arg3) {
            object[] results = this.Invoke("fetchTiling", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((tileDetail)(results[0]));
        }
        
        /// <remarks/>
        public void fetchTilingAsync(sessionId arg0, objectId arg1, int arg2, int arg3) {
            this.fetchTilingAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void fetchTilingAsync(sessionId arg0, objectId arg1, int arg2, int arg3, object userState) {
            if ((this.fetchTilingOperationCompleted == null)) {
                this.fetchTilingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchTilingOperationCompleted);
            }
            this.InvokeAsync("fetchTiling", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.fetchTilingOperationCompleted, userState);
        }
        
        private void OnfetchTilingOperationCompleted(object arg) {
            if ((this.fetchTilingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchTilingCompleted(this, new fetchTilingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setActiveRoles(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            this.Invoke("setActiveRoles", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void setActiveRolesAsync(sessionId arg0, objectId[] arg1) {
            this.setActiveRolesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void setActiveRolesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.setActiveRolesOperationCompleted == null)) {
                this.setActiveRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetActiveRolesOperationCompleted);
            }
            this.InvokeAsync("setActiveRoles", new object[] {
                        arg0,
                        arg1}, this.setActiveRolesOperationCompleted, userState);
        }
        
        private void OnsetActiveRolesOperationCompleted(object arg) {
            if ((this.setActiveRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setActiveRolesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSidebarDefaultSetting(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeSidebarDefaultSetting", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeSidebarDefaultSettingAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeSidebarDefaultSettingAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeSidebarDefaultSettingAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeSidebarDefaultSettingOperationCompleted == null)) {
                this.unsubscribeSidebarDefaultSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSidebarDefaultSettingOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSidebarDefaultSetting", new object[] {
                        arg0,
                        arg1}, this.unsubscribeSidebarDefaultSettingOperationCompleted, userState);
        }
        
        private void OnunsubscribeSidebarDefaultSettingOperationCompleted(object arg) {
            if ((this.unsubscribeSidebarDefaultSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSidebarDefaultSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setVideoSourceDetail(sessionId arg0, objectId arg1, videoSourceDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setVideoSourceDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setVideoSourceDetailAsync(sessionId arg0, objectId arg1, videoSourceDetail arg2, string[] arg3) {
            this.setVideoSourceDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setVideoSourceDetailAsync(sessionId arg0, objectId arg1, videoSourceDetail arg2, string[] arg3, object userState) {
            if ((this.setVideoSourceDetailOperationCompleted == null)) {
                this.setVideoSourceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetVideoSourceDetailOperationCompleted);
            }
            this.InvokeAsync("setVideoSourceDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setVideoSourceDetailOperationCompleted, userState);
        }
        
        private void OnsetVideoSourceDetailOperationCompleted(object arg) {
            if ((this.setVideoSourceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setVideoSourceDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<bool>[] forceRemoveRoles(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("forceRemoveRoles", new object[] {
                        arg0,
                        arg1});
            return ((System.Nullable<bool>[])(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveRolesAsync(sessionId arg0, objectId[] arg1) {
            this.forceRemoveRolesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveRolesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.forceRemoveRolesOperationCompleted == null)) {
                this.forceRemoveRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveRolesOperationCompleted);
            }
            this.InvokeAsync("forceRemoveRoles", new object[] {
                        arg0,
                        arg1}, this.forceRemoveRolesOperationCompleted, userState);
        }
        
        private void OnforceRemoveRolesOperationCompleted(object arg) {
            if ((this.forceRemoveRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveRolesCompleted(this, new forceRemoveRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public clusterInfo getClusterInfo(sessionId arg0) {
            object[] results = this.Invoke("getClusterInfo", new object[] {
                        arg0});
            return ((clusterInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getClusterInfoAsync(sessionId arg0) {
            this.getClusterInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getClusterInfoAsync(sessionId arg0, object userState) {
            if ((this.getClusterInfoOperationCompleted == null)) {
                this.getClusterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClusterInfoOperationCompleted);
            }
            this.InvokeAsync("getClusterInfo", new object[] {
                        arg0}, this.getClusterInfoOperationCompleted, userState);
        }
        
        private void OngetClusterInfoOperationCompleted(object arg) {
            if ((this.getClusterInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClusterInfoCompleted(this, new getClusterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeWindowsFromDisplay(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg2) {
            object[] results = this.Invoke("removeWindowsFromDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeWindowsFromDisplayAsync(sessionId arg0, objectId arg1, objectId[] arg2) {
            this.removeWindowsFromDisplayAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void removeWindowsFromDisplayAsync(sessionId arg0, objectId arg1, objectId[] arg2, object userState) {
            if ((this.removeWindowsFromDisplayOperationCompleted == null)) {
                this.removeWindowsFromDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveWindowsFromDisplayOperationCompleted);
            }
            this.InvokeAsync("removeWindowsFromDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.removeWindowsFromDisplayOperationCompleted, userState);
        }
        
        private void OnremoveWindowsFromDisplayOperationCompleted(object arg) {
            if ((this.removeWindowsFromDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeWindowsFromDisplayCompleted(this, new removeWindowsFromDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeSource(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("removeSource", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeSourceAsync(sessionId arg0, objectId arg1) {
            this.removeSourceAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeSourceAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeSourceOperationCompleted == null)) {
                this.removeSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSourceOperationCompleted);
            }
            this.InvokeAsync("removeSource", new object[] {
                        arg0,
                        arg1}, this.removeSourceOperationCompleted, userState);
        }
        
        private void OnremoveSourceOperationCompleted(object arg) {
            if ((this.removeSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSourceCompleted(this, new removeSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeDisplays(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("removeDisplays", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeDisplaysAsync(sessionId arg0, objectId[] arg1) {
            this.removeDisplaysAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeDisplaysAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.removeDisplaysOperationCompleted == null)) {
                this.removeDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveDisplaysOperationCompleted);
            }
            this.InvokeAsync("removeDisplays", new object[] {
                        arg0,
                        arg1}, this.removeDisplaysOperationCompleted, userState);
        }
        
        private void OnremoveDisplaysOperationCompleted(object arg) {
            if ((this.removeDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeDisplaysCompleted(this, new removeDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeTilers(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeTilers", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeTilersAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribeTilersAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeTilersAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribeTilersOperationCompleted == null)) {
                this.unsubscribeTilersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeTilersOperationCompleted);
            }
            this.InvokeAsync("unsubscribeTilers", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeTilersOperationCompleted, userState);
        }
        
        private void OnunsubscribeTilersOperationCompleted(object arg) {
            if ((this.unsubscribeTilersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeTilersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void configureSessionTimout(sessionId arg0, long arg1) {
            this.Invoke("configureSessionTimout", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void configureSessionTimoutAsync(sessionId arg0, long arg1) {
            this.configureSessionTimoutAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void configureSessionTimoutAsync(sessionId arg0, long arg1, object userState) {
            if ((this.configureSessionTimoutOperationCompleted == null)) {
                this.configureSessionTimoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfigureSessionTimoutOperationCompleted);
            }
            this.InvokeAsync("configureSessionTimout", new object[] {
                        arg0,
                        arg1}, this.configureSessionTimoutOperationCompleted, userState);
        }
        
        private void OnconfigureSessionTimoutOperationCompleted(object arg) {
            if ((this.configureSessionTimoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.configureSessionTimoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSquidModeConfigurationInfo(sessionId arg0, objectId arg1, squidModeConfigurationInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSquidModeConfigurationInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSquidModeConfigurationInfoAsync(sessionId arg0, objectId arg1, squidModeConfigurationInfo arg2, string[] arg3) {
            this.setSquidModeConfigurationInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSquidModeConfigurationInfoAsync(sessionId arg0, objectId arg1, squidModeConfigurationInfo arg2, string[] arg3, object userState) {
            if ((this.setSquidModeConfigurationInfoOperationCompleted == null)) {
                this.setSquidModeConfigurationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSquidModeConfigurationInfoOperationCompleted);
            }
            this.InvokeAsync("setSquidModeConfigurationInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSquidModeConfigurationInfoOperationCompleted, userState);
        }
        
        private void OnsetSquidModeConfigurationInfoOperationCompleted(object arg) {
            if ((this.setSquidModeConfigurationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSquidModeConfigurationInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDisplayInfo3(sessionId arg0, objectId arg1, displayInfo3 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDisplayInfo3", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDisplayInfo3Async(sessionId arg0, objectId arg1, displayInfo3 arg2, string[] arg3) {
            this.setDisplayInfo3Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDisplayInfo3Async(sessionId arg0, objectId arg1, displayInfo3 arg2, string[] arg3, object userState) {
            if ((this.setDisplayInfo3OperationCompleted == null)) {
                this.setDisplayInfo3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDisplayInfo3OperationCompleted);
            }
            this.InvokeAsync("setDisplayInfo3", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDisplayInfo3OperationCompleted, userState);
        }
        
        private void OnsetDisplayInfo3OperationCompleted(object arg) {
            if ((this.setDisplayInfo3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDisplayInfo3Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDisplayInfo2(sessionId arg0, objectId arg1, displayInfo2 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDisplayInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDisplayInfo2Async(sessionId arg0, objectId arg1, displayInfo2 arg2, string[] arg3) {
            this.setDisplayInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDisplayInfo2Async(sessionId arg0, objectId arg1, displayInfo2 arg2, string[] arg3, object userState) {
            if ((this.setDisplayInfo2OperationCompleted == null)) {
                this.setDisplayInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDisplayInfo2OperationCompleted);
            }
            this.InvokeAsync("setDisplayInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDisplayInfo2OperationCompleted, userState);
        }
        
        private void OnsetDisplayInfo2OperationCompleted(object arg) {
            if ((this.setDisplayInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDisplayInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public systemVariableInfo[] getSystemVariablesInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getSystemVariablesInfo2", new object[] {
                        arg0,
                        arg1});
            return ((systemVariableInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getSystemVariablesInfo2Async(sessionId arg0, objectId[] arg1) {
            this.getSystemVariablesInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSystemVariablesInfo2Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getSystemVariablesInfo2OperationCompleted == null)) {
                this.getSystemVariablesInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemVariablesInfo2OperationCompleted);
            }
            this.InvokeAsync("getSystemVariablesInfo2", new object[] {
                        arg0,
                        arg1}, this.getSystemVariablesInfo2OperationCompleted, userState);
        }
        
        private void OngetSystemVariablesInfo2OperationCompleted(object arg) {
            if ((this.getSystemVariablesInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemVariablesInfo2Completed(this, new getSystemVariablesInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeGroup(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("removeGroup", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeGroupAsync(sessionId arg0, objectId arg1) {
            this.removeGroupAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeGroupAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeGroupOperationCompleted == null)) {
                this.removeGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveGroupOperationCompleted);
            }
            this.InvokeAsync("removeGroup", new object[] {
                        arg0,
                        arg1}, this.removeGroupOperationCompleted, userState);
        }
        
        private void OnremoveGroupOperationCompleted(object arg) {
            if ((this.removeGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeGroupCompleted(this, new removeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sharePerspectiveWithDefaultGeometry(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("sharePerspectiveWithDefaultGeometry", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void sharePerspectiveWithDefaultGeometryAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.sharePerspectiveWithDefaultGeometryAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void sharePerspectiveWithDefaultGeometryAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.sharePerspectiveWithDefaultGeometryOperationCompleted == null)) {
                this.sharePerspectiveWithDefaultGeometryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsharePerspectiveWithDefaultGeometryOperationCompleted);
            }
            this.InvokeAsync("sharePerspectiveWithDefaultGeometry", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.sharePerspectiveWithDefaultGeometryOperationCompleted, userState);
        }
        
        private void OnsharePerspectiveWithDefaultGeometryOperationCompleted(object arg) {
            if ((this.sharePerspectiveWithDefaultGeometryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sharePerspectiveWithDefaultGeometryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listTilers(sessionId arg0) {
            object[] results = this.Invoke("listTilers", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listTilersAsync(sessionId arg0) {
            this.listTilersAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listTilersAsync(sessionId arg0, object userState) {
            if ((this.listTilersOperationCompleted == null)) {
                this.listTilersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistTilersOperationCompleted);
            }
            this.InvokeAsync("listTilers", new object[] {
                        arg0}, this.listTilersOperationCompleted, userState);
        }
        
        private void OnlistTilersOperationCompleted(object arg) {
            if ((this.listTilersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listTilersCompleted(this, new listTilersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchTilers(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchTilers", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchTilersAsync(sessionId arg0, string arg1) {
            this.searchTilersAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchTilersAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchTilersOperationCompleted == null)) {
                this.searchTilersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTilersOperationCompleted);
            }
            this.InvokeAsync("searchTilers", new object[] {
                        arg0,
                        arg1}, this.searchTilersOperationCompleted, userState);
        }
        
        private void OnsearchTilersOperationCompleted(object arg) {
            if ((this.searchTilersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTilersCompleted(this, new searchTilersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bringDispletToFront(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("bringDispletToFront", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void bringDispletToFrontAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.bringDispletToFrontAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void bringDispletToFrontAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.bringDispletToFrontOperationCompleted == null)) {
                this.bringDispletToFrontOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbringDispletToFrontOperationCompleted);
            }
            this.InvokeAsync("bringDispletToFront", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.bringDispletToFrontOperationCompleted, userState);
        }
        
        private void OnbringDispletToFrontOperationCompleted(object arg) {
            if ((this.bringDispletToFrontCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bringDispletToFrontCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeDisplay(sessionId arg0, objectId arg1) {
            this.Invoke("removeDisplay", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removeDisplayAsync(sessionId arg0, objectId arg1) {
            this.removeDisplayAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeDisplayAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeDisplayOperationCompleted == null)) {
                this.removeDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveDisplayOperationCompleted);
            }
            this.InvokeAsync("removeDisplay", new object[] {
                        arg0,
                        arg1}, this.removeDisplayOperationCompleted, userState);
        }
        
        private void OnremoveDisplayOperationCompleted(object arg) {
            if ((this.removeDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeDisplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveAsDecoratorTemplate(sessionId arg0, objectId arg1, string arg2) {
            object[] results = this.Invoke("saveAsDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveAsDecoratorTemplateAsync(sessionId arg0, objectId arg1, string arg2) {
            this.saveAsDecoratorTemplateAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void saveAsDecoratorTemplateAsync(sessionId arg0, objectId arg1, string arg2, object userState) {
            if ((this.saveAsDecoratorTemplateOperationCompleted == null)) {
                this.saveAsDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("saveAsDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.saveAsDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OnsaveAsDecoratorTemplateOperationCompleted(object arg) {
            if ((this.saveAsDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsDecoratorTemplateCompleted(this, new saveAsDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findConfiguration(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findConfiguration", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findConfigurationAsync(sessionId arg0, string arg1) {
            this.findConfigurationAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findConfigurationAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findConfigurationOperationCompleted == null)) {
                this.findConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindConfigurationOperationCompleted);
            }
            this.InvokeAsync("findConfiguration", new object[] {
                        arg0,
                        arg1}, this.findConfigurationOperationCompleted, userState);
        }
        
        private void OnfindConfigurationOperationCompleted(object arg) {
            if ((this.findConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findConfigurationCompleted(this, new findConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<bool>[] forceRemoveTilers(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("forceRemoveTilers", new object[] {
                        arg0,
                        arg1});
            return ((System.Nullable<bool>[])(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveTilersAsync(sessionId arg0, objectId[] arg1) {
            this.forceRemoveTilersAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveTilersAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.forceRemoveTilersOperationCompleted == null)) {
                this.forceRemoveTilersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveTilersOperationCompleted);
            }
            this.InvokeAsync("forceRemoveTilers", new object[] {
                        arg0,
                        arg1}, this.forceRemoveTilersOperationCompleted, userState);
        }
        
        private void OnforceRemoveTilersOperationCompleted(object arg) {
            if ((this.forceRemoveTilersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveTilersCompleted(this, new forceRemoveTilersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setApplicationInfo(sessionId arg0, objectId arg1, applicationInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setApplicationInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setApplicationInfoAsync(sessionId arg0, objectId arg1, applicationInfo arg2, string[] arg3) {
            this.setApplicationInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setApplicationInfoAsync(sessionId arg0, objectId arg1, applicationInfo arg2, string[] arg3, object userState) {
            if ((this.setApplicationInfoOperationCompleted == null)) {
                this.setApplicationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetApplicationInfoOperationCompleted);
            }
            this.InvokeAsync("setApplicationInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setApplicationInfoOperationCompleted, userState);
        }
        
        private void OnsetApplicationInfoOperationCompleted(object arg) {
            if ((this.setApplicationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setApplicationInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDefaultAreaInfo(sessionId arg0, objectId arg1, defaultAreaInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDefaultAreaInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDefaultAreaInfoAsync(sessionId arg0, objectId arg1, defaultAreaInfo arg2, string[] arg3) {
            this.setDefaultAreaInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDefaultAreaInfoAsync(sessionId arg0, objectId arg1, defaultAreaInfo arg2, string[] arg3, object userState) {
            if ((this.setDefaultAreaInfoOperationCompleted == null)) {
                this.setDefaultAreaInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDefaultAreaInfoOperationCompleted);
            }
            this.InvokeAsync("setDefaultAreaInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDefaultAreaInfoOperationCompleted, userState);
        }
        
        private void OnsetDefaultAreaInfoOperationCompleted(object arg) {
            if ((this.setDefaultAreaInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDefaultAreaInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public windowInfo getWindowInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getWindowInfo", new object[] {
                        arg0,
                        arg1});
            return ((windowInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getWindowInfoAsync(sessionId arg0, objectId arg1) {
            this.getWindowInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getWindowInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getWindowInfoOperationCompleted == null)) {
                this.getWindowInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWindowInfoOperationCompleted);
            }
            this.InvokeAsync("getWindowInfo", new object[] {
                        arg0,
                        arg1}, this.getWindowInfoOperationCompleted, userState);
        }
        
        private void OngetWindowInfoOperationCompleted(object arg) {
            if ((this.getWindowInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWindowInfoCompleted(this, new getWindowInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] additionalDispletsForTiler(sessionId arg0, objectId arg1, objectId arg2) {
            object[] results = this.Invoke("additionalDispletsForTiler", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void additionalDispletsForTilerAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.additionalDispletsForTilerAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void additionalDispletsForTilerAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.additionalDispletsForTilerOperationCompleted == null)) {
                this.additionalDispletsForTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadditionalDispletsForTilerOperationCompleted);
            }
            this.InvokeAsync("additionalDispletsForTiler", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.additionalDispletsForTilerOperationCompleted, userState);
        }
        
        private void OnadditionalDispletsForTilerOperationCompleted(object arg) {
            if ((this.additionalDispletsForTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.additionalDispletsForTilerCompleted(this, new additionalDispletsForTilerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] listVideoTemplateURLs(sessionId arg0) {
            object[] results = this.Invoke("listVideoTemplateURLs", new object[] {
                        arg0});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listVideoTemplateURLsAsync(sessionId arg0) {
            this.listVideoTemplateURLsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listVideoTemplateURLsAsync(sessionId arg0, object userState) {
            if ((this.listVideoTemplateURLsOperationCompleted == null)) {
                this.listVideoTemplateURLsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistVideoTemplateURLsOperationCompleted);
            }
            this.InvokeAsync("listVideoTemplateURLs", new object[] {
                        arg0}, this.listVideoTemplateURLsOperationCompleted, userState);
        }
        
        private void OnlistVideoTemplateURLsOperationCompleted(object arg) {
            if ((this.listVideoTemplateURLsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listVideoTemplateURLsCompleted(this, new listVideoTemplateURLsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createApplicationWindow2(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6) {
            object[] results = this.Invoke("createApplicationWindow2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createApplicationWindow2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6) {
            this.createApplicationWindow2Async(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void createApplicationWindow2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6, object userState) {
            if ((this.createApplicationWindow2OperationCompleted == null)) {
                this.createApplicationWindow2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateApplicationWindow2OperationCompleted);
            }
            this.InvokeAsync("createApplicationWindow2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.createApplicationWindow2OperationCompleted, userState);
        }
        
        private void OncreateApplicationWindow2OperationCompleted(object arg) {
            if ((this.createApplicationWindow2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createApplicationWindow2Completed(this, new createApplicationWindow2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createApplicationWindow3(sessionId arg0, objectId arg1, applicationWindowDetail arg2) {
            object[] results = this.Invoke("createApplicationWindow3", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createApplicationWindow3Async(sessionId arg0, objectId arg1, applicationWindowDetail arg2) {
            this.createApplicationWindow3Async(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createApplicationWindow3Async(sessionId arg0, objectId arg1, applicationWindowDetail arg2, object userState) {
            if ((this.createApplicationWindow3OperationCompleted == null)) {
                this.createApplicationWindow3OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateApplicationWindow3OperationCompleted);
            }
            this.InvokeAsync("createApplicationWindow3", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createApplicationWindow3OperationCompleted, userState);
        }
        
        private void OncreateApplicationWindow3OperationCompleted(object arg) {
            if ((this.createApplicationWindow3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createApplicationWindow3Completed(this, new createApplicationWindow3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displayWrapper[] listAllDisplays(sessionId arg0) {
            object[] results = this.Invoke("listAllDisplays", new object[] {
                        arg0});
            return ((displayWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllDisplaysAsync(sessionId arg0) {
            this.listAllDisplaysAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllDisplaysAsync(sessionId arg0, object userState) {
            if ((this.listAllDisplaysOperationCompleted == null)) {
                this.listAllDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllDisplaysOperationCompleted);
            }
            this.InvokeAsync("listAllDisplays", new object[] {
                        arg0}, this.listAllDisplaysOperationCompleted, userState);
        }
        
        private void OnlistAllDisplaysOperationCompleted(object arg) {
            if ((this.listAllDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllDisplaysCompleted(this, new listAllDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setUsersInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] userInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setUsersInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setUsersInfoAsync(sessionId arg0, objectId[] arg1, userInfo[] arg2, string[] arg3) {
            this.setUsersInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setUsersInfoAsync(sessionId arg0, objectId[] arg1, userInfo[] arg2, string[] arg3, object userState) {
            if ((this.setUsersInfoOperationCompleted == null)) {
                this.setUsersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUsersInfoOperationCompleted);
            }
            this.InvokeAsync("setUsersInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setUsersInfoOperationCompleted, userState);
        }
        
        private void OnsetUsersInfoOperationCompleted(object arg) {
            if ((this.setUsersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUsersInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSystem(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeSystem", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeSystemAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeSystemAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeSystemAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeSystemOperationCompleted == null)) {
                this.unsubscribeSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSystemOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSystem", new object[] {
                        arg0,
                        arg1}, this.unsubscribeSystemOperationCompleted, userState);
        }
        
        private void OnunsubscribeSystemOperationCompleted(object arg) {
            if ((this.unsubscribeSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSystemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setWebSourceDetail(sessionId arg0, objectId arg1, webSourceDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setWebSourceDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setWebSourceDetailAsync(sessionId arg0, objectId arg1, webSourceDetail arg2, string[] arg3) {
            this.setWebSourceDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setWebSourceDetailAsync(sessionId arg0, objectId arg1, webSourceDetail arg2, string[] arg3, object userState) {
            if ((this.setWebSourceDetailOperationCompleted == null)) {
                this.setWebSourceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWebSourceDetailOperationCompleted);
            }
            this.InvokeAsync("setWebSourceDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setWebSourceDetailOperationCompleted, userState);
        }
        
        private void OnsetWebSourceDetailOperationCompleted(object arg) {
            if ((this.setWebSourceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWebSourceDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getLoggedInUser(sessionId arg0) {
            object[] results = this.Invoke("getLoggedInUser", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLoggedInUserAsync(sessionId arg0) {
            this.getLoggedInUserAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getLoggedInUserAsync(sessionId arg0, object userState) {
            if ((this.getLoggedInUserOperationCompleted == null)) {
                this.getLoggedInUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLoggedInUserOperationCompleted);
            }
            this.InvokeAsync("getLoggedInUser", new object[] {
                        arg0}, this.getLoggedInUserOperationCompleted, userState);
        }
        
        private void OngetLoggedInUserOperationCompleted(object arg) {
            if ((this.getLoggedInUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLoggedInUserCompleted(this, new getLoggedInUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public sessionId startSession(string arg0, string arg1) {
            object[] results = this.Invoke("startSession", new object[] {
                        arg0,
                        arg1});
            return ((sessionId)(results[0]));
        }
        
        /// <remarks/>
        public void startSessionAsync(string arg0, string arg1) {
            this.startSessionAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void startSessionAsync(string arg0, string arg1, object userState) {
            if ((this.startSessionOperationCompleted == null)) {
                this.startSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartSessionOperationCompleted);
            }
            this.InvokeAsync("startSession", new object[] {
                        arg0,
                        arg1}, this.startSessionOperationCompleted, userState);
        }
        
        private void OnstartSessionOperationCompleted(object arg) {
            if ((this.startSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startSessionCompleted(this, new startSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public perspectiveInfo2 getPerspectiveInfo2(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getPerspectiveInfo2", new object[] {
                        arg0,
                        arg1});
            return ((perspectiveInfo2)(results[0]));
        }
        
        /// <remarks/>
        public void getPerspectiveInfo2Async(sessionId arg0, objectId arg1) {
            this.getPerspectiveInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getPerspectiveInfo2Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getPerspectiveInfo2OperationCompleted == null)) {
                this.getPerspectiveInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPerspectiveInfo2OperationCompleted);
            }
            this.InvokeAsync("getPerspectiveInfo2", new object[] {
                        arg0,
                        arg1}, this.getPerspectiveInfo2OperationCompleted, userState);
        }
        
        private void OngetPerspectiveInfo2OperationCompleted(object arg) {
            if ((this.getPerspectiveInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPerspectiveInfo2Completed(this, new getPerspectiveInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSystemVariablesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] systemVariableInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSystemVariablesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSystemVariablesInfoAsync(sessionId arg0, objectId[] arg1, systemVariableInfo[] arg2, string[] arg3) {
            this.setSystemVariablesInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSystemVariablesInfoAsync(sessionId arg0, objectId[] arg1, systemVariableInfo[] arg2, string[] arg3, object userState) {
            if ((this.setSystemVariablesInfoOperationCompleted == null)) {
                this.setSystemVariablesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSystemVariablesInfoOperationCompleted);
            }
            this.InvokeAsync("setSystemVariablesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSystemVariablesInfoOperationCompleted, userState);
        }
        
        private void OnsetSystemVariablesInfoOperationCompleted(object arg) {
            if ((this.setSystemVariablesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSystemVariablesInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getModules(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getModules", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getModulesAsync(sessionId arg0, objectId arg1) {
            this.getModulesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getModulesAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getModulesOperationCompleted == null)) {
                this.getModulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetModulesOperationCompleted);
            }
            this.InvokeAsync("getModules", new object[] {
                        arg0,
                        arg1}, this.getModulesOperationCompleted, userState);
        }
        
        private void OngetModulesOperationCompleted(object arg) {
            if ((this.getModulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getModulesCompleted(this, new getModulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllSystemVariables(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllSystemVariables", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllSystemVariablesAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllSystemVariablesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllSystemVariablesAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllSystemVariablesOperationCompleted == null)) {
                this.unsubscribeAllSystemVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllSystemVariablesOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllSystemVariables", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllSystemVariablesOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllSystemVariablesOperationCompleted(object arg) {
            if ((this.unsubscribeAllSystemVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllSystemVariablesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSnapshotInfo(sessionId arg0, objectId arg1, snapshotInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSnapshotInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSnapshotInfoAsync(sessionId arg0, objectId arg1, snapshotInfo arg2, string[] arg3) {
            this.setSnapshotInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSnapshotInfoAsync(sessionId arg0, objectId arg1, snapshotInfo arg2, string[] arg3, object userState) {
            if ((this.setSnapshotInfoOperationCompleted == null)) {
                this.setSnapshotInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSnapshotInfoOperationCompleted);
            }
            this.InvokeAsync("setSnapshotInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSnapshotInfoOperationCompleted, userState);
        }
        
        private void OnsetSnapshotInfoOperationCompleted(object arg) {
            if ((this.setSnapshotInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSnapshotInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setWindowInfo(sessionId arg0, objectId arg1, windowInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setWindowInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setWindowInfoAsync(sessionId arg0, objectId arg1, windowInfo arg2, string[] arg3) {
            this.setWindowInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setWindowInfoAsync(sessionId arg0, objectId arg1, windowInfo arg2, string[] arg3, object userState) {
            if ((this.setWindowInfoOperationCompleted == null)) {
                this.setWindowInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWindowInfoOperationCompleted);
            }
            this.InvokeAsync("setWindowInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setWindowInfoOperationCompleted, userState);
        }
        
        private void OnsetWindowInfoOperationCompleted(object arg) {
            if ((this.setWindowInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWindowInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listSessionsByUserName(sessionId arg0, string arg1) {
            object[] results = this.Invoke("listSessionsByUserName", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listSessionsByUserNameAsync(sessionId arg0, string arg1) {
            this.listSessionsByUserNameAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listSessionsByUserNameAsync(sessionId arg0, string arg1, object userState) {
            if ((this.listSessionsByUserNameOperationCompleted == null)) {
                this.listSessionsByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistSessionsByUserNameOperationCompleted);
            }
            this.InvokeAsync("listSessionsByUserName", new object[] {
                        arg0,
                        arg1}, this.listSessionsByUserNameOperationCompleted, userState);
        }
        
        private void OnlistSessionsByUserNameOperationCompleted(object arg) {
            if ((this.listSessionsByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listSessionsByUserNameCompleted(this, new listSessionsByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createDisplay(sessionId arg0, string arg1, string arg2, bool arg3) {
            object[] results = this.Invoke("createDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createDisplayAsync(sessionId arg0, string arg1, string arg2, bool arg3) {
            this.createDisplayAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createDisplayAsync(sessionId arg0, string arg1, string arg2, bool arg3, object userState) {
            if ((this.createDisplayOperationCompleted == null)) {
                this.createDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDisplayOperationCompleted);
            }
            this.InvokeAsync("createDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createDisplayOperationCompleted, userState);
        }
        
        private void OncreateDisplayOperationCompleted(object arg) {
            if ((this.createDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDisplayCompleted(this, new createDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public roleInfo[] listRolesInfo(sessionId arg0) {
            object[] results = this.Invoke("listRolesInfo", new object[] {
                        arg0});
            return ((roleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void listRolesInfoAsync(sessionId arg0) {
            this.listRolesInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listRolesInfoAsync(sessionId arg0, object userState) {
            if ((this.listRolesInfoOperationCompleted == null)) {
                this.listRolesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistRolesInfoOperationCompleted);
            }
            this.InvokeAsync("listRolesInfo", new object[] {
                        arg0}, this.listRolesInfoOperationCompleted, userState);
        }
        
        private void OnlistRolesInfoOperationCompleted(object arg) {
            if ((this.listRolesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listRolesInfoCompleted(this, new listRolesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createScreenScrapeSource2(sessionId arg0, sourceInfo2 arg1, screenScrapeSourceDetail2 arg2) {
            object[] results = this.Invoke("createScreenScrapeSource2", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createScreenScrapeSource2Async(sessionId arg0, sourceInfo2 arg1, screenScrapeSourceDetail2 arg2) {
            this.createScreenScrapeSource2Async(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createScreenScrapeSource2Async(sessionId arg0, sourceInfo2 arg1, screenScrapeSourceDetail2 arg2, object userState) {
            if ((this.createScreenScrapeSource2OperationCompleted == null)) {
                this.createScreenScrapeSource2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateScreenScrapeSource2OperationCompleted);
            }
            this.InvokeAsync("createScreenScrapeSource2", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createScreenScrapeSource2OperationCompleted, userState);
        }
        
        private void OncreateScreenScrapeSource2OperationCompleted(object arg) {
            if ((this.createScreenScrapeSource2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createScreenScrapeSource2Completed(this, new createScreenScrapeSource2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setPerspectiveInfo(sessionId arg0, objectId arg1, perspectiveInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setPerspectiveInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setPerspectiveInfoAsync(sessionId arg0, objectId arg1, perspectiveInfo arg2, string[] arg3) {
            this.setPerspectiveInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setPerspectiveInfoAsync(sessionId arg0, objectId arg1, perspectiveInfo arg2, string[] arg3, object userState) {
            if ((this.setPerspectiveInfoOperationCompleted == null)) {
                this.setPerspectiveInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPerspectiveInfoOperationCompleted);
            }
            this.InvokeAsync("setPerspectiveInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setPerspectiveInfoOperationCompleted, userState);
        }
        
        private void OnsetPerspectiveInfoOperationCompleted(object arg) {
            if ((this.setPerspectiveInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPerspectiveInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setStaticTextDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] staticTextDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setStaticTextDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setStaticTextDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, staticTextDecoratorDetail[] arg2, string[] arg3) {
            this.setStaticTextDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setStaticTextDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, staticTextDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setStaticTextDecoratorsDetailOperationCompleted == null)) {
                this.setStaticTextDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStaticTextDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setStaticTextDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setStaticTextDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetStaticTextDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setStaticTextDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStaticTextDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public applicationWrapper[] listAllApplications(sessionId arg0) {
            object[] results = this.Invoke("listAllApplications", new object[] {
                        arg0});
            return ((applicationWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllApplicationsAsync(sessionId arg0) {
            this.listAllApplicationsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllApplicationsAsync(sessionId arg0, object userState) {
            if ((this.listAllApplicationsOperationCompleted == null)) {
                this.listAllApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllApplicationsOperationCompleted);
            }
            this.InvokeAsync("listAllApplications", new object[] {
                        arg0}, this.listAllApplicationsOperationCompleted, userState);
        }
        
        private void OnlistAllApplicationsOperationCompleted(object arg) {
            if ((this.listAllApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllApplicationsCompleted(this, new listAllApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findDisplay(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findDisplay", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findDisplayAsync(sessionId arg0, string arg1) {
            this.findDisplayAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findDisplayAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findDisplayOperationCompleted == null)) {
                this.findDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindDisplayOperationCompleted);
            }
            this.InvokeAsync("findDisplay", new object[] {
                        arg0,
                        arg1}, this.findDisplayOperationCompleted, userState);
        }
        
        private void OnfindDisplayOperationCompleted(object arg) {
            if ((this.findDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findDisplayCompleted(this, new findDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getDisplaysUserName(sessionId arg0, string arg1) {
            object[] results = this.Invoke("getDisplaysUserName", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDisplaysUserNameAsync(sessionId arg0, string arg1) {
            this.getDisplaysUserNameAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDisplaysUserNameAsync(sessionId arg0, string arg1, object userState) {
            if ((this.getDisplaysUserNameOperationCompleted == null)) {
                this.getDisplaysUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplaysUserNameOperationCompleted);
            }
            this.InvokeAsync("getDisplaysUserName", new object[] {
                        arg0,
                        arg1}, this.getDisplaysUserNameOperationCompleted, userState);
        }
        
        private void OngetDisplaysUserNameOperationCompleted(object arg) {
            if ((this.getDisplaysUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplaysUserNameCompleted(this, new getDisplaysUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getSnapshots(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSnapshots", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getSnapshotsAsync(sessionId arg0, objectId arg1) {
            this.getSnapshotsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSnapshotsAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSnapshotsOperationCompleted == null)) {
                this.getSnapshotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSnapshotsOperationCompleted);
            }
            this.InvokeAsync("getSnapshots", new object[] {
                        arg0,
                        arg1}, this.getSnapshotsOperationCompleted, userState);
        }
        
        private void OngetSnapshotsOperationCompleted(object arg) {
            if ((this.getSnapshotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSnapshotsCompleted(this, new getSnapshotsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void loadSnapshot(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("loadSnapshot", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void loadSnapshotAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.loadSnapshotAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void loadSnapshotAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.loadSnapshotOperationCompleted == null)) {
                this.loadSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloadSnapshotOperationCompleted);
            }
            this.InvokeAsync("loadSnapshot", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.loadSnapshotOperationCompleted, userState);
        }
        
        private void OnloadSnapshotOperationCompleted(object arg) {
            if ((this.loadSnapshotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loadSnapshotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<bool>[] forceRemoveSystemVariables(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("forceRemoveSystemVariables", new object[] {
                        arg0,
                        arg1});
            return ((System.Nullable<bool>[])(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveSystemVariablesAsync(sessionId arg0, objectId[] arg1) {
            this.forceRemoveSystemVariablesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveSystemVariablesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.forceRemoveSystemVariablesOperationCompleted == null)) {
                this.forceRemoveSystemVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveSystemVariablesOperationCompleted);
            }
            this.InvokeAsync("forceRemoveSystemVariables", new object[] {
                        arg0,
                        arg1}, this.forceRemoveSystemVariablesOperationCompleted, userState);
        }
        
        private void OnforceRemoveSystemVariablesOperationCompleted(object arg) {
            if ((this.forceRemoveSystemVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveSystemVariablesCompleted(this, new forceRemoveSystemVariablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findDisplayByUniqueId(sessionId arg0, int arg1) {
            object[] results = this.Invoke("findDisplayByUniqueId", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findDisplayByUniqueIdAsync(sessionId arg0, int arg1) {
            this.findDisplayByUniqueIdAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findDisplayByUniqueIdAsync(sessionId arg0, int arg1, object userState) {
            if ((this.findDisplayByUniqueIdOperationCompleted == null)) {
                this.findDisplayByUniqueIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindDisplayByUniqueIdOperationCompleted);
            }
            this.InvokeAsync("findDisplayByUniqueId", new object[] {
                        arg0,
                        arg1}, this.findDisplayByUniqueIdOperationCompleted, userState);
        }
        
        private void OnfindDisplayByUniqueIdOperationCompleted(object arg) {
            if ((this.findDisplayByUniqueIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findDisplayByUniqueIdCompleted(this, new findDisplayByUniqueIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeConfigurations(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeConfigurations", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeConfigurationsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribeConfigurationsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeConfigurationsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribeConfigurationsOperationCompleted == null)) {
                this.unsubscribeConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeConfigurationsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeConfigurations", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeConfigurationsOperationCompleted, userState);
        }
        
        private void OnunsubscribeConfigurationsOperationCompleted(object arg) {
            if ((this.unsubscribeConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeConfigurationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createMessage(sessionId arg0, string arg1, string arg2, string arg3, string arg4) {
            object[] results = this.Invoke("createMessage", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createMessageAsync(sessionId arg0, string arg1, string arg2, string arg3, string arg4) {
            this.createMessageAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void createMessageAsync(sessionId arg0, string arg1, string arg2, string arg3, string arg4, object userState) {
            if ((this.createMessageOperationCompleted == null)) {
                this.createMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateMessageOperationCompleted);
            }
            this.InvokeAsync("createMessage", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.createMessageOperationCompleted, userState);
        }
        
        private void OncreateMessageOperationCompleted(object arg) {
            if ((this.createMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createMessageCompleted(this, new createMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void startPublishingEvent(sessionId arg0) {
            this.Invoke("startPublishingEvent", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void startPublishingEventAsync(sessionId arg0) {
            this.startPublishingEventAsync(arg0, null);
        }
        
        /// <remarks/>
        public void startPublishingEventAsync(sessionId arg0, object userState) {
            if ((this.startPublishingEventOperationCompleted == null)) {
                this.startPublishingEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartPublishingEventOperationCompleted);
            }
            this.InvokeAsync("startPublishingEvent", new object[] {
                        arg0}, this.startPublishingEventOperationCompleted, userState);
        }
        
        private void OnstartPublishingEventOperationCompleted(object arg) {
            if ((this.startPublishingEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startPublishingEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeWindow(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeWindow", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeWindowAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeWindowAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeWindowAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeWindowOperationCompleted == null)) {
                this.unsubscribeWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeWindowOperationCompleted);
            }
            this.InvokeAsync("unsubscribeWindow", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeWindowOperationCompleted, userState);
        }
        
        private void OnunsubscribeWindowOperationCompleted(object arg) {
            if ((this.unsubscribeWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeWindowCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listDecoratorTemplates(sessionId arg0) {
            object[] results = this.Invoke("listDecoratorTemplates", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listDecoratorTemplatesAsync(sessionId arg0) {
            this.listDecoratorTemplatesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listDecoratorTemplatesAsync(sessionId arg0, object userState) {
            if ((this.listDecoratorTemplatesOperationCompleted == null)) {
                this.listDecoratorTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistDecoratorTemplatesOperationCompleted);
            }
            this.InvokeAsync("listDecoratorTemplates", new object[] {
                        arg0}, this.listDecoratorTemplatesOperationCompleted, userState);
        }
        
        private void OnlistDecoratorTemplatesOperationCompleted(object arg) {
            if ((this.listDecoratorTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listDecoratorTemplatesCompleted(this, new listDecoratorTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displetInfo[] getDispletsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getDispletsInfo", new object[] {
                        arg0,
                        arg1});
            return ((displetInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getDispletsInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getDispletsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDispletsInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getDispletsInfoOperationCompleted == null)) {
                this.getDispletsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDispletsInfoOperationCompleted);
            }
            this.InvokeAsync("getDispletsInfo", new object[] {
                        arg0,
                        arg1}, this.getDispletsInfoOperationCompleted, userState);
        }
        
        private void OngetDispletsInfoOperationCompleted(object arg) {
            if ((this.getDispletsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDispletsInfoCompleted(this, new getDispletsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllSnapshots(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllSnapshots", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllSnapshotsAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllSnapshotsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllSnapshotsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllSnapshotsOperationCompleted == null)) {
                this.unsubscribeAllSnapshotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllSnapshotsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllSnapshots", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllSnapshotsOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllSnapshotsOperationCompleted(object arg) {
            if ((this.unsubscribeAllSnapshotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllSnapshotsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createPerspectiveWindow2(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6) {
            object[] results = this.Invoke("createPerspectiveWindow2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createPerspectiveWindow2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6) {
            this.createPerspectiveWindow2Async(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void createPerspectiveWindow2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6, object userState) {
            if ((this.createPerspectiveWindow2OperationCompleted == null)) {
                this.createPerspectiveWindow2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePerspectiveWindow2OperationCompleted);
            }
            this.InvokeAsync("createPerspectiveWindow2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.createPerspectiveWindow2OperationCompleted, userState);
        }
        
        private void OncreatePerspectiveWindow2OperationCompleted(object arg) {
            if ((this.createPerspectiveWindow2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPerspectiveWindow2Completed(this, new createPerspectiveWindow2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removePerspectiveByName(sessionId arg0, string arg1) {
            this.Invoke("removePerspectiveByName", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removePerspectiveByNameAsync(sessionId arg0, string arg1) {
            this.removePerspectiveByNameAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removePerspectiveByNameAsync(sessionId arg0, string arg1, object userState) {
            if ((this.removePerspectiveByNameOperationCompleted == null)) {
                this.removePerspectiveByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePerspectiveByNameOperationCompleted);
            }
            this.InvokeAsync("removePerspectiveByName", new object[] {
                        arg0,
                        arg1}, this.removePerspectiveByNameOperationCompleted, userState);
        }
        
        private void OnremovePerspectiveByNameOperationCompleted(object arg) {
            if ((this.removePerspectiveByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePerspectiveByNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeMiscellaneousDefaultSetting(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeMiscellaneousDefaultSetting", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeMiscellaneousDefaultSettingAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeMiscellaneousDefaultSettingAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeMiscellaneousDefaultSettingAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeMiscellaneousDefaultSettingOperationCompleted == null)) {
                this.unsubscribeMiscellaneousDefaultSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeMiscellaneousDefaultSettingOperationCompleted);
            }
            this.InvokeAsync("unsubscribeMiscellaneousDefaultSetting", new object[] {
                        arg0,
                        arg1}, this.unsubscribeMiscellaneousDefaultSettingOperationCompleted, userState);
        }
        
        private void OnunsubscribeMiscellaneousDefaultSettingOperationCompleted(object arg) {
            if ((this.unsubscribeMiscellaneousDefaultSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeMiscellaneousDefaultSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getSystemEnvVariable(sessionId arg0, string arg1) {
            object[] results = this.Invoke("getSystemEnvVariable", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemEnvVariableAsync(sessionId arg0, string arg1) {
            this.getSystemEnvVariableAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSystemEnvVariableAsync(sessionId arg0, string arg1, object userState) {
            if ((this.getSystemEnvVariableOperationCompleted == null)) {
                this.getSystemEnvVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemEnvVariableOperationCompleted);
            }
            this.InvokeAsync("getSystemEnvVariable", new object[] {
                        arg0,
                        arg1}, this.getSystemEnvVariableOperationCompleted, userState);
        }
        
        private void OngetSystemEnvVariableOperationCompleted(object arg) {
            if ((this.getSystemEnvVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemEnvVariableCompleted(this, new getSystemEnvVariableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSourceInfo2(sessionId arg0, objectId arg1, sourceInfo2 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSourceInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSourceInfo2Async(sessionId arg0, objectId arg1, sourceInfo2 arg2, string[] arg3) {
            this.setSourceInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSourceInfo2Async(sessionId arg0, objectId arg1, sourceInfo2 arg2, string[] arg3, object userState) {
            if ((this.setSourceInfo2OperationCompleted == null)) {
                this.setSourceInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSourceInfo2OperationCompleted);
            }
            this.InvokeAsync("setSourceInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSourceInfo2OperationCompleted, userState);
        }
        
        private void OnsetSourceInfo2OperationCompleted(object arg) {
            if ((this.setSourceInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSourceInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sendDispletsToBack(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            this.Invoke("sendDispletsToBack", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void sendDispletsToBackAsync(sessionId arg0, objectId[] arg1) {
            this.sendDispletsToBackAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void sendDispletsToBackAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.sendDispletsToBackOperationCompleted == null)) {
                this.sendDispletsToBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDispletsToBackOperationCompleted);
            }
            this.InvokeAsync("sendDispletsToBack", new object[] {
                        arg0,
                        arg1}, this.sendDispletsToBackOperationCompleted, userState);
        }
        
        private void OnsendDispletsToBackOperationCompleted(object arg) {
            if ((this.sendDispletsToBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDispletsToBackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listKeyboardShortcutSettings(sessionId arg0) {
            object[] results = this.Invoke("listKeyboardShortcutSettings", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listKeyboardShortcutSettingsAsync(sessionId arg0) {
            this.listKeyboardShortcutSettingsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listKeyboardShortcutSettingsAsync(sessionId arg0, object userState) {
            if ((this.listKeyboardShortcutSettingsOperationCompleted == null)) {
                this.listKeyboardShortcutSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistKeyboardShortcutSettingsOperationCompleted);
            }
            this.InvokeAsync("listKeyboardShortcutSettings", new object[] {
                        arg0}, this.listKeyboardShortcutSettingsOperationCompleted, userState);
        }
        
        private void OnlistKeyboardShortcutSettingsOperationCompleted(object arg) {
            if ((this.listKeyboardShortcutSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listKeyboardShortcutSettingsCompleted(this, new listKeyboardShortcutSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createApplicationWindow(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6) {
            object[] results = this.Invoke("createApplicationWindow", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createApplicationWindowAsync(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6) {
            this.createApplicationWindowAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void createApplicationWindowAsync(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6, object userState) {
            if ((this.createApplicationWindowOperationCompleted == null)) {
                this.createApplicationWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateApplicationWindowOperationCompleted);
            }
            this.InvokeAsync("createApplicationWindow", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.createApplicationWindowOperationCompleted, userState);
        }
        
        private void OncreateApplicationWindowOperationCompleted(object arg) {
            if ((this.createApplicationWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createApplicationWindowCompleted(this, new createApplicationWindowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId copyReadOnlyPerspective(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("copyReadOnlyPerspective", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void copyReadOnlyPerspectiveAsync(sessionId arg0, objectId arg1) {
            this.copyReadOnlyPerspectiveAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyReadOnlyPerspectiveAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.copyReadOnlyPerspectiveOperationCompleted == null)) {
                this.copyReadOnlyPerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyReadOnlyPerspectiveOperationCompleted);
            }
            this.InvokeAsync("copyReadOnlyPerspective", new object[] {
                        arg0,
                        arg1}, this.copyReadOnlyPerspectiveOperationCompleted, userState);
        }
        
        private void OncopyReadOnlyPerspectiveOperationCompleted(object arg) {
            if ((this.copyReadOnlyPerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyReadOnlyPerspectiveCompleted(this, new copyReadOnlyPerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public messageInfo getMessageInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getMessageInfo", new object[] {
                        arg0,
                        arg1});
            return ((messageInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getMessageInfoAsync(sessionId arg0, objectId arg1) {
            this.getMessageInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getMessageInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getMessageInfoOperationCompleted == null)) {
                this.getMessageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMessageInfoOperationCompleted);
            }
            this.InvokeAsync("getMessageInfo", new object[] {
                        arg0,
                        arg1}, this.getMessageInfoOperationCompleted, userState);
        }
        
        private void OngetMessageInfoOperationCompleted(object arg) {
            if ((this.getMessageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMessageInfoCompleted(this, new getMessageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveAsUserTilingForPerspective(sessionId arg0, objectId arg1, string arg2, int arg3, int arg4) {
            object[] results = this.Invoke("saveAsUserTilingForPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveAsUserTilingForPerspectiveAsync(sessionId arg0, objectId arg1, string arg2, int arg3, int arg4) {
            this.saveAsUserTilingForPerspectiveAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void saveAsUserTilingForPerspectiveAsync(sessionId arg0, objectId arg1, string arg2, int arg3, int arg4, object userState) {
            if ((this.saveAsUserTilingForPerspectiveOperationCompleted == null)) {
                this.saveAsUserTilingForPerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsUserTilingForPerspectiveOperationCompleted);
            }
            this.InvokeAsync("saveAsUserTilingForPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.saveAsUserTilingForPerspectiveOperationCompleted, userState);
        }
        
        private void OnsaveAsUserTilingForPerspectiveOperationCompleted(object arg) {
            if ((this.saveAsUserTilingForPerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsUserTilingForPerspectiveCompleted(this, new saveAsUserTilingForPerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public perspectiveInfo getPerspectiveInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getPerspectiveInfo", new object[] {
                        arg0,
                        arg1});
            return ((perspectiveInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getPerspectiveInfoAsync(sessionId arg0, objectId arg1) {
            this.getPerspectiveInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getPerspectiveInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getPerspectiveInfoOperationCompleted == null)) {
                this.getPerspectiveInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPerspectiveInfoOperationCompleted);
            }
            this.InvokeAsync("getPerspectiveInfo", new object[] {
                        arg0,
                        arg1}, this.getPerspectiveInfoOperationCompleted, userState);
        }
        
        private void OngetPerspectiveInfoOperationCompleted(object arg) {
            if ((this.getPerspectiveInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPerspectiveInfoCompleted(this, new getPerspectiveInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displayInfo3[] getDisplaysInfo3(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getDisplaysInfo3", new object[] {
                        arg0,
                        arg1});
            return ((displayInfo3[])(results[0]));
        }
        
        /// <remarks/>
        public void getDisplaysInfo3Async(sessionId arg0, objectId[] arg1) {
            this.getDisplaysInfo3Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDisplaysInfo3Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getDisplaysInfo3OperationCompleted == null)) {
                this.getDisplaysInfo3OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplaysInfo3OperationCompleted);
            }
            this.InvokeAsync("getDisplaysInfo3", new object[] {
                        arg0,
                        arg1}, this.getDisplaysInfo3OperationCompleted, userState);
        }
        
        private void OngetDisplaysInfo3OperationCompleted(object arg) {
            if ((this.getDisplaysInfo3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplaysInfo3Completed(this, new getDisplaysInfo3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displayInfo2[] getDisplaysInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getDisplaysInfo2", new object[] {
                        arg0,
                        arg1});
            return ((displayInfo2[])(results[0]));
        }
        
        /// <remarks/>
        public void getDisplaysInfo2Async(sessionId arg0, objectId[] arg1) {
            this.getDisplaysInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDisplaysInfo2Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getDisplaysInfo2OperationCompleted == null)) {
                this.getDisplaysInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplaysInfo2OperationCompleted);
            }
            this.InvokeAsync("getDisplaysInfo2", new object[] {
                        arg0,
                        arg1}, this.getDisplaysInfo2OperationCompleted, userState);
        }
        
        private void OngetDisplaysInfo2OperationCompleted(object arg) {
            if ((this.getDisplaysInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplaysInfo2Completed(this, new getDisplaysInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveAsUserTilingForDisplay(sessionId arg0, objectId arg1, string arg2, int arg3, int arg4) {
            object[] results = this.Invoke("saveAsUserTilingForDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveAsUserTilingForDisplayAsync(sessionId arg0, objectId arg1, string arg2, int arg3, int arg4) {
            this.saveAsUserTilingForDisplayAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void saveAsUserTilingForDisplayAsync(sessionId arg0, objectId arg1, string arg2, int arg3, int arg4, object userState) {
            if ((this.saveAsUserTilingForDisplayOperationCompleted == null)) {
                this.saveAsUserTilingForDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsUserTilingForDisplayOperationCompleted);
            }
            this.InvokeAsync("saveAsUserTilingForDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.saveAsUserTilingForDisplayOperationCompleted, userState);
        }
        
        private void OnsaveAsUserTilingForDisplayOperationCompleted(object arg) {
            if ((this.saveAsUserTilingForDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsUserTilingForDisplayCompleted(this, new saveAsUserTilingForDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<bool>[] forceRemoveUsers(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("forceRemoveUsers", new object[] {
                        arg0,
                        arg1});
            return ((System.Nullable<bool>[])(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveUsersAsync(sessionId arg0, objectId[] arg1) {
            this.forceRemoveUsersAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveUsersAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.forceRemoveUsersOperationCompleted == null)) {
                this.forceRemoveUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveUsersOperationCompleted);
            }
            this.InvokeAsync("forceRemoveUsers", new object[] {
                        arg0,
                        arg1}, this.forceRemoveUsersOperationCompleted, userState);
        }
        
        private void OnforceRemoveUsersOperationCompleted(object arg) {
            if ((this.forceRemoveUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveUsersCompleted(this, new forceRemoveUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listPerspectives(sessionId arg0) {
            object[] results = this.Invoke("listPerspectives", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listPerspectivesAsync(sessionId arg0) {
            this.listPerspectivesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listPerspectivesAsync(sessionId arg0, object userState) {
            if ((this.listPerspectivesOperationCompleted == null)) {
                this.listPerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistPerspectivesOperationCompleted);
            }
            this.InvokeAsync("listPerspectives", new object[] {
                        arg0}, this.listPerspectivesOperationCompleted, userState);
        }
        
        private void OnlistPerspectivesOperationCompleted(object arg) {
            if ((this.listPerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listPerspectivesCompleted(this, new listPerspectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setImageDecoratorDetail2(sessionId arg0, objectId arg1, imageDecoratorDetail2 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setImageDecoratorDetail2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setImageDecoratorDetail2Async(sessionId arg0, objectId arg1, imageDecoratorDetail2 arg2, string[] arg3) {
            this.setImageDecoratorDetail2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setImageDecoratorDetail2Async(sessionId arg0, objectId arg1, imageDecoratorDetail2 arg2, string[] arg3, object userState) {
            if ((this.setImageDecoratorDetail2OperationCompleted == null)) {
                this.setImageDecoratorDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetImageDecoratorDetail2OperationCompleted);
            }
            this.InvokeAsync("setImageDecoratorDetail2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setImageDecoratorDetail2OperationCompleted, userState);
        }
        
        private void OnsetImageDecoratorDetail2OperationCompleted(object arg) {
            if ((this.setImageDecoratorDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setImageDecoratorDetail2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public groupInfo[] listGroupsInfo(sessionId arg0) {
            object[] results = this.Invoke("listGroupsInfo", new object[] {
                        arg0});
            return ((groupInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void listGroupsInfoAsync(sessionId arg0) {
            this.listGroupsInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listGroupsInfoAsync(sessionId arg0, object userState) {
            if ((this.listGroupsInfoOperationCompleted == null)) {
                this.listGroupsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistGroupsInfoOperationCompleted);
            }
            this.InvokeAsync("listGroupsInfo", new object[] {
                        arg0}, this.listGroupsInfoOperationCompleted, userState);
        }
        
        private void OnlistGroupsInfoOperationCompleted(object arg) {
            if ((this.listGroupsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listGroupsInfoCompleted(this, new listGroupsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeDisplets(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeDisplets", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeDispletsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribeDispletsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeDispletsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribeDispletsOperationCompleted == null)) {
                this.subscribeDispletsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeDispletsOperationCompleted);
            }
            this.InvokeAsync("subscribeDisplets", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeDispletsOperationCompleted, userState);
        }
        
        private void OnsubscribeDispletsOperationCompleted(object arg) {
            if ((this.subscribeDispletsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeDispletsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public screenScrapeSourceDetail2 getScreenScrapeSourceDetail2(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getScreenScrapeSourceDetail2", new object[] {
                        arg0,
                        arg1});
            return ((screenScrapeSourceDetail2)(results[0]));
        }
        
        /// <remarks/>
        public void getScreenScrapeSourceDetail2Async(sessionId arg0, objectId arg1) {
            this.getScreenScrapeSourceDetail2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getScreenScrapeSourceDetail2Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getScreenScrapeSourceDetail2OperationCompleted == null)) {
                this.getScreenScrapeSourceDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetScreenScrapeSourceDetail2OperationCompleted);
            }
            this.InvokeAsync("getScreenScrapeSourceDetail2", new object[] {
                        arg0,
                        arg1}, this.getScreenScrapeSourceDetail2OperationCompleted, userState);
        }
        
        private void OngetScreenScrapeSourceDetail2OperationCompleted(object arg) {
            if ((this.getScreenScrapeSourceDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getScreenScrapeSourceDetail2Completed(this, new getScreenScrapeSourceDetail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSystemPropertyPool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeSystemPropertyPool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeSystemPropertyPoolAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeSystemPropertyPoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeSystemPropertyPoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeSystemPropertyPoolOperationCompleted == null)) {
                this.unsubscribeSystemPropertyPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSystemPropertyPoolOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSystemPropertyPool", new object[] {
                        arg0,
                        arg1}, this.unsubscribeSystemPropertyPoolOperationCompleted, userState);
        }
        
        private void OnunsubscribeSystemPropertyPoolOperationCompleted(object arg) {
            if ((this.unsubscribeSystemPropertyPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSystemPropertyPoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public applicationInfo getApplicationInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getApplicationInfo", new object[] {
                        arg0,
                        arg1});
            return ((applicationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getApplicationInfoAsync(sessionId arg0, objectId arg1) {
            this.getApplicationInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getApplicationInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getApplicationInfoOperationCompleted == null)) {
                this.getApplicationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplicationInfoOperationCompleted);
            }
            this.InvokeAsync("getApplicationInfo", new object[] {
                        arg0,
                        arg1}, this.getApplicationInfoOperationCompleted, userState);
        }
        
        private void OngetApplicationInfoOperationCompleted(object arg) {
            if ((this.getApplicationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplicationInfoCompleted(this, new getApplicationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeDecoratorTemplatePool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeDecoratorTemplatePool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeDecoratorTemplatePoolAsync(sessionId arg0, string[] arg1) {
            this.subscribeDecoratorTemplatePoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeDecoratorTemplatePoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeDecoratorTemplatePoolOperationCompleted == null)) {
                this.subscribeDecoratorTemplatePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeDecoratorTemplatePoolOperationCompleted);
            }
            this.InvokeAsync("subscribeDecoratorTemplatePool", new object[] {
                        arg0,
                        arg1}, this.subscribeDecoratorTemplatePoolOperationCompleted, userState);
        }
        
        private void OnsubscribeDecoratorTemplatePoolOperationCompleted(object arg) {
            if ((this.subscribeDecoratorTemplatePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeDecoratorTemplatePoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool isValidControlPanelPassword(sessionId arg0, string arg1, string arg2) {
            object[] results = this.Invoke("isValidControlPanelPassword", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isValidControlPanelPasswordAsync(sessionId arg0, string arg1, string arg2) {
            this.isValidControlPanelPasswordAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void isValidControlPanelPasswordAsync(sessionId arg0, string arg1, string arg2, object userState) {
            if ((this.isValidControlPanelPasswordOperationCompleted == null)) {
                this.isValidControlPanelPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisValidControlPanelPasswordOperationCompleted);
            }
            this.InvokeAsync("isValidControlPanelPassword", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.isValidControlPanelPasswordOperationCompleted, userState);
        }
        
        private void OnisValidControlPanelPasswordOperationCompleted(object arg) {
            if ((this.isValidControlPanelPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isValidControlPanelPasswordCompleted(this, new isValidControlPanelPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDecoratorInfo(sessionId arg0, objectId arg1, decoratorInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDecoratorInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDecoratorInfoAsync(sessionId arg0, objectId arg1, decoratorInfo arg2, string[] arg3) {
            this.setDecoratorInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDecoratorInfoAsync(sessionId arg0, objectId arg1, decoratorInfo arg2, string[] arg3, object userState) {
            if ((this.setDecoratorInfoOperationCompleted == null)) {
                this.setDecoratorInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDecoratorInfoOperationCompleted);
            }
            this.InvokeAsync("setDecoratorInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDecoratorInfoOperationCompleted, userState);
        }
        
        private void OnsetDecoratorInfoOperationCompleted(object arg) {
            if ((this.setDecoratorInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDecoratorInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribePerspectives(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribePerspectives", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribePerspectivesAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribePerspectivesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribePerspectivesAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribePerspectivesOperationCompleted == null)) {
                this.unsubscribePerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribePerspectivesOperationCompleted);
            }
            this.InvokeAsync("unsubscribePerspectives", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribePerspectivesOperationCompleted, userState);
        }
        
        private void OnunsubscribePerspectivesOperationCompleted(object arg) {
            if ((this.unsubscribePerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribePerspectivesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public miscellaneousDefaultSettingsInfo getMiscellaneousDefaultSettingsInfo(sessionId arg0) {
            object[] results = this.Invoke("getMiscellaneousDefaultSettingsInfo", new object[] {
                        arg0});
            return ((miscellaneousDefaultSettingsInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getMiscellaneousDefaultSettingsInfoAsync(sessionId arg0) {
            this.getMiscellaneousDefaultSettingsInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getMiscellaneousDefaultSettingsInfoAsync(sessionId arg0, object userState) {
            if ((this.getMiscellaneousDefaultSettingsInfoOperationCompleted == null)) {
                this.getMiscellaneousDefaultSettingsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMiscellaneousDefaultSettingsInfoOperationCompleted);
            }
            this.InvokeAsync("getMiscellaneousDefaultSettingsInfo", new object[] {
                        arg0}, this.getMiscellaneousDefaultSettingsInfoOperationCompleted, userState);
        }
        
        private void OngetMiscellaneousDefaultSettingsInfoOperationCompleted(object arg) {
            if ((this.getMiscellaneousDefaultSettingsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMiscellaneousDefaultSettingsInfoCompleted(this, new getMiscellaneousDefaultSettingsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectSystemPropertiesInfo[] findSystemPropertyBindings(sessionId arg0, string arg1, objectId arg2) {
            object[] results = this.Invoke("findSystemPropertyBindings", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectSystemPropertiesInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void findSystemPropertyBindingsAsync(sessionId arg0, string arg1, objectId arg2) {
            this.findSystemPropertyBindingsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void findSystemPropertyBindingsAsync(sessionId arg0, string arg1, objectId arg2, object userState) {
            if ((this.findSystemPropertyBindingsOperationCompleted == null)) {
                this.findSystemPropertyBindingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindSystemPropertyBindingsOperationCompleted);
            }
            this.InvokeAsync("findSystemPropertyBindings", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.findSystemPropertyBindingsOperationCompleted, userState);
        }
        
        private void OnfindSystemPropertyBindingsOperationCompleted(object arg) {
            if ((this.findSystemPropertyBindingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findSystemPropertyBindingsCompleted(this, new findSystemPropertyBindingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public systemVariableInfo getSystemVariableInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSystemVariableInfo", new object[] {
                        arg0,
                        arg1});
            return ((systemVariableInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemVariableInfoAsync(sessionId arg0, objectId arg1) {
            this.getSystemVariableInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSystemVariableInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSystemVariableInfoOperationCompleted == null)) {
                this.getSystemVariableInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemVariableInfoOperationCompleted);
            }
            this.InvokeAsync("getSystemVariableInfo", new object[] {
                        arg0,
                        arg1}, this.getSystemVariableInfoOperationCompleted, userState);
        }
        
        private void OngetSystemVariableInfoOperationCompleted(object arg) {
            if ((this.getSystemVariableInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemVariableInfoCompleted(this, new getSystemVariableInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sendDecoratorBackward(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("sendDecoratorBackward", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void sendDecoratorBackwardAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.sendDecoratorBackwardAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void sendDecoratorBackwardAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.sendDecoratorBackwardOperationCompleted == null)) {
                this.sendDecoratorBackwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDecoratorBackwardOperationCompleted);
            }
            this.InvokeAsync("sendDecoratorBackward", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.sendDecoratorBackwardOperationCompleted, userState);
        }
        
        private void OnsendDecoratorBackwardOperationCompleted(object arg) {
            if ((this.sendDecoratorBackwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDecoratorBackwardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] additionalWindowsForTiler(sessionId arg0, objectId arg1, objectId arg2) {
            object[] results = this.Invoke("additionalWindowsForTiler", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void additionalWindowsForTilerAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.additionalWindowsForTilerAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void additionalWindowsForTilerAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.additionalWindowsForTilerOperationCompleted == null)) {
                this.additionalWindowsForTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadditionalWindowsForTilerOperationCompleted);
            }
            this.InvokeAsync("additionalWindowsForTiler", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.additionalWindowsForTilerOperationCompleted, userState);
        }
        
        private void OnadditionalWindowsForTilerOperationCompleted(object arg) {
            if ((this.additionalWindowsForTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.additionalWindowsForTilerCompleted(this, new additionalWindowsForTilerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeDisplets(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeDisplets", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeDispletsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribeDispletsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeDispletsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribeDispletsOperationCompleted == null)) {
                this.unsubscribeDispletsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeDispletsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeDisplets", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeDispletsOperationCompleted, userState);
        }
        
        private void OnunsubscribeDispletsOperationCompleted(object arg) {
            if ((this.unsubscribeDispletsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeDispletsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId copySystemVariable(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("copySystemVariable", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void copySystemVariableAsync(sessionId arg0, objectId arg1) {
            this.copySystemVariableAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copySystemVariableAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.copySystemVariableOperationCompleted == null)) {
                this.copySystemVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopySystemVariableOperationCompleted);
            }
            this.InvokeAsync("copySystemVariable", new object[] {
                        arg0,
                        arg1}, this.copySystemVariableOperationCompleted, userState);
        }
        
        private void OncopySystemVariableOperationCompleted(object arg) {
            if ((this.copySystemVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copySystemVariableCompleted(this, new copySystemVariableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findDecoratorTemplate(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findDecoratorTemplate", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findDecoratorTemplateAsync(sessionId arg0, string arg1) {
            this.findDecoratorTemplateAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findDecoratorTemplateAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findDecoratorTemplateOperationCompleted == null)) {
                this.findDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("findDecoratorTemplate", new object[] {
                        arg0,
                        arg1}, this.findDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OnfindDecoratorTemplateOperationCompleted(object arg) {
            if ((this.findDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findDecoratorTemplateCompleted(this, new findDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public systemPropertyInfo[] getSystemPropertiesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getSystemPropertiesInfo", new object[] {
                        arg0,
                        arg1});
            return ((systemPropertyInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getSystemPropertiesInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getSystemPropertiesInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSystemPropertiesInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getSystemPropertiesInfoOperationCompleted == null)) {
                this.getSystemPropertiesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemPropertiesInfoOperationCompleted);
            }
            this.InvokeAsync("getSystemPropertiesInfo", new object[] {
                        arg0,
                        arg1}, this.getSystemPropertiesInfoOperationCompleted, userState);
        }
        
        private void OngetSystemPropertiesInfoOperationCompleted(object arg) {
            if ((this.getSystemPropertiesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemPropertiesInfoCompleted(this, new getSystemPropertiesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public squidModeConfigurationInfo[] getSquidModeConfigurationsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getSquidModeConfigurationsInfo", new object[] {
                        arg0,
                        arg1});
            return ((squidModeConfigurationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getSquidModeConfigurationsInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getSquidModeConfigurationsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSquidModeConfigurationsInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getSquidModeConfigurationsInfoOperationCompleted == null)) {
                this.getSquidModeConfigurationsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSquidModeConfigurationsInfoOperationCompleted);
            }
            this.InvokeAsync("getSquidModeConfigurationsInfo", new object[] {
                        arg0,
                        arg1}, this.getSquidModeConfigurationsInfoOperationCompleted, userState);
        }
        
        private void OngetSquidModeConfigurationsInfoOperationCompleted(object arg) {
            if ((this.getSquidModeConfigurationsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSquidModeConfigurationsInfoCompleted(this, new getSquidModeConfigurationsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public imageDecoratorDetail getImageDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getImageDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((imageDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getImageDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getImageDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getImageDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getImageDecoratorDetailOperationCompleted == null)) {
                this.getImageDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImageDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getImageDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getImageDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetImageDecoratorDetailOperationCompleted(object arg) {
            if ((this.getImageDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImageDecoratorDetailCompleted(this, new getImageDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool isSystemVariableBinded(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("isSystemVariableBinded", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isSystemVariableBindedAsync(sessionId arg0, objectId arg1) {
            this.isSystemVariableBindedAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void isSystemVariableBindedAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.isSystemVariableBindedOperationCompleted == null)) {
                this.isSystemVariableBindedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisSystemVariableBindedOperationCompleted);
            }
            this.InvokeAsync("isSystemVariableBinded", new object[] {
                        arg0,
                        arg1}, this.isSystemVariableBindedOperationCompleted, userState);
        }
        
        private void OnisSystemVariableBindedOperationCompleted(object arg) {
            if ((this.isSystemVariableBindedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isSystemVariableBindedCompleted(this, new isSystemVariableBindedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDisplaysInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displayInfo2[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDisplaysInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDisplaysInfo2Async(sessionId arg0, objectId[] arg1, displayInfo2[] arg2, string[] arg3) {
            this.setDisplaysInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDisplaysInfo2Async(sessionId arg0, objectId[] arg1, displayInfo2[] arg2, string[] arg3, object userState) {
            if ((this.setDisplaysInfo2OperationCompleted == null)) {
                this.setDisplaysInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDisplaysInfo2OperationCompleted);
            }
            this.InvokeAsync("setDisplaysInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDisplaysInfo2OperationCompleted, userState);
        }
        
        private void OnsetDisplaysInfo2OperationCompleted(object arg) {
            if ((this.setDisplaysInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDisplaysInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool isCMSServerReady() {
            object[] results = this.Invoke("isCMSServerReady", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isCMSServerReadyAsync() {
            this.isCMSServerReadyAsync(null);
        }
        
        /// <remarks/>
        public void isCMSServerReadyAsync(object userState) {
            if ((this.isCMSServerReadyOperationCompleted == null)) {
                this.isCMSServerReadyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisCMSServerReadyOperationCompleted);
            }
            this.InvokeAsync("isCMSServerReady", new object[0], this.isCMSServerReadyOperationCompleted, userState);
        }
        
        private void OnisCMSServerReadyOperationCompleted(object arg) {
            if ((this.isCMSServerReadyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isCMSServerReadyCompleted(this, new isCMSServerReadyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setRolesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] roleInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setRolesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setRolesInfoAsync(sessionId arg0, objectId[] arg1, roleInfo[] arg2, string[] arg3) {
            this.setRolesInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setRolesInfoAsync(sessionId arg0, objectId[] arg1, roleInfo[] arg2, string[] arg3, object userState) {
            if ((this.setRolesInfoOperationCompleted == null)) {
                this.setRolesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetRolesInfoOperationCompleted);
            }
            this.InvokeAsync("setRolesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setRolesInfoOperationCompleted, userState);
        }
        
        private void OnsetRolesInfoOperationCompleted(object arg) {
            if ((this.setRolesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setRolesInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDisplaysInfo3(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displayInfo3[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDisplaysInfo3", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDisplaysInfo3Async(sessionId arg0, objectId[] arg1, displayInfo3[] arg2, string[] arg3) {
            this.setDisplaysInfo3Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDisplaysInfo3Async(sessionId arg0, objectId[] arg1, displayInfo3[] arg2, string[] arg3, object userState) {
            if ((this.setDisplaysInfo3OperationCompleted == null)) {
                this.setDisplaysInfo3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDisplaysInfo3OperationCompleted);
            }
            this.InvokeAsync("setDisplaysInfo3", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDisplaysInfo3OperationCompleted, userState);
        }
        
        private void OnsetDisplaysInfo3OperationCompleted(object arg) {
            if ((this.setDisplaysInfo3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDisplaysInfo3Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removePerspective(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("removePerspective", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removePerspectiveAsync(sessionId arg0, objectId arg1) {
            this.removePerspectiveAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removePerspectiveAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removePerspectiveOperationCompleted == null)) {
                this.removePerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePerspectiveOperationCompleted);
            }
            this.InvokeAsync("removePerspective", new object[] {
                        arg0,
                        arg1}, this.removePerspectiveOperationCompleted, userState);
        }
        
        private void OnremovePerspectiveOperationCompleted(object arg) {
            if ((this.removePerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePerspectiveCompleted(this, new removePerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createRole(sessionId arg0, string arg1) {
            object[] results = this.Invoke("createRole", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createRoleAsync(sessionId arg0, string arg1) {
            this.createRoleAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createRoleAsync(sessionId arg0, string arg1, object userState) {
            if ((this.createRoleOperationCompleted == null)) {
                this.createRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRoleOperationCompleted);
            }
            this.InvokeAsync("createRole", new object[] {
                        arg0,
                        arg1}, this.createRoleOperationCompleted, userState);
        }
        
        private void OncreateRoleOperationCompleted(object arg) {
            if ((this.createRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRoleCompleted(this, new createRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSourceNameDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] sourceNameDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSourceNameDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSourceNameDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, sourceNameDecoratorDetail[] arg2, string[] arg3) {
            this.setSourceNameDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSourceNameDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, sourceNameDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setSourceNameDecoratorsDetailOperationCompleted == null)) {
                this.setSourceNameDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSourceNameDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setSourceNameDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSourceNameDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetSourceNameDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setSourceNameDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSourceNameDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchUsers(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchUsers", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchUsersAsync(sessionId arg0, string arg1) {
            this.searchUsersAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchUsersAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchUsersOperationCompleted == null)) {
                this.searchUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchUsersOperationCompleted);
            }
            this.InvokeAsync("searchUsers", new object[] {
                        arg0,
                        arg1}, this.searchUsersOperationCompleted, userState);
        }
        
        private void OnsearchUsersOperationCompleted(object arg) {
            if ((this.searchUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchUsersCompleted(this, new searchUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveAsUserTilingInPerspective(sessionId arg0, objectId arg1, string arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] rectangle[] arg3, dimension arg4) {
            object[] results = this.Invoke("saveAsUserTilingInPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveAsUserTilingInPerspectiveAsync(sessionId arg0, objectId arg1, string arg2, rectangle[] arg3, dimension arg4) {
            this.saveAsUserTilingInPerspectiveAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void saveAsUserTilingInPerspectiveAsync(sessionId arg0, objectId arg1, string arg2, rectangle[] arg3, dimension arg4, object userState) {
            if ((this.saveAsUserTilingInPerspectiveOperationCompleted == null)) {
                this.saveAsUserTilingInPerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsUserTilingInPerspectiveOperationCompleted);
            }
            this.InvokeAsync("saveAsUserTilingInPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.saveAsUserTilingInPerspectiveOperationCompleted, userState);
        }
        
        private void OnsaveAsUserTilingInPerspectiveOperationCompleted(object arg) {
            if ((this.saveAsUserTilingInPerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsUserTilingInPerspectiveCompleted(this, new saveAsUserTilingInPerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public statusImageDecoratorDetail getStatusImageDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getStatusImageDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((statusImageDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getStatusImageDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getStatusImageDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getStatusImageDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getStatusImageDecoratorDetailOperationCompleted == null)) {
                this.getStatusImageDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusImageDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getStatusImageDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getStatusImageDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetStatusImageDecoratorDetailOperationCompleted(object arg) {
            if ((this.getStatusImageDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusImageDecoratorDetailCompleted(this, new getStatusImageDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] copySystemVariables(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("copySystemVariables", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void copySystemVariablesAsync(sessionId arg0, objectId[] arg1) {
            this.copySystemVariablesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copySystemVariablesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.copySystemVariablesOperationCompleted == null)) {
                this.copySystemVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopySystemVariablesOperationCompleted);
            }
            this.InvokeAsync("copySystemVariables", new object[] {
                        arg0,
                        arg1}, this.copySystemVariablesOperationCompleted, userState);
        }
        
        private void OncopySystemVariablesOperationCompleted(object arg) {
            if ((this.copySystemVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copySystemVariablesCompleted(this, new copySystemVariablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setTilerInfo(sessionId arg0, objectId arg1, tilerInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setTilerInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setTilerInfoAsync(sessionId arg0, objectId arg1, tilerInfo arg2, string[] arg3) {
            this.setTilerInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setTilerInfoAsync(sessionId arg0, objectId arg1, tilerInfo arg2, string[] arg3, object userState) {
            if ((this.setTilerInfoOperationCompleted == null)) {
                this.setTilerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTilerInfoOperationCompleted);
            }
            this.InvokeAsync("setTilerInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setTilerInfoOperationCompleted, userState);
        }
        
        private void OnsetTilerInfoOperationCompleted(object arg) {
            if ((this.setTilerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTilerInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setStatusLabelDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] statusLabelDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setStatusLabelDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setStatusLabelDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, statusLabelDecoratorDetail[] arg2, string[] arg3) {
            this.setStatusLabelDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setStatusLabelDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, statusLabelDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setStatusLabelDecoratorsDetailOperationCompleted == null)) {
                this.setStatusLabelDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStatusLabelDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setStatusLabelDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setStatusLabelDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetStatusLabelDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setStatusLabelDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStatusLabelDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeConfiguration(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeConfiguration", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeConfigurationAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeConfigurationAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeConfigurationAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeConfigurationOperationCompleted == null)) {
                this.unsubscribeConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeConfigurationOperationCompleted);
            }
            this.InvokeAsync("unsubscribeConfiguration", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeConfigurationOperationCompleted, userState);
        }
        
        private void OnunsubscribeConfigurationOperationCompleted(object arg) {
            if ((this.unsubscribeConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public groupInfo getGroupInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getGroupInfo", new object[] {
                        arg0,
                        arg1});
            return ((groupInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getGroupInfoAsync(sessionId arg0, objectId arg1) {
            this.getGroupInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getGroupInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getGroupInfoOperationCompleted == null)) {
                this.getGroupInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupInfoOperationCompleted);
            }
            this.InvokeAsync("getGroupInfo", new object[] {
                        arg0,
                        arg1}, this.getGroupInfoOperationCompleted, userState);
        }
        
        private void OngetGroupInfoOperationCompleted(object arg) {
            if ((this.getGroupInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupInfoCompleted(this, new getGroupInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeTilerPool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeTilerPool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeTilerPoolAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeTilerPoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeTilerPoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeTilerPoolOperationCompleted == null)) {
                this.unsubscribeTilerPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeTilerPoolOperationCompleted);
            }
            this.InvokeAsync("unsubscribeTilerPool", new object[] {
                        arg0,
                        arg1}, this.unsubscribeTilerPoolOperationCompleted, userState);
        }
        
        private void OnunsubscribeTilerPoolOperationCompleted(object arg) {
            if ((this.unsubscribeTilerPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeTilerPoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findKeyboardShortcutSettings(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findKeyboardShortcutSettings", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findKeyboardShortcutSettingsAsync(sessionId arg0, string arg1) {
            this.findKeyboardShortcutSettingsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findKeyboardShortcutSettingsAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findKeyboardShortcutSettingsOperationCompleted == null)) {
                this.findKeyboardShortcutSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindKeyboardShortcutSettingsOperationCompleted);
            }
            this.InvokeAsync("findKeyboardShortcutSettings", new object[] {
                        arg0,
                        arg1}, this.findKeyboardShortcutSettingsOperationCompleted, userState);
        }
        
        private void OnfindKeyboardShortcutSettingsOperationCompleted(object arg) {
            if ((this.findKeyboardShortcutSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findKeyboardShortcutSettingsCompleted(this, new findKeyboardShortcutSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sharePerspectiveOnDisplay(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6) {
            this.Invoke("sharePerspectiveOnDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
        }
        
        /// <remarks/>
        public void sharePerspectiveOnDisplayAsync(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6) {
            this.sharePerspectiveOnDisplayAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void sharePerspectiveOnDisplayAsync(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6, object userState) {
            if ((this.sharePerspectiveOnDisplayOperationCompleted == null)) {
                this.sharePerspectiveOnDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsharePerspectiveOnDisplayOperationCompleted);
            }
            this.InvokeAsync("sharePerspectiveOnDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.sharePerspectiveOnDisplayOperationCompleted, userState);
        }
        
        private void OnsharePerspectiveOnDisplayOperationCompleted(object arg) {
            if ((this.sharePerspectiveOnDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sharePerspectiveOnDisplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public defaultAreaInfo getDefaultAreaInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDefaultAreaInfo", new object[] {
                        arg0,
                        arg1});
            return ((defaultAreaInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getDefaultAreaInfoAsync(sessionId arg0, objectId arg1) {
            this.getDefaultAreaInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDefaultAreaInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDefaultAreaInfoOperationCompleted == null)) {
                this.getDefaultAreaInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultAreaInfoOperationCompleted);
            }
            this.InvokeAsync("getDefaultAreaInfo", new object[] {
                        arg0,
                        arg1}, this.getDefaultAreaInfoOperationCompleted, userState);
        }
        
        private void OngetDefaultAreaInfoOperationCompleted(object arg) {
            if ((this.getDefaultAreaInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDefaultAreaInfoCompleted(this, new getDefaultAreaInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSystemVariables(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeSystemVariables", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeSystemVariablesAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribeSystemVariablesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeSystemVariablesAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribeSystemVariablesOperationCompleted == null)) {
                this.subscribeSystemVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSystemVariablesOperationCompleted);
            }
            this.InvokeAsync("subscribeSystemVariables", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeSystemVariablesOperationCompleted, userState);
        }
        
        private void OnsubscribeSystemVariablesOperationCompleted(object arg) {
            if ((this.subscribeSystemVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSystemVariablesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setApplicationWindowsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] applicationWindowDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setApplicationWindowsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setApplicationWindowsDetailAsync(sessionId arg0, objectId[] arg1, applicationWindowDetail[] arg2, string[] arg3) {
            this.setApplicationWindowsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setApplicationWindowsDetailAsync(sessionId arg0, objectId[] arg1, applicationWindowDetail[] arg2, string[] arg3, object userState) {
            if ((this.setApplicationWindowsDetailOperationCompleted == null)) {
                this.setApplicationWindowsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetApplicationWindowsDetailOperationCompleted);
            }
            this.InvokeAsync("setApplicationWindowsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setApplicationWindowsDetailOperationCompleted, userState);
        }
        
        private void OnsetApplicationWindowsDetailOperationCompleted(object arg) {
            if ((this.setApplicationWindowsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setApplicationWindowsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createPerspective(sessionId arg0, string arg1, int arg2, int arg3) {
            object[] results = this.Invoke("createPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createPerspectiveAsync(sessionId arg0, string arg1, int arg2, int arg3) {
            this.createPerspectiveAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createPerspectiveAsync(sessionId arg0, string arg1, int arg2, int arg3, object userState) {
            if ((this.createPerspectiveOperationCompleted == null)) {
                this.createPerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePerspectiveOperationCompleted);
            }
            this.InvokeAsync("createPerspective", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createPerspectiveOperationCompleted, userState);
        }
        
        private void OncreatePerspectiveOperationCompleted(object arg) {
            if ((this.createPerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPerspectiveCompleted(this, new createPerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setImagesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] imageInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setImagesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setImagesInfoAsync(sessionId arg0, objectId[] arg1, imageInfo[] arg2, string[] arg3) {
            this.setImagesInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setImagesInfoAsync(sessionId arg0, objectId[] arg1, imageInfo[] arg2, string[] arg3, object userState) {
            if ((this.setImagesInfoOperationCompleted == null)) {
                this.setImagesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetImagesInfoOperationCompleted);
            }
            this.InvokeAsync("setImagesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setImagesInfoOperationCompleted, userState);
        }
        
        private void OnsetImagesInfoOperationCompleted(object arg) {
            if ((this.setImagesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setImagesInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public roleInfo[] getRolesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getRolesInfo", new object[] {
                        arg0,
                        arg1});
            return ((roleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getRolesInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getRolesInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getRolesInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getRolesInfoOperationCompleted == null)) {
                this.getRolesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRolesInfoOperationCompleted);
            }
            this.InvokeAsync("getRolesInfo", new object[] {
                        arg0,
                        arg1}, this.getRolesInfoOperationCompleted, userState);
        }
        
        private void OngetRolesInfoOperationCompleted(object arg) {
            if ((this.getRolesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRolesInfoCompleted(this, new getRolesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createSystemVariable(sessionId arg0, systemVariableInfo arg1) {
            object[] results = this.Invoke("createSystemVariable", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createSystemVariableAsync(sessionId arg0, systemVariableInfo arg1) {
            this.createSystemVariableAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createSystemVariableAsync(sessionId arg0, systemVariableInfo arg1, object userState) {
            if ((this.createSystemVariableOperationCompleted == null)) {
                this.createSystemVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSystemVariableOperationCompleted);
            }
            this.InvokeAsync("createSystemVariable", new object[] {
                        arg0,
                        arg1}, this.createSystemVariableOperationCompleted, userState);
        }
        
        private void OncreateSystemVariableOperationCompleted(object arg) {
            if ((this.createSystemVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSystemVariableCompleted(this, new createSystemVariableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeSystemProperty(sessionId arg0, objectId arg1) {
            this.Invoke("removeSystemProperty", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removeSystemPropertyAsync(sessionId arg0, objectId arg1) {
            this.removeSystemPropertyAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeSystemPropertyAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeSystemPropertyOperationCompleted == null)) {
                this.removeSystemPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSystemPropertyOperationCompleted);
            }
            this.InvokeAsync("removeSystemProperty", new object[] {
                        arg0,
                        arg1}, this.removeSystemPropertyOperationCompleted, userState);
        }
        
        private void OnremoveSystemPropertyOperationCompleted(object arg) {
            if ((this.removeSystemPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSystemPropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeVideoAudioDefaultSetting(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeVideoAudioDefaultSetting", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeVideoAudioDefaultSettingAsync(sessionId arg0, string[] arg1) {
            this.subscribeVideoAudioDefaultSettingAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeVideoAudioDefaultSettingAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeVideoAudioDefaultSettingOperationCompleted == null)) {
                this.subscribeVideoAudioDefaultSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeVideoAudioDefaultSettingOperationCompleted);
            }
            this.InvokeAsync("subscribeVideoAudioDefaultSetting", new object[] {
                        arg0,
                        arg1}, this.subscribeVideoAudioDefaultSettingOperationCompleted, userState);
        }
        
        private void OnsubscribeVideoAudioDefaultSettingOperationCompleted(object arg) {
            if ((this.subscribeVideoAudioDefaultSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeVideoAudioDefaultSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public tilerInfo getTilerInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getTilerInfo", new object[] {
                        arg0,
                        arg1});
            return ((tilerInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getTilerInfoAsync(sessionId arg0, objectId arg1) {
            this.getTilerInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getTilerInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getTilerInfoOperationCompleted == null)) {
                this.getTilerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTilerInfoOperationCompleted);
            }
            this.InvokeAsync("getTilerInfo", new object[] {
                        arg0,
                        arg1}, this.getTilerInfoOperationCompleted, userState);
        }
        
        private void OngetTilerInfoOperationCompleted(object arg) {
            if ((this.getTilerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTilerInfoCompleted(this, new getTilerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listOfAssociatedVideoSources(sessionId arg0, string arg1) {
            object[] results = this.Invoke("listOfAssociatedVideoSources", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfAssociatedVideoSourcesAsync(sessionId arg0, string arg1) {
            this.listOfAssociatedVideoSourcesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listOfAssociatedVideoSourcesAsync(sessionId arg0, string arg1, object userState) {
            if ((this.listOfAssociatedVideoSourcesOperationCompleted == null)) {
                this.listOfAssociatedVideoSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfAssociatedVideoSourcesOperationCompleted);
            }
            this.InvokeAsync("listOfAssociatedVideoSources", new object[] {
                        arg0,
                        arg1}, this.listOfAssociatedVideoSourcesOperationCompleted, userState);
        }
        
        private void OnlistOfAssociatedVideoSourcesOperationCompleted(object arg) {
            if ((this.listOfAssociatedVideoSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfAssociatedVideoSourcesCompleted(this, new listOfAssociatedVideoSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setLogoDecoratorDetail(sessionId arg0, objectId arg1, logoDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setLogoDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setLogoDecoratorDetailAsync(sessionId arg0, objectId arg1, logoDecoratorDetail arg2, string[] arg3) {
            this.setLogoDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setLogoDecoratorDetailAsync(sessionId arg0, objectId arg1, logoDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setLogoDecoratorDetailOperationCompleted == null)) {
                this.setLogoDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLogoDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setLogoDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setLogoDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetLogoDecoratorDetailOperationCompleted(object arg) {
            if ((this.setLogoDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLogoDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeConfigurations(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeConfigurations", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeConfigurationsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribeConfigurationsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeConfigurationsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribeConfigurationsOperationCompleted == null)) {
                this.subscribeConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeConfigurationsOperationCompleted);
            }
            this.InvokeAsync("subscribeConfigurations", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeConfigurationsOperationCompleted, userState);
        }
        
        private void OnsubscribeConfigurationsOperationCompleted(object arg) {
            if ((this.subscribeConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeConfigurationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public applicationWindowDetail getApplicationWindowDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getApplicationWindowDetail", new object[] {
                        arg0,
                        arg1});
            return ((applicationWindowDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getApplicationWindowDetailAsync(sessionId arg0, objectId arg1) {
            this.getApplicationWindowDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getApplicationWindowDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getApplicationWindowDetailOperationCompleted == null)) {
                this.getApplicationWindowDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplicationWindowDetailOperationCompleted);
            }
            this.InvokeAsync("getApplicationWindowDetail", new object[] {
                        arg0,
                        arg1}, this.getApplicationWindowDetailOperationCompleted, userState);
        }
        
        private void OngetApplicationWindowDetailOperationCompleted(object arg) {
            if ((this.getApplicationWindowDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplicationWindowDetailCompleted(this, new getApplicationWindowDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeKeyboardShortcutSettings(sessionId arg0, objectId arg1) {
            this.Invoke("removeKeyboardShortcutSettings", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removeKeyboardShortcutSettingsAsync(sessionId arg0, objectId arg1) {
            this.removeKeyboardShortcutSettingsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeKeyboardShortcutSettingsAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeKeyboardShortcutSettingsOperationCompleted == null)) {
                this.removeKeyboardShortcutSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveKeyboardShortcutSettingsOperationCompleted);
            }
            this.InvokeAsync("removeKeyboardShortcutSettings", new object[] {
                        arg0,
                        arg1}, this.removeKeyboardShortcutSettingsOperationCompleted, userState);
        }
        
        private void OnremoveKeyboardShortcutSettingsOperationCompleted(object arg) {
            if ((this.removeKeyboardShortcutSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeKeyboardShortcutSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void releaseLicenses(sessionId arg0, string arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("releaseLicenses", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void releaseLicensesAsync(sessionId arg0, string arg1, string[] arg2) {
            this.releaseLicensesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void releaseLicensesAsync(sessionId arg0, string arg1, string[] arg2, object userState) {
            if ((this.releaseLicensesOperationCompleted == null)) {
                this.releaseLicensesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreleaseLicensesOperationCompleted);
            }
            this.InvokeAsync("releaseLicenses", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.releaseLicensesOperationCompleted, userState);
        }
        
        private void OnreleaseLicensesOperationCompleted(object arg) {
            if ((this.releaseLicensesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.releaseLicensesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int getUsedNoOfLicenses(sessionId arg0, string arg1) {
            object[] results = this.Invoke("getUsedNoOfLicenses", new object[] {
                        arg0,
                        arg1});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getUsedNoOfLicensesAsync(sessionId arg0, string arg1) {
            this.getUsedNoOfLicensesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getUsedNoOfLicensesAsync(sessionId arg0, string arg1, object userState) {
            if ((this.getUsedNoOfLicensesOperationCompleted == null)) {
                this.getUsedNoOfLicensesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsedNoOfLicensesOperationCompleted);
            }
            this.InvokeAsync("getUsedNoOfLicenses", new object[] {
                        arg0,
                        arg1}, this.getUsedNoOfLicensesOperationCompleted, userState);
        }
        
        private void OngetUsedNoOfLicensesOperationCompleted(object arg) {
            if ((this.getUsedNoOfLicensesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsedNoOfLicensesCompleted(this, new getUsedNoOfLicensesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void stopPublishingEvent(sessionId arg0) {
            this.Invoke("stopPublishingEvent", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void stopPublishingEventAsync(sessionId arg0) {
            this.stopPublishingEventAsync(arg0, null);
        }
        
        /// <remarks/>
        public void stopPublishingEventAsync(sessionId arg0, object userState) {
            if ((this.stopPublishingEventOperationCompleted == null)) {
                this.stopPublishingEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstopPublishingEventOperationCompleted);
            }
            this.InvokeAsync("stopPublishingEvent", new object[] {
                        arg0}, this.stopPublishingEventOperationCompleted, userState);
        }
        
        private void OnstopPublishingEventOperationCompleted(object arg) {
            if ((this.stopPublishingEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.stopPublishingEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void identifyNGPs(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, string arg2) {
            this.Invoke("identifyNGPs", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void identifyNGPsAsync(sessionId arg0, objectId[] arg1, string arg2) {
            this.identifyNGPsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void identifyNGPsAsync(sessionId arg0, objectId[] arg1, string arg2, object userState) {
            if ((this.identifyNGPsOperationCompleted == null)) {
                this.identifyNGPsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnidentifyNGPsOperationCompleted);
            }
            this.InvokeAsync("identifyNGPs", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.identifyNGPsOperationCompleted, userState);
        }
        
        private void OnidentifyNGPsOperationCompleted(object arg) {
            if ((this.identifyNGPsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.identifyNGPsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listOfAssociatedDisplaysWithSquidModeConfigs(sessionId arg0, string arg1) {
            object[] results = this.Invoke("listOfAssociatedDisplaysWithSquidModeConfigs", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfAssociatedDisplaysWithSquidModeConfigsAsync(sessionId arg0, string arg1) {
            this.listOfAssociatedDisplaysWithSquidModeConfigsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listOfAssociatedDisplaysWithSquidModeConfigsAsync(sessionId arg0, string arg1, object userState) {
            if ((this.listOfAssociatedDisplaysWithSquidModeConfigsOperationCompleted == null)) {
                this.listOfAssociatedDisplaysWithSquidModeConfigsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfAssociatedDisplaysWithSquidModeConfigsOperationCompleted);
            }
            this.InvokeAsync("listOfAssociatedDisplaysWithSquidModeConfigs", new object[] {
                        arg0,
                        arg1}, this.listOfAssociatedDisplaysWithSquidModeConfigsOperationCompleted, userState);
        }
        
        private void OnlistOfAssociatedDisplaysWithSquidModeConfigsOperationCompleted(object arg) {
            if ((this.listOfAssociatedDisplaysWithSquidModeConfigsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfAssociatedDisplaysWithSquidModeConfigsCompleted(this, new listOfAssociatedDisplaysWithSquidModeConfigsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findRole(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findRole", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findRoleAsync(sessionId arg0, string arg1) {
            this.findRoleAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findRoleAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findRoleOperationCompleted == null)) {
                this.findRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindRoleOperationCompleted);
            }
            this.InvokeAsync("findRole", new object[] {
                        arg0,
                        arg1}, this.findRoleOperationCompleted, userState);
        }
        
        private void OnfindRoleOperationCompleted(object arg) {
            if ((this.findRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findRoleCompleted(this, new findRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeApplication(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeApplication", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeApplicationAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeApplicationAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeApplicationAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeApplicationOperationCompleted == null)) {
                this.unsubscribeApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeApplicationOperationCompleted);
            }
            this.InvokeAsync("unsubscribeApplication", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeApplicationOperationCompleted, userState);
        }
        
        private void OnunsubscribeApplicationOperationCompleted(object arg) {
            if ((this.unsubscribeApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeApplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllSources(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllSources", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllSourcesAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllSourcesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllSourcesAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllSourcesOperationCompleted == null)) {
                this.subscribeAllSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllSourcesOperationCompleted);
            }
            this.InvokeAsync("subscribeAllSources", new object[] {
                        arg0,
                        arg1}, this.subscribeAllSourcesOperationCompleted, userState);
        }
        
        private void OnsubscribeAllSourcesOperationCompleted(object arg) {
            if ((this.subscribeAllSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllSourcesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setConfigurationInfo(sessionId arg0, objectId arg1, configurationInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setConfigurationInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setConfigurationInfoAsync(sessionId arg0, objectId arg1, configurationInfo arg2, string[] arg3) {
            this.setConfigurationInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setConfigurationInfoAsync(sessionId arg0, objectId arg1, configurationInfo arg2, string[] arg3, object userState) {
            if ((this.setConfigurationInfoOperationCompleted == null)) {
                this.setConfigurationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetConfigurationInfoOperationCompleted);
            }
            this.InvokeAsync("setConfigurationInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setConfigurationInfoOperationCompleted, userState);
        }
        
        private void OnsetConfigurationInfoOperationCompleted(object arg) {
            if ((this.setConfigurationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setConfigurationInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public statusBorderDecoratorDetail getStatusBorderDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getStatusBorderDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((statusBorderDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getStatusBorderDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getStatusBorderDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getStatusBorderDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getStatusBorderDecoratorDetailOperationCompleted == null)) {
                this.getStatusBorderDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusBorderDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getStatusBorderDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getStatusBorderDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetStatusBorderDecoratorDetailOperationCompleted(object arg) {
            if ((this.getStatusBorderDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusBorderDecoratorDetailCompleted(this, new getStatusBorderDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setStaticTextDecoratorDetail(sessionId arg0, objectId arg1, staticTextDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setStaticTextDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setStaticTextDecoratorDetailAsync(sessionId arg0, objectId arg1, staticTextDecoratorDetail arg2, string[] arg3) {
            this.setStaticTextDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setStaticTextDecoratorDetailAsync(sessionId arg0, objectId arg1, staticTextDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setStaticTextDecoratorDetailOperationCompleted == null)) {
                this.setStaticTextDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStaticTextDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setStaticTextDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setStaticTextDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetStaticTextDecoratorDetailOperationCompleted(object arg) {
            if ((this.setStaticTextDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStaticTextDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeConfigurationPool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeConfigurationPool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeConfigurationPoolAsync(sessionId arg0, string[] arg1) {
            this.subscribeConfigurationPoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeConfigurationPoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeConfigurationPoolOperationCompleted == null)) {
                this.subscribeConfigurationPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeConfigurationPoolOperationCompleted);
            }
            this.InvokeAsync("subscribeConfigurationPool", new object[] {
                        arg0,
                        arg1}, this.subscribeConfigurationPoolOperationCompleted, userState);
        }
        
        private void OnsubscribeConfigurationPoolOperationCompleted(object arg) {
            if ((this.subscribeConfigurationPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeConfigurationPoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createSystemProperty(sessionId arg0, systemPropertyInfo arg1) {
            object[] results = this.Invoke("createSystemProperty", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createSystemPropertyAsync(sessionId arg0, systemPropertyInfo arg1) {
            this.createSystemPropertyAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createSystemPropertyAsync(sessionId arg0, systemPropertyInfo arg1, object userState) {
            if ((this.createSystemPropertyOperationCompleted == null)) {
                this.createSystemPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSystemPropertyOperationCompleted);
            }
            this.InvokeAsync("createSystemProperty", new object[] {
                        arg0,
                        arg1}, this.createSystemPropertyOperationCompleted, userState);
        }
        
        private void OncreateSystemPropertyOperationCompleted(object arg) {
            if ((this.createSystemPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSystemPropertyCompleted(this, new createSystemPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDispletsInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displetInfo2[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDispletsInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDispletsInfo2Async(sessionId arg0, objectId[] arg1, displetInfo2[] arg2, string[] arg3) {
            this.setDispletsInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDispletsInfo2Async(sessionId arg0, objectId[] arg1, displetInfo2[] arg2, string[] arg3, object userState) {
            if ((this.setDispletsInfo2OperationCompleted == null)) {
                this.setDispletsInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDispletsInfo2OperationCompleted);
            }
            this.InvokeAsync("setDispletsInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDispletsInfo2OperationCompleted, userState);
        }
        
        private void OnsetDispletsInfo2OperationCompleted(object arg) {
            if ((this.setDispletsInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDispletsInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllConfigurations(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllConfigurations", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllConfigurationsAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllConfigurationsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllConfigurationsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllConfigurationsOperationCompleted == null)) {
                this.subscribeAllConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllConfigurationsOperationCompleted);
            }
            this.InvokeAsync("subscribeAllConfigurations", new object[] {
                        arg0,
                        arg1}, this.subscribeAllConfigurationsOperationCompleted, userState);
        }
        
        private void OnsubscribeAllConfigurationsOperationCompleted(object arg) {
            if ((this.subscribeAllConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllConfigurationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateVideoTemplateURLs(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("updateVideoTemplateURLs", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void updateVideoTemplateURLsAsync(sessionId arg0, string[] arg1) {
            this.updateVideoTemplateURLsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void updateVideoTemplateURLsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.updateVideoTemplateURLsOperationCompleted == null)) {
                this.updateVideoTemplateURLsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateVideoTemplateURLsOperationCompleted);
            }
            this.InvokeAsync("updateVideoTemplateURLs", new object[] {
                        arg0,
                        arg1}, this.updateVideoTemplateURLsOperationCompleted, userState);
        }
        
        private void OnupdateVideoTemplateURLsOperationCompleted(object arg) {
            if ((this.updateVideoTemplateURLsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateVideoTemplateURLsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public statusLabelDecoratorDetail getStatusLabelDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getStatusLabelDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((statusLabelDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getStatusLabelDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getStatusLabelDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getStatusLabelDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getStatusLabelDecoratorDetailOperationCompleted == null)) {
                this.getStatusLabelDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusLabelDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getStatusLabelDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getStatusLabelDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetStatusLabelDecoratorDetailOperationCompleted(object arg) {
            if ((this.getStatusLabelDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusLabelDecoratorDetailCompleted(this, new getStatusLabelDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeDecorators(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeDecorators", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeDecoratorsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribeDecoratorsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeDecoratorsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribeDecoratorsOperationCompleted == null)) {
                this.subscribeDecoratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeDecoratorsOperationCompleted);
            }
            this.InvokeAsync("subscribeDecorators", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeDecoratorsOperationCompleted, userState);
        }
        
        private void OnsubscribeDecoratorsOperationCompleted(object arg) {
            if ((this.subscribeDecoratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeDecoratorsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listGrids(sessionId arg0) {
            object[] results = this.Invoke("listGrids", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listGridsAsync(sessionId arg0) {
            this.listGridsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listGridsAsync(sessionId arg0, object userState) {
            if ((this.listGridsOperationCompleted == null)) {
                this.listGridsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistGridsOperationCompleted);
            }
            this.InvokeAsync("listGrids", new object[] {
                        arg0}, this.listGridsOperationCompleted, userState);
        }
        
        private void OnlistGridsOperationCompleted(object arg) {
            if ((this.listGridsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listGridsCompleted(this, new listGridsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unbindAllSystemProperties(sessionId arg0, string arg1, objectId arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectSystemPropertiesInfo[] arg3) {
            this.Invoke("unbindAllSystemProperties", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void unbindAllSystemPropertiesAsync(sessionId arg0, string arg1, objectId arg2, objectSystemPropertiesInfo[] arg3) {
            this.unbindAllSystemPropertiesAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void unbindAllSystemPropertiesAsync(sessionId arg0, string arg1, objectId arg2, objectSystemPropertiesInfo[] arg3, object userState) {
            if ((this.unbindAllSystemPropertiesOperationCompleted == null)) {
                this.unbindAllSystemPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunbindAllSystemPropertiesOperationCompleted);
            }
            this.InvokeAsync("unbindAllSystemProperties", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.unbindAllSystemPropertiesOperationCompleted, userState);
        }
        
        private void OnunbindAllSystemPropertiesOperationCompleted(object arg) {
            if ((this.unbindAllSystemPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unbindAllSystemPropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public externalWindowDetail getExternalWindowDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getExternalWindowDetail", new object[] {
                        arg0,
                        arg1});
            return ((externalWindowDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getExternalWindowDetailAsync(sessionId arg0, objectId arg1) {
            this.getExternalWindowDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getExternalWindowDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getExternalWindowDetailOperationCompleted == null)) {
                this.getExternalWindowDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExternalWindowDetailOperationCompleted);
            }
            this.InvokeAsync("getExternalWindowDetail", new object[] {
                        arg0,
                        arg1}, this.getExternalWindowDetailOperationCompleted, userState);
        }
        
        private void OngetExternalWindowDetailOperationCompleted(object arg) {
            if ((this.getExternalWindowDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExternalWindowDetailCompleted(this, new getExternalWindowDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public statusImageDecoratorDetail[] getStatusImageDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getStatusImageDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((statusImageDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getStatusImageDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getStatusImageDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getStatusImageDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getStatusImageDecoratorsDetailOperationCompleted == null)) {
                this.getStatusImageDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusImageDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getStatusImageDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getStatusImageDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetStatusImageDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getStatusImageDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusImageDecoratorsDetailCompleted(this, new getStatusImageDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeDecorators(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg2) {
            object[] results = this.Invoke("removeDecorators", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeDecoratorsAsync(sessionId arg0, objectId arg1, objectId[] arg2) {
            this.removeDecoratorsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void removeDecoratorsAsync(sessionId arg0, objectId arg1, objectId[] arg2, object userState) {
            if ((this.removeDecoratorsOperationCompleted == null)) {
                this.removeDecoratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveDecoratorsOperationCompleted);
            }
            this.InvokeAsync("removeDecorators", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.removeDecoratorsOperationCompleted, userState);
        }
        
        private void OnremoveDecoratorsOperationCompleted(object arg) {
            if ((this.removeDecoratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeDecoratorsCompleted(this, new removeDecoratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeConfiguration(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeConfiguration", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeConfigurationAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeConfigurationAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeConfigurationAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeConfigurationOperationCompleted == null)) {
                this.subscribeConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeConfigurationOperationCompleted);
            }
            this.InvokeAsync("subscribeConfiguration", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeConfigurationOperationCompleted, userState);
        }
        
        private void OnsubscribeConfigurationOperationCompleted(object arg) {
            if ((this.subscribeConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public version getVersion(sessionId arg0) {
            object[] results = this.Invoke("getVersion", new object[] {
                        arg0});
            return ((version)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionAsync(sessionId arg0) {
            this.getVersionAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getVersionAsync(sessionId arg0, object userState) {
            if ((this.getVersionOperationCompleted == null)) {
                this.getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionOperationCompleted);
            }
            this.InvokeAsync("getVersion", new object[] {
                        arg0}, this.getVersionOperationCompleted, userState);
        }
        
        private void OngetVersionOperationCompleted(object arg) {
            if ((this.getVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionCompleted(this, new getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getDecorators(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDecorators", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getDecoratorsAsync(sessionId arg0, objectId arg1) {
            this.getDecoratorsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDecoratorsAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDecoratorsOperationCompleted == null)) {
                this.getDecoratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDecoratorsOperationCompleted);
            }
            this.InvokeAsync("getDecorators", new object[] {
                        arg0,
                        arg1}, this.getDecoratorsOperationCompleted, userState);
        }
        
        private void OngetDecoratorsOperationCompleted(object arg) {
            if ((this.getDecoratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDecoratorsCompleted(this, new getDecoratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeRole(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("removeRole", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeRoleAsync(sessionId arg0, objectId arg1) {
            this.removeRoleAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeRoleAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeRoleOperationCompleted == null)) {
                this.removeRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveRoleOperationCompleted);
            }
            this.InvokeAsync("removeRole", new object[] {
                        arg0,
                        arg1}, this.removeRoleOperationCompleted, userState);
        }
        
        private void OnremoveRoleOperationCompleted(object arg) {
            if ((this.removeRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeRoleCompleted(this, new removeRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public labelDecoratorDetail getLabelDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getLabelDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((labelDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getLabelDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getLabelDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getLabelDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getLabelDecoratorDetailOperationCompleted == null)) {
                this.getLabelDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLabelDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getLabelDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getLabelDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetLabelDecoratorDetailOperationCompleted(object arg) {
            if ((this.getLabelDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLabelDecoratorDetailCompleted(this, new getLabelDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllSystemProperties(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllSystemProperties", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllSystemPropertiesAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllSystemPropertiesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllSystemPropertiesAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllSystemPropertiesOperationCompleted == null)) {
                this.unsubscribeAllSystemPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllSystemPropertiesOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllSystemProperties", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllSystemPropertiesOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllSystemPropertiesOperationCompleted(object arg) {
            if ((this.unsubscribeAllSystemPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllSystemPropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public externalWindowDetail[] getExternalWindowsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getExternalWindowsDetail", new object[] {
                        arg0,
                        arg1});
            return ((externalWindowDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getExternalWindowsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getExternalWindowsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getExternalWindowsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getExternalWindowsDetailOperationCompleted == null)) {
                this.getExternalWindowsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExternalWindowsDetailOperationCompleted);
            }
            this.InvokeAsync("getExternalWindowsDetail", new object[] {
                        arg0,
                        arg1}, this.getExternalWindowsDetailOperationCompleted, userState);
        }
        
        private void OngetExternalWindowsDetailOperationCompleted(object arg) {
            if ((this.getExternalWindowsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExternalWindowsDetailCompleted(this, new getExternalWindowsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public videoSourceDetail getVideoSourceDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getVideoSourceDetail", new object[] {
                        arg0,
                        arg1});
            return ((videoSourceDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getVideoSourceDetailAsync(sessionId arg0, objectId arg1) {
            this.getVideoSourceDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getVideoSourceDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getVideoSourceDetailOperationCompleted == null)) {
                this.getVideoSourceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVideoSourceDetailOperationCompleted);
            }
            this.InvokeAsync("getVideoSourceDetail", new object[] {
                        arg0,
                        arg1}, this.getVideoSourceDetailOperationCompleted, userState);
        }
        
        private void OngetVideoSourceDetailOperationCompleted(object arg) {
            if ((this.getVideoSourceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVideoSourceDetailCompleted(this, new getVideoSourceDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createPerspective2(sessionId arg0, string arg1, double arg2, double arg3) {
            object[] results = this.Invoke("createPerspective2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createPerspective2Async(sessionId arg0, string arg1, double arg2, double arg3) {
            this.createPerspective2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createPerspective2Async(sessionId arg0, string arg1, double arg2, double arg3, object userState) {
            if ((this.createPerspective2OperationCompleted == null)) {
                this.createPerspective2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePerspective2OperationCompleted);
            }
            this.InvokeAsync("createPerspective2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createPerspective2OperationCompleted, userState);
        }
        
        private void OncreatePerspective2OperationCompleted(object arg) {
            if ((this.createPerspective2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPerspective2Completed(this, new createPerspective2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public snapshotInfo getSnapshotInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSnapshotInfo", new object[] {
                        arg0,
                        arg1});
            return ((snapshotInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSnapshotInfoAsync(sessionId arg0, objectId arg1) {
            this.getSnapshotInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSnapshotInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSnapshotInfoOperationCompleted == null)) {
                this.getSnapshotInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSnapshotInfoOperationCompleted);
            }
            this.InvokeAsync("getSnapshotInfo", new object[] {
                        arg0,
                        arg1}, this.getSnapshotInfoOperationCompleted, userState);
        }
        
        private void OngetSnapshotInfoOperationCompleted(object arg) {
            if ((this.getSnapshotInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSnapshotInfoCompleted(this, new getSnapshotInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setRoleInfo(sessionId arg0, objectId arg1, roleInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setRoleInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setRoleInfoAsync(sessionId arg0, objectId arg1, roleInfo arg2, string[] arg3) {
            this.setRoleInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setRoleInfoAsync(sessionId arg0, objectId arg1, roleInfo arg2, string[] arg3, object userState) {
            if ((this.setRoleInfoOperationCompleted == null)) {
                this.setRoleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetRoleInfoOperationCompleted);
            }
            this.InvokeAsync("setRoleInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setRoleInfoOperationCompleted, userState);
        }
        
        private void OnsetRoleInfoOperationCompleted(object arg) {
            if ((this.setRoleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setRoleInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sharePerspectiveWithStretchOnDisplay2(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6, bool arg7) {
            this.Invoke("sharePerspectiveWithStretchOnDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7});
        }
        
        /// <remarks/>
        public void sharePerspectiveWithStretchOnDisplay2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6, bool arg7) {
            this.sharePerspectiveWithStretchOnDisplay2Async(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, null);
        }
        
        /// <remarks/>
        public void sharePerspectiveWithStretchOnDisplay2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6, bool arg7, object userState) {
            if ((this.sharePerspectiveWithStretchOnDisplay2OperationCompleted == null)) {
                this.sharePerspectiveWithStretchOnDisplay2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsharePerspectiveWithStretchOnDisplay2OperationCompleted);
            }
            this.InvokeAsync("sharePerspectiveWithStretchOnDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7}, this.sharePerspectiveWithStretchOnDisplay2OperationCompleted, userState);
        }
        
        private void OnsharePerspectiveWithStretchOnDisplay2OperationCompleted(object arg) {
            if ((this.sharePerspectiveWithStretchOnDisplay2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sharePerspectiveWithStretchOnDisplay2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSystemVariablePool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeSystemVariablePool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeSystemVariablePoolAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeSystemVariablePoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeSystemVariablePoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeSystemVariablePoolOperationCompleted == null)) {
                this.unsubscribeSystemVariablePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSystemVariablePoolOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSystemVariablePool", new object[] {
                        arg0,
                        arg1}, this.unsubscribeSystemVariablePoolOperationCompleted, userState);
        }
        
        private void OnunsubscribeSystemVariablePoolOperationCompleted(object arg) {
            if ((this.unsubscribeSystemVariablePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSystemVariablePoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSquidModeConfigurationsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] squidModeConfigurationInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSquidModeConfigurationsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSquidModeConfigurationsInfoAsync(sessionId arg0, objectId[] arg1, squidModeConfigurationInfo[] arg2, string[] arg3) {
            this.setSquidModeConfigurationsInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSquidModeConfigurationsInfoAsync(sessionId arg0, objectId[] arg1, squidModeConfigurationInfo[] arg2, string[] arg3, object userState) {
            if ((this.setSquidModeConfigurationsInfoOperationCompleted == null)) {
                this.setSquidModeConfigurationsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSquidModeConfigurationsInfoOperationCompleted);
            }
            this.InvokeAsync("setSquidModeConfigurationsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSquidModeConfigurationsInfoOperationCompleted, userState);
        }
        
        private void OnsetSquidModeConfigurationsInfoOperationCompleted(object arg) {
            if ((this.setSquidModeConfigurationsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSquidModeConfigurationsInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeMessagePool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeMessagePool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeMessagePoolAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeMessagePoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeMessagePoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeMessagePoolOperationCompleted == null)) {
                this.unsubscribeMessagePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeMessagePoolOperationCompleted);
            }
            this.InvokeAsync("unsubscribeMessagePool", new object[] {
                        arg0,
                        arg1}, this.unsubscribeMessagePoolOperationCompleted, userState);
        }
        
        private void OnunsubscribeMessagePoolOperationCompleted(object arg) {
            if ((this.unsubscribeMessagePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeMessagePoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateWindowsZOrder(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] windowInfo3[] arg3) {
            this.Invoke("updateWindowsZOrder", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void updateWindowsZOrderAsync(sessionId arg0, objectId arg1, objectId[] arg2, windowInfo3[] arg3) {
            this.updateWindowsZOrderAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void updateWindowsZOrderAsync(sessionId arg0, objectId arg1, objectId[] arg2, windowInfo3[] arg3, object userState) {
            if ((this.updateWindowsZOrderOperationCompleted == null)) {
                this.updateWindowsZOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWindowsZOrderOperationCompleted);
            }
            this.InvokeAsync("updateWindowsZOrder", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.updateWindowsZOrderOperationCompleted, userState);
        }
        
        private void OnupdateWindowsZOrderOperationCompleted(object arg) {
            if ((this.updateWindowsZOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWindowsZOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listUsers(sessionId arg0) {
            object[] results = this.Invoke("listUsers", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listUsersAsync(sessionId arg0) {
            this.listUsersAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listUsersAsync(sessionId arg0, object userState) {
            if ((this.listUsersOperationCompleted == null)) {
                this.listUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistUsersOperationCompleted);
            }
            this.InvokeAsync("listUsers", new object[] {
                        arg0}, this.listUsersOperationCompleted, userState);
        }
        
        private void OnlistUsersOperationCompleted(object arg) {
            if ((this.listUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listUsersCompleted(this, new listUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void shareApplicationWithDefaultGeometry(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("shareApplicationWithDefaultGeometry", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void shareApplicationWithDefaultGeometryAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.shareApplicationWithDefaultGeometryAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void shareApplicationWithDefaultGeometryAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.shareApplicationWithDefaultGeometryOperationCompleted == null)) {
                this.shareApplicationWithDefaultGeometryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshareApplicationWithDefaultGeometryOperationCompleted);
            }
            this.InvokeAsync("shareApplicationWithDefaultGeometry", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.shareApplicationWithDefaultGeometryOperationCompleted, userState);
        }
        
        private void OnshareApplicationWithDefaultGeometryOperationCompleted(object arg) {
            if ((this.shareApplicationWithDefaultGeometryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.shareApplicationWithDefaultGeometryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public imageInfo[] getImagesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getImagesInfo", new object[] {
                        arg0,
                        arg1});
            return ((imageInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getImagesInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getImagesInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getImagesInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getImagesInfoOperationCompleted == null)) {
                this.getImagesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImagesInfoOperationCompleted);
            }
            this.InvokeAsync("getImagesInfo", new object[] {
                        arg0,
                        arg1}, this.getImagesInfoOperationCompleted, userState);
        }
        
        private void OngetImagesInfoOperationCompleted(object arg) {
            if ((this.getImagesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImagesInfoCompleted(this, new getImagesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public labelDecoratorDetail[] getLabelDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getLabelDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((labelDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getLabelDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getLabelDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getLabelDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getLabelDecoratorsDetailOperationCompleted == null)) {
                this.getLabelDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLabelDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getLabelDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getLabelDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetLabelDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getLabelDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLabelDecoratorsDetailCompleted(this, new getLabelDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeVideoAudioDefaultSetting(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeVideoAudioDefaultSetting", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeVideoAudioDefaultSettingAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeVideoAudioDefaultSettingAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeVideoAudioDefaultSettingAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeVideoAudioDefaultSettingOperationCompleted == null)) {
                this.unsubscribeVideoAudioDefaultSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeVideoAudioDefaultSettingOperationCompleted);
            }
            this.InvokeAsync("unsubscribeVideoAudioDefaultSetting", new object[] {
                        arg0,
                        arg1}, this.unsubscribeVideoAudioDefaultSettingOperationCompleted, userState);
        }
        
        private void OnunsubscribeVideoAudioDefaultSettingOperationCompleted(object arg) {
            if ((this.unsubscribeVideoAudioDefaultSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeVideoAudioDefaultSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void selectSystemVariableInStaticTextDecorator(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("selectSystemVariableInStaticTextDecorator", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void selectSystemVariableInStaticTextDecoratorAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.selectSystemVariableInStaticTextDecoratorAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void selectSystemVariableInStaticTextDecoratorAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.selectSystemVariableInStaticTextDecoratorOperationCompleted == null)) {
                this.selectSystemVariableInStaticTextDecoratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectSystemVariableInStaticTextDecoratorOperationCompleted);
            }
            this.InvokeAsync("selectSystemVariableInStaticTextDecorator", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.selectSystemVariableInStaticTextDecoratorOperationCompleted, userState);
        }
        
        private void OnselectSystemVariableInStaticTextDecoratorOperationCompleted(object arg) {
            if ((this.selectSystemVariableInStaticTextDecoratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectSystemVariableInStaticTextDecoratorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void openPerspectiveWithDefaultGeometry(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("openPerspectiveWithDefaultGeometry", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void openPerspectiveWithDefaultGeometryAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.openPerspectiveWithDefaultGeometryAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void openPerspectiveWithDefaultGeometryAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.openPerspectiveWithDefaultGeometryOperationCompleted == null)) {
                this.openPerspectiveWithDefaultGeometryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnopenPerspectiveWithDefaultGeometryOperationCompleted);
            }
            this.InvokeAsync("openPerspectiveWithDefaultGeometry", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.openPerspectiveWithDefaultGeometryOperationCompleted, userState);
        }
        
        private void OnopenPerspectiveWithDefaultGeometryOperationCompleted(object arg) {
            if ((this.openPerspectiveWithDefaultGeometryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.openPerspectiveWithDefaultGeometryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public imageDecoratorDetail[] getImageDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getImageDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((imageDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getImageDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getImageDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getImageDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getImageDecoratorsDetailOperationCompleted == null)) {
                this.getImageDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImageDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getImageDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getImageDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetImageDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getImageDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImageDecoratorsDetailCompleted(this, new getImageDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sourceInfo[] getSourcesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getSourcesInfo", new object[] {
                        arg0,
                        arg1});
            return ((sourceInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getSourcesInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getSourcesInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSourcesInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getSourcesInfoOperationCompleted == null)) {
                this.getSourcesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourcesInfoOperationCompleted);
            }
            this.InvokeAsync("getSourcesInfo", new object[] {
                        arg0,
                        arg1}, this.getSourcesInfoOperationCompleted, userState);
        }
        
        private void OngetSourcesInfoOperationCompleted(object arg) {
            if ((this.getSourcesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourcesInfoCompleted(this, new getSourcesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sendDecoratorToBack(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("sendDecoratorToBack", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void sendDecoratorToBackAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.sendDecoratorToBackAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void sendDecoratorToBackAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.sendDecoratorToBackOperationCompleted == null)) {
                this.sendDecoratorToBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDecoratorToBackOperationCompleted);
            }
            this.InvokeAsync("sendDecoratorToBack", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.sendDecoratorToBackOperationCompleted, userState);
        }
        
        private void OnsendDecoratorToBackOperationCompleted(object arg) {
            if ((this.sendDecoratorToBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDecoratorToBackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool isSystemPropertyBinded(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("isSystemPropertyBinded", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isSystemPropertyBindedAsync(sessionId arg0, objectId arg1) {
            this.isSystemPropertyBindedAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void isSystemPropertyBindedAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.isSystemPropertyBindedOperationCompleted == null)) {
                this.isSystemPropertyBindedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisSystemPropertyBindedOperationCompleted);
            }
            this.InvokeAsync("isSystemPropertyBinded", new object[] {
                        arg0,
                        arg1}, this.isSystemPropertyBindedOperationCompleted, userState);
        }
        
        private void OnisSystemPropertyBindedOperationCompleted(object arg) {
            if ((this.isSystemPropertyBindedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isSystemPropertyBindedCompleted(this, new isSystemPropertyBindedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public tilerWrapper[] listAllTilers(sessionId arg0) {
            object[] results = this.Invoke("listAllTilers", new object[] {
                        arg0});
            return ((tilerWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllTilersAsync(sessionId arg0) {
            this.listAllTilersAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllTilersAsync(sessionId arg0, object userState) {
            if ((this.listAllTilersOperationCompleted == null)) {
                this.listAllTilersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllTilersOperationCompleted);
            }
            this.InvokeAsync("listAllTilers", new object[] {
                        arg0}, this.listAllTilersOperationCompleted, userState);
        }
        
        private void OnlistAllTilersOperationCompleted(object arg) {
            if ((this.listAllTilersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllTilersCompleted(this, new listAllTilersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool forceRemoveSource(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("forceRemoveSource", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveSourceAsync(sessionId arg0, objectId arg1) {
            this.forceRemoveSourceAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveSourceAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.forceRemoveSourceOperationCompleted == null)) {
                this.forceRemoveSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveSourceOperationCompleted);
            }
            this.InvokeAsync("forceRemoveSource", new object[] {
                        arg0,
                        arg1}, this.forceRemoveSourceOperationCompleted, userState);
        }
        
        private void OnforceRemoveSourceOperationCompleted(object arg) {
            if ((this.forceRemoveSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveSourceCompleted(this, new forceRemoveSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public audioDecoratorDetail[] getAudioDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getAudioDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((audioDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getAudioDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getAudioDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getAudioDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getAudioDecoratorsDetailOperationCompleted == null)) {
                this.getAudioDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAudioDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getAudioDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getAudioDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetAudioDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getAudioDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAudioDecoratorsDetailCompleted(this, new getAudioDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllSystemProperties(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllSystemProperties", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllSystemPropertiesAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllSystemPropertiesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllSystemPropertiesAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllSystemPropertiesOperationCompleted == null)) {
                this.subscribeAllSystemPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllSystemPropertiesOperationCompleted);
            }
            this.InvokeAsync("subscribeAllSystemProperties", new object[] {
                        arg0,
                        arg1}, this.subscribeAllSystemPropertiesOperationCompleted, userState);
        }
        
        private void OnsubscribeAllSystemPropertiesOperationCompleted(object arg) {
            if ((this.subscribeAllSystemPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllSystemPropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeMiscellaneousDefaultSetting(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeMiscellaneousDefaultSetting", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeMiscellaneousDefaultSettingAsync(sessionId arg0, string[] arg1) {
            this.subscribeMiscellaneousDefaultSettingAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeMiscellaneousDefaultSettingAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeMiscellaneousDefaultSettingOperationCompleted == null)) {
                this.subscribeMiscellaneousDefaultSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeMiscellaneousDefaultSettingOperationCompleted);
            }
            this.InvokeAsync("subscribeMiscellaneousDefaultSetting", new object[] {
                        arg0,
                        arg1}, this.subscribeMiscellaneousDefaultSettingOperationCompleted, userState);
        }
        
        private void OnsubscribeMiscellaneousDefaultSettingOperationCompleted(object arg) {
            if ((this.subscribeMiscellaneousDefaultSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeMiscellaneousDefaultSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getVersionInfo(sessionId arg0) {
            object[] results = this.Invoke("getVersionInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionInfoAsync(sessionId arg0) {
            this.getVersionInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getVersionInfoAsync(sessionId arg0, object userState) {
            if ((this.getVersionInfoOperationCompleted == null)) {
                this.getVersionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionInfoOperationCompleted);
            }
            this.InvokeAsync("getVersionInfo", new object[] {
                        arg0}, this.getVersionInfoOperationCompleted, userState);
        }
        
        private void OngetVersionInfoOperationCompleted(object arg) {
            if ((this.getVersionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionInfoCompleted(this, new getVersionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dateTimeDecoratorDetail[] getDateTimeDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getDateTimeDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((dateTimeDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getDateTimeDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getDateTimeDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDateTimeDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getDateTimeDecoratorsDetailOperationCompleted == null)) {
                this.getDateTimeDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDateTimeDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getDateTimeDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getDateTimeDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetDateTimeDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getDateTimeDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDateTimeDecoratorsDetailCompleted(this, new getDateTimeDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public tileDetail2 fetchTiling2(sessionId arg0, objectId arg1, double arg2, double arg3) {
            object[] results = this.Invoke("fetchTiling2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((tileDetail2)(results[0]));
        }
        
        /// <remarks/>
        public void fetchTiling2Async(sessionId arg0, objectId arg1, double arg2, double arg3) {
            this.fetchTiling2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void fetchTiling2Async(sessionId arg0, objectId arg1, double arg2, double arg3, object userState) {
            if ((this.fetchTiling2OperationCompleted == null)) {
                this.fetchTiling2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchTiling2OperationCompleted);
            }
            this.InvokeAsync("fetchTiling2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.fetchTiling2OperationCompleted, userState);
        }
        
        private void OnfetchTiling2OperationCompleted(object arg) {
            if ((this.fetchTiling2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchTiling2Completed(this, new fetchTiling2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createWebSource(sessionId arg0, sourceInfo arg1, webSourceDetail arg2) {
            object[] results = this.Invoke("createWebSource", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createWebSourceAsync(sessionId arg0, sourceInfo arg1, webSourceDetail arg2) {
            this.createWebSourceAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createWebSourceAsync(sessionId arg0, sourceInfo arg1, webSourceDetail arg2, object userState) {
            if ((this.createWebSourceOperationCompleted == null)) {
                this.createWebSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateWebSourceOperationCompleted);
            }
            this.InvokeAsync("createWebSource", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createWebSourceOperationCompleted, userState);
        }
        
        private void OncreateWebSourceOperationCompleted(object arg) {
            if ((this.createWebSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createWebSourceCompleted(this, new createWebSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public imageDecoratorDetail2[] getImageDecoratorsDetail2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getImageDecoratorsDetail2", new object[] {
                        arg0,
                        arg1});
            return ((imageDecoratorDetail2[])(results[0]));
        }
        
        /// <remarks/>
        public void getImageDecoratorsDetail2Async(sessionId arg0, objectId[] arg1) {
            this.getImageDecoratorsDetail2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getImageDecoratorsDetail2Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getImageDecoratorsDetail2OperationCompleted == null)) {
                this.getImageDecoratorsDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImageDecoratorsDetail2OperationCompleted);
            }
            this.InvokeAsync("getImageDecoratorsDetail2", new object[] {
                        arg0,
                        arg1}, this.getImageDecoratorsDetail2OperationCompleted, userState);
        }
        
        private void OngetImageDecoratorsDetail2OperationCompleted(object arg) {
            if ((this.getImageDecoratorsDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImageDecoratorsDetail2Completed(this, new getImageDecoratorsDetail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllDisplets(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllDisplets", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllDispletsAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllDispletsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllDispletsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllDispletsOperationCompleted == null)) {
                this.subscribeAllDispletsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllDispletsOperationCompleted);
            }
            this.InvokeAsync("subscribeAllDisplets", new object[] {
                        arg0,
                        arg1}, this.subscribeAllDispletsOperationCompleted, userState);
        }
        
        private void OnsubscribeAllDispletsOperationCompleted(object arg) {
            if ((this.subscribeAllDispletsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllDispletsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findUser(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findUser", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findUserAsync(sessionId arg0, string arg1) {
            this.findUserAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findUserAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findUserOperationCompleted == null)) {
                this.findUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindUserOperationCompleted);
            }
            this.InvokeAsync("findUser", new object[] {
                        arg0,
                        arg1}, this.findUserOperationCompleted, userState);
        }
        
        private void OnfindUserOperationCompleted(object arg) {
            if ((this.findUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findUserCompleted(this, new findUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setWindowInfo3FromDA(sessionId arg0, objectId arg1, windowInfo3 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setWindowInfo3FromDA", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setWindowInfo3FromDAAsync(sessionId arg0, objectId arg1, windowInfo3 arg2, string[] arg3) {
            this.setWindowInfo3FromDAAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setWindowInfo3FromDAAsync(sessionId arg0, objectId arg1, windowInfo3 arg2, string[] arg3, object userState) {
            if ((this.setWindowInfo3FromDAOperationCompleted == null)) {
                this.setWindowInfo3FromDAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWindowInfo3FromDAOperationCompleted);
            }
            this.InvokeAsync("setWindowInfo3FromDA", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setWindowInfo3FromDAOperationCompleted, userState);
        }
        
        private void OnsetWindowInfo3FromDAOperationCompleted(object arg) {
            if ((this.setWindowInfo3FromDACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWindowInfo3FromDACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public perspectiveInfo2[] getPerspectivesInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getPerspectivesInfo2", new object[] {
                        arg0,
                        arg1});
            return ((perspectiveInfo2[])(results[0]));
        }
        
        /// <remarks/>
        public void getPerspectivesInfo2Async(sessionId arg0, objectId[] arg1) {
            this.getPerspectivesInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getPerspectivesInfo2Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getPerspectivesInfo2OperationCompleted == null)) {
                this.getPerspectivesInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPerspectivesInfo2OperationCompleted);
            }
            this.InvokeAsync("getPerspectivesInfo2", new object[] {
                        arg0,
                        arg1}, this.getPerspectivesInfo2OperationCompleted, userState);
        }
        
        private void OngetPerspectivesInfo2OperationCompleted(object arg) {
            if ((this.getPerspectivesInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPerspectivesInfo2Completed(this, new getPerspectivesInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void reloadLicense(sessionId arg0) {
            this.Invoke("reloadLicense", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void reloadLicenseAsync(sessionId arg0) {
            this.reloadLicenseAsync(arg0, null);
        }
        
        /// <remarks/>
        public void reloadLicenseAsync(sessionId arg0, object userState) {
            if ((this.reloadLicenseOperationCompleted == null)) {
                this.reloadLicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreloadLicenseOperationCompleted);
            }
            this.InvokeAsync("reloadLicense", new object[] {
                        arg0}, this.reloadLicenseOperationCompleted, userState);
        }
        
        private void OnreloadLicenseOperationCompleted(object arg) {
            if ((this.reloadLicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reloadLicenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeConfiguration(sessionId arg0, objectId arg1) {
            this.Invoke("removeConfiguration", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removeConfigurationAsync(sessionId arg0, objectId arg1) {
            this.removeConfigurationAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeConfigurationAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeConfigurationOperationCompleted == null)) {
                this.removeConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveConfigurationOperationCompleted);
            }
            this.InvokeAsync("removeConfiguration", new object[] {
                        arg0,
                        arg1}, this.removeConfigurationOperationCompleted, userState);
        }
        
        private void OnremoveConfigurationOperationCompleted(object arg) {
            if ((this.removeConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createKeyboardShortcutDefaultSettings(sessionId arg0, keyboardShortcutDefaultSettingsInfo arg1) {
            object[] results = this.Invoke("createKeyboardShortcutDefaultSettings", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createKeyboardShortcutDefaultSettingsAsync(sessionId arg0, keyboardShortcutDefaultSettingsInfo arg1) {
            this.createKeyboardShortcutDefaultSettingsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createKeyboardShortcutDefaultSettingsAsync(sessionId arg0, keyboardShortcutDefaultSettingsInfo arg1, object userState) {
            if ((this.createKeyboardShortcutDefaultSettingsOperationCompleted == null)) {
                this.createKeyboardShortcutDefaultSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateKeyboardShortcutDefaultSettingsOperationCompleted);
            }
            this.InvokeAsync("createKeyboardShortcutDefaultSettings", new object[] {
                        arg0,
                        arg1}, this.createKeyboardShortcutDefaultSettingsOperationCompleted, userState);
        }
        
        private void OncreateKeyboardShortcutDefaultSettingsOperationCompleted(object arg) {
            if ((this.createKeyboardShortcutDefaultSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createKeyboardShortcutDefaultSettingsCompleted(this, new createKeyboardShortcutDefaultSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void startRestore() {
            this.Invoke("startRestore", new object[0]);
        }
        
        /// <remarks/>
        public void startRestoreAsync() {
            this.startRestoreAsync(null);
        }
        
        /// <remarks/>
        public void startRestoreAsync(object userState) {
            if ((this.startRestoreOperationCompleted == null)) {
                this.startRestoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartRestoreOperationCompleted);
            }
            this.InvokeAsync("startRestore", new object[0], this.startRestoreOperationCompleted, userState);
        }
        
        private void OnstartRestoreOperationCompleted(object arg) {
            if ((this.startRestoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startRestoreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unshareAllApplicationsFromDisplay(sessionId arg0, objectId arg1) {
            this.Invoke("unshareAllApplicationsFromDisplay", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unshareAllApplicationsFromDisplayAsync(sessionId arg0, objectId arg1) {
            this.unshareAllApplicationsFromDisplayAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unshareAllApplicationsFromDisplayAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.unshareAllApplicationsFromDisplayOperationCompleted == null)) {
                this.unshareAllApplicationsFromDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunshareAllApplicationsFromDisplayOperationCompleted);
            }
            this.InvokeAsync("unshareAllApplicationsFromDisplay", new object[] {
                        arg0,
                        arg1}, this.unshareAllApplicationsFromDisplayOperationCompleted, userState);
        }
        
        private void OnunshareAllApplicationsFromDisplayOperationCompleted(object arg) {
            if ((this.unshareAllApplicationsFromDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unshareAllApplicationsFromDisplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDateTimeDecoratorDetail(sessionId arg0, objectId arg1, dateTimeDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDateTimeDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDateTimeDecoratorDetailAsync(sessionId arg0, objectId arg1, dateTimeDecoratorDetail arg2, string[] arg3) {
            this.setDateTimeDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDateTimeDecoratorDetailAsync(sessionId arg0, objectId arg1, dateTimeDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setDateTimeDecoratorDetailOperationCompleted == null)) {
                this.setDateTimeDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDateTimeDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setDateTimeDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDateTimeDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetDateTimeDecoratorDetailOperationCompleted(object arg) {
            if ((this.setDateTimeDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDateTimeDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId copySource(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("copySource", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void copySourceAsync(sessionId arg0, objectId arg1) {
            this.copySourceAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copySourceAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.copySourceOperationCompleted == null)) {
                this.copySourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopySourceOperationCompleted);
            }
            this.InvokeAsync("copySource", new object[] {
                        arg0,
                        arg1}, this.copySourceOperationCompleted, userState);
        }
        
        private void OncopySourceOperationCompleted(object arg) {
            if ((this.copySourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copySourceCompleted(this, new copySourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool forceRemoveApplication(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("forceRemoveApplication", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveApplicationAsync(sessionId arg0, objectId arg1) {
            this.forceRemoveApplicationAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveApplicationAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.forceRemoveApplicationOperationCompleted == null)) {
                this.forceRemoveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveApplicationOperationCompleted);
            }
            this.InvokeAsync("forceRemoveApplication", new object[] {
                        arg0,
                        arg1}, this.forceRemoveApplicationOperationCompleted, userState);
        }
        
        private void OnforceRemoveApplicationOperationCompleted(object arg) {
            if ((this.forceRemoveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveApplicationCompleted(this, new forceRemoveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteExternalWindow(sessionId arg0, objectId arg1, int arg2) {
            this.Invoke("deleteExternalWindow", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void deleteExternalWindowAsync(sessionId arg0, objectId arg1, int arg2) {
            this.deleteExternalWindowAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void deleteExternalWindowAsync(sessionId arg0, objectId arg1, int arg2, object userState) {
            if ((this.deleteExternalWindowOperationCompleted == null)) {
                this.deleteExternalWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteExternalWindowOperationCompleted);
            }
            this.InvokeAsync("deleteExternalWindow", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.deleteExternalWindowOperationCompleted, userState);
        }
        
        private void OndeleteExternalWindowOperationCompleted(object arg) {
            if ((this.deleteExternalWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteExternalWindowCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("idList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, NestingLevel=1)]
        public objectId[][] getAllDisplaysPerspectives(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getAllDisplaysPerspectives", new object[] {
                        arg0,
                        arg1});
            return ((objectId[][])(results[0]));
        }
        
        /// <remarks/>
        public void getAllDisplaysPerspectivesAsync(sessionId arg0, objectId[] arg1) {
            this.getAllDisplaysPerspectivesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getAllDisplaysPerspectivesAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getAllDisplaysPerspectivesOperationCompleted == null)) {
                this.getAllDisplaysPerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllDisplaysPerspectivesOperationCompleted);
            }
            this.InvokeAsync("getAllDisplaysPerspectives", new object[] {
                        arg0,
                        arg1}, this.getAllDisplaysPerspectivesOperationCompleted, userState);
        }
        
        private void OngetAllDisplaysPerspectivesOperationCompleted(object arg) {
            if ((this.getAllDisplaysPerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllDisplaysPerspectivesCompleted(this, new getAllDisplaysPerspectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sourceInfo2[] getSourcesInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getSourcesInfo2", new object[] {
                        arg0,
                        arg1});
            return ((sourceInfo2[])(results[0]));
        }
        
        /// <remarks/>
        public void getSourcesInfo2Async(sessionId arg0, objectId[] arg1) {
            this.getSourcesInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSourcesInfo2Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getSourcesInfo2OperationCompleted == null)) {
                this.getSourcesInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourcesInfo2OperationCompleted);
            }
            this.InvokeAsync("getSourcesInfo2", new object[] {
                        arg0,
                        arg1}, this.getSourcesInfo2OperationCompleted, userState);
        }
        
        private void OngetSourcesInfo2OperationCompleted(object arg) {
            if ((this.getSourcesInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourcesInfo2Completed(this, new getSourcesInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public perspectivesDetail[] listDetailedPerspective(sessionId arg0) {
            object[] results = this.Invoke("listDetailedPerspective", new object[] {
                        arg0});
            return ((perspectivesDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void listDetailedPerspectiveAsync(sessionId arg0) {
            this.listDetailedPerspectiveAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listDetailedPerspectiveAsync(sessionId arg0, object userState) {
            if ((this.listDetailedPerspectiveOperationCompleted == null)) {
                this.listDetailedPerspectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistDetailedPerspectiveOperationCompleted);
            }
            this.InvokeAsync("listDetailedPerspective", new object[] {
                        arg0}, this.listDetailedPerspectiveOperationCompleted, userState);
        }
        
        private void OnlistDetailedPerspectiveOperationCompleted(object arg) {
            if ((this.listDetailedPerspectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listDetailedPerspectiveCompleted(this, new listDetailedPerspectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createSystemVariable2(sessionId arg0, systemVariableInfo arg1) {
            object[] results = this.Invoke("createSystemVariable2", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createSystemVariable2Async(sessionId arg0, systemVariableInfo arg1) {
            this.createSystemVariable2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createSystemVariable2Async(sessionId arg0, systemVariableInfo arg1, object userState) {
            if ((this.createSystemVariable2OperationCompleted == null)) {
                this.createSystemVariable2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSystemVariable2OperationCompleted);
            }
            this.InvokeAsync("createSystemVariable2", new object[] {
                        arg0,
                        arg1}, this.createSystemVariable2OperationCompleted, userState);
        }
        
        private void OncreateSystemVariable2OperationCompleted(object arg) {
            if ((this.createSystemVariable2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSystemVariable2Completed(this, new createSystemVariable2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeApplication(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeApplication", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeApplicationAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeApplicationAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeApplicationAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeApplicationOperationCompleted == null)) {
                this.subscribeApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeApplicationOperationCompleted);
            }
            this.InvokeAsync("subscribeApplication", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeApplicationOperationCompleted, userState);
        }
        
        private void OnsubscribeApplicationOperationCompleted(object arg) {
            if ((this.subscribeApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeApplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeSourceRoutingConfig(sessionId arg0, objectId arg1) {
            this.Invoke("removeSourceRoutingConfig", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removeSourceRoutingConfigAsync(sessionId arg0, objectId arg1) {
            this.removeSourceRoutingConfigAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeSourceRoutingConfigAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeSourceRoutingConfigOperationCompleted == null)) {
                this.removeSourceRoutingConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSourceRoutingConfigOperationCompleted);
            }
            this.InvokeAsync("removeSourceRoutingConfig", new object[] {
                        arg0,
                        arg1}, this.removeSourceRoutingConfigOperationCompleted, userState);
        }
        
        private void OnremoveSourceRoutingConfigOperationCompleted(object arg) {
            if ((this.removeSourceRoutingConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSourceRoutingConfigCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getDisplayTotalWindows(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDisplayTotalWindows", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getDisplayTotalWindowsAsync(sessionId arg0, objectId arg1) {
            this.getDisplayTotalWindowsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDisplayTotalWindowsAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDisplayTotalWindowsOperationCompleted == null)) {
                this.getDisplayTotalWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplayTotalWindowsOperationCompleted);
            }
            this.InvokeAsync("getDisplayTotalWindows", new object[] {
                        arg0,
                        arg1}, this.getDisplayTotalWindowsOperationCompleted, userState);
        }
        
        private void OngetDisplayTotalWindowsOperationCompleted(object arg) {
            if ((this.getDisplayTotalWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplayTotalWindowsCompleted(this, new getDisplayTotalWindowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webSourceDetail[] getWebSourcesDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getWebSourcesDetail", new object[] {
                        arg0,
                        arg1});
            return ((webSourceDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getWebSourcesDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getWebSourcesDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getWebSourcesDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getWebSourcesDetailOperationCompleted == null)) {
                this.getWebSourcesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWebSourcesDetailOperationCompleted);
            }
            this.InvokeAsync("getWebSourcesDetail", new object[] {
                        arg0,
                        arg1}, this.getWebSourcesDetailOperationCompleted, userState);
        }
        
        private void OngetWebSourcesDetailOperationCompleted(object arg) {
            if ((this.getWebSourcesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWebSourcesDetailCompleted(this, new getWebSourcesDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findSource(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findSource", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findSourceAsync(sessionId arg0, string arg1) {
            this.findSourceAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findSourceAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findSourceOperationCompleted == null)) {
                this.findSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindSourceOperationCompleted);
            }
            this.InvokeAsync("findSource", new object[] {
                        arg0,
                        arg1}, this.findSourceOperationCompleted, userState);
        }
        
        private void OnfindSourceOperationCompleted(object arg) {
            if ((this.findSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findSourceCompleted(this, new findSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createLogoDecoratorTemplate2(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail2 arg2, logoDecoratorDetail arg3) {
            object[] results = this.Invoke("createLogoDecoratorTemplate2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createLogoDecoratorTemplate2Async(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail2 arg2, logoDecoratorDetail arg3) {
            this.createLogoDecoratorTemplate2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createLogoDecoratorTemplate2Async(sessionId arg0, decoratorInfo arg1, imageDecoratorDetail2 arg2, logoDecoratorDetail arg3, object userState) {
            if ((this.createLogoDecoratorTemplate2OperationCompleted == null)) {
                this.createLogoDecoratorTemplate2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateLogoDecoratorTemplate2OperationCompleted);
            }
            this.InvokeAsync("createLogoDecoratorTemplate2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createLogoDecoratorTemplate2OperationCompleted, userState);
        }
        
        private void OncreateLogoDecoratorTemplate2OperationCompleted(object arg) {
            if ((this.createLogoDecoratorTemplate2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createLogoDecoratorTemplate2Completed(this, new createLogoDecoratorTemplate2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeMessage(sessionId arg0, objectId arg1) {
            this.Invoke("removeMessage", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removeMessageAsync(sessionId arg0, objectId arg1) {
            this.removeMessageAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeMessageAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeMessageOperationCompleted == null)) {
                this.removeMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveMessageOperationCompleted);
            }
            this.InvokeAsync("removeMessage", new object[] {
                        arg0,
                        arg1}, this.removeMessageOperationCompleted, userState);
        }
        
        private void OnremoveMessageOperationCompleted(object arg) {
            if ((this.removeMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setPerspectivesInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] perspectiveInfo2[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setPerspectivesInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setPerspectivesInfo2Async(sessionId arg0, objectId[] arg1, perspectiveInfo2[] arg2, string[] arg3) {
            this.setPerspectivesInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setPerspectivesInfo2Async(sessionId arg0, objectId[] arg1, perspectiveInfo2[] arg2, string[] arg3, object userState) {
            if ((this.setPerspectivesInfo2OperationCompleted == null)) {
                this.setPerspectivesInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPerspectivesInfo2OperationCompleted);
            }
            this.InvokeAsync("setPerspectivesInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setPerspectivesInfo2OperationCompleted, userState);
        }
        
        private void OnsetPerspectivesInfo2OperationCompleted(object arg) {
            if ((this.setPerspectivesInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPerspectivesInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setBorderDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] borderDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setBorderDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setBorderDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, borderDecoratorDetail[] arg2, string[] arg3) {
            this.setBorderDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setBorderDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, borderDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setBorderDecoratorsDetailOperationCompleted == null)) {
                this.setBorderDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetBorderDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setBorderDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setBorderDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetBorderDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setBorderDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setBorderDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("idList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, NestingLevel=1)]
        public objectId[][] getPerspectivesDisplets(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getPerspectivesDisplets", new object[] {
                        arg0,
                        arg1});
            return ((objectId[][])(results[0]));
        }
        
        /// <remarks/>
        public void getPerspectivesDispletsAsync(sessionId arg0, objectId[] arg1) {
            this.getPerspectivesDispletsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getPerspectivesDispletsAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getPerspectivesDispletsOperationCompleted == null)) {
                this.getPerspectivesDispletsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPerspectivesDispletsOperationCompleted);
            }
            this.InvokeAsync("getPerspectivesDisplets", new object[] {
                        arg0,
                        arg1}, this.getPerspectivesDispletsOperationCompleted, userState);
        }
        
        private void OngetPerspectivesDispletsOperationCompleted(object arg) {
            if ((this.getPerspectivesDispletsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPerspectivesDispletsCompleted(this, new getPerspectivesDispletsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("idList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, NestingLevel=1)]
        public objectId[][] getAllDisplaysApplication(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, bool arg2) {
            object[] results = this.Invoke("getAllDisplaysApplication", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId[][])(results[0]));
        }
        
        /// <remarks/>
        public void getAllDisplaysApplicationAsync(sessionId arg0, objectId[] arg1, bool arg2) {
            this.getAllDisplaysApplicationAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getAllDisplaysApplicationAsync(sessionId arg0, objectId[] arg1, bool arg2, object userState) {
            if ((this.getAllDisplaysApplicationOperationCompleted == null)) {
                this.getAllDisplaysApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllDisplaysApplicationOperationCompleted);
            }
            this.InvokeAsync("getAllDisplaysApplication", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getAllDisplaysApplicationOperationCompleted, userState);
        }
        
        private void OngetAllDisplaysApplicationOperationCompleted(object arg) {
            if ((this.getAllDisplaysApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllDisplaysApplicationCompleted(this, new getAllDisplaysApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSourcePool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeSourcePool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeSourcePoolAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeSourcePoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeSourcePoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeSourcePoolOperationCompleted == null)) {
                this.unsubscribeSourcePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSourcePoolOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSourcePool", new object[] {
                        arg0,
                        arg1}, this.unsubscribeSourcePoolOperationCompleted, userState);
        }
        
        private void OnunsubscribeSourcePoolOperationCompleted(object arg) {
            if ((this.unsubscribeSourcePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSourcePoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchRoles(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchRoles", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchRolesAsync(sessionId arg0, string arg1) {
            this.searchRolesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchRolesAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchRolesOperationCompleted == null)) {
                this.searchRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchRolesOperationCompleted);
            }
            this.InvokeAsync("searchRoles", new object[] {
                        arg0,
                        arg1}, this.searchRolesOperationCompleted, userState);
        }
        
        private void OnsearchRolesOperationCompleted(object arg) {
            if ((this.searchRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchRolesCompleted(this, new searchRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createPerspectiveWindow(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6) {
            object[] results = this.Invoke("createPerspectiveWindow", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createPerspectiveWindowAsync(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6) {
            this.createPerspectiveWindowAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void createPerspectiveWindowAsync(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6, object userState) {
            if ((this.createPerspectiveWindowOperationCompleted == null)) {
                this.createPerspectiveWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePerspectiveWindowOperationCompleted);
            }
            this.InvokeAsync("createPerspectiveWindow", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.createPerspectiveWindowOperationCompleted, userState);
        }
        
        private void OncreatePerspectiveWindowOperationCompleted(object arg) {
            if ((this.createPerspectiveWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPerspectiveWindowCompleted(this, new createPerspectiveWindowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setPerspectiveInfo2(sessionId arg0, objectId arg1, perspectiveInfo2 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setPerspectiveInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setPerspectiveInfo2Async(sessionId arg0, objectId arg1, perspectiveInfo2 arg2, string[] arg3) {
            this.setPerspectiveInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setPerspectiveInfo2Async(sessionId arg0, objectId arg1, perspectiveInfo2 arg2, string[] arg3, object userState) {
            if ((this.setPerspectiveInfo2OperationCompleted == null)) {
                this.setPerspectiveInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPerspectiveInfo2OperationCompleted);
            }
            this.InvokeAsync("setPerspectiveInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setPerspectiveInfo2OperationCompleted, userState);
        }
        
        private void OnsetPerspectiveInfo2OperationCompleted(object arg) {
            if ((this.setPerspectiveInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPerspectiveInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setProVNCDefaultSettingInfo(sessionId arg0, proVNCDefaultSettingsInfo arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("setProVNCDefaultSettingInfo", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setProVNCDefaultSettingInfoAsync(sessionId arg0, proVNCDefaultSettingsInfo arg1, string[] arg2) {
            this.setProVNCDefaultSettingInfoAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setProVNCDefaultSettingInfoAsync(sessionId arg0, proVNCDefaultSettingsInfo arg1, string[] arg2, object userState) {
            if ((this.setProVNCDefaultSettingInfoOperationCompleted == null)) {
                this.setProVNCDefaultSettingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetProVNCDefaultSettingInfoOperationCompleted);
            }
            this.InvokeAsync("setProVNCDefaultSettingInfo", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setProVNCDefaultSettingInfoOperationCompleted, userState);
        }
        
        private void OnsetProVNCDefaultSettingInfoOperationCompleted(object arg) {
            if ((this.setProVNCDefaultSettingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setProVNCDefaultSettingInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setApplicationWindowDetail(sessionId arg0, objectId arg1, applicationWindowDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setApplicationWindowDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setApplicationWindowDetailAsync(sessionId arg0, objectId arg1, applicationWindowDetail arg2, string[] arg3) {
            this.setApplicationWindowDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setApplicationWindowDetailAsync(sessionId arg0, objectId arg1, applicationWindowDetail arg2, string[] arg3, object userState) {
            if ((this.setApplicationWindowDetailOperationCompleted == null)) {
                this.setApplicationWindowDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetApplicationWindowDetailOperationCompleted);
            }
            this.InvokeAsync("setApplicationWindowDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setApplicationWindowDetailOperationCompleted, userState);
        }
        
        private void OnsetApplicationWindowDetailOperationCompleted(object arg) {
            if ((this.setApplicationWindowDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setApplicationWindowDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllDecorators(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllDecorators", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllDecoratorsAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllDecoratorsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllDecoratorsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllDecoratorsOperationCompleted == null)) {
                this.unsubscribeAllDecoratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllDecoratorsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllDecorators", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllDecoratorsOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllDecoratorsOperationCompleted(object arg) {
            if ((this.unsubscribeAllDecoratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllDecoratorsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createVideoSource(sessionId arg0, sourceInfo arg1, videoSourceDetail arg2) {
            object[] results = this.Invoke("createVideoSource", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createVideoSourceAsync(sessionId arg0, sourceInfo arg1, videoSourceDetail arg2) {
            this.createVideoSourceAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createVideoSourceAsync(sessionId arg0, sourceInfo arg1, videoSourceDetail arg2, object userState) {
            if ((this.createVideoSourceOperationCompleted == null)) {
                this.createVideoSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateVideoSourceOperationCompleted);
            }
            this.InvokeAsync("createVideoSource", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createVideoSourceOperationCompleted, userState);
        }
        
        private void OncreateVideoSourceOperationCompleted(object arg) {
            if ((this.createVideoSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createVideoSourceCompleted(this, new createVideoSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setGroupInfo(sessionId arg0, objectId arg1, groupInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setGroupInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setGroupInfoAsync(sessionId arg0, objectId arg1, groupInfo arg2, string[] arg3) {
            this.setGroupInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setGroupInfoAsync(sessionId arg0, objectId arg1, groupInfo arg2, string[] arg3, object userState) {
            if ((this.setGroupInfoOperationCompleted == null)) {
                this.setGroupInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGroupInfoOperationCompleted);
            }
            this.InvokeAsync("setGroupInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setGroupInfoOperationCompleted, userState);
        }
        
        private void OnsetGroupInfoOperationCompleted(object arg) {
            if ((this.setGroupInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGroupInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public displetInfo getDispletInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDispletInfo", new object[] {
                        arg0,
                        arg1});
            return ((displetInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getDispletInfoAsync(sessionId arg0, objectId arg1) {
            this.getDispletInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDispletInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDispletInfoOperationCompleted == null)) {
                this.getDispletInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDispletInfoOperationCompleted);
            }
            this.InvokeAsync("getDispletInfo", new object[] {
                        arg0,
                        arg1}, this.getDispletInfoOperationCompleted, userState);
        }
        
        private void OngetDispletInfoOperationCompleted(object arg) {
            if ((this.getDispletInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDispletInfoCompleted(this, new getDispletInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeDecoratorTemplatePool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeDecoratorTemplatePool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeDecoratorTemplatePoolAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeDecoratorTemplatePoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeDecoratorTemplatePoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeDecoratorTemplatePoolOperationCompleted == null)) {
                this.unsubscribeDecoratorTemplatePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeDecoratorTemplatePoolOperationCompleted);
            }
            this.InvokeAsync("unsubscribeDecoratorTemplatePool", new object[] {
                        arg0,
                        arg1}, this.unsubscribeDecoratorTemplatePoolOperationCompleted, userState);
        }
        
        private void OnunsubscribeDecoratorTemplatePoolOperationCompleted(object arg) {
            if ((this.unsubscribeDecoratorTemplatePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeDecoratorTemplatePoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllDecorators(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllDecorators", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllDecoratorsAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllDecoratorsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllDecoratorsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllDecoratorsOperationCompleted == null)) {
                this.subscribeAllDecoratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllDecoratorsOperationCompleted);
            }
            this.InvokeAsync("subscribeAllDecorators", new object[] {
                        arg0,
                        arg1}, this.subscribeAllDecoratorsOperationCompleted, userState);
        }
        
        private void OnsubscribeAllDecoratorsOperationCompleted(object arg) {
            if ((this.subscribeAllDecoratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllDecoratorsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public imageInfo getImageInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getImageInfo", new object[] {
                        arg0,
                        arg1});
            return ((imageInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getImageInfoAsync(sessionId arg0, objectId arg1) {
            this.getImageInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getImageInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getImageInfoOperationCompleted == null)) {
                this.getImageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImageInfoOperationCompleted);
            }
            this.InvokeAsync("getImageInfo", new object[] {
                        arg0,
                        arg1}, this.getImageInfoOperationCompleted, userState);
        }
        
        private void OngetImageInfoOperationCompleted(object arg) {
            if ((this.getImageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImageInfoCompleted(this, new getImageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSystemVariable(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeSystemVariable", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeSystemVariableAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeSystemVariableAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeSystemVariableAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeSystemVariableOperationCompleted == null)) {
                this.subscribeSystemVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSystemVariableOperationCompleted);
            }
            this.InvokeAsync("subscribeSystemVariable", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeSystemVariableOperationCompleted, userState);
        }
        
        private void OnsubscribeSystemVariableOperationCompleted(object arg) {
            if ((this.subscribeSystemVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSystemVariableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeDisplet(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeDisplet", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeDispletAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeDispletAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeDispletAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeDispletOperationCompleted == null)) {
                this.unsubscribeDispletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeDispletOperationCompleted);
            }
            this.InvokeAsync("unsubscribeDisplet", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeDispletOperationCompleted, userState);
        }
        
        private void OnunsubscribeDispletOperationCompleted(object arg) {
            if ((this.unsubscribeDispletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeDispletCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchConfigurations(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchConfigurations", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchConfigurationsAsync(sessionId arg0, string arg1) {
            this.searchConfigurationsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchConfigurationsAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchConfigurationsOperationCompleted == null)) {
                this.searchConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchConfigurationsOperationCompleted);
            }
            this.InvokeAsync("searchConfigurations", new object[] {
                        arg0,
                        arg1}, this.searchConfigurationsOperationCompleted, userState);
        }
        
        private void OnsearchConfigurationsOperationCompleted(object arg) {
            if ((this.searchConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchConfigurationsCompleted(this, new searchConfigurationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setScreenScrapeSourcesDetail2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] screenScrapeSourceDetail2[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setScreenScrapeSourcesDetail2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setScreenScrapeSourcesDetail2Async(sessionId arg0, objectId[] arg1, screenScrapeSourceDetail2[] arg2, string[] arg3) {
            this.setScreenScrapeSourcesDetail2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setScreenScrapeSourcesDetail2Async(sessionId arg0, objectId[] arg1, screenScrapeSourceDetail2[] arg2, string[] arg3, object userState) {
            if ((this.setScreenScrapeSourcesDetail2OperationCompleted == null)) {
                this.setScreenScrapeSourcesDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetScreenScrapeSourcesDetail2OperationCompleted);
            }
            this.InvokeAsync("setScreenScrapeSourcesDetail2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setScreenScrapeSourcesDetail2OperationCompleted, userState);
        }
        
        private void OnsetScreenScrapeSourcesDetail2OperationCompleted(object arg) {
            if ((this.setScreenScrapeSourcesDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setScreenScrapeSourcesDetail2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchNGPs(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchNGPs", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchNGPsAsync(sessionId arg0, string arg1) {
            this.searchNGPsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchNGPsAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchNGPsOperationCompleted == null)) {
                this.searchNGPsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchNGPsOperationCompleted);
            }
            this.InvokeAsync("searchNGPs", new object[] {
                        arg0,
                        arg1}, this.searchNGPsOperationCompleted, userState);
        }
        
        private void OnsearchNGPsOperationCompleted(object arg) {
            if ((this.searchNGPsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchNGPsCompleted(this, new searchNGPsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void endSession(sessionId arg0) {
            this.Invoke("endSession", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void endSessionAsync(sessionId arg0) {
            this.endSessionAsync(arg0, null);
        }
        
        /// <remarks/>
        public void endSessionAsync(sessionId arg0, object userState) {
            if ((this.endSessionOperationCompleted == null)) {
                this.endSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnendSessionOperationCompleted);
            }
            this.InvokeAsync("endSession", new object[] {
                        arg0}, this.endSessionOperationCompleted, userState);
        }
        
        private void OnendSessionOperationCompleted(object arg) {
            if ((this.endSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.endSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeWindows(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeWindows", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeWindowsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.unsubscribeWindowsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeWindowsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.unsubscribeWindowsOperationCompleted == null)) {
                this.unsubscribeWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeWindowsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeWindows", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeWindowsOperationCompleted, userState);
        }
        
        private void OnunsubscribeWindowsOperationCompleted(object arg) {
            if ((this.unsubscribeWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeWindowsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listRoles(sessionId arg0) {
            object[] results = this.Invoke("listRoles", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listRolesAsync(sessionId arg0) {
            this.listRolesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listRolesAsync(sessionId arg0, object userState) {
            if ((this.listRolesOperationCompleted == null)) {
                this.listRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistRolesOperationCompleted);
            }
            this.InvokeAsync("listRoles", new object[] {
                        arg0}, this.listRolesOperationCompleted, userState);
        }
        
        private void OnlistRolesOperationCompleted(object arg) {
            if ((this.listRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listRolesCompleted(this, new listRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeDecorator(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeDecorator", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeDecoratorAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeDecoratorAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeDecoratorAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeDecoratorOperationCompleted == null)) {
                this.subscribeDecoratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeDecoratorOperationCompleted);
            }
            this.InvokeAsync("subscribeDecorator", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeDecoratorOperationCompleted, userState);
        }
        
        private void OnsubscribeDecoratorOperationCompleted(object arg) {
            if ((this.subscribeDecoratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeDecoratorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setStatusBorderDecoratorDetail(sessionId arg0, objectId arg1, statusBorderDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setStatusBorderDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setStatusBorderDecoratorDetailAsync(sessionId arg0, objectId arg1, statusBorderDecoratorDetail arg2, string[] arg3) {
            this.setStatusBorderDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setStatusBorderDecoratorDetailAsync(sessionId arg0, objectId arg1, statusBorderDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setStatusBorderDecoratorDetailOperationCompleted == null)) {
                this.setStatusBorderDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStatusBorderDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setStatusBorderDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setStatusBorderDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetStatusBorderDecoratorDetailOperationCompleted(object arg) {
            if ((this.setStatusBorderDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStatusBorderDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void applySourceTemplate(sessionId arg0, objectId arg1) {
            this.Invoke("applySourceTemplate", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void applySourceTemplateAsync(sessionId arg0, objectId arg1) {
            this.applySourceTemplateAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void applySourceTemplateAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.applySourceTemplateOperationCompleted == null)) {
                this.applySourceTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplySourceTemplateOperationCompleted);
            }
            this.InvokeAsync("applySourceTemplate", new object[] {
                        arg0,
                        arg1}, this.applySourceTemplateOperationCompleted, userState);
        }
        
        private void OnapplySourceTemplateOperationCompleted(object arg) {
            if ((this.applySourceTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applySourceTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSourcesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] sourceInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSourcesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSourcesInfoAsync(sessionId arg0, objectId[] arg1, sourceInfo[] arg2, string[] arg3) {
            this.setSourcesInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSourcesInfoAsync(sessionId arg0, objectId[] arg1, sourceInfo[] arg2, string[] arg3, object userState) {
            if ((this.setSourcesInfoOperationCompleted == null)) {
                this.setSourcesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSourcesInfoOperationCompleted);
            }
            this.InvokeAsync("setSourcesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSourcesInfoOperationCompleted, userState);
        }
        
        private void OnsetSourcesInfoOperationCompleted(object arg) {
            if ((this.setSourcesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSourcesInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeSystemVariable(sessionId arg0, objectId arg1) {
            this.Invoke("removeSystemVariable", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removeSystemVariableAsync(sessionId arg0, objectId arg1) {
            this.removeSystemVariableAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeSystemVariableAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeSystemVariableOperationCompleted == null)) {
                this.removeSystemVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSystemVariableOperationCompleted);
            }
            this.InvokeAsync("removeSystemVariable", new object[] {
                        arg0,
                        arg1}, this.removeSystemVariableOperationCompleted, userState);
        }
        
        private void OnremoveSystemVariableOperationCompleted(object arg) {
            if ((this.removeSystemVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSystemVariableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public configurationInfo[] getConfigurationsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getConfigurationsInfo", new object[] {
                        arg0,
                        arg1});
            return ((configurationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getConfigurationsInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getConfigurationsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getConfigurationsInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getConfigurationsInfoOperationCompleted == null)) {
                this.getConfigurationsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConfigurationsInfoOperationCompleted);
            }
            this.InvokeAsync("getConfigurationsInfo", new object[] {
                        arg0,
                        arg1}, this.getConfigurationsInfoOperationCompleted, userState);
        }
        
        private void OngetConfigurationsInfoOperationCompleted(object arg) {
            if ((this.getConfigurationsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConfigurationsInfoCompleted(this, new getConfigurationsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllPerspectives(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllPerspectives", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllPerspectivesAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllPerspectivesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllPerspectivesAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllPerspectivesOperationCompleted == null)) {
                this.subscribeAllPerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllPerspectivesOperationCompleted);
            }
            this.InvokeAsync("subscribeAllPerspectives", new object[] {
                        arg0,
                        arg1}, this.subscribeAllPerspectivesOperationCompleted, userState);
        }
        
        private void OnsubscribeAllPerspectivesOperationCompleted(object arg) {
            if ((this.subscribeAllPerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllPerspectivesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public sourceRoutingConfigInfo getSourceRoutingConfigInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSourceRoutingConfigInfo", new object[] {
                        arg0,
                        arg1});
            return ((sourceRoutingConfigInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSourceRoutingConfigInfoAsync(sessionId arg0, objectId arg1) {
            this.getSourceRoutingConfigInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSourceRoutingConfigInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSourceRoutingConfigInfoOperationCompleted == null)) {
                this.getSourceRoutingConfigInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourceRoutingConfigInfoOperationCompleted);
            }
            this.InvokeAsync("getSourceRoutingConfigInfo", new object[] {
                        arg0,
                        arg1}, this.getSourceRoutingConfigInfoOperationCompleted, userState);
        }
        
        private void OngetSourceRoutingConfigInfoOperationCompleted(object arg) {
            if ((this.getSourceRoutingConfigInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourceRoutingConfigInfoCompleted(this, new getSourceRoutingConfigInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public perspectiveInfo[] getPerspectivesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getPerspectivesInfo", new object[] {
                        arg0,
                        arg1});
            return ((perspectiveInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getPerspectivesInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getPerspectivesInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getPerspectivesInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getPerspectivesInfoOperationCompleted == null)) {
                this.getPerspectivesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPerspectivesInfoOperationCompleted);
            }
            this.InvokeAsync("getPerspectivesInfo", new object[] {
                        arg0,
                        arg1}, this.getPerspectivesInfoOperationCompleted, userState);
        }
        
        private void OngetPerspectivesInfoOperationCompleted(object arg) {
            if ((this.getPerspectivesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPerspectivesInfoCompleted(this, new getPerspectivesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setTilersInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] tilerInfo2[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setTilersInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setTilersInfo2Async(sessionId arg0, objectId[] arg1, tilerInfo2[] arg2, string[] arg3) {
            this.setTilersInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setTilersInfo2Async(sessionId arg0, objectId[] arg1, tilerInfo2[] arg2, string[] arg3, object userState) {
            if ((this.setTilersInfo2OperationCompleted == null)) {
                this.setTilersInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTilersInfo2OperationCompleted);
            }
            this.InvokeAsync("setTilersInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setTilersInfo2OperationCompleted, userState);
        }
        
        private void OnsetTilersInfo2OperationCompleted(object arg) {
            if ((this.setTilersInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTilersInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveTilingAsGrid(sessionId arg0, string arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] rectangleInfo[] arg2, dimensionInfo arg3) {
            object[] results = this.Invoke("saveTilingAsGrid", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveTilingAsGridAsync(sessionId arg0, string arg1, rectangleInfo[] arg2, dimensionInfo arg3) {
            this.saveTilingAsGridAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void saveTilingAsGridAsync(sessionId arg0, string arg1, rectangleInfo[] arg2, dimensionInfo arg3, object userState) {
            if ((this.saveTilingAsGridOperationCompleted == null)) {
                this.saveTilingAsGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveTilingAsGridOperationCompleted);
            }
            this.InvokeAsync("saveTilingAsGrid", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.saveTilingAsGridOperationCompleted, userState);
        }
        
        private void OnsaveTilingAsGridOperationCompleted(object arg) {
            if ((this.saveTilingAsGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveTilingAsGridCompleted(this, new saveTilingAsGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findSystemPropertyByName(sessionId arg0, string arg1, objectId arg2, string arg3) {
            object[] results = this.Invoke("findSystemPropertyByName", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findSystemPropertyByNameAsync(sessionId arg0, string arg1, objectId arg2, string arg3) {
            this.findSystemPropertyByNameAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void findSystemPropertyByNameAsync(sessionId arg0, string arg1, objectId arg2, string arg3, object userState) {
            if ((this.findSystemPropertyByNameOperationCompleted == null)) {
                this.findSystemPropertyByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindSystemPropertyByNameOperationCompleted);
            }
            this.InvokeAsync("findSystemPropertyByName", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.findSystemPropertyByNameOperationCompleted, userState);
        }
        
        private void OnfindSystemPropertyByNameOperationCompleted(object arg) {
            if ((this.findSystemPropertyByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findSystemPropertyByNameCompleted(this, new findSystemPropertyByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void openPerspectiveOnDisplay(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6) {
            this.Invoke("openPerspectiveOnDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
        }
        
        /// <remarks/>
        public void openPerspectiveOnDisplayAsync(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6) {
            this.openPerspectiveOnDisplayAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void openPerspectiveOnDisplayAsync(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6, object userState) {
            if ((this.openPerspectiveOnDisplayOperationCompleted == null)) {
                this.openPerspectiveOnDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnopenPerspectiveOnDisplayOperationCompleted);
            }
            this.InvokeAsync("openPerspectiveOnDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.openPerspectiveOnDisplayOperationCompleted, userState);
        }
        
        private void OnopenPerspectiveOnDisplayOperationCompleted(object arg) {
            if ((this.openPerspectiveOnDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.openPerspectiveOnDisplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setWindowsInfo3(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] windowInfo3[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setWindowsInfo3", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setWindowsInfo3Async(sessionId arg0, objectId[] arg1, windowInfo3[] arg2, string[] arg3) {
            this.setWindowsInfo3Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setWindowsInfo3Async(sessionId arg0, objectId[] arg1, windowInfo3[] arg2, string[] arg3, object userState) {
            if ((this.setWindowsInfo3OperationCompleted == null)) {
                this.setWindowsInfo3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWindowsInfo3OperationCompleted);
            }
            this.InvokeAsync("setWindowsInfo3", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setWindowsInfo3OperationCompleted, userState);
        }
        
        private void OnsetWindowsInfo3OperationCompleted(object arg) {
            if ((this.setWindowsInfo3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWindowsInfo3Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public logoDecoratorDetail getLogoDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getLogoDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((logoDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getLogoDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getLogoDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getLogoDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getLogoDecoratorDetailOperationCompleted == null)) {
                this.getLogoDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLogoDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getLogoDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getLogoDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetLogoDecoratorDetailOperationCompleted(object arg) {
            if ((this.getLogoDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLogoDecoratorDetailCompleted(this, new getLogoDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setWindowsInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] windowInfo2[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setWindowsInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setWindowsInfo2Async(sessionId arg0, objectId[] arg1, windowInfo2[] arg2, string[] arg3) {
            this.setWindowsInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setWindowsInfo2Async(sessionId arg0, objectId[] arg1, windowInfo2[] arg2, string[] arg3, object userState) {
            if ((this.setWindowsInfo2OperationCompleted == null)) {
                this.setWindowsInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWindowsInfo2OperationCompleted);
            }
            this.InvokeAsync("setWindowsInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setWindowsInfo2OperationCompleted, userState);
        }
        
        private void OnsetWindowsInfo2OperationCompleted(object arg) {
            if ((this.setWindowsInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWindowsInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public localeInfo[] listLocalesSupportedByNGP(sessionId arg0) {
            object[] results = this.Invoke("listLocalesSupportedByNGP", new object[] {
                        arg0});
            return ((localeInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void listLocalesSupportedByNGPAsync(sessionId arg0) {
            this.listLocalesSupportedByNGPAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listLocalesSupportedByNGPAsync(sessionId arg0, object userState) {
            if ((this.listLocalesSupportedByNGPOperationCompleted == null)) {
                this.listLocalesSupportedByNGPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistLocalesSupportedByNGPOperationCompleted);
            }
            this.InvokeAsync("listLocalesSupportedByNGP", new object[] {
                        arg0}, this.listLocalesSupportedByNGPOperationCompleted, userState);
        }
        
        private void OnlistLocalesSupportedByNGPOperationCompleted(object arg) {
            if ((this.listLocalesSupportedByNGPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listLocalesSupportedByNGPCompleted(this, new listLocalesSupportedByNGPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unbindSystemProperty(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4) {
            this.Invoke("unbindSystemProperty", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
        }
        
        /// <remarks/>
        public void unbindSystemPropertyAsync(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4) {
            this.unbindSystemPropertyAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void unbindSystemPropertyAsync(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4, object userState) {
            if ((this.unbindSystemPropertyOperationCompleted == null)) {
                this.unbindSystemPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunbindSystemPropertyOperationCompleted);
            }
            this.InvokeAsync("unbindSystemProperty", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.unbindSystemPropertyOperationCompleted, userState);
        }
        
        private void OnunbindSystemPropertyOperationCompleted(object arg) {
            if ((this.unbindSystemPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unbindSystemPropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findSystemProperty(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findSystemProperty", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findSystemPropertyAsync(sessionId arg0, string arg1) {
            this.findSystemPropertyAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findSystemPropertyAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findSystemPropertyOperationCompleted == null)) {
                this.findSystemPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindSystemPropertyOperationCompleted);
            }
            this.InvokeAsync("findSystemProperty", new object[] {
                        arg0,
                        arg1}, this.findSystemPropertyOperationCompleted, userState);
        }
        
        private void OnfindSystemPropertyOperationCompleted(object arg) {
            if ((this.findSystemPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findSystemPropertyCompleted(this, new findSystemPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bringDecoratorToFront(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("bringDecoratorToFront", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void bringDecoratorToFrontAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.bringDecoratorToFrontAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void bringDecoratorToFrontAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.bringDecoratorToFrontOperationCompleted == null)) {
                this.bringDecoratorToFrontOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbringDecoratorToFrontOperationCompleted);
            }
            this.InvokeAsync("bringDecoratorToFront", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.bringDecoratorToFrontOperationCompleted, userState);
        }
        
        private void OnbringDecoratorToFrontOperationCompleted(object arg) {
            if ((this.bringDecoratorToFrontCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bringDecoratorToFrontCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeDisplets(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg2) {
            object[] results = this.Invoke("removeDisplets", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeDispletsAsync(sessionId arg0, objectId arg1, objectId[] arg2) {
            this.removeDispletsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void removeDispletsAsync(sessionId arg0, objectId arg1, objectId[] arg2, object userState) {
            if ((this.removeDispletsOperationCompleted == null)) {
                this.removeDispletsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveDispletsOperationCompleted);
            }
            this.InvokeAsync("removeDisplets", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.removeDispletsOperationCompleted, userState);
        }
        
        private void OnremoveDispletsOperationCompleted(object arg) {
            if ((this.removeDispletsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeDispletsCompleted(this, new removeDispletsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bindSession(sessionId arg0, string arg1) {
            this.Invoke("bindSession", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void bindSessionAsync(sessionId arg0, string arg1) {
            this.bindSessionAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void bindSessionAsync(sessionId arg0, string arg1, object userState) {
            if ((this.bindSessionOperationCompleted == null)) {
                this.bindSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbindSessionOperationCompleted);
            }
            this.InvokeAsync("bindSession", new object[] {
                        arg0,
                        arg1}, this.bindSessionOperationCompleted, userState);
        }
        
        private void OnbindSessionOperationCompleted(object arg) {
            if ((this.bindSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bindSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId findSystemVariable(sessionId arg0, string arg1) {
            object[] results = this.Invoke("findSystemVariable", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void findSystemVariableAsync(sessionId arg0, string arg1) {
            this.findSystemVariableAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findSystemVariableAsync(sessionId arg0, string arg1, object userState) {
            if ((this.findSystemVariableOperationCompleted == null)) {
                this.findSystemVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindSystemVariableOperationCompleted);
            }
            this.InvokeAsync("findSystemVariable", new object[] {
                        arg0,
                        arg1}, this.findSystemVariableOperationCompleted, userState);
        }
        
        private void OnfindSystemVariableOperationCompleted(object arg) {
            if ((this.findSystemVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findSystemVariableCompleted(this, new findSystemVariableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSystemProperty(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeSystemProperty", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeSystemPropertyAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeSystemPropertyAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeSystemPropertyAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeSystemPropertyOperationCompleted == null)) {
                this.unsubscribeSystemPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSystemPropertyOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSystemProperty", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeSystemPropertyOperationCompleted, userState);
        }
        
        private void OnunsubscribeSystemPropertyOperationCompleted(object arg) {
            if ((this.unsubscribeSystemPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSystemPropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getDisplets(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDisplets", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getDispletsAsync(sessionId arg0, objectId arg1) {
            this.getDispletsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDispletsAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDispletsOperationCompleted == null)) {
                this.getDispletsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDispletsOperationCompleted);
            }
            this.InvokeAsync("getDisplets", new object[] {
                        arg0,
                        arg1}, this.getDispletsOperationCompleted, userState);
        }
        
        private void OngetDispletsOperationCompleted(object arg) {
            if ((this.getDispletsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDispletsCompleted(this, new getDispletsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] copyDecorators(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("copyDecorators", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void copyDecoratorsAsync(sessionId arg0, objectId[] arg1) {
            this.copyDecoratorsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyDecoratorsAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.copyDecoratorsOperationCompleted == null)) {
                this.copyDecoratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyDecoratorsOperationCompleted);
            }
            this.InvokeAsync("copyDecorators", new object[] {
                        arg0,
                        arg1}, this.copyDecoratorsOperationCompleted, userState);
        }
        
        private void OncopyDecoratorsOperationCompleted(object arg) {
            if ((this.copyDecoratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyDecoratorsCompleted(this, new copyDecoratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public windowWrapper[] listAllWindows(sessionId arg0) {
            object[] results = this.Invoke("listAllWindows", new object[] {
                        arg0});
            return ((windowWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllWindowsAsync(sessionId arg0) {
            this.listAllWindowsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllWindowsAsync(sessionId arg0, object userState) {
            if ((this.listAllWindowsOperationCompleted == null)) {
                this.listAllWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllWindowsOperationCompleted);
            }
            this.InvokeAsync("listAllWindows", new object[] {
                        arg0}, this.listAllWindowsOperationCompleted, userState);
        }
        
        private void OnlistAllWindowsOperationCompleted(object arg) {
            if ((this.listAllWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllWindowsCompleted(this, new listAllWindowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchGroups(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchGroups", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchGroupsAsync(sessionId arg0, string arg1) {
            this.searchGroupsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchGroupsAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchGroupsOperationCompleted == null)) {
                this.searchGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchGroupsOperationCompleted);
            }
            this.InvokeAsync("searchGroups", new object[] {
                        arg0,
                        arg1}, this.searchGroupsOperationCompleted, userState);
        }
        
        private void OnsearchGroupsOperationCompleted(object arg) {
            if ((this.searchGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchGroupsCompleted(this, new searchGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllSquidModeConfigurations(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllSquidModeConfigurations", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllSquidModeConfigurationsAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllSquidModeConfigurationsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllSquidModeConfigurationsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllSquidModeConfigurationsOperationCompleted == null)) {
                this.subscribeAllSquidModeConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllSquidModeConfigurationsOperationCompleted);
            }
            this.InvokeAsync("subscribeAllSquidModeConfigurations", new object[] {
                        arg0,
                        arg1}, this.subscribeAllSquidModeConfigurationsOperationCompleted, userState);
        }
        
        private void OnsubscribeAllSquidModeConfigurationsOperationCompleted(object arg) {
            if ((this.subscribeAllSquidModeConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllSquidModeConfigurationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public decoratorInfo getDecoratorInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDecoratorInfo", new object[] {
                        arg0,
                        arg1});
            return ((decoratorInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getDecoratorInfoAsync(sessionId arg0, objectId arg1) {
            this.getDecoratorInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDecoratorInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDecoratorInfoOperationCompleted == null)) {
                this.getDecoratorInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDecoratorInfoOperationCompleted);
            }
            this.InvokeAsync("getDecoratorInfo", new object[] {
                        arg0,
                        arg1}, this.getDecoratorInfoOperationCompleted, userState);
        }
        
        private void OngetDecoratorInfoOperationCompleted(object arg) {
            if ((this.getDecoratorInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDecoratorInfoCompleted(this, new getDecoratorInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listWindows(sessionId arg0) {
            object[] results = this.Invoke("listWindows", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listWindowsAsync(sessionId arg0) {
            this.listWindowsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listWindowsAsync(sessionId arg0, object userState) {
            if ((this.listWindowsOperationCompleted == null)) {
                this.listWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistWindowsOperationCompleted);
            }
            this.InvokeAsync("listWindows", new object[] {
                        arg0}, this.listWindowsOperationCompleted, userState);
        }
        
        private void OnlistWindowsOperationCompleted(object arg) {
            if ((this.listWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listWindowsCompleted(this, new listWindowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public applicationInfo[] getApplicationsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getApplicationsInfo", new object[] {
                        arg0,
                        arg1});
            return ((applicationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getApplicationsInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getApplicationsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getApplicationsInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getApplicationsInfoOperationCompleted == null)) {
                this.getApplicationsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplicationsInfoOperationCompleted);
            }
            this.InvokeAsync("getApplicationsInfo", new object[] {
                        arg0,
                        arg1}, this.getApplicationsInfoOperationCompleted, userState);
        }
        
        private void OngetApplicationsInfoOperationCompleted(object arg) {
            if ((this.getApplicationsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplicationsInfoCompleted(this, new getApplicationsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribePerspectivePool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribePerspectivePool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribePerspectivePoolAsync(sessionId arg0, string[] arg1) {
            this.unsubscribePerspectivePoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribePerspectivePoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribePerspectivePoolOperationCompleted == null)) {
                this.unsubscribePerspectivePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribePerspectivePoolOperationCompleted);
            }
            this.InvokeAsync("unsubscribePerspectivePool", new object[] {
                        arg0,
                        arg1}, this.unsubscribePerspectivePoolOperationCompleted, userState);
        }
        
        private void OnunsubscribePerspectivePoolOperationCompleted(object arg) {
            if ((this.unsubscribePerspectivePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribePerspectivePoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setConfigurationsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] configurationInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setConfigurationsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setConfigurationsInfoAsync(sessionId arg0, objectId[] arg1, configurationInfo[] arg2, string[] arg3) {
            this.setConfigurationsInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setConfigurationsInfoAsync(sessionId arg0, objectId[] arg1, configurationInfo[] arg2, string[] arg3, object userState) {
            if ((this.setConfigurationsInfoOperationCompleted == null)) {
                this.setConfigurationsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetConfigurationsInfoOperationCompleted);
            }
            this.InvokeAsync("setConfigurationsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setConfigurationsInfoOperationCompleted, userState);
        }
        
        private void OnsetConfigurationsInfoOperationCompleted(object arg) {
            if ((this.setConfigurationsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setConfigurationsInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createBorderDecoratorTemplate(sessionId arg0, decoratorInfo arg1, borderDecoratorDetail arg2) {
            object[] results = this.Invoke("createBorderDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createBorderDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, borderDecoratorDetail arg2) {
            this.createBorderDecoratorTemplateAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createBorderDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, borderDecoratorDetail arg2, object userState) {
            if ((this.createBorderDecoratorTemplateOperationCompleted == null)) {
                this.createBorderDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateBorderDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("createBorderDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createBorderDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OncreateBorderDecoratorTemplateOperationCompleted(object arg) {
            if ((this.createBorderDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createBorderDecoratorTemplateCompleted(this, new createBorderDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId addSourceRoutingConfig(sessionId arg0, sourceRoutingConfigInfo arg1) {
            object[] results = this.Invoke("addSourceRoutingConfig", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void addSourceRoutingConfigAsync(sessionId arg0, sourceRoutingConfigInfo arg1) {
            this.addSourceRoutingConfigAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void addSourceRoutingConfigAsync(sessionId arg0, sourceRoutingConfigInfo arg1, object userState) {
            if ((this.addSourceRoutingConfigOperationCompleted == null)) {
                this.addSourceRoutingConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSourceRoutingConfigOperationCompleted);
            }
            this.InvokeAsync("addSourceRoutingConfig", new object[] {
                        arg0,
                        arg1}, this.addSourceRoutingConfigOperationCompleted, userState);
        }
        
        private void OnaddSourceRoutingConfigOperationCompleted(object arg) {
            if ((this.addSourceRoutingConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSourceRoutingConfigCompleted(this, new addSourceRoutingConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool removeUser(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("removeUser", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeUserAsync(sessionId arg0, objectId arg1) {
            this.removeUserAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeUserAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.removeUserOperationCompleted == null)) {
                this.removeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUserOperationCompleted);
            }
            this.InvokeAsync("removeUser", new object[] {
                        arg0,
                        arg1}, this.removeUserOperationCompleted, userState);
        }
        
        private void OnremoveUserOperationCompleted(object arg) {
            if ((this.removeUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUserCompleted(this, new removeUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setVideoSourcesDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] videoSourceDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setVideoSourcesDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setVideoSourcesDetailAsync(sessionId arg0, objectId[] arg1, videoSourceDetail[] arg2, string[] arg3) {
            this.setVideoSourcesDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setVideoSourcesDetailAsync(sessionId arg0, objectId[] arg1, videoSourceDetail[] arg2, string[] arg3, object userState) {
            if ((this.setVideoSourcesDetailOperationCompleted == null)) {
                this.setVideoSourcesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetVideoSourcesDetailOperationCompleted);
            }
            this.InvokeAsync("setVideoSourcesDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setVideoSourcesDetailOperationCompleted, userState);
        }
        
        private void OnsetVideoSourcesDetailOperationCompleted(object arg) {
            if ((this.setVideoSourcesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setVideoSourcesDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public sourceInfo2 getSourceInfo2(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSourceInfo2", new object[] {
                        arg0,
                        arg1});
            return ((sourceInfo2)(results[0]));
        }
        
        /// <remarks/>
        public void getSourceInfo2Async(sessionId arg0, objectId arg1) {
            this.getSourceInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSourceInfo2Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSourceInfo2OperationCompleted == null)) {
                this.getSourceInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourceInfo2OperationCompleted);
            }
            this.InvokeAsync("getSourceInfo2", new object[] {
                        arg0,
                        arg1}, this.getSourceInfo2OperationCompleted, userState);
        }
        
        private void OngetSourceInfo2OperationCompleted(object arg) {
            if ((this.getSourceInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourceInfo2Completed(this, new getSourceInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSystemPropertyInfo(sessionId arg0, objectId arg1, systemPropertyInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSystemPropertyInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSystemPropertyInfoAsync(sessionId arg0, objectId arg1, systemPropertyInfo arg2, string[] arg3) {
            this.setSystemPropertyInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSystemPropertyInfoAsync(sessionId arg0, objectId arg1, systemPropertyInfo arg2, string[] arg3, object userState) {
            if ((this.setSystemPropertyInfoOperationCompleted == null)) {
                this.setSystemPropertyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSystemPropertyInfoOperationCompleted);
            }
            this.InvokeAsync("setSystemPropertyInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSystemPropertyInfoOperationCompleted, userState);
        }
        
        private void OnsetSystemPropertyInfoOperationCompleted(object arg) {
            if ((this.setSystemPropertyInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSystemPropertyInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAll(sessionId arg0) {
            this.Invoke("unsubscribeAll", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void unsubscribeAllAsync(sessionId arg0) {
            this.unsubscribeAllAsync(arg0, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllAsync(sessionId arg0, object userState) {
            if ((this.unsubscribeAllOperationCompleted == null)) {
                this.unsubscribeAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAll", new object[] {
                        arg0}, this.unsubscribeAllOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllOperationCompleted(object arg) {
            if ((this.unsubscribeAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void changeUserPassword(sessionId arg0, string arg1, string arg2, string arg3) {
            this.Invoke("changeUserPassword", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void changeUserPasswordAsync(sessionId arg0, string arg1, string arg2, string arg3) {
            this.changeUserPasswordAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void changeUserPasswordAsync(sessionId arg0, string arg1, string arg2, string arg3, object userState) {
            if ((this.changeUserPasswordOperationCompleted == null)) {
                this.changeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("changeUserPassword", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.changeUserPasswordOperationCompleted, userState);
        }
        
        private void OnchangeUserPasswordOperationCompleted(object arg) {
            if ((this.changeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeUserPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public groupInfo[] getGroupsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getGroupsInfo", new object[] {
                        arg0,
                        arg1});
            return ((groupInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getGroupsInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getGroupsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getGroupsInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getGroupsInfoOperationCompleted == null)) {
                this.getGroupsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupsInfoOperationCompleted);
            }
            this.InvokeAsync("getGroupsInfo", new object[] {
                        arg0,
                        arg1}, this.getGroupsInfoOperationCompleted, userState);
        }
        
        private void OngetGroupsInfoOperationCompleted(object arg) {
            if ((this.getGroupsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupsInfoCompleted(this, new getGroupsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void exportFile(sessionId arg0, string arg1) {
            this.Invoke("exportFile", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void exportFileAsync(sessionId arg0, string arg1) {
            this.exportFileAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void exportFileAsync(sessionId arg0, string arg1, object userState) {
            if ((this.exportFileOperationCompleted == null)) {
                this.exportFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportFileOperationCompleted);
            }
            this.InvokeAsync("exportFile", new object[] {
                        arg0,
                        arg1}, this.exportFileOperationCompleted, userState);
        }
        
        private void OnexportFileOperationCompleted(object arg) {
            if ((this.exportFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setExternalWindowDetail(sessionId arg0, objectId arg1, externalWindowDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setExternalWindowDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setExternalWindowDetailAsync(sessionId arg0, objectId arg1, externalWindowDetail arg2, string[] arg3) {
            this.setExternalWindowDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setExternalWindowDetailAsync(sessionId arg0, objectId arg1, externalWindowDetail arg2, string[] arg3, object userState) {
            if ((this.setExternalWindowDetailOperationCompleted == null)) {
                this.setExternalWindowDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetExternalWindowDetailOperationCompleted);
            }
            this.InvokeAsync("setExternalWindowDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setExternalWindowDetailOperationCompleted, userState);
        }
        
        private void OnsetExternalWindowDetailOperationCompleted(object arg) {
            if ((this.setExternalWindowDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setExternalWindowDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getSharedApplications(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSharedApplications", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getSharedApplicationsAsync(sessionId arg0, objectId arg1) {
            this.getSharedApplicationsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSharedApplicationsAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSharedApplicationsOperationCompleted == null)) {
                this.getSharedApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSharedApplicationsOperationCompleted);
            }
            this.InvokeAsync("getSharedApplications", new object[] {
                        arg0,
                        arg1}, this.getSharedApplicationsOperationCompleted, userState);
        }
        
        private void OngetSharedApplicationsOperationCompleted(object arg) {
            if ((this.getSharedApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSharedApplicationsCompleted(this, new getSharedApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeSource(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeSource", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeSourceAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeSourceAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeSourceAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeSourceOperationCompleted == null)) {
                this.unsubscribeSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeSourceOperationCompleted);
            }
            this.InvokeAsync("unsubscribeSource", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeSourceOperationCompleted, userState);
        }
        
        private void OnunsubscribeSourceOperationCompleted(object arg) {
            if ((this.unsubscribeSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeSourceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sourceRoutingConfigWrapper[] listAllSourceRoutingConfigs(sessionId arg0) {
            object[] results = this.Invoke("listAllSourceRoutingConfigs", new object[] {
                        arg0});
            return ((sourceRoutingConfigWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllSourceRoutingConfigsAsync(sessionId arg0) {
            this.listAllSourceRoutingConfigsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllSourceRoutingConfigsAsync(sessionId arg0, object userState) {
            if ((this.listAllSourceRoutingConfigsOperationCompleted == null)) {
                this.listAllSourceRoutingConfigsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllSourceRoutingConfigsOperationCompleted);
            }
            this.InvokeAsync("listAllSourceRoutingConfigs", new object[] {
                        arg0}, this.listAllSourceRoutingConfigsOperationCompleted, userState);
        }
        
        private void OnlistAllSourceRoutingConfigsOperationCompleted(object arg) {
            if ((this.listAllSourceRoutingConfigsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllSourceRoutingConfigsCompleted(this, new listAllSourceRoutingConfigsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateVideoTemplateURL(sessionId arg0, string arg1, string arg2) {
            this.Invoke("updateVideoTemplateURL", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void updateVideoTemplateURLAsync(sessionId arg0, string arg1, string arg2) {
            this.updateVideoTemplateURLAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void updateVideoTemplateURLAsync(sessionId arg0, string arg1, string arg2, object userState) {
            if ((this.updateVideoTemplateURLOperationCompleted == null)) {
                this.updateVideoTemplateURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateVideoTemplateURLOperationCompleted);
            }
            this.InvokeAsync("updateVideoTemplateURL", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updateVideoTemplateURLOperationCompleted, userState);
        }
        
        private void OnupdateVideoTemplateURLOperationCompleted(object arg) {
            if ((this.updateVideoTemplateURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateVideoTemplateURLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sendWindowBackward(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("sendWindowBackward", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void sendWindowBackwardAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.sendWindowBackwardAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void sendWindowBackwardAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.sendWindowBackwardOperationCompleted == null)) {
                this.sendWindowBackwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendWindowBackwardOperationCompleted);
            }
            this.InvokeAsync("sendWindowBackward", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.sendWindowBackwardOperationCompleted, userState);
        }
        
        private void OnsendWindowBackwardOperationCompleted(object arg) {
            if ((this.sendWindowBackwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendWindowBackwardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createStatusBorderDecoratorTemplate(sessionId arg0, decoratorInfo arg1, statusBorderDecoratorDetail arg2) {
            object[] results = this.Invoke("createStatusBorderDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createStatusBorderDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, statusBorderDecoratorDetail arg2) {
            this.createStatusBorderDecoratorTemplateAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createStatusBorderDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, statusBorderDecoratorDetail arg2, object userState) {
            if ((this.createStatusBorderDecoratorTemplateOperationCompleted == null)) {
                this.createStatusBorderDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStatusBorderDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("createStatusBorderDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createStatusBorderDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OncreateStatusBorderDecoratorTemplateOperationCompleted(object arg) {
            if ((this.createStatusBorderDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStatusBorderDecoratorTemplateCompleted(this, new createStatusBorderDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getSharedPerspectives(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSharedPerspectives", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getSharedPerspectivesAsync(sessionId arg0, objectId arg1) {
            this.getSharedPerspectivesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSharedPerspectivesAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSharedPerspectivesOperationCompleted == null)) {
                this.getSharedPerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSharedPerspectivesOperationCompleted);
            }
            this.InvokeAsync("getSharedPerspectives", new object[] {
                        arg0,
                        arg1}, this.getSharedPerspectivesOperationCompleted, userState);
        }
        
        private void OngetSharedPerspectivesOperationCompleted(object arg) {
            if ((this.getSharedPerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSharedPerspectivesCompleted(this, new getSharedPerspectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listSources(sessionId arg0) {
            object[] results = this.Invoke("listSources", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listSourcesAsync(sessionId arg0) {
            this.listSourcesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listSourcesAsync(sessionId arg0, object userState) {
            if ((this.listSourcesOperationCompleted == null)) {
                this.listSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistSourcesOperationCompleted);
            }
            this.InvokeAsync("listSources", new object[] {
                        arg0}, this.listSourcesOperationCompleted, userState);
        }
        
        private void OnlistSourcesOperationCompleted(object arg) {
            if ((this.listSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listSourcesCompleted(this, new listSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSourcePool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeSourcePool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeSourcePoolAsync(sessionId arg0, string[] arg1) {
            this.subscribeSourcePoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeSourcePoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeSourcePoolOperationCompleted == null)) {
                this.subscribeSourcePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSourcePoolOperationCompleted);
            }
            this.InvokeAsync("subscribeSourcePool", new object[] {
                        arg0,
                        arg1}, this.subscribeSourcePoolOperationCompleted, userState);
        }
        
        private void OnsubscribeSourcePoolOperationCompleted(object arg) {
            if ((this.subscribeSourcePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSourcePoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeTilers(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeTilers", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeTilersAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribeTilersAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeTilersAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribeTilersOperationCompleted == null)) {
                this.subscribeTilersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeTilersOperationCompleted);
            }
            this.InvokeAsync("subscribeTilers", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeTilersOperationCompleted, userState);
        }
        
        private void OnsubscribeTilersOperationCompleted(object arg) {
            if ((this.subscribeTilersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeTilersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bindSystemProperty(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4) {
            this.Invoke("bindSystemProperty", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
        }
        
        /// <remarks/>
        public void bindSystemPropertyAsync(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4) {
            this.bindSystemPropertyAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void bindSystemPropertyAsync(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4, object userState) {
            if ((this.bindSystemPropertyOperationCompleted == null)) {
                this.bindSystemPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbindSystemPropertyOperationCompleted);
            }
            this.InvokeAsync("bindSystemProperty", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.bindSystemPropertyOperationCompleted, userState);
        }
        
        private void OnbindSystemPropertyOperationCompleted(object arg) {
            if ((this.bindSystemPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bindSystemPropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public systemVariableInfo getSystemVariableInfo2(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSystemVariableInfo2", new object[] {
                        arg0,
                        arg1});
            return ((systemVariableInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemVariableInfo2Async(sessionId arg0, objectId arg1) {
            this.getSystemVariableInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSystemVariableInfo2Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSystemVariableInfo2OperationCompleted == null)) {
                this.getSystemVariableInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemVariableInfo2OperationCompleted);
            }
            this.InvokeAsync("getSystemVariableInfo2", new object[] {
                        arg0,
                        arg1}, this.getSystemVariableInfo2OperationCompleted, userState);
        }
        
        private void OngetSystemVariableInfo2OperationCompleted(object arg) {
            if ((this.getSystemVariableInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemVariableInfo2Completed(this, new getSystemVariableInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setUserInfo(sessionId arg0, objectId arg1, userInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setUserInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setUserInfoAsync(sessionId arg0, objectId arg1, userInfo arg2, string[] arg3) {
            this.setUserInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setUserInfoAsync(sessionId arg0, objectId arg1, userInfo arg2, string[] arg3, object userState) {
            if ((this.setUserInfoOperationCompleted == null)) {
                this.setUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUserInfoOperationCompleted);
            }
            this.InvokeAsync("setUserInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setUserInfoOperationCompleted, userState);
        }
        
        private void OnsetUserInfoOperationCompleted(object arg) {
            if ((this.setUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUserInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createDisplay2(sessionId arg0, string arg1, string arg2, string arg3) {
            object[] results = this.Invoke("createDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createDisplay2Async(sessionId arg0, string arg1, string arg2, string arg3) {
            this.createDisplay2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createDisplay2Async(sessionId arg0, string arg1, string arg2, string arg3, object userState) {
            if ((this.createDisplay2OperationCompleted == null)) {
                this.createDisplay2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDisplay2OperationCompleted);
            }
            this.InvokeAsync("createDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createDisplay2OperationCompleted, userState);
        }
        
        private void OncreateDisplay2OperationCompleted(object arg) {
            if ((this.createDisplay2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDisplay2Completed(this, new createDisplay2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setDispletInfo(sessionId arg0, objectId arg1, displetInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setDispletInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setDispletInfoAsync(sessionId arg0, objectId arg1, displetInfo arg2, string[] arg3) {
            this.setDispletInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setDispletInfoAsync(sessionId arg0, objectId arg1, displetInfo arg2, string[] arg3, object userState) {
            if ((this.setDispletInfoOperationCompleted == null)) {
                this.setDispletInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDispletInfoOperationCompleted);
            }
            this.InvokeAsync("setDispletInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setDispletInfoOperationCompleted, userState);
        }
        
        private void OnsetDispletInfoOperationCompleted(object arg) {
            if ((this.setDispletInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDispletInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public configurationInfo getConfigurationInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getConfigurationInfo", new object[] {
                        arg0,
                        arg1});
            return ((configurationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getConfigurationInfoAsync(sessionId arg0, objectId arg1) {
            this.getConfigurationInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getConfigurationInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getConfigurationInfoOperationCompleted == null)) {
                this.getConfigurationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConfigurationInfoOperationCompleted);
            }
            this.InvokeAsync("getConfigurationInfo", new object[] {
                        arg0,
                        arg1}, this.getConfigurationInfoOperationCompleted, userState);
        }
        
        private void OngetConfigurationInfoOperationCompleted(object arg) {
            if ((this.getConfigurationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConfigurationInfoCompleted(this, new getConfigurationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displetWrapper[] listAllDisplets(sessionId arg0) {
            object[] results = this.Invoke("listAllDisplets", new object[] {
                        arg0});
            return ((displetWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllDispletsAsync(sessionId arg0) {
            this.listAllDispletsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllDispletsAsync(sessionId arg0, object userState) {
            if ((this.listAllDispletsOperationCompleted == null)) {
                this.listAllDispletsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllDispletsOperationCompleted);
            }
            this.InvokeAsync("listAllDisplets", new object[] {
                        arg0}, this.listAllDispletsOperationCompleted, userState);
        }
        
        private void OnlistAllDispletsOperationCompleted(object arg) {
            if ((this.listAllDispletsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllDispletsCompleted(this, new listAllDispletsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listDisplays(sessionId arg0) {
            object[] results = this.Invoke("listDisplays", new object[] {
                        arg0});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listDisplaysAsync(sessionId arg0) {
            this.listDisplaysAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listDisplaysAsync(sessionId arg0, object userState) {
            if ((this.listDisplaysOperationCompleted == null)) {
                this.listDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistDisplaysOperationCompleted);
            }
            this.InvokeAsync("listDisplays", new object[] {
                        arg0}, this.listDisplaysOperationCompleted, userState);
        }
        
        private void OnlistDisplaysOperationCompleted(object arg) {
            if ((this.listDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listDisplaysCompleted(this, new listDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSystemVariableInfo(sessionId arg0, objectId arg1, systemVariableInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSystemVariableInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSystemVariableInfoAsync(sessionId arg0, objectId arg1, systemVariableInfo arg2, string[] arg3) {
            this.setSystemVariableInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSystemVariableInfoAsync(sessionId arg0, objectId arg1, systemVariableInfo arg2, string[] arg3, object userState) {
            if ((this.setSystemVariableInfoOperationCompleted == null)) {
                this.setSystemVariableInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSystemVariableInfoOperationCompleted);
            }
            this.InvokeAsync("setSystemVariableInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSystemVariableInfoOperationCompleted, userState);
        }
        
        private void OnsetSystemVariableInfoOperationCompleted(object arg) {
            if ((this.setSystemVariableInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSystemVariableInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setScreenScrapeSourceDetail2(sessionId arg0, objectId arg1, screenScrapeSourceDetail2 arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setScreenScrapeSourceDetail2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setScreenScrapeSourceDetail2Async(sessionId arg0, objectId arg1, screenScrapeSourceDetail2 arg2, string[] arg3) {
            this.setScreenScrapeSourceDetail2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setScreenScrapeSourceDetail2Async(sessionId arg0, objectId arg1, screenScrapeSourceDetail2 arg2, string[] arg3, object userState) {
            if ((this.setScreenScrapeSourceDetail2OperationCompleted == null)) {
                this.setScreenScrapeSourceDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetScreenScrapeSourceDetail2OperationCompleted);
            }
            this.InvokeAsync("setScreenScrapeSourceDetail2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setScreenScrapeSourceDetail2OperationCompleted, userState);
        }
        
        private void OnsetScreenScrapeSourceDetail2OperationCompleted(object arg) {
            if ((this.setScreenScrapeSourceDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setScreenScrapeSourceDetail2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public windowInfo2 getWindowInfo2(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getWindowInfo2", new object[] {
                        arg0,
                        arg1});
            return ((windowInfo2)(results[0]));
        }
        
        /// <remarks/>
        public void getWindowInfo2Async(sessionId arg0, objectId arg1) {
            this.getWindowInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getWindowInfo2Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getWindowInfo2OperationCompleted == null)) {
                this.getWindowInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWindowInfo2OperationCompleted);
            }
            this.InvokeAsync("getWindowInfo2", new object[] {
                        arg0,
                        arg1}, this.getWindowInfo2OperationCompleted, userState);
        }
        
        private void OngetWindowInfo2OperationCompleted(object arg) {
            if ((this.getWindowInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWindowInfo2Completed(this, new getWindowInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public windowInfo3 getWindowInfo3(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getWindowInfo3", new object[] {
                        arg0,
                        arg1});
            return ((windowInfo3)(results[0]));
        }
        
        /// <remarks/>
        public void getWindowInfo3Async(sessionId arg0, objectId arg1) {
            this.getWindowInfo3Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getWindowInfo3Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getWindowInfo3OperationCompleted == null)) {
                this.getWindowInfo3OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWindowInfo3OperationCompleted);
            }
            this.InvokeAsync("getWindowInfo3", new object[] {
                        arg0,
                        arg1}, this.getWindowInfo3OperationCompleted, userState);
        }
        
        private void OngetWindowInfo3OperationCompleted(object arg) {
            if ((this.getWindowInfo3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWindowInfo3Completed(this, new getWindowInfo3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createWebSource2(sessionId arg0, sourceInfo2 arg1, webSourceDetail arg2) {
            object[] results = this.Invoke("createWebSource2", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createWebSource2Async(sessionId arg0, sourceInfo2 arg1, webSourceDetail arg2) {
            this.createWebSource2Async(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createWebSource2Async(sessionId arg0, sourceInfo2 arg1, webSourceDetail arg2, object userState) {
            if ((this.createWebSource2OperationCompleted == null)) {
                this.createWebSource2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateWebSource2OperationCompleted);
            }
            this.InvokeAsync("createWebSource2", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createWebSource2OperationCompleted, userState);
        }
        
        private void OncreateWebSource2OperationCompleted(object arg) {
            if ((this.createWebSource2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createWebSource2Completed(this, new createWebSource2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setImageDecoratorDetail(sessionId arg0, objectId arg1, imageDecoratorDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setImageDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setImageDecoratorDetailAsync(sessionId arg0, objectId arg1, imageDecoratorDetail arg2, string[] arg3) {
            this.setImageDecoratorDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setImageDecoratorDetailAsync(sessionId arg0, objectId arg1, imageDecoratorDetail arg2, string[] arg3, object userState) {
            if ((this.setImageDecoratorDetailOperationCompleted == null)) {
                this.setImageDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetImageDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("setImageDecoratorDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setImageDecoratorDetailOperationCompleted, userState);
        }
        
        private void OnsetImageDecoratorDetailOperationCompleted(object arg) {
            if ((this.setImageDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setImageDecoratorDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void saveSnapshot(sessionId arg0, objectId arg1, string arg2, string arg3) {
            this.Invoke("saveSnapshot", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void saveSnapshotAsync(sessionId arg0, objectId arg1, string arg2, string arg3) {
            this.saveSnapshotAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void saveSnapshotAsync(sessionId arg0, objectId arg1, string arg2, string arg3, object userState) {
            if ((this.saveSnapshotOperationCompleted == null)) {
                this.saveSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSnapshotOperationCompleted);
            }
            this.InvokeAsync("saveSnapshot", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.saveSnapshotOperationCompleted, userState);
        }
        
        private void OnsaveSnapshotOperationCompleted(object arg) {
            if ((this.saveSnapshotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSnapshotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setVideoAndAudioDefaultSettingInfo(sessionId arg0, videoAndAudioDefaultSettingsInfo arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("setVideoAndAudioDefaultSettingInfo", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void setVideoAndAudioDefaultSettingInfoAsync(sessionId arg0, videoAndAudioDefaultSettingsInfo arg1, string[] arg2) {
            this.setVideoAndAudioDefaultSettingInfoAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setVideoAndAudioDefaultSettingInfoAsync(sessionId arg0, videoAndAudioDefaultSettingsInfo arg1, string[] arg2, object userState) {
            if ((this.setVideoAndAudioDefaultSettingInfoOperationCompleted == null)) {
                this.setVideoAndAudioDefaultSettingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetVideoAndAudioDefaultSettingInfoOperationCompleted);
            }
            this.InvokeAsync("setVideoAndAudioDefaultSettingInfo", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setVideoAndAudioDefaultSettingInfoOperationCompleted, userState);
        }
        
        private void OnsetVideoAndAudioDefaultSettingInfoOperationCompleted(object arg) {
            if ((this.setVideoAndAudioDefaultSettingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setVideoAndAudioDefaultSettingInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSourceInfo(sessionId arg0, objectId arg1, sourceInfo arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSourceInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSourceInfoAsync(sessionId arg0, objectId arg1, sourceInfo arg2, string[] arg3) {
            this.setSourceInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSourceInfoAsync(sessionId arg0, objectId arg1, sourceInfo arg2, string[] arg3, object userState) {
            if ((this.setSourceInfoOperationCompleted == null)) {
                this.setSourceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSourceInfoOperationCompleted);
            }
            this.InvokeAsync("setSourceInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSourceInfoOperationCompleted, userState);
        }
        
        private void OnsetSourceInfoOperationCompleted(object arg) {
            if ((this.setSourceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSourceInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool forceRemoveRole(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("forceRemoveRole", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveRoleAsync(sessionId arg0, objectId arg1) {
            this.forceRemoveRoleAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveRoleAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.forceRemoveRoleOperationCompleted == null)) {
                this.forceRemoveRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveRoleOperationCompleted);
            }
            this.InvokeAsync("forceRemoveRole", new object[] {
                        arg0,
                        arg1}, this.forceRemoveRoleOperationCompleted, userState);
        }
        
        private void OnforceRemoveRoleOperationCompleted(object arg) {
            if ((this.forceRemoveRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveRoleCompleted(this, new forceRemoveRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void openPerspectiveOnDisplay2(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6) {
            this.Invoke("openPerspectiveOnDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
        }
        
        /// <remarks/>
        public void openPerspectiveOnDisplay2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6) {
            this.openPerspectiveOnDisplay2Async(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void openPerspectiveOnDisplay2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6, object userState) {
            if ((this.openPerspectiveOnDisplay2OperationCompleted == null)) {
                this.openPerspectiveOnDisplay2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnopenPerspectiveOnDisplay2OperationCompleted);
            }
            this.InvokeAsync("openPerspectiveOnDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.openPerspectiveOnDisplay2OperationCompleted, userState);
        }
        
        private void OnopenPerspectiveOnDisplay2OperationCompleted(object arg) {
            if ((this.openPerspectiveOnDisplay2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.openPerspectiveOnDisplay2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getApplications(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getApplications", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getApplicationsAsync(sessionId arg0, objectId arg1) {
            this.getApplicationsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getApplicationsAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getApplicationsOperationCompleted == null)) {
                this.getApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplicationsOperationCompleted);
            }
            this.InvokeAsync("getApplications", new object[] {
                        arg0,
                        arg1}, this.getApplicationsOperationCompleted, userState);
        }
        
        private void OngetApplicationsOperationCompleted(object arg) {
            if ((this.getApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplicationsCompleted(this, new getApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public staticTextDecoratorDetail[] getStaticTextDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getStaticTextDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((staticTextDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getStaticTextDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getStaticTextDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getStaticTextDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getStaticTextDecoratorsDetailOperationCompleted == null)) {
                this.getStaticTextDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStaticTextDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getStaticTextDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getStaticTextDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetStaticTextDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getStaticTextDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStaticTextDecoratorsDetailCompleted(this, new getStaticTextDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public roleWrapper[] listAllRoles(sessionId arg0) {
            object[] results = this.Invoke("listAllRoles", new object[] {
                        arg0});
            return ((roleWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllRolesAsync(sessionId arg0) {
            this.listAllRolesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllRolesAsync(sessionId arg0, object userState) {
            if ((this.listAllRolesOperationCompleted == null)) {
                this.listAllRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllRolesOperationCompleted);
            }
            this.InvokeAsync("listAllRoles", new object[] {
                        arg0}, this.listAllRolesOperationCompleted, userState);
        }
        
        private void OnlistAllRolesOperationCompleted(object arg) {
            if ((this.listAllRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllRolesCompleted(this, new listAllRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public displayInfo getDisplayInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getDisplayInfo", new object[] {
                        arg0,
                        arg1});
            return ((displayInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getDisplayInfoAsync(sessionId arg0, objectId arg1) {
            this.getDisplayInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDisplayInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getDisplayInfoOperationCompleted == null)) {
                this.getDisplayInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplayInfoOperationCompleted);
            }
            this.InvokeAsync("getDisplayInfo", new object[] {
                        arg0,
                        arg1}, this.getDisplayInfoOperationCompleted, userState);
        }
        
        private void OngetDisplayInfoOperationCompleted(object arg) {
            if ((this.getDisplayInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplayInfoCompleted(this, new getDisplayInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveAsUserTilingInPerspective2(sessionId arg0, objectId arg1, string arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] rectangleInfo[] arg3, dimensionInfo arg4) {
            object[] results = this.Invoke("saveAsUserTilingInPerspective2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveAsUserTilingInPerspective2Async(sessionId arg0, objectId arg1, string arg2, rectangleInfo[] arg3, dimensionInfo arg4) {
            this.saveAsUserTilingInPerspective2Async(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void saveAsUserTilingInPerspective2Async(sessionId arg0, objectId arg1, string arg2, rectangleInfo[] arg3, dimensionInfo arg4, object userState) {
            if ((this.saveAsUserTilingInPerspective2OperationCompleted == null)) {
                this.saveAsUserTilingInPerspective2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsUserTilingInPerspective2OperationCompleted);
            }
            this.InvokeAsync("saveAsUserTilingInPerspective2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.saveAsUserTilingInPerspective2OperationCompleted, userState);
        }
        
        private void OnsaveAsUserTilingInPerspective2OperationCompleted(object arg) {
            if ((this.saveAsUserTilingInPerspective2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsUserTilingInPerspective2Completed(this, new saveAsUserTilingInPerspective2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] listDisplaysByUserName(sessionId arg0, string arg1) {
            object[] results = this.Invoke("listDisplaysByUserName", new object[] {
                        arg0,
                        arg1});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listDisplaysByUserNameAsync(sessionId arg0, string arg1) {
            this.listDisplaysByUserNameAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listDisplaysByUserNameAsync(sessionId arg0, string arg1, object userState) {
            if ((this.listDisplaysByUserNameOperationCompleted == null)) {
                this.listDisplaysByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistDisplaysByUserNameOperationCompleted);
            }
            this.InvokeAsync("listDisplaysByUserName", new object[] {
                        arg0,
                        arg1}, this.listDisplaysByUserNameOperationCompleted, userState);
        }
        
        private void OnlistDisplaysByUserNameOperationCompleted(object arg) {
            if ((this.listDisplaysByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listDisplaysByUserNameCompleted(this, new listDisplaysByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId loginSystemUser(sessionId arg0, string arg1, string arg2) {
            object[] results = this.Invoke("loginSystemUser", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void loginSystemUserAsync(sessionId arg0, string arg1, string arg2) {
            this.loginSystemUserAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void loginSystemUserAsync(sessionId arg0, string arg1, string arg2, object userState) {
            if ((this.loginSystemUserOperationCompleted == null)) {
                this.loginSystemUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginSystemUserOperationCompleted);
            }
            this.InvokeAsync("loginSystemUser", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.loginSystemUserOperationCompleted, userState);
        }
        
        private void OnloginSystemUserOperationCompleted(object arg) {
            if ((this.loginSystemUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginSystemUserCompleted(this, new loginSystemUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSystemPropertiesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] systemPropertyInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSystemPropertiesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSystemPropertiesInfoAsync(sessionId arg0, objectId[] arg1, systemPropertyInfo[] arg2, string[] arg3) {
            this.setSystemPropertiesInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSystemPropertiesInfoAsync(sessionId arg0, objectId[] arg1, systemPropertyInfo[] arg2, string[] arg3, object userState) {
            if ((this.setSystemPropertiesInfoOperationCompleted == null)) {
                this.setSystemPropertiesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSystemPropertiesInfoOperationCompleted);
            }
            this.InvokeAsync("setSystemPropertiesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSystemPropertiesInfoOperationCompleted, userState);
        }
        
        private void OnsetSystemPropertiesInfoOperationCompleted(object arg) {
            if ((this.setSystemPropertiesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSystemPropertiesInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createAudioDecoratorTemplate(sessionId arg0, decoratorInfo arg1, audioDecoratorDetail arg2) {
            object[] results = this.Invoke("createAudioDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createAudioDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, audioDecoratorDetail arg2) {
            this.createAudioDecoratorTemplateAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createAudioDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, audioDecoratorDetail arg2, object userState) {
            if ((this.createAudioDecoratorTemplateOperationCompleted == null)) {
                this.createAudioDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAudioDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("createAudioDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createAudioDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OncreateAudioDecoratorTemplateOperationCompleted(object arg) {
            if ((this.createAudioDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAudioDecoratorTemplateCompleted(this, new createAudioDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bringWindowToFront(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("bringWindowToFront", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void bringWindowToFrontAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.bringWindowToFrontAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void bringWindowToFrontAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.bringWindowToFrontOperationCompleted == null)) {
                this.bringWindowToFrontOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbringWindowToFrontOperationCompleted);
            }
            this.InvokeAsync("bringWindowToFront", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.bringWindowToFrontOperationCompleted, userState);
        }
        
        private void OnbringWindowToFrontOperationCompleted(object arg) {
            if ((this.bringWindowToFrontCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bringWindowToFrontCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool forceRemoveTiler(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("forceRemoveTiler", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveTilerAsync(sessionId arg0, objectId arg1) {
            this.forceRemoveTilerAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveTilerAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.forceRemoveTilerOperationCompleted == null)) {
                this.forceRemoveTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveTilerOperationCompleted);
            }
            this.InvokeAsync("forceRemoveTiler", new object[] {
                        arg0,
                        arg1}, this.forceRemoveTilerOperationCompleted, userState);
        }
        
        private void OnforceRemoveTilerOperationCompleted(object arg) {
            if ((this.forceRemoveTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveTilerCompleted(this, new forceRemoveTilerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public moduleInfo getModuleInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getModuleInfo", new object[] {
                        arg0,
                        arg1});
            return ((moduleInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getModuleInfoAsync(sessionId arg0, objectId arg1) {
            this.getModuleInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getModuleInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getModuleInfoOperationCompleted == null)) {
                this.getModuleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetModuleInfoOperationCompleted);
            }
            this.InvokeAsync("getModuleInfo", new object[] {
                        arg0,
                        arg1}, this.getModuleInfoOperationCompleted, userState);
        }
        
        private void OngetModuleInfoOperationCompleted(object arg) {
            if ((this.getModuleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getModuleInfoCompleted(this, new getModuleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void saveAsDispletTemplate(sessionId arg0, objectId arg1) {
            this.Invoke("saveAsDispletTemplate", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void saveAsDispletTemplateAsync(sessionId arg0, objectId arg1) {
            this.saveAsDispletTemplateAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void saveAsDispletTemplateAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.saveAsDispletTemplateOperationCompleted == null)) {
                this.saveAsDispletTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsDispletTemplateOperationCompleted);
            }
            this.InvokeAsync("saveAsDispletTemplate", new object[] {
                        arg0,
                        arg1}, this.saveAsDispletTemplateOperationCompleted, userState);
        }
        
        private void OnsaveAsDispletTemplateOperationCompleted(object arg) {
            if ((this.saveAsDispletTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsDispletTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setWindowsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] windowInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setWindowsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setWindowsInfoAsync(sessionId arg0, objectId[] arg1, windowInfo[] arg2, string[] arg3) {
            this.setWindowsInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setWindowsInfoAsync(sessionId arg0, objectId[] arg1, windowInfo[] arg2, string[] arg3, object userState) {
            if ((this.setWindowsInfoOperationCompleted == null)) {
                this.setWindowsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWindowsInfoOperationCompleted);
            }
            this.InvokeAsync("setWindowsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setWindowsInfoOperationCompleted, userState);
        }
        
        private void OnsetWindowsInfoOperationCompleted(object arg) {
            if ((this.setWindowsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWindowsInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listOfSquidModeConfigs(sessionId arg0, string arg1) {
            object[] results = this.Invoke("listOfSquidModeConfigs", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfSquidModeConfigsAsync(sessionId arg0, string arg1) {
            this.listOfSquidModeConfigsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listOfSquidModeConfigsAsync(sessionId arg0, string arg1, object userState) {
            if ((this.listOfSquidModeConfigsOperationCompleted == null)) {
                this.listOfSquidModeConfigsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfSquidModeConfigsOperationCompleted);
            }
            this.InvokeAsync("listOfSquidModeConfigs", new object[] {
                        arg0,
                        arg1}, this.listOfSquidModeConfigsOperationCompleted, userState);
        }
        
        private void OnlistOfSquidModeConfigsOperationCompleted(object arg) {
            if ((this.listOfSquidModeConfigsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfSquidModeConfigsCompleted(this, new listOfSquidModeConfigsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeMessagePool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeMessagePool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeMessagePoolAsync(sessionId arg0, string[] arg1) {
            this.subscribeMessagePoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeMessagePoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeMessagePoolOperationCompleted == null)) {
                this.subscribeMessagePoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeMessagePoolOperationCompleted);
            }
            this.InvokeAsync("subscribeMessagePool", new object[] {
                        arg0,
                        arg1}, this.subscribeMessagePoolOperationCompleted, userState);
        }
        
        private void OnsubscribeMessagePoolOperationCompleted(object arg) {
            if ((this.subscribeMessagePoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeMessagePoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setPerspectiveWindowsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] perspectiveWindowDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setPerspectiveWindowsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setPerspectiveWindowsDetailAsync(sessionId arg0, objectId[] arg1, perspectiveWindowDetail[] arg2, string[] arg3) {
            this.setPerspectiveWindowsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setPerspectiveWindowsDetailAsync(sessionId arg0, objectId[] arg1, perspectiveWindowDetail[] arg2, string[] arg3, object userState) {
            if ((this.setPerspectiveWindowsDetailOperationCompleted == null)) {
                this.setPerspectiveWindowsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPerspectiveWindowsDetailOperationCompleted);
            }
            this.InvokeAsync("setPerspectiveWindowsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setPerspectiveWindowsDetailOperationCompleted, userState);
        }
        
        private void OnsetPerspectiveWindowsDetailOperationCompleted(object arg) {
            if ((this.setPerspectiveWindowsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPerspectiveWindowsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createApplication(sessionId arg0, objectId arg1, applicationInfo arg2) {
            object[] results = this.Invoke("createApplication", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createApplicationAsync(sessionId arg0, objectId arg1, applicationInfo arg2) {
            this.createApplicationAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createApplicationAsync(sessionId arg0, objectId arg1, applicationInfo arg2, object userState) {
            if ((this.createApplicationOperationCompleted == null)) {
                this.createApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateApplicationOperationCompleted);
            }
            this.InvokeAsync("createApplication", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createApplicationOperationCompleted, userState);
        }
        
        private void OncreateApplicationOperationCompleted(object arg) {
            if ((this.createApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createApplicationCompleted(this, new createApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId saveAsTilingInDisplay(sessionId arg0, objectId arg1, string arg2) {
            object[] results = this.Invoke("saveAsTilingInDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void saveAsTilingInDisplayAsync(sessionId arg0, objectId arg1, string arg2) {
            this.saveAsTilingInDisplayAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void saveAsTilingInDisplayAsync(sessionId arg0, objectId arg1, string arg2, object userState) {
            if ((this.saveAsTilingInDisplayOperationCompleted == null)) {
                this.saveAsTilingInDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAsTilingInDisplayOperationCompleted);
            }
            this.InvokeAsync("saveAsTilingInDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.saveAsTilingInDisplayOperationCompleted, userState);
        }
        
        private void OnsaveAsTilingInDisplayOperationCompleted(object arg) {
            if ((this.saveAsTilingInDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAsTilingInDisplayCompleted(this, new saveAsTilingInDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSourcesInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] sourceInfo2[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSourcesInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSourcesInfo2Async(sessionId arg0, objectId[] arg1, sourceInfo2[] arg2, string[] arg3) {
            this.setSourcesInfo2Async(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSourcesInfo2Async(sessionId arg0, objectId[] arg1, sourceInfo2[] arg2, string[] arg3, object userState) {
            if ((this.setSourcesInfo2OperationCompleted == null)) {
                this.setSourcesInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSourcesInfo2OperationCompleted);
            }
            this.InvokeAsync("setSourcesInfo2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSourcesInfo2OperationCompleted, userState);
        }
        
        private void OnsetSourcesInfo2OperationCompleted(object arg) {
            if ((this.setSourcesInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSourcesInfo2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createUser(sessionId arg0, string arg1) {
            object[] results = this.Invoke("createUser", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createUserAsync(sessionId arg0, string arg1) {
            this.createUserAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createUserAsync(sessionId arg0, string arg1, object userState) {
            if ((this.createUserOperationCompleted == null)) {
                this.createUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateUserOperationCompleted);
            }
            this.InvokeAsync("createUser", new object[] {
                        arg0,
                        arg1}, this.createUserOperationCompleted, userState);
        }
        
        private void OncreateUserOperationCompleted(object arg) {
            if ((this.createUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createUserCompleted(this, new createUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeDisplay(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeDisplayAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeDisplayAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeDisplayAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeDisplayOperationCompleted == null)) {
                this.unsubscribeDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeDisplayOperationCompleted);
            }
            this.InvokeAsync("unsubscribeDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeDisplayOperationCompleted, userState);
        }
        
        private void OnunsubscribeDisplayOperationCompleted(object arg) {
            if ((this.unsubscribeDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeDisplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setGroupsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] groupInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setGroupsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setGroupsInfoAsync(sessionId arg0, objectId[] arg1, groupInfo[] arg2, string[] arg3) {
            this.setGroupsInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setGroupsInfoAsync(sessionId arg0, objectId[] arg1, groupInfo[] arg2, string[] arg3, object userState) {
            if ((this.setGroupsInfoOperationCompleted == null)) {
                this.setGroupsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGroupsInfoOperationCompleted);
            }
            this.InvokeAsync("setGroupsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setGroupsInfoOperationCompleted, userState);
        }
        
        private void OnsetGroupsInfoOperationCompleted(object arg) {
            if ((this.setGroupsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGroupsInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeDisplays(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeDisplays", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeDisplaysAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribeDisplaysAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeDisplaysAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribeDisplaysOperationCompleted == null)) {
                this.subscribeDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeDisplaysOperationCompleted);
            }
            this.InvokeAsync("subscribeDisplays", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeDisplaysOperationCompleted, userState);
        }
        
        private void OnsubscribeDisplaysOperationCompleted(object arg) {
            if ((this.subscribeDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeDisplaysCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void shareApplicationOnDisplay(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6) {
            this.Invoke("shareApplicationOnDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
        }
        
        /// <remarks/>
        public void shareApplicationOnDisplayAsync(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6) {
            this.shareApplicationOnDisplayAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void shareApplicationOnDisplayAsync(sessionId arg0, objectId arg1, objectId arg2, int arg3, int arg4, int arg5, int arg6, object userState) {
            if ((this.shareApplicationOnDisplayOperationCompleted == null)) {
                this.shareApplicationOnDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshareApplicationOnDisplayOperationCompleted);
            }
            this.InvokeAsync("shareApplicationOnDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.shareApplicationOnDisplayOperationCompleted, userState);
        }
        
        private void OnshareApplicationOnDisplayOperationCompleted(object arg) {
            if ((this.shareApplicationOnDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.shareApplicationOnDisplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public userInfo getUserInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getUserInfo", new object[] {
                        arg0,
                        arg1});
            return ((userInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoAsync(sessionId arg0, objectId arg1) {
            this.getUserInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getUserInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getUserInfoOperationCompleted == null)) {
                this.getUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoOperationCompleted);
            }
            this.InvokeAsync("getUserInfo", new object[] {
                        arg0,
                        arg1}, this.getUserInfoOperationCompleted, userState);
        }
        
        private void OngetUserInfoOperationCompleted(object arg) {
            if ((this.getUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoCompleted(this, new getUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool unsharePerspectiveFromDisplay(sessionId arg0, objectId arg1, objectId arg2) {
            object[] results = this.Invoke("unsharePerspectiveFromDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void unsharePerspectiveFromDisplayAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.unsharePerspectiveFromDisplayAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsharePerspectiveFromDisplayAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.unsharePerspectiveFromDisplayOperationCompleted == null)) {
                this.unsharePerspectiveFromDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsharePerspectiveFromDisplayOperationCompleted);
            }
            this.InvokeAsync("unsharePerspectiveFromDisplay", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsharePerspectiveFromDisplayOperationCompleted, userState);
        }
        
        private void OnunsharePerspectiveFromDisplayOperationCompleted(object arg) {
            if ((this.unsharePerspectiveFromDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsharePerspectiveFromDisplayCompleted(this, new unsharePerspectiveFromDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public imageDecoratorDetail2 getImageDecoratorDetail2(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getImageDecoratorDetail2", new object[] {
                        arg0,
                        arg1});
            return ((imageDecoratorDetail2)(results[0]));
        }
        
        /// <remarks/>
        public void getImageDecoratorDetail2Async(sessionId arg0, objectId arg1) {
            this.getImageDecoratorDetail2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getImageDecoratorDetail2Async(sessionId arg0, objectId arg1, object userState) {
            if ((this.getImageDecoratorDetail2OperationCompleted == null)) {
                this.getImageDecoratorDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImageDecoratorDetail2OperationCompleted);
            }
            this.InvokeAsync("getImageDecoratorDetail2", new object[] {
                        arg0,
                        arg1}, this.getImageDecoratorDetail2OperationCompleted, userState);
        }
        
        private void OngetImageDecoratorDetail2OperationCompleted(object arg) {
            if ((this.getImageDecoratorDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImageDecoratorDetail2Completed(this, new getImageDecoratorDetail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void cleanupConfiguration(sessionId arg0) {
            this.Invoke("cleanupConfiguration", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void cleanupConfigurationAsync(sessionId arg0) {
            this.cleanupConfigurationAsync(arg0, null);
        }
        
        /// <remarks/>
        public void cleanupConfigurationAsync(sessionId arg0, object userState) {
            if ((this.cleanupConfigurationOperationCompleted == null)) {
                this.cleanupConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OncleanupConfigurationOperationCompleted);
            }
            this.InvokeAsync("cleanupConfiguration", new object[] {
                        arg0}, this.cleanupConfigurationOperationCompleted, userState);
        }
        
        private void OncleanupConfigurationOperationCompleted(object arg) {
            if ((this.cleanupConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cleanupConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public mgsInfo getMGSInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getMGSInfo", new object[] {
                        arg0,
                        arg1});
            return ((mgsInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getMGSInfoAsync(sessionId arg0, objectId arg1) {
            this.getMGSInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getMGSInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getMGSInfoOperationCompleted == null)) {
                this.getMGSInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMGSInfoOperationCompleted);
            }
            this.InvokeAsync("getMGSInfo", new object[] {
                        arg0,
                        arg1}, this.getMGSInfoOperationCompleted, userState);
        }
        
        private void OngetMGSInfoOperationCompleted(object arg) {
            if ((this.getMGSInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMGSInfoCompleted(this, new getMGSInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] getDisplayWindows(sessionId arg0, objectId arg1, bool arg2) {
            object[] results = this.Invoke("getDisplayWindows", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void getDisplayWindowsAsync(sessionId arg0, objectId arg1, bool arg2) {
            this.getDisplayWindowsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getDisplayWindowsAsync(sessionId arg0, objectId arg1, bool arg2, object userState) {
            if ((this.getDisplayWindowsOperationCompleted == null)) {
                this.getDisplayWindowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDisplayWindowsOperationCompleted);
            }
            this.InvokeAsync("getDisplayWindows", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getDisplayWindowsOperationCompleted, userState);
        }
        
        private void OngetDisplayWindowsOperationCompleted(object arg) {
            if ((this.getDisplayWindowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDisplayWindowsCompleted(this, new getDisplayWindowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setImageDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] imageDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setImageDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setImageDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, imageDecoratorDetail[] arg2, string[] arg3) {
            this.setImageDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setImageDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, imageDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setImageDecoratorsDetailOperationCompleted == null)) {
                this.setImageDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetImageDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setImageDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setImageDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetImageDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setImageDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setImageDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSidebarDefaultSetting(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeSidebarDefaultSetting", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeSidebarDefaultSettingAsync(sessionId arg0, string[] arg1) {
            this.subscribeSidebarDefaultSettingAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeSidebarDefaultSettingAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeSidebarDefaultSettingOperationCompleted == null)) {
                this.subscribeSidebarDefaultSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSidebarDefaultSettingOperationCompleted);
            }
            this.InvokeAsync("subscribeSidebarDefaultSetting", new object[] {
                        arg0,
                        arg1}, this.subscribeSidebarDefaultSettingOperationCompleted, userState);
        }
        
        private void OnsubscribeSidebarDefaultSettingOperationCompleted(object arg) {
            if ((this.subscribeSidebarDefaultSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSidebarDefaultSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void partialImport([System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg0, string arg1, bool arg2) {
            this.Invoke("partialImport", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void partialImportAsync(string[] arg0, string arg1, bool arg2) {
            this.partialImportAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void partialImportAsync(string[] arg0, string arg1, bool arg2, object userState) {
            if ((this.partialImportOperationCompleted == null)) {
                this.partialImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpartialImportOperationCompleted);
            }
            this.InvokeAsync("partialImport", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.partialImportOperationCompleted, userState);
        }
        
        private void OnpartialImportOperationCompleted(object arg) {
            if ((this.partialImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.partialImportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllDisplays(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllDisplays", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllDisplaysAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllDisplaysAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllDisplaysAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllDisplaysOperationCompleted == null)) {
                this.unsubscribeAllDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllDisplaysOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllDisplays", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllDisplaysOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllDisplaysOperationCompleted(object arg) {
            if ((this.unsubscribeAllDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllDisplaysCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool forceRemoveSystemVariable(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("forceRemoveSystemVariable", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forceRemoveSystemVariableAsync(sessionId arg0, objectId arg1) {
            this.forceRemoveSystemVariableAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void forceRemoveSystemVariableAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.forceRemoveSystemVariableOperationCompleted == null)) {
                this.forceRemoveSystemVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRemoveSystemVariableOperationCompleted);
            }
            this.InvokeAsync("forceRemoveSystemVariable", new object[] {
                        arg0,
                        arg1}, this.forceRemoveSystemVariableOperationCompleted, userState);
        }
        
        private void OnforceRemoveSystemVariableOperationCompleted(object arg) {
            if ((this.forceRemoveSystemVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRemoveSystemVariableCompleted(this, new forceRemoveSystemVariableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllSources(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllSources", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllSourcesAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllSourcesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllSourcesAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllSourcesOperationCompleted == null)) {
                this.unsubscribeAllSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllSourcesOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllSources", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllSourcesOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllSourcesOperationCompleted(object arg) {
            if ((this.unsubscribeAllSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllSourcesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllTilers(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllTilers", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllTilersAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllTilersAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllTilersAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllTilersOperationCompleted == null)) {
                this.unsubscribeAllTilersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllTilersOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllTilers", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllTilersOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllTilersOperationCompleted(object arg) {
            if ((this.unsubscribeAllTilersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllTilersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeTiler(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("unsubscribeTiler", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void unsubscribeTilerAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.unsubscribeTilerAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void unsubscribeTilerAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.unsubscribeTilerOperationCompleted == null)) {
                this.unsubscribeTilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeTilerOperationCompleted);
            }
            this.InvokeAsync("unsubscribeTiler", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.unsubscribeTilerOperationCompleted, userState);
        }
        
        private void OnunsubscribeTilerOperationCompleted(object arg) {
            if ((this.unsubscribeTilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeTilerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displetInfo2[] getDispletsInfo2(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getDispletsInfo2", new object[] {
                        arg0,
                        arg1});
            return ((displetInfo2[])(results[0]));
        }
        
        /// <remarks/>
        public void getDispletsInfo2Async(sessionId arg0, objectId[] arg1) {
            this.getDispletsInfo2Async(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDispletsInfo2Async(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getDispletsInfo2OperationCompleted == null)) {
                this.getDispletsInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDispletsInfo2OperationCompleted);
            }
            this.InvokeAsync("getDispletsInfo2", new object[] {
                        arg0,
                        arg1}, this.getDispletsInfo2OperationCompleted, userState);
        }
        
        private void OngetDispletsInfo2OperationCompleted(object arg) {
            if ((this.getDispletsInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDispletsInfo2Completed(this, new getDispletsInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeVideoTemplateURL(sessionId arg0, string arg1) {
            this.Invoke("removeVideoTemplateURL", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void removeVideoTemplateURLAsync(sessionId arg0, string arg1) {
            this.removeVideoTemplateURLAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void removeVideoTemplateURLAsync(sessionId arg0, string arg1, object userState) {
            if ((this.removeVideoTemplateURLOperationCompleted == null)) {
                this.removeVideoTemplateURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveVideoTemplateURLOperationCompleted);
            }
            this.InvokeAsync("removeVideoTemplateURL", new object[] {
                        arg0,
                        arg1}, this.removeVideoTemplateURLOperationCompleted, userState);
        }
        
        private void OnremoveVideoTemplateURLOperationCompleted(object arg) {
            if ((this.removeVideoTemplateURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeVideoTemplateURLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSystemProperty(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeSystemProperty", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeSystemPropertyAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeSystemPropertyAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeSystemPropertyAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeSystemPropertyOperationCompleted == null)) {
                this.subscribeSystemPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSystemPropertyOperationCompleted);
            }
            this.InvokeAsync("subscribeSystemProperty", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeSystemPropertyOperationCompleted, userState);
        }
        
        private void OnsubscribeSystemPropertyOperationCompleted(object arg) {
            if ((this.subscribeSystemPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSystemPropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void shareApplicationOnDisplay2(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6) {
            this.Invoke("shareApplicationOnDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
        }
        
        /// <remarks/>
        public void shareApplicationOnDisplay2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6) {
            this.shareApplicationOnDisplay2Async(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }
        
        /// <remarks/>
        public void shareApplicationOnDisplay2Async(sessionId arg0, objectId arg1, objectId arg2, double arg3, double arg4, double arg5, double arg6, object userState) {
            if ((this.shareApplicationOnDisplay2OperationCompleted == null)) {
                this.shareApplicationOnDisplay2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnshareApplicationOnDisplay2OperationCompleted);
            }
            this.InvokeAsync("shareApplicationOnDisplay2", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.shareApplicationOnDisplay2OperationCompleted, userState);
        }
        
        private void OnshareApplicationOnDisplay2OperationCompleted(object arg) {
            if ((this.shareApplicationOnDisplay2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.shareApplicationOnDisplay2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public statusLabelDecoratorDetail[] getStatusLabelDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getStatusLabelDecoratorsDetail", new object[] {
                        arg0,
                        arg1});
            return ((statusLabelDecoratorDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getStatusLabelDecoratorsDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getStatusLabelDecoratorsDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getStatusLabelDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getStatusLabelDecoratorsDetailOperationCompleted == null)) {
                this.getStatusLabelDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusLabelDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("getStatusLabelDecoratorsDetail", new object[] {
                        arg0,
                        arg1}, this.getStatusLabelDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OngetStatusLabelDecoratorsDetailOperationCompleted(object arg) {
            if ((this.getStatusLabelDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusLabelDecoratorsDetailCompleted(this, new getStatusLabelDecoratorsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeSnapshot(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("removeSnapshot", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void removeSnapshotAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.removeSnapshotAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void removeSnapshotAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.removeSnapshotOperationCompleted == null)) {
                this.removeSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSnapshotOperationCompleted);
            }
            this.InvokeAsync("removeSnapshot", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.removeSnapshotOperationCompleted, userState);
        }
        
        private void OnremoveSnapshotOperationCompleted(object arg) {
            if ((this.removeSnapshotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSnapshotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setSnapshotsInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] snapshotInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setSnapshotsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setSnapshotsInfoAsync(sessionId arg0, objectId[] arg1, snapshotInfo[] arg2, string[] arg3) {
            this.setSnapshotsInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setSnapshotsInfoAsync(sessionId arg0, objectId[] arg1, snapshotInfo[] arg2, string[] arg3, object userState) {
            if ((this.setSnapshotsInfoOperationCompleted == null)) {
                this.setSnapshotsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSnapshotsInfoOperationCompleted);
            }
            this.InvokeAsync("setSnapshotsInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setSnapshotsInfoOperationCompleted, userState);
        }
        
        private void OnsetSnapshotsInfoOperationCompleted(object arg) {
            if ((this.setSnapshotsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSnapshotsInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public groupWrapper[] listAllGroups(sessionId arg0) {
            object[] results = this.Invoke("listAllGroups", new object[] {
                        arg0});
            return ((groupWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllGroupsAsync(sessionId arg0) {
            this.listAllGroupsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllGroupsAsync(sessionId arg0, object userState) {
            if ((this.listAllGroupsOperationCompleted == null)) {
                this.listAllGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllGroupsOperationCompleted);
            }
            this.InvokeAsync("listAllGroups", new object[] {
                        arg0}, this.listAllGroupsOperationCompleted, userState);
        }
        
        private void OnlistAllGroupsOperationCompleted(object arg) {
            if ((this.listAllGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllGroupsCompleted(this, new listAllGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createGroup(sessionId arg0, string arg1) {
            object[] results = this.Invoke("createGroup", new object[] {
                        arg0,
                        arg1});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createGroupAsync(sessionId arg0, string arg1) {
            this.createGroupAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createGroupAsync(sessionId arg0, string arg1, object userState) {
            if ((this.createGroupOperationCompleted == null)) {
                this.createGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateGroupOperationCompleted);
            }
            this.InvokeAsync("createGroup", new object[] {
                        arg0,
                        arg1}, this.createGroupOperationCompleted, userState);
        }
        
        private void OncreateGroupOperationCompleted(object arg) {
            if ((this.createGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createGroupCompleted(this, new createGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decoratorWrapper[] listAllDecorators(sessionId arg0) {
            object[] results = this.Invoke("listAllDecorators", new object[] {
                        arg0});
            return ((decoratorWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllDecoratorsAsync(sessionId arg0) {
            this.listAllDecoratorsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void listAllDecoratorsAsync(sessionId arg0, object userState) {
            if ((this.listAllDecoratorsOperationCompleted == null)) {
                this.listAllDecoratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllDecoratorsOperationCompleted);
            }
            this.InvokeAsync("listAllDecorators", new object[] {
                        arg0}, this.listAllDecoratorsOperationCompleted, userState);
        }
        
        private void OnlistAllDecoratorsOperationCompleted(object arg) {
            if ((this.listAllDecoratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllDecoratorsCompleted(this, new listAllDecoratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectSystemVariablesInfo[] findBindings(sessionId arg0, string arg1, objectId arg2) {
            object[] results = this.Invoke("findBindings", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((objectSystemVariablesInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void findBindingsAsync(sessionId arg0, string arg1, objectId arg2) {
            this.findBindingsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void findBindingsAsync(sessionId arg0, string arg1, objectId arg2, object userState) {
            if ((this.findBindingsOperationCompleted == null)) {
                this.findBindingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindBindingsOperationCompleted);
            }
            this.InvokeAsync("findBindings", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.findBindingsOperationCompleted, userState);
        }
        
        private void OnfindBindingsOperationCompleted(object arg) {
            if ((this.findBindingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findBindingsCompleted(this, new findBindingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public proVNCDefaultSettingsInfo getProVNCDefaultSettingInfo(sessionId arg0) {
            object[] results = this.Invoke("getProVNCDefaultSettingInfo", new object[] {
                        arg0});
            return ((proVNCDefaultSettingsInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getProVNCDefaultSettingInfoAsync(sessionId arg0) {
            this.getProVNCDefaultSettingInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getProVNCDefaultSettingInfoAsync(sessionId arg0, object userState) {
            if ((this.getProVNCDefaultSettingInfoOperationCompleted == null)) {
                this.getProVNCDefaultSettingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProVNCDefaultSettingInfoOperationCompleted);
            }
            this.InvokeAsync("getProVNCDefaultSettingInfo", new object[] {
                        arg0}, this.getProVNCDefaultSettingInfoOperationCompleted, userState);
        }
        
        private void OngetProVNCDefaultSettingInfoOperationCompleted(object arg) {
            if ((this.getProVNCDefaultSettingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProVNCDefaultSettingInfoCompleted(this, new getProVNCDefaultSettingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchGrids(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchGrids", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchGridsAsync(sessionId arg0, string arg1) {
            this.searchGridsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchGridsAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchGridsOperationCompleted == null)) {
                this.searchGridsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchGridsOperationCompleted);
            }
            this.InvokeAsync("searchGrids", new object[] {
                        arg0,
                        arg1}, this.searchGridsOperationCompleted, userState);
        }
        
        private void OnsearchGridsOperationCompleted(object arg) {
            if ((this.searchGridsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchGridsCompleted(this, new searchGridsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void markRestoreFinished() {
            this.Invoke("markRestoreFinished", new object[0]);
        }
        
        /// <remarks/>
        public void markRestoreFinishedAsync() {
            this.markRestoreFinishedAsync(null);
        }
        
        /// <remarks/>
        public void markRestoreFinishedAsync(object userState) {
            if ((this.markRestoreFinishedOperationCompleted == null)) {
                this.markRestoreFinishedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmarkRestoreFinishedOperationCompleted);
            }
            this.InvokeAsync("markRestoreFinished", new object[0], this.markRestoreFinishedOperationCompleted, userState);
        }
        
        private void OnmarkRestoreFinishedOperationCompleted(object arg) {
            if ((this.markRestoreFinishedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.markRestoreFinishedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createStaticTextDecoratorTemplate(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, staticTextDecoratorDetail arg3) {
            object[] results = this.Invoke("createStaticTextDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createStaticTextDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, staticTextDecoratorDetail arg3) {
            this.createStaticTextDecoratorTemplateAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createStaticTextDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, staticTextDecoratorDetail arg3, object userState) {
            if ((this.createStaticTextDecoratorTemplateOperationCompleted == null)) {
                this.createStaticTextDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStaticTextDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("createStaticTextDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createStaticTextDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OncreateStaticTextDecoratorTemplateOperationCompleted(object arg) {
            if ((this.createStaticTextDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStaticTextDecoratorTemplateCompleted(this, new createStaticTextDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public borderDecoratorDetail getBorderDecoratorDetail(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getBorderDecoratorDetail", new object[] {
                        arg0,
                        arg1});
            return ((borderDecoratorDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getBorderDecoratorDetailAsync(sessionId arg0, objectId arg1) {
            this.getBorderDecoratorDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getBorderDecoratorDetailAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getBorderDecoratorDetailOperationCompleted == null)) {
                this.getBorderDecoratorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBorderDecoratorDetailOperationCompleted);
            }
            this.InvokeAsync("getBorderDecoratorDetail", new object[] {
                        arg0,
                        arg1}, this.getBorderDecoratorDetailOperationCompleted, userState);
        }
        
        private void OngetBorderDecoratorDetailOperationCompleted(object arg) {
            if ((this.getBorderDecoratorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBorderDecoratorDetailCompleted(this, new getBorderDecoratorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] listOfAssociatedVDSPerspectives(sessionId arg0, string arg1) {
            object[] results = this.Invoke("listOfAssociatedVDSPerspectives", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfAssociatedVDSPerspectivesAsync(sessionId arg0, string arg1) {
            this.listOfAssociatedVDSPerspectivesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void listOfAssociatedVDSPerspectivesAsync(sessionId arg0, string arg1, object userState) {
            if ((this.listOfAssociatedVDSPerspectivesOperationCompleted == null)) {
                this.listOfAssociatedVDSPerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfAssociatedVDSPerspectivesOperationCompleted);
            }
            this.InvokeAsync("listOfAssociatedVDSPerspectives", new object[] {
                        arg0,
                        arg1}, this.listOfAssociatedVDSPerspectivesOperationCompleted, userState);
        }
        
        private void OnlistOfAssociatedVDSPerspectivesOperationCompleted(object arg) {
            if ((this.listOfAssociatedVDSPerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfAssociatedVDSPerspectivesCompleted(this, new listOfAssociatedVDSPerspectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unbind(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4) {
            this.Invoke("unbind", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
        }
        
        /// <remarks/>
        public void unbindAsync(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4) {
            this.unbindAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void unbindAsync(sessionId arg0, objectId arg1, string arg2, objectId arg3, string arg4, object userState) {
            if ((this.unbindOperationCompleted == null)) {
                this.unbindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunbindOperationCompleted);
            }
            this.InvokeAsync("unbind", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.unbindOperationCompleted, userState);
        }
        
        private void OnunbindOperationCompleted(object arg) {
            if ((this.unbindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unbindCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSystem(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeSystem", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeSystemAsync(sessionId arg0, string[] arg1) {
            this.subscribeSystemAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeSystemAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeSystemOperationCompleted == null)) {
                this.subscribeSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSystemOperationCompleted);
            }
            this.InvokeAsync("subscribeSystem", new object[] {
                        arg0,
                        arg1}, this.subscribeSystemOperationCompleted, userState);
        }
        
        private void OnsubscribeSystemOperationCompleted(object arg) {
            if ((this.subscribeSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSystemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public messageInfo[] getMessagesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getMessagesInfo", new object[] {
                        arg0,
                        arg1});
            return ((messageInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getMessagesInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getMessagesInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getMessagesInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getMessagesInfoOperationCompleted == null)) {
                this.getMessagesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMessagesInfoOperationCompleted);
            }
            this.InvokeAsync("getMessagesInfo", new object[] {
                        arg0,
                        arg1}, this.getMessagesInfoOperationCompleted, userState);
        }
        
        private void OngetMessagesInfoOperationCompleted(object arg) {
            if ((this.getMessagesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMessagesInfoCompleted(this, new getMessagesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeAllConfigurations(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeAllConfigurations", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeAllConfigurationsAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeAllConfigurationsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeAllConfigurationsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeAllConfigurationsOperationCompleted == null)) {
                this.unsubscribeAllConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeAllConfigurationsOperationCompleted);
            }
            this.InvokeAsync("unsubscribeAllConfigurations", new object[] {
                        arg0,
                        arg1}, this.unsubscribeAllConfigurationsOperationCompleted, userState);
        }
        
        private void OnunsubscribeAllConfigurationsOperationCompleted(object arg) {
            if ((this.unsubscribeAllConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeAllConfigurationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void createDisplayModules(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] moduleInfo[] arg2) {
            this.Invoke("createDisplayModules", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void createDisplayModulesAsync(sessionId arg0, objectId arg1, moduleInfo[] arg2) {
            this.createDisplayModulesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createDisplayModulesAsync(sessionId arg0, objectId arg1, moduleInfo[] arg2, object userState) {
            if ((this.createDisplayModulesOperationCompleted == null)) {
                this.createDisplayModulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDisplayModulesOperationCompleted);
            }
            this.InvokeAsync("createDisplayModules", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createDisplayModulesOperationCompleted, userState);
        }
        
        private void OncreateDisplayModulesOperationCompleted(object arg) {
            if ((this.createDisplayModulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDisplayModulesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public squidModeConfigurationInfo getSquidModeConfigurationInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getSquidModeConfigurationInfo", new object[] {
                        arg0,
                        arg1});
            return ((squidModeConfigurationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSquidModeConfigurationInfoAsync(sessionId arg0, objectId arg1) {
            this.getSquidModeConfigurationInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSquidModeConfigurationInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getSquidModeConfigurationInfoOperationCompleted == null)) {
                this.getSquidModeConfigurationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSquidModeConfigurationInfoOperationCompleted);
            }
            this.InvokeAsync("getSquidModeConfigurationInfo", new object[] {
                        arg0,
                        arg1}, this.getSquidModeConfigurationInfoOperationCompleted, userState);
        }
        
        private void OngetSquidModeConfigurationInfoOperationCompleted(object arg) {
            if ((this.getSquidModeConfigurationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSquidModeConfigurationInfoCompleted(this, new getSquidModeConfigurationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setPerspectiveWindowDetail(sessionId arg0, objectId arg1, perspectiveWindowDetail arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setPerspectiveWindowDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setPerspectiveWindowDetailAsync(sessionId arg0, objectId arg1, perspectiveWindowDetail arg2, string[] arg3) {
            this.setPerspectiveWindowDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setPerspectiveWindowDetailAsync(sessionId arg0, objectId arg1, perspectiveWindowDetail arg2, string[] arg3, object userState) {
            if ((this.setPerspectiveWindowDetailOperationCompleted == null)) {
                this.setPerspectiveWindowDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPerspectiveWindowDetailOperationCompleted);
            }
            this.InvokeAsync("setPerspectiveWindowDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setPerspectiveWindowDetailOperationCompleted, userState);
        }
        
        private void OnsetPerspectiveWindowDetailOperationCompleted(object arg) {
            if ((this.setPerspectiveWindowDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPerspectiveWindowDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getGeneratedPerspectiveName(sessionId arg0, string arg1) {
            object[] results = this.Invoke("getGeneratedPerspectiveName", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGeneratedPerspectiveNameAsync(sessionId arg0, string arg1) {
            this.getGeneratedPerspectiveNameAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getGeneratedPerspectiveNameAsync(sessionId arg0, string arg1, object userState) {
            if ((this.getGeneratedPerspectiveNameOperationCompleted == null)) {
                this.getGeneratedPerspectiveNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGeneratedPerspectiveNameOperationCompleted);
            }
            this.InvokeAsync("getGeneratedPerspectiveName", new object[] {
                        arg0,
                        arg1}, this.getGeneratedPerspectiveNameOperationCompleted, userState);
        }
        
        private void OngetGeneratedPerspectiveNameOperationCompleted(object arg) {
            if ((this.getGeneratedPerspectiveNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGeneratedPerspectiveNameCompleted(this, new getGeneratedPerspectiveNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setStatusImageDecoratorsDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] statusImageDecoratorDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setStatusImageDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setStatusImageDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, statusImageDecoratorDetail[] arg2, string[] arg3) {
            this.setStatusImageDecoratorsDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setStatusImageDecoratorsDetailAsync(sessionId arg0, objectId[] arg1, statusImageDecoratorDetail[] arg2, string[] arg3, object userState) {
            if ((this.setStatusImageDecoratorsDetailOperationCompleted == null)) {
                this.setStatusImageDecoratorsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStatusImageDecoratorsDetailOperationCompleted);
            }
            this.InvokeAsync("setStatusImageDecoratorsDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setStatusImageDecoratorsDetailOperationCompleted, userState);
        }
        
        private void OnsetStatusImageDecoratorsDetailOperationCompleted(object arg) {
            if ((this.setStatusImageDecoratorsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStatusImageDecoratorsDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unshareAllPerspectivesFromDisplay(sessionId arg0, objectId arg1) {
            this.Invoke("unshareAllPerspectivesFromDisplay", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unshareAllPerspectivesFromDisplayAsync(sessionId arg0, objectId arg1) {
            this.unshareAllPerspectivesFromDisplayAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unshareAllPerspectivesFromDisplayAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.unshareAllPerspectivesFromDisplayOperationCompleted == null)) {
                this.unshareAllPerspectivesFromDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunshareAllPerspectivesFromDisplayOperationCompleted);
            }
            this.InvokeAsync("unshareAllPerspectivesFromDisplay", new object[] {
                        arg0,
                        arg1}, this.unshareAllPerspectivesFromDisplayOperationCompleted, userState);
        }
        
        private void OnunshareAllPerspectivesFromDisplayOperationCompleted(object arg) {
            if ((this.unshareAllPerspectivesFromDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unshareAllPerspectivesFromDisplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeSquidModeConfiguration(sessionId arg0, objectId arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeSquidModeConfiguration", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeSquidModeConfigurationAsync(sessionId arg0, objectId arg1, string[] arg2) {
            this.subscribeSquidModeConfigurationAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeSquidModeConfigurationAsync(sessionId arg0, objectId arg1, string[] arg2, object userState) {
            if ((this.subscribeSquidModeConfigurationOperationCompleted == null)) {
                this.subscribeSquidModeConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeSquidModeConfigurationOperationCompleted);
            }
            this.InvokeAsync("subscribeSquidModeConfiguration", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeSquidModeConfigurationOperationCompleted, userState);
        }
        
        private void OnsubscribeSquidModeConfigurationOperationCompleted(object arg) {
            if ((this.subscribeSquidModeConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeSquidModeConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public systemVariableInfo[] getSystemVariablesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getSystemVariablesInfo", new object[] {
                        arg0,
                        arg1});
            return ((systemVariableInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getSystemVariablesInfoAsync(sessionId arg0, objectId[] arg1) {
            this.getSystemVariablesInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSystemVariablesInfoAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getSystemVariablesInfoOperationCompleted == null)) {
                this.getSystemVariablesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemVariablesInfoOperationCompleted);
            }
            this.InvokeAsync("getSystemVariablesInfo", new object[] {
                        arg0,
                        arg1}, this.getSystemVariablesInfoOperationCompleted, userState);
        }
        
        private void OngetSystemVariablesInfoOperationCompleted(object arg) {
            if ((this.getSystemVariablesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemVariablesInfoCompleted(this, new getSystemVariablesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setWebSourcesDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] webSourceDetail[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setWebSourcesDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setWebSourcesDetailAsync(sessionId arg0, objectId[] arg1, webSourceDetail[] arg2, string[] arg3) {
            this.setWebSourcesDetailAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setWebSourcesDetailAsync(sessionId arg0, objectId[] arg1, webSourceDetail[] arg2, string[] arg3, object userState) {
            if ((this.setWebSourcesDetailOperationCompleted == null)) {
                this.setWebSourcesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWebSourcesDetailOperationCompleted);
            }
            this.InvokeAsync("setWebSourcesDetail", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setWebSourcesDetailOperationCompleted, userState);
        }
        
        private void OnsetWebSourcesDetailOperationCompleted(object arg) {
            if ((this.setWebSourcesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWebSourcesDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeApplications(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            this.Invoke("subscribeApplications", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void subscribeApplicationsAsync(sessionId arg0, objectId[] arg1, string[] arg2) {
            this.subscribeApplicationsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void subscribeApplicationsAsync(sessionId arg0, objectId[] arg1, string[] arg2, object userState) {
            if ((this.subscribeApplicationsOperationCompleted == null)) {
                this.subscribeApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeApplicationsOperationCompleted);
            }
            this.InvokeAsync("subscribeApplications", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.subscribeApplicationsOperationCompleted, userState);
        }
        
        private void OnsubscribeApplicationsOperationCompleted(object arg) {
            if ((this.subscribeApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeApplicationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unsubscribeConfigurationPool(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("unsubscribeConfigurationPool", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void unsubscribeConfigurationPoolAsync(sessionId arg0, string[] arg1) {
            this.unsubscribeConfigurationPoolAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void unsubscribeConfigurationPoolAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.unsubscribeConfigurationPoolOperationCompleted == null)) {
                this.unsubscribeConfigurationPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeConfigurationPoolOperationCompleted);
            }
            this.InvokeAsync("unsubscribeConfigurationPool", new object[] {
                        arg0,
                        arg1}, this.unsubscribeConfigurationPoolOperationCompleted, userState);
        }
        
        private void OnunsubscribeConfigurationPoolOperationCompleted(object arg) {
            if ((this.unsubscribeConfigurationPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeConfigurationPoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void subscribeAllApplications(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1) {
            this.Invoke("subscribeAllApplications", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void subscribeAllApplicationsAsync(sessionId arg0, string[] arg1) {
            this.subscribeAllApplicationsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void subscribeAllApplicationsAsync(sessionId arg0, string[] arg1, object userState) {
            if ((this.subscribeAllApplicationsOperationCompleted == null)) {
                this.subscribeAllApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeAllApplicationsOperationCompleted);
            }
            this.InvokeAsync("subscribeAllApplications", new object[] {
                        arg0,
                        arg1}, this.subscribeAllApplicationsOperationCompleted, userState);
        }
        
        private void OnsubscribeAllApplicationsOperationCompleted(object arg) {
            if ((this.subscribeAllApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeAllApplicationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void restore(sessionId arg0, objectId arg1) {
            this.Invoke("restore", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void restoreAsync(sessionId arg0, objectId arg1) {
            this.restoreAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void restoreAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.restoreOperationCompleted == null)) {
                this.restoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrestoreOperationCompleted);
            }
            this.InvokeAsync("restore", new object[] {
                        arg0,
                        arg1}, this.restoreOperationCompleted, userState);
        }
        
        private void OnrestoreOperationCompleted(object arg) {
            if ((this.restoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.restoreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public objectId createSourceNameDecoratorTemplate(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, sourceNameDecoratorDetail arg3) {
            object[] results = this.Invoke("createSourceNameDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((objectId)(results[0]));
        }
        
        /// <remarks/>
        public void createSourceNameDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, sourceNameDecoratorDetail arg3) {
            this.createSourceNameDecoratorTemplateAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createSourceNameDecoratorTemplateAsync(sessionId arg0, decoratorInfo arg1, labelDecoratorDetail arg2, sourceNameDecoratorDetail arg3, object userState) {
            if ((this.createSourceNameDecoratorTemplateOperationCompleted == null)) {
                this.createSourceNameDecoratorTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSourceNameDecoratorTemplateOperationCompleted);
            }
            this.InvokeAsync("createSourceNameDecoratorTemplate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createSourceNameDecoratorTemplateOperationCompleted, userState);
        }
        
        private void OncreateSourceNameDecoratorTemplateOperationCompleted(object arg) {
            if ((this.createSourceNameDecoratorTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSourceNameDecoratorTemplateCompleted(this, new createSourceNameDecoratorTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchPerspectives(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchPerspectives", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchPerspectivesAsync(sessionId arg0, string arg1) {
            this.searchPerspectivesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchPerspectivesAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchPerspectivesOperationCompleted == null)) {
                this.searchPerspectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchPerspectivesOperationCompleted);
            }
            this.InvokeAsync("searchPerspectives", new object[] {
                        arg0,
                        arg1}, this.searchPerspectivesOperationCompleted, userState);
        }
        
        private void OnsearchPerspectivesOperationCompleted(object arg) {
            if ((this.searchPerspectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchPerspectivesCompleted(this, new searchPerspectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public keyboardShortcutDefaultSettingsInfo getKeyboardShortcutDefaultSettingsInfo(sessionId arg0, objectId arg1) {
            object[] results = this.Invoke("getKeyboardShortcutDefaultSettingsInfo", new object[] {
                        arg0,
                        arg1});
            return ((keyboardShortcutDefaultSettingsInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getKeyboardShortcutDefaultSettingsInfoAsync(sessionId arg0, objectId arg1) {
            this.getKeyboardShortcutDefaultSettingsInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getKeyboardShortcutDefaultSettingsInfoAsync(sessionId arg0, objectId arg1, object userState) {
            if ((this.getKeyboardShortcutDefaultSettingsInfoOperationCompleted == null)) {
                this.getKeyboardShortcutDefaultSettingsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKeyboardShortcutDefaultSettingsInfoOperationCompleted);
            }
            this.InvokeAsync("getKeyboardShortcutDefaultSettingsInfo", new object[] {
                        arg0,
                        arg1}, this.getKeyboardShortcutDefaultSettingsInfoOperationCompleted, userState);
        }
        
        private void OngetKeyboardShortcutDefaultSettingsInfoOperationCompleted(object arg) {
            if ((this.getKeyboardShortcutDefaultSettingsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKeyboardShortcutDefaultSettingsInfoCompleted(this, new getKeyboardShortcutDefaultSettingsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void applyRoleToRecources(sessionId arg0, objectId arg1, roleResourcesDetail arg2) {
            this.Invoke("applyRoleToRecources", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void applyRoleToRecourcesAsync(sessionId arg0, objectId arg1, roleResourcesDetail arg2) {
            this.applyRoleToRecourcesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void applyRoleToRecourcesAsync(sessionId arg0, objectId arg1, roleResourcesDetail arg2, object userState) {
            if ((this.applyRoleToRecourcesOperationCompleted == null)) {
                this.applyRoleToRecourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplyRoleToRecourcesOperationCompleted);
            }
            this.InvokeAsync("applyRoleToRecources", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.applyRoleToRecourcesOperationCompleted, userState);
        }
        
        private void OnapplyRoleToRecourcesOperationCompleted(object arg) {
            if ((this.applyRoleToRecourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applyRoleToRecourcesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public screenScrapeSourceDetail[] getScreenScrapeSourcesDetail(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("getScreenScrapeSourcesDetail", new object[] {
                        arg0,
                        arg1});
            return ((screenScrapeSourceDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getScreenScrapeSourcesDetailAsync(sessionId arg0, objectId[] arg1) {
            this.getScreenScrapeSourcesDetailAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getScreenScrapeSourcesDetailAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.getScreenScrapeSourcesDetailOperationCompleted == null)) {
                this.getScreenScrapeSourcesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetScreenScrapeSourcesDetailOperationCompleted);
            }
            this.InvokeAsync("getScreenScrapeSourcesDetail", new object[] {
                        arg0,
                        arg1}, this.getScreenScrapeSourcesDetailOperationCompleted, userState);
        }
        
        private void OngetScreenScrapeSourcesDetailOperationCompleted(object arg) {
            if ((this.getScreenScrapeSourcesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getScreenScrapeSourcesDetailCompleted(this, new getScreenScrapeSourcesDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] searchDecorators(sessionId arg0, string arg1) {
            object[] results = this.Invoke("searchDecorators", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void searchDecoratorsAsync(sessionId arg0, string arg1) {
            this.searchDecoratorsAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void searchDecoratorsAsync(sessionId arg0, string arg1, object userState) {
            if ((this.searchDecoratorsOperationCompleted == null)) {
                this.searchDecoratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchDecoratorsOperationCompleted);
            }
            this.InvokeAsync("searchDecorators", new object[] {
                        arg0,
                        arg1}, this.searchDecoratorsOperationCompleted, userState);
        }
        
        private void OnsearchDecoratorsOperationCompleted(object arg) {
            if ((this.searchDecoratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchDecoratorsCompleted(this, new searchDecoratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void bringDecoratorForward(sessionId arg0, objectId arg1, objectId arg2) {
            this.Invoke("bringDecoratorForward", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void bringDecoratorForwardAsync(sessionId arg0, objectId arg1, objectId arg2) {
            this.bringDecoratorForwardAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void bringDecoratorForwardAsync(sessionId arg0, objectId arg1, objectId arg2, object userState) {
            if ((this.bringDecoratorForwardOperationCompleted == null)) {
                this.bringDecoratorForwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbringDecoratorForwardOperationCompleted);
            }
            this.InvokeAsync("bringDecoratorForward", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.bringDecoratorForwardOperationCompleted, userState);
        }
        
        private void OnbringDecoratorForwardOperationCompleted(object arg) {
            if ((this.bringDecoratorForwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bringDecoratorForwardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setPerspectivesInfo(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] perspectiveInfo[] arg2, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg3) {
            this.Invoke("setPerspectivesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void setPerspectivesInfoAsync(sessionId arg0, objectId[] arg1, perspectiveInfo[] arg2, string[] arg3) {
            this.setPerspectivesInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void setPerspectivesInfoAsync(sessionId arg0, objectId[] arg1, perspectiveInfo[] arg2, string[] arg3, object userState) {
            if ((this.setPerspectivesInfoOperationCompleted == null)) {
                this.setPerspectivesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPerspectivesInfoOperationCompleted);
            }
            this.InvokeAsync("setPerspectivesInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setPerspectivesInfoOperationCompleted, userState);
        }
        
        private void OnsetPerspectivesInfoOperationCompleted(object arg) {
            if ((this.setPerspectivesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPerspectivesInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void addVideoTemplateURL(sessionId arg0, string arg1) {
            this.Invoke("addVideoTemplateURL", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void addVideoTemplateURLAsync(sessionId arg0, string arg1) {
            this.addVideoTemplateURLAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void addVideoTemplateURLAsync(sessionId arg0, string arg1, object userState) {
            if ((this.addVideoTemplateURLOperationCompleted == null)) {
                this.addVideoTemplateURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddVideoTemplateURLOperationCompleted);
            }
            this.InvokeAsync("addVideoTemplateURL", new object[] {
                        arg0,
                        arg1}, this.addVideoTemplateURLOperationCompleted, userState);
        }
        
        private void OnaddVideoTemplateURLOperationCompleted(object arg) {
            if ((this.addVideoTemplateURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addVideoTemplateURLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://openapi.cms.barco.com/", ResponseNamespace="http://openapi.cms.barco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId[] copyTilers(sessionId arg0, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] objectId[] arg1) {
            object[] results = this.Invoke("copyTilers", new object[] {
                        arg0,
                        arg1});
            return ((objectId[])(results[0]));
        }
        
        /// <remarks/>
        public void copyTilersAsync(sessionId arg0, objectId[] arg1) {
            this.copyTilersAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void copyTilersAsync(sessionId arg0, objectId[] arg1, object userState) {
            if ((this.copyTilersOperationCompleted == null)) {
                this.copyTilersOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyTilersOperationCompleted);
            }
            this.InvokeAsync("copyTilers", new object[] {
                        arg0,
                        arg1}, this.copyTilersOperationCompleted, userState);
        }
        
        private void OncopyTilersOperationCompleted(object arg) {
            if ((this.copyTilersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyTilersCompleted(this, new copyTilersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class sessionId {
        
        private string nameField;
        
        private int idField;
        
        private string systemNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemName {
            get {
                return this.systemNameField;
            }
            set {
                this.systemNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class roleResourcesDetail {
        
        private objectId[] groupsField;
        
        private objectId[] displaysField;
        
        private objectId[] decoratorsField;
        
        private objectId[] sourcesField;
        
        private objectId[] perspectivesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("groups", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("displays", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] displays {
            get {
                return this.displaysField;
            }
            set {
                this.displaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("decorators", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] decorators {
            get {
                return this.decoratorsField;
            }
            set {
                this.decoratorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sources", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] sources {
            get {
                return this.sourcesField;
            }
            set {
                this.sourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("perspectives", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] perspectives {
            get {
                return this.perspectivesField;
            }
            set {
                this.perspectivesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class objectId {
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class mgsInfo {
        
        private objectId mMgsIdField;
        
        private string mNameField;
        
        private string mIpAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId mMgsId {
            get {
                return this.mMgsIdField;
            }
            set {
                this.mMgsIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mName {
            get {
                return this.mNameField;
            }
            set {
                this.mNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mIpAddress {
            get {
                return this.mIpAddressField;
            }
            set {
                this.mIpAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class proVNCDefaultSettingsInfo {
        
        private string passwordField;
        
        private string releaseControlField;
        
        private string disconnectField;
        
        private string altTabField;
        
        private string altEscField;
        
        private string ctrlEscField;
        
        private string ctrlAltDelField;
        
        private string keyValueField;
        
        private bool msgForSplKeysEnabledField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ReleaseControl {
            get {
                return this.releaseControlField;
            }
            set {
                this.releaseControlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Disconnect {
            get {
                return this.disconnectField;
            }
            set {
                this.disconnectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AltTab {
            get {
                return this.altTabField;
            }
            set {
                this.altTabField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AltEsc {
            get {
                return this.altEscField;
            }
            set {
                this.altEscField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CtrlEsc {
            get {
                return this.ctrlEscField;
            }
            set {
                this.ctrlEscField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CtrlAltDel {
            get {
                return this.ctrlAltDelField;
            }
            set {
                this.ctrlAltDelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string keyValue {
            get {
                return this.keyValueField;
            }
            set {
                this.keyValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool msgForSplKeysEnabled {
            get {
                return this.msgForSplKeysEnabledField;
            }
            set {
                this.msgForSplKeysEnabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class displetDetail {
        
        private displetInfo2 mDispletInfo2Field;
        
        private decoratorInfo[] decoratorsField;
        
        private borderDecoratorDetail[] borderDecoratorDetailsField;
        
        private audioDecoratorDetail[] audioDecoratorDetailField;
        
        private statusBorderDecoratorDetail[] statusBorderDecoratorDetailField;
        
        private dateTimeDecoratorDetail[] dateTimeDecoratorDetailField;
        
        private sourceNameDecoratorDetail[] sourceNameDecoratorDetailField;
        
        private staticTextDecoratorDetail[] staticTextDecoratorDetailField;
        
        private statusLabelDecoratorDetail[] statusLabelDecoratorDetailField;
        
        private labelDecoratorDetail[] labelDecoratorDetailField;
        
        private logoDecoratorDetail[] logoDecoratorDetailField;
        
        private statusImageDecoratorDetail[] statusImageDecoratorDetailField;
        
        private imageDecoratorDetail2[] imageDecoratorDetailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displetInfo2 mDispletInfo2 {
            get {
                return this.mDispletInfo2Field;
            }
            set {
                this.mDispletInfo2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("decorators", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public decoratorInfo[] decorators {
            get {
                return this.decoratorsField;
            }
            set {
                this.decoratorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("borderDecoratorDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public borderDecoratorDetail[] borderDecoratorDetails {
            get {
                return this.borderDecoratorDetailsField;
            }
            set {
                this.borderDecoratorDetailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("audioDecoratorDetail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public audioDecoratorDetail[] audioDecoratorDetail {
            get {
                return this.audioDecoratorDetailField;
            }
            set {
                this.audioDecoratorDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("statusBorderDecoratorDetail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public statusBorderDecoratorDetail[] statusBorderDecoratorDetail {
            get {
                return this.statusBorderDecoratorDetailField;
            }
            set {
                this.statusBorderDecoratorDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dateTimeDecoratorDetail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dateTimeDecoratorDetail[] dateTimeDecoratorDetail {
            get {
                return this.dateTimeDecoratorDetailField;
            }
            set {
                this.dateTimeDecoratorDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sourceNameDecoratorDetail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public sourceNameDecoratorDetail[] sourceNameDecoratorDetail {
            get {
                return this.sourceNameDecoratorDetailField;
            }
            set {
                this.sourceNameDecoratorDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("staticTextDecoratorDetail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public staticTextDecoratorDetail[] staticTextDecoratorDetail {
            get {
                return this.staticTextDecoratorDetailField;
            }
            set {
                this.staticTextDecoratorDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("statusLabelDecoratorDetail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public statusLabelDecoratorDetail[] statusLabelDecoratorDetail {
            get {
                return this.statusLabelDecoratorDetailField;
            }
            set {
                this.statusLabelDecoratorDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("labelDecoratorDetail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public labelDecoratorDetail[] labelDecoratorDetail {
            get {
                return this.labelDecoratorDetailField;
            }
            set {
                this.labelDecoratorDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("logoDecoratorDetail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public logoDecoratorDetail[] logoDecoratorDetail {
            get {
                return this.logoDecoratorDetailField;
            }
            set {
                this.logoDecoratorDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("statusImageDecoratorDetail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public statusImageDecoratorDetail[] statusImageDecoratorDetail {
            get {
                return this.statusImageDecoratorDetailField;
            }
            set {
                this.statusImageDecoratorDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("imageDecoratorDetail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public imageDecoratorDetail2[] imageDecoratorDetail {
            get {
                return this.imageDecoratorDetailField;
            }
            set {
                this.imageDecoratorDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class displetInfo2 {
        
        private string nameField;
        
        private double xField;
        
        private double yField;
        
        private double heightField;
        
        private double widthField;
        
        private bool thumbnailField;
        
        private objectId sourceIdField;
        
        private int zOrderField;
        
        private int parentPerspectiveIDField;
        
        private objectId displetIdField;
        
        private bool stretchedField;
        
        private objectId[] decoratorsIdField;
        
        private string sourceRoutingMapField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                this.thumbnailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int zOrder {
            get {
                return this.zOrderField;
            }
            set {
                this.zOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int parentPerspectiveID {
            get {
                return this.parentPerspectiveIDField;
            }
            set {
                this.parentPerspectiveIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displetId {
            get {
                return this.displetIdField;
            }
            set {
                this.displetIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool stretched {
            get {
                return this.stretchedField;
            }
            set {
                this.stretchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("decoratorsId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] decoratorsId {
            get {
                return this.decoratorsIdField;
            }
            set {
                this.decoratorsIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceRoutingMap {
            get {
                return this.sourceRoutingMapField;
            }
            set {
                this.sourceRoutingMapField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class decoratorInfo {
        
        private string typeField;
        
        private string nameField;
        
        private bool isVisibleField;
        
        private bool isTemplateField;
        
        private int topMarginField;
        
        private int bottomMarginField;
        
        private int leftMarginField;
        
        private int rightMarginField;
        
        private int zOrderField;
        
        private string positionField;
        
        private string tagsField;
        
        private string descriptionField;
        
        private string scaleModeField;
        
        private objectId decoratorIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isVisible {
            get {
                return this.isVisibleField;
            }
            set {
                this.isVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isTemplate {
            get {
                return this.isTemplateField;
            }
            set {
                this.isTemplateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int topMargin {
            get {
                return this.topMarginField;
            }
            set {
                this.topMarginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int bottomMargin {
            get {
                return this.bottomMarginField;
            }
            set {
                this.bottomMarginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int leftMargin {
            get {
                return this.leftMarginField;
            }
            set {
                this.leftMarginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int rightMargin {
            get {
                return this.rightMarginField;
            }
            set {
                this.rightMarginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int zOrder {
            get {
                return this.zOrderField;
            }
            set {
                this.zOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string scaleMode {
            get {
                return this.scaleModeField;
            }
            set {
                this.scaleModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class borderDecoratorDetail : detailObject {
        
        private string borderPositionField;
        
        private int separatorWidthField;
        
        private string styleField;
        
        private string blinkingStyleField;
        
        private int widthField;
        
        private int colorField;
        
        private int gapColorField;
        
        private double blinkingPeriodField;
        
        private int blinkingColorField;
        
        private int blinkingGapColorField;
        
        private bool blinkingField;
        
        private objectId decoratorIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string borderPosition {
            get {
                return this.borderPositionField;
            }
            set {
                this.borderPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int separatorWidth {
            get {
                return this.separatorWidthField;
            }
            set {
                this.separatorWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string blinkingStyle {
            get {
                return this.blinkingStyleField;
            }
            set {
                this.blinkingStyleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int gapColor {
            get {
                return this.gapColorField;
            }
            set {
                this.gapColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double blinkingPeriod {
            get {
                return this.blinkingPeriodField;
            }
            set {
                this.blinkingPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int blinkingColor {
            get {
                return this.blinkingColorField;
            }
            set {
                this.blinkingColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int blinkingGapColor {
            get {
                return this.blinkingGapColorField;
            }
            set {
                this.blinkingGapColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blinking {
            get {
                return this.blinkingField;
            }
            set {
                this.blinkingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(externalWindowDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(webSourceDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sourceNameDecoratorDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(screenScrapeSourceDetail2))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(applicationWindowDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(statusLabelDecoratorDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(staticTextDecoratorDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(audioDecoratorDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(statusImageDecoratorDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(statusBorderDecoratorDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(videoSourceDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dateTimeDecoratorDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(labelDecoratorDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(perspectiveWindowDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(borderDecoratorDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(imageDecoratorDetail2))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(logoDecoratorDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(imageDecoratorDetail))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class detailObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class externalWindowDetail : detailObject {
        
        private int windowIdentifierField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int windowIdentifier {
            get {
                return this.windowIdentifierField;
            }
            set {
                this.windowIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class webSourceDetail : detailObject {
        
        private string urlField;
        
        private objectId sourceIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class sourceNameDecoratorDetail : detailObject {
        
        private string labelField;
        
        private objectId decoratorIdField;
        
        private labelDecoratorDetail mLabelDecoratorDetailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public labelDecoratorDetail mLabelDecoratorDetail {
            get {
                return this.mLabelDecoratorDetailField;
            }
            set {
                this.mLabelDecoratorDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class labelDecoratorDetail : detailObject {
        
        private string fontNameField;
        
        private string fontStyleField;
        
        private int fontSizeField;
        
        private bool isStrikeOutField;
        
        private bool isUnderLineField;
        
        private string scriptField;
        
        private int textColorField;
        
        private int backgroundColorField;
        
        private string orientationField;
        
        private string alignmentField;
        
        private bool stretchEnabledField;
        
        private int transparentColorField;
        
        private int labelTransparencyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fontName {
            get {
                return this.fontNameField;
            }
            set {
                this.fontNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fontStyle {
            get {
                return this.fontStyleField;
            }
            set {
                this.fontStyleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int fontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isStrikeOut {
            get {
                return this.isStrikeOutField;
            }
            set {
                this.isStrikeOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isUnderLine {
            get {
                return this.isUnderLineField;
            }
            set {
                this.isUnderLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string script {
            get {
                return this.scriptField;
            }
            set {
                this.scriptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int textColor {
            get {
                return this.textColorField;
            }
            set {
                this.textColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int backgroundColor {
            get {
                return this.backgroundColorField;
            }
            set {
                this.backgroundColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string orientation {
            get {
                return this.orientationField;
            }
            set {
                this.orientationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string alignment {
            get {
                return this.alignmentField;
            }
            set {
                this.alignmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool stretchEnabled {
            get {
                return this.stretchEnabledField;
            }
            set {
                this.stretchEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int transparentColor {
            get {
                return this.transparentColorField;
            }
            set {
                this.transparentColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int labelTransparency {
            get {
                return this.labelTransparencyField;
            }
            set {
                this.labelTransparencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class screenScrapeSourceDetail2 : detailObject {
        
        private string hostField;
        
        private string passwordField;
        
        private int portField;
        
        private string pointerShapeField;
        
        private string targetTypeField;
        
        private double xField;
        
        private double yField;
        
        private double widthField;
        
        private double heightField;
        
        private string windowTitleField;
        
        private bool manualUpdateModeField;
        
        private int updateIntervalField;
        
        private int desktopIdentField;
        
        private objectId sourceIdField;
        
        private bool vdsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pointerShape {
            get {
                return this.pointerShapeField;
            }
            set {
                this.pointerShapeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetType {
            get {
                return this.targetTypeField;
            }
            set {
                this.targetTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string windowTitle {
            get {
                return this.windowTitleField;
            }
            set {
                this.windowTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool manualUpdateMode {
            get {
                return this.manualUpdateModeField;
            }
            set {
                this.manualUpdateModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int updateInterval {
            get {
                return this.updateIntervalField;
            }
            set {
                this.updateIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int desktopIdent {
            get {
                return this.desktopIdentField;
            }
            set {
                this.desktopIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool vds {
            get {
                return this.vdsField;
            }
            set {
                this.vdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class applicationWindowDetail : detailObject {
        
        private objectId displayApplicationIdField;
        
        private string windowStateField;
        
        private int windowIdentifierField;
        
        private string typeField;
        
        private double xField;
        
        private double yField;
        
        private double widthField;
        
        private double heightField;
        
        private string captionField;
        
        private string captionPatternField;
        
        private int zorderField;
        
        private bool moveToDefaultAreaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displayApplicationId {
            get {
                return this.displayApplicationIdField;
            }
            set {
                this.displayApplicationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string windowState {
            get {
                return this.windowStateField;
            }
            set {
                this.windowStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int windowIdentifier {
            get {
                return this.windowIdentifierField;
            }
            set {
                this.windowIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string captionPattern {
            get {
                return this.captionPatternField;
            }
            set {
                this.captionPatternField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int zorder {
            get {
                return this.zorderField;
            }
            set {
                this.zorderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool moveToDefaultArea {
            get {
                return this.moveToDefaultAreaField;
            }
            set {
                this.moveToDefaultAreaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class statusLabelDecoratorDetail : detailObject {
        
        private string initializingTextField;
        
        private string displayingTextField;
        
        private string frozenTextField;
        
        private string signalErrorTextField;
        
        private string noLicenseTextField;
        
        private string disabledTextField;
        
        private string noPermissionTextField;
        
        private objectId decoratorIdField;
        
        private labelDecoratorDetail mLabelDecoratorDetailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string initializingText {
            get {
                return this.initializingTextField;
            }
            set {
                this.initializingTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string displayingText {
            get {
                return this.displayingTextField;
            }
            set {
                this.displayingTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string frozenText {
            get {
                return this.frozenTextField;
            }
            set {
                this.frozenTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string signalErrorText {
            get {
                return this.signalErrorTextField;
            }
            set {
                this.signalErrorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string noLicenseText {
            get {
                return this.noLicenseTextField;
            }
            set {
                this.noLicenseTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string disabledText {
            get {
                return this.disabledTextField;
            }
            set {
                this.disabledTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string noPermissionText {
            get {
                return this.noPermissionTextField;
            }
            set {
                this.noPermissionTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public labelDecoratorDetail mLabelDecoratorDetail {
            get {
                return this.mLabelDecoratorDetailField;
            }
            set {
                this.mLabelDecoratorDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class staticTextDecoratorDetail : detailObject {
        
        private string textField;
        
        private systemVariableInfo systemVariableField;
        
        private int intervalField;
        
        private int stepField;
        
        private bool messageTickerEnabledField;
        
        private objectId decoratorIdField;
        
        private labelDecoratorDetail mLabelDecoratorDetailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public systemVariableInfo systemVariable {
            get {
                return this.systemVariableField;
            }
            set {
                this.systemVariableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int step {
            get {
                return this.stepField;
            }
            set {
                this.stepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool messageTickerEnabled {
            get {
                return this.messageTickerEnabledField;
            }
            set {
                this.messageTickerEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public labelDecoratorDetail mLabelDecoratorDetail {
            get {
                return this.mLabelDecoratorDetailField;
            }
            set {
                this.mLabelDecoratorDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class systemVariableInfo {
        
        private string nameField;
        
        private string typeField;
        
        private string valueField;
        
        private string descriptionField;
        
        private string tagsField;
        
        private objectId systemVariableIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId systemVariableId {
            get {
                return this.systemVariableIdField;
            }
            set {
                this.systemVariableIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class audioDecoratorDetail : detailObject {
        
        private int delayField;
        
        private int volumeField;
        
        private bool muteField;
        
        private string iconTypeField;
        
        private objectId decoratorIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mute {
            get {
                return this.muteField;
            }
            set {
                this.muteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iconType {
            get {
                return this.iconTypeField;
            }
            set {
                this.iconTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class statusImageDecoratorDetail : detailObject {
        
        private string initializingImageField;
        
        private string displayingImageField;
        
        private string frozenImageField;
        
        private string signalErrorImageField;
        
        private string noLicenseImageField;
        
        private string disabledImageField;
        
        private string noPermissionImageField;
        
        private imageDecoratorDetail2 imageDecoratorDetail2Field;
        
        private objectId decoratorIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string initializingImage {
            get {
                return this.initializingImageField;
            }
            set {
                this.initializingImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string displayingImage {
            get {
                return this.displayingImageField;
            }
            set {
                this.displayingImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string frozenImage {
            get {
                return this.frozenImageField;
            }
            set {
                this.frozenImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string signalErrorImage {
            get {
                return this.signalErrorImageField;
            }
            set {
                this.signalErrorImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string noLicenseImage {
            get {
                return this.noLicenseImageField;
            }
            set {
                this.noLicenseImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string disabledImage {
            get {
                return this.disabledImageField;
            }
            set {
                this.disabledImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string noPermissionImage {
            get {
                return this.noPermissionImageField;
            }
            set {
                this.noPermissionImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public imageDecoratorDetail2 imageDecoratorDetail2 {
            get {
                return this.imageDecoratorDetail2Field;
            }
            set {
                this.imageDecoratorDetail2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class imageDecoratorDetail2 : detailObject {
        
        private double widthField;
        
        private double heightField;
        
        private bool originalSizeField;
        
        private bool scalingEnabledField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool originalSize {
            get {
                return this.originalSizeField;
            }
            set {
                this.originalSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool scalingEnabled {
            get {
                return this.scalingEnabledField;
            }
            set {
                this.scalingEnabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class statusBorderDecoratorDetail : detailObject {
        
        private string[] statusTypeField;
        
        private string[] borderPositionField;
        
        private System.Nullable<int>[] separatorWidthField;
        
        private string[] styleField;
        
        private string[] blinkingStyleField;
        
        private System.Nullable<int>[] widthField;
        
        private System.Nullable<int>[] colorField;
        
        private System.Nullable<int>[] gapColorField;
        
        private System.Nullable<int>[] blinkingColorField;
        
        private System.Nullable<int>[] blinkingGapColorField;
        
        private System.Nullable<double>[] blinkingPeriodField;
        
        private System.Nullable<bool>[] blinkingField;
        
        private objectId decoratorIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("statusType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] statusType {
            get {
                return this.statusTypeField;
            }
            set {
                this.statusTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("borderPosition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] borderPosition {
            get {
                return this.borderPositionField;
            }
            set {
                this.borderPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("separatorWidth", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] separatorWidth {
            get {
                return this.separatorWidthField;
            }
            set {
                this.separatorWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("style", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("blinkingStyle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] blinkingStyle {
            get {
                return this.blinkingStyleField;
            }
            set {
                this.blinkingStyleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("width", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("color", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gapColor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] gapColor {
            get {
                return this.gapColorField;
            }
            set {
                this.gapColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("blinkingColor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] blinkingColor {
            get {
                return this.blinkingColorField;
            }
            set {
                this.blinkingColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("blinkingGapColor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] blinkingGapColor {
            get {
                return this.blinkingGapColorField;
            }
            set {
                this.blinkingGapColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("blinkingPeriod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] blinkingPeriod {
            get {
                return this.blinkingPeriodField;
            }
            set {
                this.blinkingPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("blinking", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<bool>[] blinking {
            get {
                return this.blinkingField;
            }
            set {
                this.blinkingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class videoSourceDetail : detailObject {
        
        private string urlField;
        
        private int audioDelayField;
        
        private string audioURLField;
        
        private objectId sourceIdField;
        
        private objectId remoteDesktopHostField;
        
        private string deviceURLField;
        
        private string deviceIdentifierField;
        
        private int inputNumberField;
        
        private string deviceHostNameField;
        
        private bool czEnabledField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int audioDelay {
            get {
                return this.audioDelayField;
            }
            set {
                this.audioDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string audioURL {
            get {
                return this.audioURLField;
            }
            set {
                this.audioURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId remoteDesktopHost {
            get {
                return this.remoteDesktopHostField;
            }
            set {
                this.remoteDesktopHostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deviceURL {
            get {
                return this.deviceURLField;
            }
            set {
                this.deviceURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deviceIdentifier {
            get {
                return this.deviceIdentifierField;
            }
            set {
                this.deviceIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int inputNumber {
            get {
                return this.inputNumberField;
            }
            set {
                this.inputNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deviceHostName {
            get {
                return this.deviceHostNameField;
            }
            set {
                this.deviceHostNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool czEnabled {
            get {
                return this.czEnabledField;
            }
            set {
                this.czEnabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class dateTimeDecoratorDetail : detailObject {
        
        private string dateFormatField;
        
        private string timeFormatField;
        
        private string dateFormatTypeField;
        
        private string timeFormatTypeField;
        
        private objectId decoratorIdField;
        
        private labelDecoratorDetail mLabelDecoratorDetailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateFormat {
            get {
                return this.dateFormatField;
            }
            set {
                this.dateFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timeFormat {
            get {
                return this.timeFormatField;
            }
            set {
                this.timeFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateFormatType {
            get {
                return this.dateFormatTypeField;
            }
            set {
                this.dateFormatTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timeFormatType {
            get {
                return this.timeFormatTypeField;
            }
            set {
                this.timeFormatTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public labelDecoratorDetail mLabelDecoratorDetail {
            get {
                return this.mLabelDecoratorDetailField;
            }
            set {
                this.mLabelDecoratorDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class perspectiveWindowDetail : detailObject {
        
        private objectId displayPerspectiveIdField;
        
        private string scaleModeField;
        
        private string perspectiveWindowStatusField;
        
        private int windowIdentifierField;
        
        private double xField;
        
        private double yField;
        
        private double widthField;
        
        private double heightField;
        
        private int topField;
        
        private int bottomField;
        
        private int rightField;
        
        private int leftField;
        
        private int zOrderField;
        
        private bool currentlySharedField;
        
        private bool streachedField;
        
        private string windowStateField;
        
        private string tagsField;
        
        private string descrptionField;
        
        private objectId windowIdField;
        
        private objectId displayIdField;
        
        private string captionField;
        
        private string captionPatternField;
        
        private string borderOptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displayPerspectiveId {
            get {
                return this.displayPerspectiveIdField;
            }
            set {
                this.displayPerspectiveIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string scaleMode {
            get {
                return this.scaleModeField;
            }
            set {
                this.scaleModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string perspectiveWindowStatus {
            get {
                return this.perspectiveWindowStatusField;
            }
            set {
                this.perspectiveWindowStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int windowIdentifier {
            get {
                return this.windowIdentifierField;
            }
            set {
                this.windowIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int zOrder {
            get {
                return this.zOrderField;
            }
            set {
                this.zOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool currentlyShared {
            get {
                return this.currentlySharedField;
            }
            set {
                this.currentlySharedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool streached {
            get {
                return this.streachedField;
            }
            set {
                this.streachedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string windowState {
            get {
                return this.windowStateField;
            }
            set {
                this.windowStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string descrption {
            get {
                return this.descrptionField;
            }
            set {
                this.descrptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId windowId {
            get {
                return this.windowIdField;
            }
            set {
                this.windowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displayId {
            get {
                return this.displayIdField;
            }
            set {
                this.displayIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string captionPattern {
            get {
                return this.captionPatternField;
            }
            set {
                this.captionPatternField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string borderOption {
            get {
                return this.borderOptionField;
            }
            set {
                this.borderOptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class logoDecoratorDetail : detailObject {
        
        private string imagePathField;
        
        private objectId decoratorIdField;
        
        private imageDecoratorDetail2 imageDecoratorDetail2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string imagePath {
            get {
                return this.imagePathField;
            }
            set {
                this.imagePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public imageDecoratorDetail2 imageDecoratorDetail2 {
            get {
                return this.imageDecoratorDetail2Field;
            }
            set {
                this.imageDecoratorDetail2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class imageDecoratorDetail : detailObject {
        
        private int widthField;
        
        private int heightField;
        
        private bool originalSizeField;
        
        private bool scalingEnabledField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool originalSize {
            get {
                return this.originalSizeField;
            }
            set {
                this.originalSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool scalingEnabled {
            get {
                return this.scalingEnabledField;
            }
            set {
                this.scalingEnabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class perspectivesDetail {
        
        private perspectiveInfo2 infoField;
        
        private displetDetail[] displetsDetailArrayField;
        
        private perspectiveWindowDetail[] perspectiveWindowDetailArrayField;
        
        private tilerInfo2 tilerInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public perspectiveInfo2 info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("displetsDetailArray", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public displetDetail[] displetsDetailArray {
            get {
                return this.displetsDetailArrayField;
            }
            set {
                this.displetsDetailArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("perspectiveWindowDetailArray", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public perspectiveWindowDetail[] perspectiveWindowDetailArray {
            get {
                return this.perspectiveWindowDetailArrayField;
            }
            set {
                this.perspectiveWindowDetailArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public tilerInfo2 tilerInfo {
            get {
                return this.tilerInfoField;
            }
            set {
                this.tilerInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class perspectiveInfo2 : infoObject {
        
        private bool audioVisibleField;
        
        private int backgroundColorField;
        
        private bool borderVisibleField;
        
        private string descriptionField;
        
        private int dockingWidthField;
        
        private double heightField;
        
        private int imageTransparencyField;
        
        private bool localField;
        
        private bool logoVisibleField;
        
        private string nameField;
        
        private objectId perspectiveIdField;
        
        private objectId imageIdField;
        
        private bool readOnlyField;
        
        private string tagsField;
        
        private bool tallyVisibleField;
        
        private bool tempCopyField;
        
        private objectId tilerField;
        
        private double widthField;
        
        private string perspectiveSnapshotField;
        
        private objectId[] displetIdsField;
        
        private objectId remoteDesktopHostField;
        
        private objectId vdsModeHostField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool audioVisible {
            get {
                return this.audioVisibleField;
            }
            set {
                this.audioVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int backgroundColor {
            get {
                return this.backgroundColorField;
            }
            set {
                this.backgroundColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool borderVisible {
            get {
                return this.borderVisibleField;
            }
            set {
                this.borderVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dockingWidth {
            get {
                return this.dockingWidthField;
            }
            set {
                this.dockingWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int imageTransparency {
            get {
                return this.imageTransparencyField;
            }
            set {
                this.imageTransparencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool logoVisible {
            get {
                return this.logoVisibleField;
            }
            set {
                this.logoVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId perspectiveId {
            get {
                return this.perspectiveIdField;
            }
            set {
                this.perspectiveIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId imageId {
            get {
                return this.imageIdField;
            }
            set {
                this.imageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool readOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool tallyVisible {
            get {
                return this.tallyVisibleField;
            }
            set {
                this.tallyVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool tempCopy {
            get {
                return this.tempCopyField;
            }
            set {
                this.tempCopyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId tiler {
            get {
                return this.tilerField;
            }
            set {
                this.tilerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string perspectiveSnapshot {
            get {
                return this.perspectiveSnapshotField;
            }
            set {
                this.perspectiveSnapshotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("displetIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] displetIds {
            get {
                return this.displetIdsField;
            }
            set {
                this.displetIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId remoteDesktopHost {
            get {
                return this.remoteDesktopHostField;
            }
            set {
                this.remoteDesktopHostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId vdsModeHost {
            get {
                return this.vdsModeHostField;
            }
            set {
                this.vdsModeHostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(decoratorWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(groupWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(roleWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(displetWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sourceRoutingConfigWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(windowWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(localeInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sourceRoutingConfigInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(tilerWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(applicationWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(displayWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(defaultAreaInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sourceInfo2))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sourceWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(perspectiveInfo2))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(perspectiveWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(userWrapper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ngpInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(windowInfo3))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(moduleInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(displayInfo3))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(userInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class infoObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class decoratorWrapper : infoObject {
        
        private decoratorInfo decoratorInfoField;
        
        private objectId decoratorIdField;
        
        private detailObject detailObjectField;
        
        private string decoratorTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decoratorInfo decoratorInfo {
            get {
                return this.decoratorInfoField;
            }
            set {
                this.decoratorInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId decoratorId {
            get {
                return this.decoratorIdField;
            }
            set {
                this.decoratorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public detailObject detailObject {
            get {
                return this.detailObjectField;
            }
            set {
                this.detailObjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string decoratorType {
            get {
                return this.decoratorTypeField;
            }
            set {
                this.decoratorTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class groupWrapper : infoObject {
        
        private groupInfo groupInfoField;
        
        private objectId groupIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public groupInfo groupInfo {
            get {
                return this.groupInfoField;
            }
            set {
                this.groupInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId groupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class groupInfo {
        
        private string nameField;
        
        private string descriptionField;
        
        private string tagsField;
        
        private objectId groupIdField;
        
        private bool enableGroupField;
        
        private bool defaultGroupField;
        
        private bool adminGroupField;
        
        private objectId[] defaultRoleField;
        
        private objectId[] rolesField;
        
        private objectId[] usersField;
        
        private string[] permissionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId groupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableGroup {
            get {
                return this.enableGroupField;
            }
            set {
                this.enableGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultGroup {
            get {
                return this.defaultGroupField;
            }
            set {
                this.defaultGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool adminGroup {
            get {
                return this.adminGroupField;
            }
            set {
                this.adminGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("defaultRole", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] defaultRole {
            get {
                return this.defaultRoleField;
            }
            set {
                this.defaultRoleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("roles", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("users", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("permissions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class roleWrapper : infoObject {
        
        private roleInfo roleInfoField;
        
        private objectId roleIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public roleInfo roleInfo {
            get {
                return this.roleInfoField;
            }
            set {
                this.roleInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId roleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class roleInfo {
        
        private string nameField;
        
        private string filterField;
        
        private string descriptionField;
        
        private string tagsField;
        
        private string imagePathField;
        
        private objectId roleIdField;
        
        private bool enableRoleField;
        
        private bool defaultRoleField;
        
        private bool systemRoleField;
        
        private objectId[] groupsField;
        
        private objectId[] usersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string imagePath {
            get {
                return this.imagePathField;
            }
            set {
                this.imagePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId roleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableRole {
            get {
                return this.enableRoleField;
            }
            set {
                this.enableRoleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultRole {
            get {
                return this.defaultRoleField;
            }
            set {
                this.defaultRoleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool systemRole {
            get {
                return this.systemRoleField;
            }
            set {
                this.systemRoleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("groups", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("users", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class displetWrapper : infoObject {
        
        private objectId displetIdField;
        
        private displetInfo2 displetInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displetId {
            get {
                return this.displetIdField;
            }
            set {
                this.displetIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displetInfo2 displetInfo {
            get {
                return this.displetInfoField;
            }
            set {
                this.displetInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class sourceRoutingConfigWrapper : infoObject {
        
        private sourceRoutingConfigInfo sourceRoutingConfigInfoField;
        
        private objectId sourceRoutingConfigIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sourceRoutingConfigInfo sourceRoutingConfigInfo {
            get {
                return this.sourceRoutingConfigInfoField;
            }
            set {
                this.sourceRoutingConfigInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceRoutingConfigId {
            get {
                return this.sourceRoutingConfigIdField;
            }
            set {
                this.sourceRoutingConfigIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class sourceRoutingConfigInfo : infoObject {
        
        private objectId configurationIdField;
        
        private string computerNameField;
        
        private objectId ngpIdField;
        
        private objectId[] localSrcIdsField;
        
        private string resolutionField;
        
        private int maxInsertionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId configurationId {
            get {
                return this.configurationIdField;
            }
            set {
                this.configurationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string computerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId ngpId {
            get {
                return this.ngpIdField;
            }
            set {
                this.ngpIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("localSrcIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] localSrcIds {
            get {
                return this.localSrcIdsField;
            }
            set {
                this.localSrcIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string resolution {
            get {
                return this.resolutionField;
            }
            set {
                this.resolutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxInsertions {
            get {
                return this.maxInsertionsField;
            }
            set {
                this.maxInsertionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class windowWrapper : infoObject {
        
        private windowInfo3 windowInfo3Field;
        
        private objectId windowIdField;
        
        private string windowTypeField;
        
        private detailObject detailObjectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public windowInfo3 windowInfo3 {
            get {
                return this.windowInfo3Field;
            }
            set {
                this.windowInfo3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId windowId {
            get {
                return this.windowIdField;
            }
            set {
                this.windowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string windowType {
            get {
                return this.windowTypeField;
            }
            set {
                this.windowTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public detailObject detailObject {
            get {
                return this.detailObjectField;
            }
            set {
                this.detailObjectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class windowInfo3 : infoObject {
        
        private string typeField;
        
        private double xField;
        
        private double yField;
        
        private double widthField;
        
        private double heightField;
        
        private int topField;
        
        private int bottomField;
        
        private int rightField;
        
        private int leftField;
        
        private int zOrderField;
        
        private bool currentlySharedField;
        
        private string tagsField;
        
        private string descriptionField;
        
        private objectId windowIdField;
        
        private bool stretchedField;
        
        private string windowStateField;
        
        private objectId displayIdField;
        
        private string captionField;
        
        private string captionPatternField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int zOrder {
            get {
                return this.zOrderField;
            }
            set {
                this.zOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool currentlyShared {
            get {
                return this.currentlySharedField;
            }
            set {
                this.currentlySharedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId windowId {
            get {
                return this.windowIdField;
            }
            set {
                this.windowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool stretched {
            get {
                return this.stretchedField;
            }
            set {
                this.stretchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string windowState {
            get {
                return this.windowStateField;
            }
            set {
                this.windowStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displayId {
            get {
                return this.displayIdField;
            }
            set {
                this.displayIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string captionPattern {
            get {
                return this.captionPatternField;
            }
            set {
                this.captionPatternField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class localeInfo : infoObject {
        
        private string mLanguageField;
        
        private string mCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mLanguage {
            get {
                return this.mLanguageField;
            }
            set {
                this.mLanguageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mCode {
            get {
                return this.mCodeField;
            }
            set {
                this.mCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class tilerWrapper : infoObject {
        
        private tilerInfo2 tilerInfo2Field;
        
        private objectId tilerIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public tilerInfo2 tilerInfo2 {
            get {
                return this.tilerInfo2Field;
            }
            set {
                this.tilerInfo2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId tilerId {
            get {
                return this.tilerIdField;
            }
            set {
                this.tilerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class tilerInfo2 {
        
        private string nameField;
        
        private double widthField;
        
        private double heightField;
        
        private string tagsField;
        
        private string descriptionField;
        
        private objectId tilerIdField;
        
        private bool isGridField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId tilerId {
            get {
                return this.tilerIdField;
            }
            set {
                this.tilerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isGrid {
            get {
                return this.isGridField;
            }
            set {
                this.isGridField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class applicationWrapper : infoObject {
        
        private applicationInfo applicationInfoField;
        
        private objectId applicationIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public applicationInfo applicationInfo {
            get {
                return this.applicationInfoField;
            }
            set {
                this.applicationInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId applicationId {
            get {
                return this.applicationIdField;
            }
            set {
                this.applicationIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class applicationInfo {
        
        private string nameField;
        
        private string descriptionField;
        
        private string commandLineArgField;
        
        private string windowTitleField;
        
        private string pathField;
        
        private string workingDirField;
        
        private string tagsField;
        
        private bool handleByCaptionField;
        
        private objectId applicationIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string commandLineArg {
            get {
                return this.commandLineArgField;
            }
            set {
                this.commandLineArgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string windowTitle {
            get {
                return this.windowTitleField;
            }
            set {
                this.windowTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string workingDir {
            get {
                return this.workingDirField;
            }
            set {
                this.workingDirField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool handleByCaption {
            get {
                return this.handleByCaptionField;
            }
            set {
                this.handleByCaptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId applicationId {
            get {
                return this.applicationIdField;
            }
            set {
                this.applicationIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class displayWrapper : infoObject {
        
        private displayInfo3 displayInfoField;
        
        private objectId displayIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displayInfo3 displayInfo {
            get {
                return this.displayInfoField;
            }
            set {
                this.displayInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displayId {
            get {
                return this.displayIdField;
            }
            set {
                this.displayIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class displayInfo3 : infoObject {
        
        private string nameField;
        
        private string descriptionField;
        
        private double heightField;
        
        private double widthField;
        
        private bool onlineField;
        
        private bool acknowledgedField;
        
        private int moduleXField;
        
        private int moduleYField;
        
        private int xmoduleresolutionField;
        
        private int ymoduleresolutionField;
        
        private string computerNameField;
        
        private string tagsField;
        
        private int dockingWidthField;
        
        private objectId tilerField;
        
        private objectId squidModeConfigurationField;
        
        private objectId autoloadLayoutField;
        
        private objectId autoloadPerspectiveField;
        
        private objectId displayIdField;
        
        private string startUpActionField;
        
        private string displayTypeField;
        
        private objectId[] ngpsField;
        
        private System.Nullable<double>[] xNGPPositionsField;
        
        private System.Nullable<double>[] yNGPPositionsField;
        
        private string windowOptionField;
        
        private string displaySnapshotField;
        
        private objectId[] snapShotIdsField;
        
        private objectId[] applicationIdsField;
        
        private objectId[] moduleIdsField;
        
        private objectId[] externalWindowIdsField;
        
        private bool vdsDisplayField;
        
        private int uIdField;
        
        private string ngpDisplayLocaleField;
        
        private bool defaultAreaEnabledField;
        
        private objectId defaultAreaIdField;
        
        private bool isDecoderDisplayField;
        
        private bool sourceRoutingRequiredField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acknowledged {
            get {
                return this.acknowledgedField;
            }
            set {
                this.acknowledgedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int moduleX {
            get {
                return this.moduleXField;
            }
            set {
                this.moduleXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int moduleY {
            get {
                return this.moduleYField;
            }
            set {
                this.moduleYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int xmoduleresolution {
            get {
                return this.xmoduleresolutionField;
            }
            set {
                this.xmoduleresolutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ymoduleresolution {
            get {
                return this.ymoduleresolutionField;
            }
            set {
                this.ymoduleresolutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string computerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dockingWidth {
            get {
                return this.dockingWidthField;
            }
            set {
                this.dockingWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId tiler {
            get {
                return this.tilerField;
            }
            set {
                this.tilerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId squidModeConfiguration {
            get {
                return this.squidModeConfigurationField;
            }
            set {
                this.squidModeConfigurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId autoloadLayout {
            get {
                return this.autoloadLayoutField;
            }
            set {
                this.autoloadLayoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId autoloadPerspective {
            get {
                return this.autoloadPerspectiveField;
            }
            set {
                this.autoloadPerspectiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displayId {
            get {
                return this.displayIdField;
            }
            set {
                this.displayIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startUpAction {
            get {
                return this.startUpActionField;
            }
            set {
                this.startUpActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string displayType {
            get {
                return this.displayTypeField;
            }
            set {
                this.displayTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ngps", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] ngps {
            get {
                return this.ngpsField;
            }
            set {
                this.ngpsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xNGPPositions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] xNGPPositions {
            get {
                return this.xNGPPositionsField;
            }
            set {
                this.xNGPPositionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("yNGPPositions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] yNGPPositions {
            get {
                return this.yNGPPositionsField;
            }
            set {
                this.yNGPPositionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string windowOption {
            get {
                return this.windowOptionField;
            }
            set {
                this.windowOptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string displaySnapshot {
            get {
                return this.displaySnapshotField;
            }
            set {
                this.displaySnapshotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("snapShotIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] snapShotIds {
            get {
                return this.snapShotIdsField;
            }
            set {
                this.snapShotIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("applicationIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] applicationIds {
            get {
                return this.applicationIdsField;
            }
            set {
                this.applicationIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("moduleIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] moduleIds {
            get {
                return this.moduleIdsField;
            }
            set {
                this.moduleIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("externalWindowIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] externalWindowIds {
            get {
                return this.externalWindowIdsField;
            }
            set {
                this.externalWindowIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool vdsDisplay {
            get {
                return this.vdsDisplayField;
            }
            set {
                this.vdsDisplayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int uId {
            get {
                return this.uIdField;
            }
            set {
                this.uIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ngpDisplayLocale {
            get {
                return this.ngpDisplayLocaleField;
            }
            set {
                this.ngpDisplayLocaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool defaultAreaEnabled {
            get {
                return this.defaultAreaEnabledField;
            }
            set {
                this.defaultAreaEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId defaultAreaId {
            get {
                return this.defaultAreaIdField;
            }
            set {
                this.defaultAreaIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isDecoderDisplay {
            get {
                return this.isDecoderDisplayField;
            }
            set {
                this.isDecoderDisplayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sourceRoutingRequired {
            get {
                return this.sourceRoutingRequiredField;
            }
            set {
                this.sourceRoutingRequiredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class defaultAreaInfo : infoObject {
        
        private objectId idField;
        
        private double xField;
        
        private double yField;
        
        private double widthField;
        
        private double heightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class sourceInfo2 : infoObject {
        
        private string nameField;
        
        private string descriptionField;
        
        private string typeField;
        
        private bool onlineField;
        
        private bool acknowledgedField;
        
        private string tagsField;
        
        private double widthField;
        
        private double heightField;
        
        private objectId sourceIdField;
        
        private string subTypeField;
        
        private bool autoDetectedField;
        
        private string timezoneField;
        
        private string snapshotPathField;
        
        private bool vdsEnabledField;
        
        private int vdsDisplayRefField;
        
        private bool viewOnlyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acknowledged {
            get {
                return this.acknowledgedField;
            }
            set {
                this.acknowledgedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool autoDetected {
            get {
                return this.autoDetectedField;
            }
            set {
                this.autoDetectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timezone {
            get {
                return this.timezoneField;
            }
            set {
                this.timezoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string snapshotPath {
            get {
                return this.snapshotPathField;
            }
            set {
                this.snapshotPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool vdsEnabled {
            get {
                return this.vdsEnabledField;
            }
            set {
                this.vdsEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int vdsDisplayRef {
            get {
                return this.vdsDisplayRefField;
            }
            set {
                this.vdsDisplayRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool viewOnly {
            get {
                return this.viewOnlyField;
            }
            set {
                this.viewOnlyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class sourceWrapper : infoObject {
        
        private sourceInfo2 sourceinfoField;
        
        private objectId sourceIdField;
        
        private detailObject anDetailField;
        
        private string sourceTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sourceInfo2 sourceinfo {
            get {
                return this.sourceinfoField;
            }
            set {
                this.sourceinfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public detailObject anDetail {
            get {
                return this.anDetailField;
            }
            set {
                this.anDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class perspectiveWrapper : infoObject {
        
        private perspectiveInfo2 perspectiveinfoField;
        
        private objectId perspectiveIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public perspectiveInfo2 perspectiveinfo {
            get {
                return this.perspectiveinfoField;
            }
            set {
                this.perspectiveinfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId perspectiveId {
            get {
                return this.perspectiveIdField;
            }
            set {
                this.perspectiveIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class userWrapper : infoObject {
        
        private userInfo userInfoField;
        
        private objectId userIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userInfo userInfo {
            get {
                return this.userInfoField;
            }
            set {
                this.userInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class userInfo : infoObject {
        
        private string nameField;
        
        private string fullNameField;
        
        private string passwordField;
        
        private string descriptionField;
        
        private string tagsField;
        
        private string imagePathField;
        
        private objectId userIdField;
        
        private bool accountEnabledField;
        
        private bool acknowledgedField;
        
        private bool isSystemUserField;
        
        private bool isAPIUserField;
        
        private bool isBuiltInUserField;
        
        private bool isDefaultRoleActiveField;
        
        private objectId[] groupsField;
        
        private objectId[] rolesField;
        
        private objectId[] defaultRolesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string imagePath {
            get {
                return this.imagePathField;
            }
            set {
                this.imagePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool accountEnabled {
            get {
                return this.accountEnabledField;
            }
            set {
                this.accountEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acknowledged {
            get {
                return this.acknowledgedField;
            }
            set {
                this.acknowledgedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isSystemUser {
            get {
                return this.isSystemUserField;
            }
            set {
                this.isSystemUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isAPIUser {
            get {
                return this.isAPIUserField;
            }
            set {
                this.isAPIUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isBuiltInUser {
            get {
                return this.isBuiltInUserField;
            }
            set {
                this.isBuiltInUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isDefaultRoleActive {
            get {
                return this.isDefaultRoleActiveField;
            }
            set {
                this.isDefaultRoleActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("groups", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("roles", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("defaultRoles", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] defaultRoles {
            get {
                return this.defaultRolesField;
            }
            set {
                this.defaultRolesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class ngpInfo : infoObject {
        
        private objectId ngpIdField;
        
        private string nameField;
        
        private string[] ipAddressesField;
        
        private string hostNameField;
        
        private int moduleXField;
        
        private int moduleYField;
        
        private int xModuleResolutionField;
        
        private int yModuleResolutionField;
        
        private bool isOnlineField;
        
        private string niceTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId ngpId {
            get {
                return this.ngpIdField;
            }
            set {
                this.ngpIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ipAddresses", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] ipAddresses {
            get {
                return this.ipAddressesField;
            }
            set {
                this.ipAddressesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostName {
            get {
                return this.hostNameField;
            }
            set {
                this.hostNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int moduleX {
            get {
                return this.moduleXField;
            }
            set {
                this.moduleXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int moduleY {
            get {
                return this.moduleYField;
            }
            set {
                this.moduleYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int xModuleResolution {
            get {
                return this.xModuleResolutionField;
            }
            set {
                this.xModuleResolutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int yModuleResolution {
            get {
                return this.yModuleResolutionField;
            }
            set {
                this.yModuleResolutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isOnline {
            get {
                return this.isOnlineField;
            }
            set {
                this.isOnlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string niceType {
            get {
                return this.niceTypeField;
            }
            set {
                this.niceTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class moduleInfo : infoObject {
        
        private objectId moduleIdField;
        
        private double mxField;
        
        private double myField;
        
        private double mWidthField;
        
        private double mHeightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId moduleId {
            get {
                return this.moduleIdField;
            }
            set {
                this.moduleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double mX {
            get {
                return this.mxField;
            }
            set {
                this.mxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double mY {
            get {
                return this.myField;
            }
            set {
                this.myField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double mWidth {
            get {
                return this.mWidthField;
            }
            set {
                this.mWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double mHeight {
            get {
                return this.mHeightField;
            }
            set {
                this.mHeightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class tileDetail2 {
        
        private System.Nullable<double>[] xField;
        
        private System.Nullable<double>[] yField;
        
        private System.Nullable<double>[] widthField;
        
        private System.Nullable<double>[] heightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("x", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("y", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("width", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("height", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class version {
        
        private string buildInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string buildInfo {
            get {
                return this.buildInfoField;
            }
            set {
                this.buildInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class configurationInfo {
        
        private string nameField;
        
        private string fileNameField;
        
        private long createdDateField;
        
        private string descriptionField;
        
        private string tagsField;
        
        private string typeField;
        
        private long lastRunField;
        
        private objectId configrationIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long lastRun {
            get {
                return this.lastRunField;
            }
            set {
                this.lastRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId configrationId {
            get {
                return this.configrationIdField;
            }
            set {
                this.configrationIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class messageInfo {
        
        private string senderField;
        
        private string targetField;
        
        private long timeStampField;
        
        private string messageField;
        
        private string tagsField;
        
        private objectId messageIdField;
        
        private string senderUserNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string senderUserName {
            get {
                return this.senderUserNameField;
            }
            set {
                this.senderUserNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class perspectiveInfo {
        
        private bool audioVisibleField;
        
        private int backgroundColorField;
        
        private bool borderVisibleField;
        
        private string descriptionField;
        
        private int dockingWidthField;
        
        private int heightField;
        
        private int imageTransparencyField;
        
        private bool localField;
        
        private bool logoVisibleField;
        
        private string nameField;
        
        private objectId perspectiveIdField;
        
        private objectId imageIdField;
        
        private bool readOnlyField;
        
        private string tagsField;
        
        private bool tallyVisibleField;
        
        private bool tempCopyField;
        
        private objectId tilerField;
        
        private int widthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool audioVisible {
            get {
                return this.audioVisibleField;
            }
            set {
                this.audioVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int backgroundColor {
            get {
                return this.backgroundColorField;
            }
            set {
                this.backgroundColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool borderVisible {
            get {
                return this.borderVisibleField;
            }
            set {
                this.borderVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dockingWidth {
            get {
                return this.dockingWidthField;
            }
            set {
                this.dockingWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int imageTransparency {
            get {
                return this.imageTransparencyField;
            }
            set {
                this.imageTransparencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool logoVisible {
            get {
                return this.logoVisibleField;
            }
            set {
                this.logoVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId perspectiveId {
            get {
                return this.perspectiveIdField;
            }
            set {
                this.perspectiveIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId imageId {
            get {
                return this.imageIdField;
            }
            set {
                this.imageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool readOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool tallyVisible {
            get {
                return this.tallyVisibleField;
            }
            set {
                this.tallyVisibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool tempCopy {
            get {
                return this.tempCopyField;
            }
            set {
                this.tempCopyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId tiler {
            get {
                return this.tilerField;
            }
            set {
                this.tilerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class squidModeConfigurationInfo {
        
        private objectId leftEdgeSourceField;
        
        private objectId rightEdgeSourceField;
        
        private objectId topEdgeSourceField;
        
        private objectId bottomEdgeSourceField;
        
        private bool enabledField;
        
        private int borderWidthField;
        
        private int hoverDelayField;
        
        private objectId squidModeConfigurationIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId leftEdgeSource {
            get {
                return this.leftEdgeSourceField;
            }
            set {
                this.leftEdgeSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId rightEdgeSource {
            get {
                return this.rightEdgeSourceField;
            }
            set {
                this.rightEdgeSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId topEdgeSource {
            get {
                return this.topEdgeSourceField;
            }
            set {
                this.topEdgeSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId bottomEdgeSource {
            get {
                return this.bottomEdgeSourceField;
            }
            set {
                this.bottomEdgeSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int borderWidth {
            get {
                return this.borderWidthField;
            }
            set {
                this.borderWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hoverDelay {
            get {
                return this.hoverDelayField;
            }
            set {
                this.hoverDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId squidModeConfigurationId {
            get {
                return this.squidModeConfigurationIdField;
            }
            set {
                this.squidModeConfigurationIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class nodeInfo {
        
        private string nodeNameField;
        
        private string nodeIPField;
        
        private bool isOnlineField;
        
        private string nodeRoleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nodeName {
            get {
                return this.nodeNameField;
            }
            set {
                this.nodeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nodeIP {
            get {
                return this.nodeIPField;
            }
            set {
                this.nodeIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isOnline {
            get {
                return this.isOnlineField;
            }
            set {
                this.isOnlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nodeRole {
            get {
                return this.nodeRoleField;
            }
            set {
                this.nodeRoleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class clusterInfo {
        
        private string virtualIPField;
        
        private string partitionNameField;
        
        private nodeInfo[] nodesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string virtualIP {
            get {
                return this.virtualIPField;
            }
            set {
                this.virtualIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string partitionName {
            get {
                return this.partitionNameField;
            }
            set {
                this.partitionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("nodes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public nodeInfo[] nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class tileDetail {
        
        private System.Nullable<int>[] xField;
        
        private System.Nullable<int>[] yField;
        
        private System.Nullable<int>[] widthField;
        
        private System.Nullable<int>[] heightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("x", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("y", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("width", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("height", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class videoAndAudioDefaultSettingsInfo {
        
        private string templateUrlForVideoField;
        
        private long ipOffsetForVideoField;
        
        private int decodingDelayForAudioField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string templateUrlForVideo {
            get {
                return this.templateUrlForVideoField;
            }
            set {
                this.templateUrlForVideoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long ipOffsetForVideo {
            get {
                return this.ipOffsetForVideoField;
            }
            set {
                this.ipOffsetForVideoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int decodingDelayForAudio {
            get {
                return this.decodingDelayForAudioField;
            }
            set {
                this.decodingDelayForAudioField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class miscellaneousDefaultSettingsInfo {
        
        private bool autoDetectionEnabledField;
        
        private bool autoConfigurationEnabledField;
        
        private long timeIntervalField;
        
        private string updateModeField;
        
        private long reconnectTimeIntervalField;
        
        private string unAcknowledgedSettingsField;
        
        private string securitySettingsField;
        
        private int snapshotPictureQualityField;
        
        private int displayAgentCPULoadField;
        
        private int sidebarCPULoadField;
        
        private string[] rolesForAutoDetectedObjectsField;
        
        private string imagePathForBlockedContentField;
        
        private int deviceDiscoveryCycleIntervalField;
        
        private bool enableDeviceReadOnlyField;
        
        private bool enableMulticastField;
        
        private bool enableTemplateAssignmentField;
        
        private string axisDefaultUserField;
        
        private string axisDefaultPasswordField;
        
        private string networkInterfaceField;
        
        private string startAddressRangeField;
        
        private string endAddressRangeField;
        
        private string addressExcludeListField;
        
        private string[] networkInterfaceKeysField;
        
        private string[] networkInterfaceValuesField;
        
        private string imagePathForAppSourceNotRenderingField;
        
        private int waitTimeToStopRenderingField;
        
        private int disableRendererDefaultColorField;
        
        private string disableRendererDefaultColorWithSysVariableField;
        
        private string disableRendererDefaultColorWithSysPropertyField;
        
        private string ngpDisplayDefaultLocaleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool autoDetectionEnabled {
            get {
                return this.autoDetectionEnabledField;
            }
            set {
                this.autoDetectionEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool autoConfigurationEnabled {
            get {
                return this.autoConfigurationEnabledField;
            }
            set {
                this.autoConfigurationEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long timeInterval {
            get {
                return this.timeIntervalField;
            }
            set {
                this.timeIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string updateMode {
            get {
                return this.updateModeField;
            }
            set {
                this.updateModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long reconnectTimeInterval {
            get {
                return this.reconnectTimeIntervalField;
            }
            set {
                this.reconnectTimeIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unAcknowledgedSettings {
            get {
                return this.unAcknowledgedSettingsField;
            }
            set {
                this.unAcknowledgedSettingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string securitySettings {
            get {
                return this.securitySettingsField;
            }
            set {
                this.securitySettingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int snapshotPictureQuality {
            get {
                return this.snapshotPictureQualityField;
            }
            set {
                this.snapshotPictureQualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int displayAgentCPULoad {
            get {
                return this.displayAgentCPULoadField;
            }
            set {
                this.displayAgentCPULoadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sidebarCPULoad {
            get {
                return this.sidebarCPULoadField;
            }
            set {
                this.sidebarCPULoadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("rolesForAutoDetectedObjects", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] rolesForAutoDetectedObjects {
            get {
                return this.rolesForAutoDetectedObjectsField;
            }
            set {
                this.rolesForAutoDetectedObjectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string imagePathForBlockedContent {
            get {
                return this.imagePathForBlockedContentField;
            }
            set {
                this.imagePathForBlockedContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int deviceDiscoveryCycleInterval {
            get {
                return this.deviceDiscoveryCycleIntervalField;
            }
            set {
                this.deviceDiscoveryCycleIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableDeviceReadOnly {
            get {
                return this.enableDeviceReadOnlyField;
            }
            set {
                this.enableDeviceReadOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableMulticast {
            get {
                return this.enableMulticastField;
            }
            set {
                this.enableMulticastField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableTemplateAssignment {
            get {
                return this.enableTemplateAssignmentField;
            }
            set {
                this.enableTemplateAssignmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string axisDefaultUser {
            get {
                return this.axisDefaultUserField;
            }
            set {
                this.axisDefaultUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string axisDefaultPassword {
            get {
                return this.axisDefaultPasswordField;
            }
            set {
                this.axisDefaultPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkInterface {
            get {
                return this.networkInterfaceField;
            }
            set {
                this.networkInterfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startAddressRange {
            get {
                return this.startAddressRangeField;
            }
            set {
                this.startAddressRangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endAddressRange {
            get {
                return this.endAddressRangeField;
            }
            set {
                this.endAddressRangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addressExcludeList {
            get {
                return this.addressExcludeListField;
            }
            set {
                this.addressExcludeListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("networkInterfaceKeys", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] networkInterfaceKeys {
            get {
                return this.networkInterfaceKeysField;
            }
            set {
                this.networkInterfaceKeysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("networkInterfaceValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] networkInterfaceValues {
            get {
                return this.networkInterfaceValuesField;
            }
            set {
                this.networkInterfaceValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string imagePathForAppSourceNotRendering {
            get {
                return this.imagePathForAppSourceNotRenderingField;
            }
            set {
                this.imagePathForAppSourceNotRenderingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int waitTimeToStopRendering {
            get {
                return this.waitTimeToStopRenderingField;
            }
            set {
                this.waitTimeToStopRenderingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int disableRendererDefaultColor {
            get {
                return this.disableRendererDefaultColorField;
            }
            set {
                this.disableRendererDefaultColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string disableRendererDefaultColorWithSysVariable {
            get {
                return this.disableRendererDefaultColorWithSysVariableField;
            }
            set {
                this.disableRendererDefaultColorWithSysVariableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string disableRendererDefaultColorWithSysProperty {
            get {
                return this.disableRendererDefaultColorWithSysPropertyField;
            }
            set {
                this.disableRendererDefaultColorWithSysPropertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ngpDisplayDefaultLocale {
            get {
                return this.ngpDisplayDefaultLocaleField;
            }
            set {
                this.ngpDisplayDefaultLocaleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class snapshotInfo {
        
        private string nameField;
        
        private string descriptionField;
        
        private objectId[] windowIdsField;
        
        private objectId[] perspectiveIdsField;
        
        private objectId snapshotIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("windowIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] windowIds {
            get {
                return this.windowIdsField;
            }
            set {
                this.windowIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("perspectiveIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] perspectiveIds {
            get {
                return this.perspectiveIdsField;
            }
            set {
                this.perspectiveIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId snapshotId {
            get {
                return this.snapshotIdField;
            }
            set {
                this.snapshotIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class imageInfo {
        
        private objectId imageIdField;
        
        private string nameField;
        
        private string imagePathField;
        
        private string imagePositionField;
        
        private double imageHeightField;
        
        private double imageWidthField;
        
        private int bottomMarginField;
        
        private int topMarginField;
        
        private int leftMarginField;
        
        private int rightMarginField;
        
        private string imageScaleModeField;
        
        private string imageSizeModeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId imageId {
            get {
                return this.imageIdField;
            }
            set {
                this.imageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string imagePath {
            get {
                return this.imagePathField;
            }
            set {
                this.imagePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string imagePosition {
            get {
                return this.imagePositionField;
            }
            set {
                this.imagePositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double imageHeight {
            get {
                return this.imageHeightField;
            }
            set {
                this.imageHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double imageWidth {
            get {
                return this.imageWidthField;
            }
            set {
                this.imageWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int bottomMargin {
            get {
                return this.bottomMarginField;
            }
            set {
                this.bottomMarginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int topMargin {
            get {
                return this.topMarginField;
            }
            set {
                this.topMarginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int leftMargin {
            get {
                return this.leftMarginField;
            }
            set {
                this.leftMarginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int rightMargin {
            get {
                return this.rightMarginField;
            }
            set {
                this.rightMarginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string imageScaleMode {
            get {
                return this.imageScaleModeField;
            }
            set {
                this.imageScaleModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string imageSizeMode {
            get {
                return this.imageSizeModeField;
            }
            set {
                this.imageSizeModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class keyboardShortcutDefaultSettingsInfo {
        
        private string keyboardShortcutForLayoutField;
        
        private string layoutBindedWithShortcutKeyField;
        
        private string displayBindedWithShortcutKeyField;
        
        private objectId shortcutKeyIdField;
        
        private objectId displayIDBindedWithShortcutKeyField;
        
        private objectId layoutIDBindedWithShortcutKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string keyboardShortcutForLayout {
            get {
                return this.keyboardShortcutForLayoutField;
            }
            set {
                this.keyboardShortcutForLayoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string layoutBindedWithShortcutKey {
            get {
                return this.layoutBindedWithShortcutKeyField;
            }
            set {
                this.layoutBindedWithShortcutKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string displayBindedWithShortcutKey {
            get {
                return this.displayBindedWithShortcutKeyField;
            }
            set {
                this.displayBindedWithShortcutKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId shortcutKeyId {
            get {
                return this.shortcutKeyIdField;
            }
            set {
                this.shortcutKeyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displayIDBindedWithShortcutKey {
            get {
                return this.displayIDBindedWithShortcutKeyField;
            }
            set {
                this.displayIDBindedWithShortcutKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId layoutIDBindedWithShortcutKey {
            get {
                return this.layoutIDBindedWithShortcutKeyField;
            }
            set {
                this.layoutIDBindedWithShortcutKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class licenseInfo {
        
        private string projectNameField;
        
        private string projectIdField;
        
        private string pinCodeField;
        
        private string customerField;
        
        private int numberDisplayLicensesField;
        
        private int numberWorkstationLicensesField;
        
        private int numberSourceLicensesField;
        
        private int numberServerLicensesField;
        
        private int numberCMSLegacyAPILicensesField;
        
        private int numberCMSLanguageSupportLicensesField;
        
        private int daysRemainingField;
        
        private string licenseStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string projectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pinCode {
            get {
                return this.pinCodeField;
            }
            set {
                this.pinCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberDisplayLicenses {
            get {
                return this.numberDisplayLicensesField;
            }
            set {
                this.numberDisplayLicensesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberWorkstationLicenses {
            get {
                return this.numberWorkstationLicensesField;
            }
            set {
                this.numberWorkstationLicensesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberSourceLicenses {
            get {
                return this.numberSourceLicensesField;
            }
            set {
                this.numberSourceLicensesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberServerLicenses {
            get {
                return this.numberServerLicensesField;
            }
            set {
                this.numberServerLicensesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberCMSLegacyAPILicenses {
            get {
                return this.numberCMSLegacyAPILicensesField;
            }
            set {
                this.numberCMSLegacyAPILicensesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberCMSLanguageSupportLicenses {
            get {
                return this.numberCMSLanguageSupportLicensesField;
            }
            set {
                this.numberCMSLanguageSupportLicensesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int daysRemaining {
            get {
                return this.daysRemainingField;
            }
            set {
                this.daysRemainingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string licenseStatus {
            get {
                return this.licenseStatusField;
            }
            set {
                this.licenseStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class objectSystemVariablesInfo {
        
        private string propertyNameField;
        
        private int systemVariableIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string propertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int systemVariableId {
            get {
                return this.systemVariableIdField;
            }
            set {
                this.systemVariableIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class displayInfo {
        
        private string nameField;
        
        private string descriptionField;
        
        private int heightField;
        
        private int widthField;
        
        private bool onlineField;
        
        private bool acknowledgedField;
        
        private int moduleXField;
        
        private int moduleYField;
        
        private int xModuleResolutionField;
        
        private int yModuleResolutionField;
        
        private string computerNameField;
        
        private bool displayWallField;
        
        private string tagsField;
        
        private int dockingWidthField;
        
        private objectId tilerField;
        
        private objectId squidModeConfigurationField;
        
        private objectId autoloadLayoutField;
        
        private objectId autoloadPerspectiveField;
        
        private objectId displayIdField;
        
        private string startUpActionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acknowledged {
            get {
                return this.acknowledgedField;
            }
            set {
                this.acknowledgedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int moduleX {
            get {
                return this.moduleXField;
            }
            set {
                this.moduleXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int moduleY {
            get {
                return this.moduleYField;
            }
            set {
                this.moduleYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int xModuleResolution {
            get {
                return this.xModuleResolutionField;
            }
            set {
                this.xModuleResolutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int yModuleResolution {
            get {
                return this.yModuleResolutionField;
            }
            set {
                this.yModuleResolutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string computerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayWall {
            get {
                return this.displayWallField;
            }
            set {
                this.displayWallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dockingWidth {
            get {
                return this.dockingWidthField;
            }
            set {
                this.dockingWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId tiler {
            get {
                return this.tilerField;
            }
            set {
                this.tilerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId squidModeConfiguration {
            get {
                return this.squidModeConfigurationField;
            }
            set {
                this.squidModeConfigurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId autoloadLayout {
            get {
                return this.autoloadLayoutField;
            }
            set {
                this.autoloadLayoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId autoloadPerspective {
            get {
                return this.autoloadPerspectiveField;
            }
            set {
                this.autoloadPerspectiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displayId {
            get {
                return this.displayIdField;
            }
            set {
                this.displayIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startUpAction {
            get {
                return this.startUpActionField;
            }
            set {
                this.startUpActionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class sourceInfo {
        
        private string nameField;
        
        private string descriptionField;
        
        private string typeField;
        
        private bool onlineField;
        
        private bool acknowledgedField;
        
        private string tagsField;
        
        private int widthField;
        
        private int heightField;
        
        private objectId sourceIdField;
        
        private bool autoDetectedField;
        
        private string timezoneField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acknowledged {
            get {
                return this.acknowledgedField;
            }
            set {
                this.acknowledgedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool autoDetected {
            get {
                return this.autoDetectedField;
            }
            set {
                this.autoDetectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timezone {
            get {
                return this.timezoneField;
            }
            set {
                this.timezoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class sidebarDefaultSettingInfo {
        
        private bool activeModeEnabledField;
        
        private string startUpActionField;
        
        private objectId autoloadPerspectiveField;
        
        private bool renderingLocalSourceEnabledField;
        
        private bool remoteDesktopControlEnabledField;
        
        private objectId displayTilerField;
        
        private bool displaySnappingEnabledField;
        
        private int displaySnappingWidthField;
        
        private bool liveViewDisplayEnabledField;
        
        private double widthField;
        
        private double heightField;
        
        private string scaleModeField;
        
        private objectId perspectiveTilerField;
        
        private bool perspectiveSnappingEnabledField;
        
        private int perspectiveSnappingWidthField;
        
        private string positionField;
        
        private long sidebarWidthField;
        
        private bool openAtStartupEnabledField;
        
        private bool showToolTipField;
        
        private bool showSnapshotToolTipField;
        
        private objectId defaultPerspectiveImageField;
        
        private int perspectiveDefaultBackgroundColorField;
        
        private string perspectiveDefaultBackGroundColorWithSysVariableField;
        
        private string perspectiveDefaultBackGroundColorWithSysPropertyField;
        
        private int perspectiveDefaultTransparencyField;
        
        private int miniDisplayColorField;
        
        private string miniDisplayColorWithSysVariableField;
        
        private string miniDisplayColorWithSysPropertyField;
        
        private int miniDisplayTilingColorField;
        
        private string miniDisplayTilingColorWithSysVariableField;
        
        private string miniDisplayTilingColorWithSysPropertyField;
        
        private int miniDisplayUncoveredAreaColorField;
        
        private string miniDisplayUncoveredAreaColorWithSysVariableField;
        
        private string miniDisplayUncoveredAreaColorWithSysPropertyField;
        
        private bool showGuidedTourField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool activeModeEnabled {
            get {
                return this.activeModeEnabledField;
            }
            set {
                this.activeModeEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startUpAction {
            get {
                return this.startUpActionField;
            }
            set {
                this.startUpActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId autoloadPerspective {
            get {
                return this.autoloadPerspectiveField;
            }
            set {
                this.autoloadPerspectiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool renderingLocalSourceEnabled {
            get {
                return this.renderingLocalSourceEnabledField;
            }
            set {
                this.renderingLocalSourceEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool remoteDesktopControlEnabled {
            get {
                return this.remoteDesktopControlEnabledField;
            }
            set {
                this.remoteDesktopControlEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displayTiler {
            get {
                return this.displayTilerField;
            }
            set {
                this.displayTilerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displaySnappingEnabled {
            get {
                return this.displaySnappingEnabledField;
            }
            set {
                this.displaySnappingEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int displaySnappingWidth {
            get {
                return this.displaySnappingWidthField;
            }
            set {
                this.displaySnappingWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool liveViewDisplayEnabled {
            get {
                return this.liveViewDisplayEnabledField;
            }
            set {
                this.liveViewDisplayEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string scaleMode {
            get {
                return this.scaleModeField;
            }
            set {
                this.scaleModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId perspectiveTiler {
            get {
                return this.perspectiveTilerField;
            }
            set {
                this.perspectiveTilerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool perspectiveSnappingEnabled {
            get {
                return this.perspectiveSnappingEnabledField;
            }
            set {
                this.perspectiveSnappingEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int perspectiveSnappingWidth {
            get {
                return this.perspectiveSnappingWidthField;
            }
            set {
                this.perspectiveSnappingWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long sidebarWidth {
            get {
                return this.sidebarWidthField;
            }
            set {
                this.sidebarWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool openAtStartupEnabled {
            get {
                return this.openAtStartupEnabledField;
            }
            set {
                this.openAtStartupEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ShowToolTip {
            get {
                return this.showToolTipField;
            }
            set {
                this.showToolTipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ShowSnapshotToolTip {
            get {
                return this.showSnapshotToolTipField;
            }
            set {
                this.showSnapshotToolTipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId defaultPerspectiveImage {
            get {
                return this.defaultPerspectiveImageField;
            }
            set {
                this.defaultPerspectiveImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int perspectiveDefaultBackgroundColor {
            get {
                return this.perspectiveDefaultBackgroundColorField;
            }
            set {
                this.perspectiveDefaultBackgroundColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string perspectiveDefaultBackGroundColorWithSysVariable {
            get {
                return this.perspectiveDefaultBackGroundColorWithSysVariableField;
            }
            set {
                this.perspectiveDefaultBackGroundColorWithSysVariableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string perspectiveDefaultBackGroundColorWithSysProperty {
            get {
                return this.perspectiveDefaultBackGroundColorWithSysPropertyField;
            }
            set {
                this.perspectiveDefaultBackGroundColorWithSysPropertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int perspectiveDefaultTransparency {
            get {
                return this.perspectiveDefaultTransparencyField;
            }
            set {
                this.perspectiveDefaultTransparencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int miniDisplayColor {
            get {
                return this.miniDisplayColorField;
            }
            set {
                this.miniDisplayColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string miniDisplayColorWithSysVariable {
            get {
                return this.miniDisplayColorWithSysVariableField;
            }
            set {
                this.miniDisplayColorWithSysVariableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string miniDisplayColorWithSysProperty {
            get {
                return this.miniDisplayColorWithSysPropertyField;
            }
            set {
                this.miniDisplayColorWithSysPropertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int miniDisplayTilingColor {
            get {
                return this.miniDisplayTilingColorField;
            }
            set {
                this.miniDisplayTilingColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string miniDisplayTilingColorWithSysVariable {
            get {
                return this.miniDisplayTilingColorWithSysVariableField;
            }
            set {
                this.miniDisplayTilingColorWithSysVariableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string miniDisplayTilingColorWithSysProperty {
            get {
                return this.miniDisplayTilingColorWithSysPropertyField;
            }
            set {
                this.miniDisplayTilingColorWithSysPropertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int miniDisplayUncoveredAreaColor {
            get {
                return this.miniDisplayUncoveredAreaColorField;
            }
            set {
                this.miniDisplayUncoveredAreaColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string miniDisplayUncoveredAreaColorWithSysVariable {
            get {
                return this.miniDisplayUncoveredAreaColorWithSysVariableField;
            }
            set {
                this.miniDisplayUncoveredAreaColorWithSysVariableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string miniDisplayUncoveredAreaColorWithSysProperty {
            get {
                return this.miniDisplayUncoveredAreaColorWithSysPropertyField;
            }
            set {
                this.miniDisplayUncoveredAreaColorWithSysPropertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool showGuidedTour {
            get {
                return this.showGuidedTourField;
            }
            set {
                this.showGuidedTourField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class windowInfo {
        
        private string typeField;
        
        private int xField;
        
        private int yField;
        
        private int widthField;
        
        private int heightField;
        
        private int zOrderField;
        
        private bool currentlySharedField;
        
        private string tagsField;
        
        private string descriptionField;
        
        private objectId windowIdField;
        
        private bool stretchedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int zOrder {
            get {
                return this.zOrderField;
            }
            set {
                this.zOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool currentlyShared {
            get {
                return this.currentlySharedField;
            }
            set {
                this.currentlySharedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId windowId {
            get {
                return this.windowIdField;
            }
            set {
                this.windowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool stretched {
            get {
                return this.stretchedField;
            }
            set {
                this.stretchedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class dimensionInfo {
        
        private double widthField;
        
        private double heightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class objectSystemPropertiesInfo {
        
        private string propertyNameField;
        
        private int systemPropertyIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string propertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int systemPropertyId {
            get {
                return this.systemPropertyIdField;
            }
            set {
                this.systemPropertyIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dimension))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public abstract partial class dimension2D {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class dimension : dimension2D {
        
        private int widthField;
        
        private int heightField;
        
        private dimension sizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dimension size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(point))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public abstract partial class point2D {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class point : point2D {
        
        private int xField;
        
        private int yField;
        
        private point locationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public point location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rectangle2D))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rectangle))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public abstract partial class rectangularShape {
        
        private rectangle2D frameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rectangle2D frame {
            get {
                return this.frameField;
            }
            set {
                this.frameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rectangle))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public abstract partial class rectangle2D : rectangularShape {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class rectangle : rectangle2D {
        
        private int xField;
        
        private int yField;
        
        private int widthField;
        
        private int heightField;
        
        private rectangle boundsField;
        
        private point locationField;
        
        private dimension sizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rectangle bounds {
            get {
                return this.boundsField;
            }
            set {
                this.boundsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public point location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dimension size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class windowInfo2 {
        
        private string typeField;
        
        private double xField;
        
        private double yField;
        
        private double widthField;
        
        private double heightField;
        
        private int zOrderField;
        
        private bool currentlySharedField;
        
        private string tagsField;
        
        private string descriptionField;
        
        private objectId windowIdField;
        
        private bool stretchedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int zOrder {
            get {
                return this.zOrderField;
            }
            set {
                this.zOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool currentlyShared {
            get {
                return this.currentlySharedField;
            }
            set {
                this.currentlySharedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId windowId {
            get {
                return this.windowIdField;
            }
            set {
                this.windowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool stretched {
            get {
                return this.stretchedField;
            }
            set {
                this.stretchedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class systemPropertyInfo {
        
        private string nameField;
        
        private objectId systemPropertyIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId systemPropertyId {
            get {
                return this.systemPropertyIdField;
            }
            set {
                this.systemPropertyIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class rectangleInfo {
        
        private double xField;
        
        private double yField;
        
        private double widthField;
        
        private double heightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class sourceSignalDetail {
        
        private objectId sourceIdField;
        
        private string signalTypeField;
        
        private string encodingTypeField;
        
        private int nativeWidthField;
        
        private int nativeHeightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string signalType {
            get {
                return this.signalTypeField;
            }
            set {
                this.signalTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string encodingType {
            get {
                return this.encodingTypeField;
            }
            set {
                this.encodingTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int nativeWidth {
            get {
                return this.nativeWidthField;
            }
            set {
                this.nativeWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int nativeHeight {
            get {
                return this.nativeHeightField;
            }
            set {
                this.nativeHeightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class displetInfo {
        
        private string nameField;
        
        private int xField;
        
        private int yField;
        
        private int heightField;
        
        private int widthField;
        
        private bool thumbnailField;
        
        private objectId sourceIdField;
        
        private int zOrderField;
        
        private int parentPerspectiveIDField;
        
        private objectId displetIdField;
        
        private bool stretchedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                this.thumbnailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int zOrder {
            get {
                return this.zOrderField;
            }
            set {
                this.zOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int parentPerspectiveID {
            get {
                return this.parentPerspectiveIDField;
            }
            set {
                this.parentPerspectiveIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displetId {
            get {
                return this.displetIdField;
            }
            set {
                this.displetIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool stretched {
            get {
                return this.stretchedField;
            }
            set {
                this.stretchedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class tilerInfo {
        
        private string nameField;
        
        private int widthField;
        
        private int heightField;
        
        private string tagsField;
        
        private string descriptionField;
        
        private objectId tilerIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId tilerId {
            get {
                return this.tilerIdField;
            }
            set {
                this.tilerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class screenScrapeSourceDetail {
        
        private string hostField;
        
        private string passwordField;
        
        private int portField;
        
        private string targetTypeField;
        
        private int xField;
        
        private int yField;
        
        private int widthField;
        
        private int heightField;
        
        private string windowTitleField;
        
        private bool manualUpdateModeField;
        
        private int updateIntervalField;
        
        private int desktopIdentField;
        
        private objectId sourceIdField;
        
        private bool vdsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetType {
            get {
                return this.targetTypeField;
            }
            set {
                this.targetTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string windowTitle {
            get {
                return this.windowTitleField;
            }
            set {
                this.windowTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool manualUpdateMode {
            get {
                return this.manualUpdateModeField;
            }
            set {
                this.manualUpdateModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int updateInterval {
            get {
                return this.updateIntervalField;
            }
            set {
                this.updateIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int desktopIdent {
            get {
                return this.desktopIdentField;
            }
            set {
                this.desktopIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool vds {
            get {
                return this.vdsField;
            }
            set {
                this.vdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class displayInfo2 {
        
        private string nameField;
        
        private string descriptionField;
        
        private double heightField;
        
        private double widthField;
        
        private bool onlineField;
        
        private bool acknowledgedField;
        
        private int moduleXField;
        
        private int moduleYField;
        
        private int xmoduleresolutionField;
        
        private int ymoduleresolutionField;
        
        private string computerNameField;
        
        private bool displayWallField;
        
        private string tagsField;
        
        private int dockingWidthField;
        
        private objectId tilerField;
        
        private objectId squidModeConfigurationField;
        
        private objectId autoloadLayoutField;
        
        private objectId autoloadPerspectiveField;
        
        private objectId displayIdField;
        
        private string startUpActionField;
        
        private string displayTypeField;
        
        private objectId[] ngpsField;
        
        private System.Nullable<double>[] xNGPPositionsField;
        
        private System.Nullable<double>[] yNGPPositionsField;
        
        private string windowOptionField;
        
        private string displaySnapshotField;
        
        private objectId[] snapShotIdsField;
        
        private objectId[] moduleIdsField;
        
        private objectId[] externalWindowIdsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acknowledged {
            get {
                return this.acknowledgedField;
            }
            set {
                this.acknowledgedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int moduleX {
            get {
                return this.moduleXField;
            }
            set {
                this.moduleXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int moduleY {
            get {
                return this.moduleYField;
            }
            set {
                this.moduleYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int xmoduleresolution {
            get {
                return this.xmoduleresolutionField;
            }
            set {
                this.xmoduleresolutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ymoduleresolution {
            get {
                return this.ymoduleresolutionField;
            }
            set {
                this.ymoduleresolutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string computerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayWall {
            get {
                return this.displayWallField;
            }
            set {
                this.displayWallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dockingWidth {
            get {
                return this.dockingWidthField;
            }
            set {
                this.dockingWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId tiler {
            get {
                return this.tilerField;
            }
            set {
                this.tilerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId squidModeConfiguration {
            get {
                return this.squidModeConfigurationField;
            }
            set {
                this.squidModeConfigurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId autoloadLayout {
            get {
                return this.autoloadLayoutField;
            }
            set {
                this.autoloadLayoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId autoloadPerspective {
            get {
                return this.autoloadPerspectiveField;
            }
            set {
                this.autoloadPerspectiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectId displayId {
            get {
                return this.displayIdField;
            }
            set {
                this.displayIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startUpAction {
            get {
                return this.startUpActionField;
            }
            set {
                this.startUpActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string displayType {
            get {
                return this.displayTypeField;
            }
            set {
                this.displayTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ngps", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] ngps {
            get {
                return this.ngpsField;
            }
            set {
                this.ngpsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xNGPPositions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] xNGPPositions {
            get {
                return this.xNGPPositionsField;
            }
            set {
                this.xNGPPositionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("yNGPPositions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] yNGPPositions {
            get {
                return this.yNGPPositionsField;
            }
            set {
                this.yNGPPositionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string windowOption {
            get {
                return this.windowOptionField;
            }
            set {
                this.windowOptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string displaySnapshot {
            get {
                return this.displaySnapshotField;
            }
            set {
                this.displaySnapshotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("snapShotIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] snapShotIds {
            get {
                return this.snapShotIdsField;
            }
            set {
                this.snapShotIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("moduleIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] moduleIds {
            get {
                return this.moduleIdsField;
            }
            set {
                this.moduleIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("externalWindowIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public objectId[] externalWindowIds {
            get {
                return this.externalWindowIdsField;
            }
            set {
                this.externalWindowIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openapi.cms.barco.com/")]
    public partial class eventInfo {
        
        private string eventNameField;
        
        private string sourceTypeField;
        
        private int sourceIdField;
        
        private string[] valuesField;
        
        private string idField;
        
        private infoObject[] mObjectsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string eventName {
            get {
                return this.eventNameField;
            }
            set {
                this.eventNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mObjects", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public infoObject[] mObjects {
            get {
                return this.mObjectsField;
            }
            set {
                this.mObjectsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplaysWindowsCompletedEventHandler(object sender, getDisplaysWindowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplaysWindowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplaysWindowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemovePerspectivesCompletedEventHandler(object sender, forceRemovePerspectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemovePerspectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemovePerspectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listUsersInfoCompletedEventHandler(object sender, listUsersInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listUsersInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listUsersInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSourcesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findDisplayByComputerNameCompletedEventHandler(object sender, findDisplayByComputerNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findDisplayByComputerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findDisplayByComputerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllWindowsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createLogoDecoratorTemplateCompletedEventHandler(object sender, createLogoDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createLogoDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createLogoDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllNGPsCompletedEventHandler(object sender, listAllNGPsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllNGPsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllNGPsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findGroupCompletedEventHandler(object sender, findGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getBorderDecoratorsDetailCompletedEventHandler(object sender, getBorderDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBorderDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBorderDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public borderDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((borderDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDispletsDecoratorsCompletedEventHandler(object sender, getDispletsDecoratorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDispletsDecoratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDispletsDecoratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSystemVariableInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bringDispletsToFrontCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bindCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getPerspectiveWindowsDetailCompletedEventHandler(object sender, getPerspectiveWindowsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPerspectiveWindowsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPerspectiveWindowsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public perspectiveWindowDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((perspectiveWindowDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEventsCompletedEventHandler(object sender, getEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public eventInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((eventInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createDateTimeDecoratorTemplateCompletedEventHandler(object sender, createDateTimeDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDateTimeDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDateTimeDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyTilerCompletedEventHandler(object sender, copyTilerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyTilerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyTilerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setApplicationsInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDecoratorsInfoCompletedEventHandler(object sender, getDecoratorsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDecoratorsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDecoratorsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decoratorInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decoratorInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sendDispletToBackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplayInfo2CompletedEventHandler(object sender, getDisplayInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplayInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplayInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displayInfo2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displayInfo2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplayInfo3CompletedEventHandler(object sender, getDisplayInfo3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplayInfo3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplayInfo3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displayInfo3 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displayInfo3)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveSourcesCompletedEventHandler(object sender, forceRemoveSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bringWindowForwardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findPerspectiveCompletedEventHandler(object sender, findPerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findPerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findPerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyDecoratorCompletedEventHandler(object sender, copyDecoratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyDecoratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyDecoratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getVideoSourcesDetailCompletedEventHandler(object sender, getVideoSourcesDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVideoSourcesDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVideoSourcesDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public videoSourceDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((videoSourceDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listofAssociatedSnapshotsCompletedEventHandler(object sender, listofAssociatedSnapshotsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listofAssociatedSnapshotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listofAssociatedSnapshotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeSourcesCompletedEventHandler(object sender, removeSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setScreenScrapeSourceDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveApplicationsCompletedEventHandler(object sender, forceRemoveApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setTilersInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getStatusBorderDecoratorsDetailCompletedEventHandler(object sender, getStatusBorderDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusBorderDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusBorderDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public statusBorderDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((statusBorderDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsTilingInPerspectiveCompletedEventHandler(object sender, saveAsTilingInPerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAsTilingInPerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAsTilingInPerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeDecoratorTemplateCompletedEventHandler(object sender, removeDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDispletsInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setBorderDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateTilerForPerspectiveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeProVNCDefaultSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSourceSignalDetailCompletedEventHandler(object sender, getSourceSignalDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourceSignalDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourceSignalDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sourceSignalDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sourceSignalDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSourceTemplateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllPerspectivesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsPerspectiveCompletedEventHandler(object sender, saveAsPerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAsPerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAsPerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setStatusBorderDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getModulesInfoCompletedEventHandler(object sender, getModulesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getModulesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getModulesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public moduleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((moduleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeDisplayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getTilerInfo2CompletedEventHandler(object sender, getTilerInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTilerInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTilerInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tilerInfo2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tilerInfo2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listSourceRoutingResolutionTypeCompletedEventHandler(object sender, listSourceRoutingResolutionTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listSourceRoutingResolutionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listSourceRoutingResolutionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listSourceRoutingConfigsCompletedEventHandler(object sender, listSourceRoutingConfigsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listSourceRoutingConfigsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listSourceRoutingConfigsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchDisplaysCompletedEventHandler(object sender, searchDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllApplicationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createExternalWindowCompletedEventHandler(object sender, createExternalWindowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createExternalWindowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createExternalWindowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSystemPropertyInfoCompletedEventHandler(object sender, getSystemPropertyInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemPropertyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemPropertyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public systemPropertyInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((systemPropertyInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWindowsInfo3CompletedEventHandler(object sender, getWindowsInfo3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWindowsInfo3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWindowsInfo3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public windowInfo3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((windowInfo3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void applyDecoratorToDispletCompletedEventHandler(object sender, applyDecoratorToDispletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class applyDecoratorToDispletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal applyDecoratorToDispletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getRoleInfoCompletedEventHandler(object sender, getRoleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRoleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRoleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public roleInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((roleInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findTilerCompletedEventHandler(object sender, findTilerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findTilerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findTilerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSquidModeConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribePerspectiveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeWindowCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWindowsInfo2CompletedEventHandler(object sender, getWindowsInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWindowsInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWindowsInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public windowInfo2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((windowInfo2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createStatusImageDecoratorTemplateCompletedEventHandler(object sender, createStatusImageDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStatusImageDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStatusImageDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsUserTilingInDisplayCompletedEventHandler(object sender, saveAsUserTilingInDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAsUserTilingInDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAsUserTilingInDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bindAllSystemPropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getActiveRolesCompletedEventHandler(object sender, getActiveRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeDisplaysCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setWindowInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDispletInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setWindowInfo3CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsUserTilingInDisplay2CompletedEventHandler(object sender, saveAsUserTilingInDisplay2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAsUserTilingInDisplay2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAsUserTilingInDisplay2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDecoratorsInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createStatusImageDecoratorTemplate2CompletedEventHandler(object sender, createStatusImageDecoratorTemplate2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStatusImageDecoratorTemplate2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStatusImageDecoratorTemplate2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeTilerPoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyRoleCompletedEventHandler(object sender, copyRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeDisplayByNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllMGSCompletedEventHandler(object sender, listAllMGSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllMGSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllMGSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setAudioDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyGroupCompletedEventHandler(object sender, copyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWindowsInfoCompletedEventHandler(object sender, getWindowsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWindowsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWindowsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public windowInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((windowInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void importFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSystemVariablesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setAudioDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveGroupsCompletedEventHandler(object sender, forceRemoveGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void isRestoreFinishedCompletedEventHandler(object sender, isRestoreFinishedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isRestoreFinishedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isRestoreFinishedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setTilerInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSquidModeConfigurationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findNGPCompletedEventHandler(object sender, findNGPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findNGPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findNGPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createDisplayModuleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void loadDefaultSnapshotCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getNGPInfoCompletedEventHandler(object sender, getNGPInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNGPInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNGPInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ngpInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ngpInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeTilerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getPerspectiveWindowDetailCompletedEventHandler(object sender, getPerspectiveWindowDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPerspectiveWindowDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPerspectiveWindowDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public perspectiveWindowDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((perspectiveWindowDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSystemVariablePoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeProVNCDefaultSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findMGSCompletedEventHandler(object sender, findMGSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findMGSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findMGSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getStaticTextDecoratorDetailCompletedEventHandler(object sender, getStaticTextDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStaticTextDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStaticTextDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public staticTextDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((staticTextDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeTilerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveUserCompletedEventHandler(object sender, forceRemoveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getUsersInfoCompletedEventHandler(object sender, getUsersInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getTilersInfo2CompletedEventHandler(object sender, getTilersInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTilersInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTilersInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tilerInfo2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tilerInfo2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyPerspectiveCompletedEventHandler(object sender, copyPerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyPerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyPerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setStatusLabelDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSidebarDefaultSettingInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribePerspectivesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemovePerspectiveCompletedEventHandler(object sender, forceRemovePerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemovePerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemovePerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllUsersCompletedEventHandler(object sender, listAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listOfAssociatedSnapshotsWithTilerCompletedEventHandler(object sender, listOfAssociatedSnapshotsWithTilerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfAssociatedSnapshotsWithTilerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfAssociatedSnapshotsWithTilerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyGroupsCompletedEventHandler(object sender, copyGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllTilersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSourceInfoCompletedEventHandler(object sender, getSourceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sourceInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sourceInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listOfAssociatedPerspectivesCompletedEventHandler(object sender, listOfAssociatedPerspectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfAssociatedPerspectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfAssociatedPerspectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllWindowsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDisplayInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyDisplaysCompletedEventHandler(object sender, copyDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listOfAssociatedDisplaysWithTilerCompletedEventHandler(object sender, listOfAssociatedDisplaysWithTilerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfAssociatedDisplaysWithTilerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfAssociatedDisplaysWithTilerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchSystemVariableByTypeCompletedEventHandler(object sender, searchSystemVariableByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchSystemVariableByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchSystemVariableByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getApplicationWindowsDetailCompletedEventHandler(object sender, getApplicationWindowsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplicationWindowsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplicationWindowsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public applicationWindowDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((applicationWindowDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeDispletCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribePerspectivePoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getNGPsInfoCompletedEventHandler(object sender, getNGPsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNGPsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNGPsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ngpInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ngpInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unbindAllSystemVariablesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getLicenseInfoCompletedEventHandler(object sender, getLicenseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLicenseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLicenseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public licenseInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((licenseInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllPerspectivesCompletedEventHandler(object sender, listAllPerspectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllPerspectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllPerspectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public perspectiveWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((perspectiveWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createDisplet2CompletedEventHandler(object sender, createDisplet2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDisplet2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDisplet2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setLicenseInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void backupToConfigCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setImageDecoratorsDetail2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getScreenScrapeSourcesDetail2CompletedEventHandler(object sender, getScreenScrapeSourcesDetail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getScreenScrapeSourcesDetail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getScreenScrapeSourcesDetail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public screenScrapeSourceDetail2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((screenScrapeSourceDetail2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeApplicationsFromDisplayCompletedEventHandler(object sender, removeApplicationsFromDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeApplicationsFromDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeApplicationsFromDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSourceOffsetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getKeyboardShortcutsDefaultSettingsInfoCompletedEventHandler(object sender, getKeyboardShortcutsDefaultSettingsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getKeyboardShortcutsDefaultSettingsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getKeyboardShortcutsDefaultSettingsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public keyboardShortcutDefaultSettingsInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((keyboardShortcutDefaultSettingsInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void partialRestoreCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listConfigurationsCompletedEventHandler(object sender, listConfigurationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listConfigurationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listConfigurationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createScreenScrapeSourceCompletedEventHandler(object sender, createScreenScrapeSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createScreenScrapeSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createScreenScrapeSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sharePerspectiveOnDisplay2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bindAllSystemVariablesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllDisplaysCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copySourcesCompletedEventHandler(object sender, copySourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copySourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copySourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSourceNameDecoratorDetailCompletedEventHandler(object sender, getSourceNameDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourceNameDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourceNameDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sourceNameDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sourceNameDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getTilersInfoCompletedEventHandler(object sender, getTilersInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTilersInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTilersInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tilerInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tilerInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSourceNameDecoratorsDetailCompletedEventHandler(object sender, getSourceNameDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourceNameDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourceNameDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sourceNameDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sourceNameDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSystemPropertyPoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllSourcesCompletedEventHandler(object sender, listAllSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sourceWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sourceWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSidebarDefaultSettingInfoCompletedEventHandler(object sender, getSidebarDefaultSettingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSidebarDefaultSettingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSidebarDefaultSettingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sidebarDefaultSettingInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sidebarDefaultSettingInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeApplicationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createVideoSource2CompletedEventHandler(object sender, createVideoSource2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createVideoSource2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createVideoSource2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setLogoDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDateTimeDecoratorDetailCompletedEventHandler(object sender, getDateTimeDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDateTimeDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDateTimeDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dateTimeDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dateTimeDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllSnapshotsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSystemVariableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createObjectCompletedEventHandler(object sender, createObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public infoObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((infoObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unshareApplicationFromDisplayCompletedEventHandler(object sender, unshareApplicationFromDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unshareApplicationFromDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unshareApplicationFromDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplaysSnapshotsCompletedEventHandler(object sender, getDisplaysSnapshotsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplaysSnapshotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplaysSnapshotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listSystemVariablesCompletedEventHandler(object sender, listSystemVariablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listSystemVariablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listSystemVariablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeDisplayPoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findSystemVariableByPropertyNameCompletedEventHandler(object sender, findSystemVariableByPropertyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findSystemVariableByPropertyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findSystemVariableByPropertyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setStatusImageDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSourcesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplaysInfoCompletedEventHandler(object sender, getDisplaysInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplaysInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplaysInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displayInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displayInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplayAllExternalWindowsCompletedEventHandler(object sender, getDisplayAllExternalWindowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplayAllExternalWindowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplayAllExternalWindowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sendWindowToBackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setLabelDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void backupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setImageInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWebSourceDetailCompletedEventHandler(object sender, getWebSourceDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWebSourceDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWebSourceDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webSourceDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webSourceDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listMessagesCompletedEventHandler(object sender, listMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchSourcesCompletedEventHandler(object sender, searchSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeDecoratorsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSnapshotsInfoCompletedEventHandler(object sender, getSnapshotsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSnapshotsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSnapshotsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public snapshotInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((snapshotInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyDisplayCompletedEventHandler(object sender, copyDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listOfAssociatedPerspectivesWithTilerCompletedEventHandler(object sender, listOfAssociatedPerspectivesWithTilerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfAssociatedPerspectivesWithTilerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfAssociatedPerspectivesWithTilerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDispletInfo2CompletedEventHandler(object sender, getDispletInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDispletInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDispletInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displetInfo2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displetInfo2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllSquidModeConfigurationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createDispletCompletedEventHandler(object sender, createDispletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDispletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDispletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeDisplayPoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getScreenScrapeSourceDetailCompletedEventHandler(object sender, getScreenScrapeSourceDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getScreenScrapeSourceDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getScreenScrapeSourceDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public screenScrapeSourceDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((screenScrapeSourceDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setModulesInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSourceNameDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribePerspectiveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSourceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getLogoDecoratorsDetailCompletedEventHandler(object sender, getLogoDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLogoDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLogoDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public logoDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((logoDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void acquireLicensesCompletedEventHandler(object sender, acquireLicensesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class acquireLicensesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal acquireLicensesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchSystemVariablesCompletedEventHandler(object sender, searchSystemVariablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchSystemVariablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchSystemVariablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllDispletsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setLabelDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sendDispletBackwardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDateTimeDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateDeviceURLCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAudioDecoratorDetailCompletedEventHandler(object sender, getAudioDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAudioDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAudioDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public audioDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((audioDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveGroupCompletedEventHandler(object sender, forceRemoveGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSquidModeConfigurationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setScreenScrapeSourcesDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setMiscellaneousDefaultSettingsInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeWindowsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createStatusLabelDecoratorTemplateCompletedEventHandler(object sender, createStatusLabelDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStatusLabelDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStatusLabelDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllSystemVariablesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyUserCompletedEventHandler(object sender, copyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listGroupsCompletedEventHandler(object sender, listGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyPerspectivesCompletedEventHandler(object sender, copyPerspectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyPerspectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyPerspectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getVideoAndAudioDefaultSettingInfoCompletedEventHandler(object sender, getVideoAndAudioDefaultSettingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVideoAndAudioDefaultSettingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVideoAndAudioDefaultSettingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public videoAndAudioDefaultSettingsInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((videoAndAudioDefaultSettingsInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listSystemPropertiesCompletedEventHandler(object sender, listSystemPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listSystemPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listSystemPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeDecoratorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateTilerForDisplayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDisplaysInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyRolesCompletedEventHandler(object sender, copyRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bringDispletForwardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void fetchTilingCompletedEventHandler(object sender, fetchTilingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchTilingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchTilingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tileDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tileDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setActiveRolesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSidebarDefaultSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setVideoSourceDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveRolesCompletedEventHandler(object sender, forceRemoveRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getClusterInfoCompletedEventHandler(object sender, getClusterInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClusterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClusterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clusterInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clusterInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeWindowsFromDisplayCompletedEventHandler(object sender, removeWindowsFromDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeWindowsFromDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeWindowsFromDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeSourceCompletedEventHandler(object sender, removeSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeDisplaysCompletedEventHandler(object sender, removeDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeTilersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void configureSessionTimoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSquidModeConfigurationInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDisplayInfo3CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDisplayInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSystemVariablesInfo2CompletedEventHandler(object sender, getSystemVariablesInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemVariablesInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemVariablesInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public systemVariableInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((systemVariableInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeGroupCompletedEventHandler(object sender, removeGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sharePerspectiveWithDefaultGeometryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listTilersCompletedEventHandler(object sender, listTilersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listTilersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listTilersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchTilersCompletedEventHandler(object sender, searchTilersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTilersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTilersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bringDispletToFrontCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeDisplayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsDecoratorTemplateCompletedEventHandler(object sender, saveAsDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAsDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAsDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findConfigurationCompletedEventHandler(object sender, findConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveTilersCompletedEventHandler(object sender, forceRemoveTilersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveTilersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveTilersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setApplicationInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDefaultAreaInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWindowInfoCompletedEventHandler(object sender, getWindowInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWindowInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWindowInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public windowInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((windowInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void additionalDispletsForTilerCompletedEventHandler(object sender, additionalDispletsForTilerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class additionalDispletsForTilerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal additionalDispletsForTilerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listVideoTemplateURLsCompletedEventHandler(object sender, listVideoTemplateURLsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listVideoTemplateURLsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listVideoTemplateURLsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createApplicationWindow2CompletedEventHandler(object sender, createApplicationWindow2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createApplicationWindow2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createApplicationWindow2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createApplicationWindow3CompletedEventHandler(object sender, createApplicationWindow3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createApplicationWindow3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createApplicationWindow3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllDisplaysCompletedEventHandler(object sender, listAllDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displayWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displayWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setUsersInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSystemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setWebSourceDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getLoggedInUserCompletedEventHandler(object sender, getLoggedInUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLoggedInUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLoggedInUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void startSessionCompletedEventHandler(object sender, startSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sessionId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sessionId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getPerspectiveInfo2CompletedEventHandler(object sender, getPerspectiveInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPerspectiveInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPerspectiveInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public perspectiveInfo2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((perspectiveInfo2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSystemVariablesInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getModulesCompletedEventHandler(object sender, getModulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getModulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getModulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllSystemVariablesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSnapshotInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setWindowInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listSessionsByUserNameCompletedEventHandler(object sender, listSessionsByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listSessionsByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listSessionsByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createDisplayCompletedEventHandler(object sender, createDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listRolesInfoCompletedEventHandler(object sender, listRolesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listRolesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listRolesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public roleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((roleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createScreenScrapeSource2CompletedEventHandler(object sender, createScreenScrapeSource2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createScreenScrapeSource2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createScreenScrapeSource2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setPerspectiveInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setStaticTextDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllApplicationsCompletedEventHandler(object sender, listAllApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public applicationWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((applicationWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findDisplayCompletedEventHandler(object sender, findDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplaysUserNameCompletedEventHandler(object sender, getDisplaysUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplaysUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplaysUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSnapshotsCompletedEventHandler(object sender, getSnapshotsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSnapshotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSnapshotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void loadSnapshotCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveSystemVariablesCompletedEventHandler(object sender, forceRemoveSystemVariablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveSystemVariablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveSystemVariablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findDisplayByUniqueIdCompletedEventHandler(object sender, findDisplayByUniqueIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findDisplayByUniqueIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findDisplayByUniqueIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeConfigurationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createMessageCompletedEventHandler(object sender, createMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void startPublishingEventCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeWindowCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listDecoratorTemplatesCompletedEventHandler(object sender, listDecoratorTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listDecoratorTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listDecoratorTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDispletsInfoCompletedEventHandler(object sender, getDispletsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDispletsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDispletsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displetInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displetInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllSnapshotsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createPerspectiveWindow2CompletedEventHandler(object sender, createPerspectiveWindow2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPerspectiveWindow2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPerspectiveWindow2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removePerspectiveByNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeMiscellaneousDefaultSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSystemEnvVariableCompletedEventHandler(object sender, getSystemEnvVariableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemEnvVariableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemEnvVariableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSourceInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sendDispletsToBackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listKeyboardShortcutSettingsCompletedEventHandler(object sender, listKeyboardShortcutSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listKeyboardShortcutSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listKeyboardShortcutSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createApplicationWindowCompletedEventHandler(object sender, createApplicationWindowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createApplicationWindowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createApplicationWindowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyReadOnlyPerspectiveCompletedEventHandler(object sender, copyReadOnlyPerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyReadOnlyPerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyReadOnlyPerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getMessageInfoCompletedEventHandler(object sender, getMessageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMessageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMessageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public messageInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((messageInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsUserTilingForPerspectiveCompletedEventHandler(object sender, saveAsUserTilingForPerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAsUserTilingForPerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAsUserTilingForPerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getPerspectiveInfoCompletedEventHandler(object sender, getPerspectiveInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPerspectiveInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPerspectiveInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public perspectiveInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((perspectiveInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplaysInfo3CompletedEventHandler(object sender, getDisplaysInfo3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplaysInfo3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplaysInfo3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displayInfo3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displayInfo3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplaysInfo2CompletedEventHandler(object sender, getDisplaysInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplaysInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplaysInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displayInfo2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displayInfo2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsUserTilingForDisplayCompletedEventHandler(object sender, saveAsUserTilingForDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAsUserTilingForDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAsUserTilingForDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveUsersCompletedEventHandler(object sender, forceRemoveUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listPerspectivesCompletedEventHandler(object sender, listPerspectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listPerspectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listPerspectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setImageDecoratorDetail2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listGroupsInfoCompletedEventHandler(object sender, listGroupsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listGroupsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listGroupsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public groupInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((groupInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeDispletsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getScreenScrapeSourceDetail2CompletedEventHandler(object sender, getScreenScrapeSourceDetail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getScreenScrapeSourceDetail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getScreenScrapeSourceDetail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public screenScrapeSourceDetail2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((screenScrapeSourceDetail2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSystemPropertyPoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getApplicationInfoCompletedEventHandler(object sender, getApplicationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplicationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplicationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public applicationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((applicationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeDecoratorTemplatePoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void isValidControlPanelPasswordCompletedEventHandler(object sender, isValidControlPanelPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isValidControlPanelPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isValidControlPanelPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDecoratorInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribePerspectivesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getMiscellaneousDefaultSettingsInfoCompletedEventHandler(object sender, getMiscellaneousDefaultSettingsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMiscellaneousDefaultSettingsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMiscellaneousDefaultSettingsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public miscellaneousDefaultSettingsInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((miscellaneousDefaultSettingsInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findSystemPropertyBindingsCompletedEventHandler(object sender, findSystemPropertyBindingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findSystemPropertyBindingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findSystemPropertyBindingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectSystemPropertiesInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectSystemPropertiesInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSystemVariableInfoCompletedEventHandler(object sender, getSystemVariableInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemVariableInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemVariableInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public systemVariableInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((systemVariableInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sendDecoratorBackwardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void additionalWindowsForTilerCompletedEventHandler(object sender, additionalWindowsForTilerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class additionalWindowsForTilerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal additionalWindowsForTilerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeDispletsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copySystemVariableCompletedEventHandler(object sender, copySystemVariableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copySystemVariableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copySystemVariableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findDecoratorTemplateCompletedEventHandler(object sender, findDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSystemPropertiesInfoCompletedEventHandler(object sender, getSystemPropertiesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemPropertiesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemPropertiesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public systemPropertyInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((systemPropertyInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSquidModeConfigurationsInfoCompletedEventHandler(object sender, getSquidModeConfigurationsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSquidModeConfigurationsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSquidModeConfigurationsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public squidModeConfigurationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((squidModeConfigurationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getImageDecoratorDetailCompletedEventHandler(object sender, getImageDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImageDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImageDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public imageDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((imageDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void isSystemVariableBindedCompletedEventHandler(object sender, isSystemVariableBindedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isSystemVariableBindedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isSystemVariableBindedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDisplaysInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void isCMSServerReadyCompletedEventHandler(object sender, isCMSServerReadyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isCMSServerReadyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isCMSServerReadyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setRolesInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDisplaysInfo3CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removePerspectiveCompletedEventHandler(object sender, removePerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removePerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removePerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createRoleCompletedEventHandler(object sender, createRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSourceNameDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchUsersCompletedEventHandler(object sender, searchUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsUserTilingInPerspectiveCompletedEventHandler(object sender, saveAsUserTilingInPerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAsUserTilingInPerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAsUserTilingInPerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getStatusImageDecoratorDetailCompletedEventHandler(object sender, getStatusImageDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusImageDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusImageDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public statusImageDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((statusImageDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copySystemVariablesCompletedEventHandler(object sender, copySystemVariablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copySystemVariablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copySystemVariablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setTilerInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setStatusLabelDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getGroupInfoCompletedEventHandler(object sender, getGroupInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public groupInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((groupInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeTilerPoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findKeyboardShortcutSettingsCompletedEventHandler(object sender, findKeyboardShortcutSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findKeyboardShortcutSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findKeyboardShortcutSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sharePerspectiveOnDisplayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDefaultAreaInfoCompletedEventHandler(object sender, getDefaultAreaInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDefaultAreaInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDefaultAreaInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public defaultAreaInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((defaultAreaInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSystemVariablesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setApplicationWindowsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createPerspectiveCompletedEventHandler(object sender, createPerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setImagesInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getRolesInfoCompletedEventHandler(object sender, getRolesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRolesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRolesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public roleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((roleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createSystemVariableCompletedEventHandler(object sender, createSystemVariableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSystemVariableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSystemVariableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeSystemPropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeVideoAudioDefaultSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getTilerInfoCompletedEventHandler(object sender, getTilerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTilerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTilerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tilerInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tilerInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listOfAssociatedVideoSourcesCompletedEventHandler(object sender, listOfAssociatedVideoSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfAssociatedVideoSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfAssociatedVideoSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setLogoDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeConfigurationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getApplicationWindowDetailCompletedEventHandler(object sender, getApplicationWindowDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplicationWindowDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplicationWindowDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public applicationWindowDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((applicationWindowDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeKeyboardShortcutSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void releaseLicensesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getUsedNoOfLicensesCompletedEventHandler(object sender, getUsedNoOfLicensesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsedNoOfLicensesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsedNoOfLicensesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void stopPublishingEventCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void identifyNGPsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listOfAssociatedDisplaysWithSquidModeConfigsCompletedEventHandler(object sender, listOfAssociatedDisplaysWithSquidModeConfigsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfAssociatedDisplaysWithSquidModeConfigsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfAssociatedDisplaysWithSquidModeConfigsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findRoleCompletedEventHandler(object sender, findRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeApplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllSourcesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setConfigurationInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getStatusBorderDecoratorDetailCompletedEventHandler(object sender, getStatusBorderDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusBorderDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusBorderDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public statusBorderDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((statusBorderDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setStaticTextDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeConfigurationPoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createSystemPropertyCompletedEventHandler(object sender, createSystemPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSystemPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSystemPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDispletsInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllConfigurationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateVideoTemplateURLsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getStatusLabelDecoratorDetailCompletedEventHandler(object sender, getStatusLabelDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusLabelDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusLabelDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public statusLabelDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((statusLabelDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeDecoratorsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listGridsCompletedEventHandler(object sender, listGridsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listGridsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listGridsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unbindAllSystemPropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getExternalWindowDetailCompletedEventHandler(object sender, getExternalWindowDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExternalWindowDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExternalWindowDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public externalWindowDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((externalWindowDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getStatusImageDecoratorsDetailCompletedEventHandler(object sender, getStatusImageDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusImageDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusImageDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public statusImageDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((statusImageDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeDecoratorsCompletedEventHandler(object sender, removeDecoratorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeDecoratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeDecoratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getVersionCompletedEventHandler(object sender, getVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public version Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((version)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDecoratorsCompletedEventHandler(object sender, getDecoratorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDecoratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDecoratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeRoleCompletedEventHandler(object sender, removeRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getLabelDecoratorDetailCompletedEventHandler(object sender, getLabelDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLabelDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLabelDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public labelDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((labelDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllSystemPropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getExternalWindowsDetailCompletedEventHandler(object sender, getExternalWindowsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExternalWindowsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExternalWindowsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public externalWindowDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((externalWindowDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getVideoSourceDetailCompletedEventHandler(object sender, getVideoSourceDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVideoSourceDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVideoSourceDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public videoSourceDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((videoSourceDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createPerspective2CompletedEventHandler(object sender, createPerspective2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPerspective2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPerspective2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSnapshotInfoCompletedEventHandler(object sender, getSnapshotInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSnapshotInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSnapshotInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public snapshotInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((snapshotInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setRoleInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sharePerspectiveWithStretchOnDisplay2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSystemVariablePoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSquidModeConfigurationsInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeMessagePoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateWindowsZOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listUsersCompletedEventHandler(object sender, listUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void shareApplicationWithDefaultGeometryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getImagesInfoCompletedEventHandler(object sender, getImagesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImagesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImagesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public imageInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((imageInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getLabelDecoratorsDetailCompletedEventHandler(object sender, getLabelDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLabelDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLabelDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public labelDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((labelDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeVideoAudioDefaultSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void selectSystemVariableInStaticTextDecoratorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void openPerspectiveWithDefaultGeometryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getImageDecoratorsDetailCompletedEventHandler(object sender, getImageDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImageDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImageDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public imageDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((imageDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSourcesInfoCompletedEventHandler(object sender, getSourcesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourcesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourcesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sourceInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sourceInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sendDecoratorToBackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void isSystemPropertyBindedCompletedEventHandler(object sender, isSystemPropertyBindedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isSystemPropertyBindedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isSystemPropertyBindedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllTilersCompletedEventHandler(object sender, listAllTilersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllTilersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllTilersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tilerWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tilerWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveSourceCompletedEventHandler(object sender, forceRemoveSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAudioDecoratorsDetailCompletedEventHandler(object sender, getAudioDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAudioDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAudioDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public audioDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((audioDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllSystemPropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeMiscellaneousDefaultSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getVersionInfoCompletedEventHandler(object sender, getVersionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDateTimeDecoratorsDetailCompletedEventHandler(object sender, getDateTimeDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDateTimeDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDateTimeDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dateTimeDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dateTimeDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void fetchTiling2CompletedEventHandler(object sender, fetchTiling2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchTiling2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchTiling2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tileDetail2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tileDetail2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createWebSourceCompletedEventHandler(object sender, createWebSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createWebSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createWebSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getImageDecoratorsDetail2CompletedEventHandler(object sender, getImageDecoratorsDetail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImageDecoratorsDetail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImageDecoratorsDetail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public imageDecoratorDetail2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((imageDecoratorDetail2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllDispletsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findUserCompletedEventHandler(object sender, findUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setWindowInfo3FromDACompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getPerspectivesInfo2CompletedEventHandler(object sender, getPerspectivesInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPerspectivesInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPerspectivesInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public perspectiveInfo2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((perspectiveInfo2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void reloadLicenseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createKeyboardShortcutDefaultSettingsCompletedEventHandler(object sender, createKeyboardShortcutDefaultSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createKeyboardShortcutDefaultSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createKeyboardShortcutDefaultSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void startRestoreCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unshareAllApplicationsFromDisplayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDateTimeDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copySourceCompletedEventHandler(object sender, copySourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copySourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copySourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveApplicationCompletedEventHandler(object sender, forceRemoveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteExternalWindowCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAllDisplaysPerspectivesCompletedEventHandler(object sender, getAllDisplaysPerspectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllDisplaysPerspectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllDisplaysPerspectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSourcesInfo2CompletedEventHandler(object sender, getSourcesInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourcesInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourcesInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sourceInfo2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sourceInfo2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listDetailedPerspectiveCompletedEventHandler(object sender, listDetailedPerspectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listDetailedPerspectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listDetailedPerspectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public perspectivesDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((perspectivesDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createSystemVariable2CompletedEventHandler(object sender, createSystemVariable2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSystemVariable2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSystemVariable2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeApplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeSourceRoutingConfigCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplayTotalWindowsCompletedEventHandler(object sender, getDisplayTotalWindowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplayTotalWindowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplayTotalWindowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWebSourcesDetailCompletedEventHandler(object sender, getWebSourcesDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWebSourcesDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWebSourcesDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webSourceDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webSourceDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findSourceCompletedEventHandler(object sender, findSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createLogoDecoratorTemplate2CompletedEventHandler(object sender, createLogoDecoratorTemplate2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createLogoDecoratorTemplate2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createLogoDecoratorTemplate2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setPerspectivesInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setBorderDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getPerspectivesDispletsCompletedEventHandler(object sender, getPerspectivesDispletsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPerspectivesDispletsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPerspectivesDispletsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAllDisplaysApplicationCompletedEventHandler(object sender, getAllDisplaysApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllDisplaysApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllDisplaysApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSourcePoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchRolesCompletedEventHandler(object sender, searchRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createPerspectiveWindowCompletedEventHandler(object sender, createPerspectiveWindowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPerspectiveWindowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPerspectiveWindowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setPerspectiveInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setProVNCDefaultSettingInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setApplicationWindowDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllDecoratorsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createVideoSourceCompletedEventHandler(object sender, createVideoSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createVideoSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createVideoSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setGroupInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDispletInfoCompletedEventHandler(object sender, getDispletInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDispletInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDispletInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displetInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displetInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeDecoratorTemplatePoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllDecoratorsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getImageInfoCompletedEventHandler(object sender, getImageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public imageInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((imageInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSystemVariableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeDispletCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchConfigurationsCompletedEventHandler(object sender, searchConfigurationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchConfigurationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchConfigurationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setScreenScrapeSourcesDetail2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchNGPsCompletedEventHandler(object sender, searchNGPsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchNGPsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchNGPsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void endSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeWindowsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listRolesCompletedEventHandler(object sender, listRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeDecoratorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setStatusBorderDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void applySourceTemplateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSourcesInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeSystemVariableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getConfigurationsInfoCompletedEventHandler(object sender, getConfigurationsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConfigurationsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConfigurationsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public configurationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((configurationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllPerspectivesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSourceRoutingConfigInfoCompletedEventHandler(object sender, getSourceRoutingConfigInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourceRoutingConfigInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourceRoutingConfigInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sourceRoutingConfigInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sourceRoutingConfigInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getPerspectivesInfoCompletedEventHandler(object sender, getPerspectivesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPerspectivesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPerspectivesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public perspectiveInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((perspectiveInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setTilersInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveTilingAsGridCompletedEventHandler(object sender, saveTilingAsGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveTilingAsGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveTilingAsGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findSystemPropertyByNameCompletedEventHandler(object sender, findSystemPropertyByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findSystemPropertyByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findSystemPropertyByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void openPerspectiveOnDisplayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setWindowsInfo3CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getLogoDecoratorDetailCompletedEventHandler(object sender, getLogoDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLogoDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLogoDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public logoDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((logoDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setWindowsInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listLocalesSupportedByNGPCompletedEventHandler(object sender, listLocalesSupportedByNGPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listLocalesSupportedByNGPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listLocalesSupportedByNGPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public localeInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((localeInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unbindSystemPropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findSystemPropertyCompletedEventHandler(object sender, findSystemPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findSystemPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findSystemPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bringDecoratorToFrontCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeDispletsCompletedEventHandler(object sender, removeDispletsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeDispletsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeDispletsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bindSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findSystemVariableCompletedEventHandler(object sender, findSystemVariableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findSystemVariableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findSystemVariableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSystemPropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDispletsCompletedEventHandler(object sender, getDispletsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDispletsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDispletsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyDecoratorsCompletedEventHandler(object sender, copyDecoratorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyDecoratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyDecoratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllWindowsCompletedEventHandler(object sender, listAllWindowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllWindowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllWindowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public windowWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((windowWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchGroupsCompletedEventHandler(object sender, searchGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllSquidModeConfigurationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDecoratorInfoCompletedEventHandler(object sender, getDecoratorInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDecoratorInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDecoratorInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decoratorInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decoratorInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listWindowsCompletedEventHandler(object sender, listWindowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listWindowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listWindowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getApplicationsInfoCompletedEventHandler(object sender, getApplicationsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplicationsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplicationsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public applicationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((applicationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribePerspectivePoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setConfigurationsInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createBorderDecoratorTemplateCompletedEventHandler(object sender, createBorderDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createBorderDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createBorderDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void addSourceRoutingConfigCompletedEventHandler(object sender, addSourceRoutingConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addSourceRoutingConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addSourceRoutingConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeUserCompletedEventHandler(object sender, removeUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setVideoSourcesDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSourceInfo2CompletedEventHandler(object sender, getSourceInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourceInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourceInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sourceInfo2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sourceInfo2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSystemPropertyInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void changeUserPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getGroupsInfoCompletedEventHandler(object sender, getGroupsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public groupInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((groupInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void exportFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setExternalWindowDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSharedApplicationsCompletedEventHandler(object sender, getSharedApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSharedApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSharedApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeSourceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllSourceRoutingConfigsCompletedEventHandler(object sender, listAllSourceRoutingConfigsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllSourceRoutingConfigsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllSourceRoutingConfigsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public sourceRoutingConfigWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sourceRoutingConfigWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateVideoTemplateURLCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void sendWindowBackwardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createStatusBorderDecoratorTemplateCompletedEventHandler(object sender, createStatusBorderDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStatusBorderDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStatusBorderDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSharedPerspectivesCompletedEventHandler(object sender, getSharedPerspectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSharedPerspectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSharedPerspectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listSourcesCompletedEventHandler(object sender, listSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSourcePoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeTilersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bindSystemPropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSystemVariableInfo2CompletedEventHandler(object sender, getSystemVariableInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemVariableInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemVariableInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public systemVariableInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((systemVariableInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setUserInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createDisplay2CompletedEventHandler(object sender, createDisplay2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDisplay2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDisplay2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setDispletInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getConfigurationInfoCompletedEventHandler(object sender, getConfigurationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConfigurationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConfigurationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public configurationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((configurationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllDispletsCompletedEventHandler(object sender, listAllDispletsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllDispletsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllDispletsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displetWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displetWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listDisplaysCompletedEventHandler(object sender, listDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSystemVariableInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setScreenScrapeSourceDetail2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWindowInfo2CompletedEventHandler(object sender, getWindowInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWindowInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWindowInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public windowInfo2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((windowInfo2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWindowInfo3CompletedEventHandler(object sender, getWindowInfo3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWindowInfo3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWindowInfo3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public windowInfo3 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((windowInfo3)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createWebSource2CompletedEventHandler(object sender, createWebSource2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createWebSource2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createWebSource2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setImageDecoratorDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveSnapshotCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setVideoAndAudioDefaultSettingInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSourceInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveRoleCompletedEventHandler(object sender, forceRemoveRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void openPerspectiveOnDisplay2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getApplicationsCompletedEventHandler(object sender, getApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getStaticTextDecoratorsDetailCompletedEventHandler(object sender, getStaticTextDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStaticTextDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStaticTextDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public staticTextDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((staticTextDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllRolesCompletedEventHandler(object sender, listAllRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public roleWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((roleWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplayInfoCompletedEventHandler(object sender, getDisplayInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplayInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplayInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displayInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displayInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsUserTilingInPerspective2CompletedEventHandler(object sender, saveAsUserTilingInPerspective2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAsUserTilingInPerspective2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAsUserTilingInPerspective2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listDisplaysByUserNameCompletedEventHandler(object sender, listDisplaysByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listDisplaysByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listDisplaysByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void loginSystemUserCompletedEventHandler(object sender, loginSystemUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginSystemUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginSystemUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSystemPropertiesInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createAudioDecoratorTemplateCompletedEventHandler(object sender, createAudioDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAudioDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAudioDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bringWindowToFrontCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveTilerCompletedEventHandler(object sender, forceRemoveTilerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveTilerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveTilerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getModuleInfoCompletedEventHandler(object sender, getModuleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getModuleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getModuleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public moduleInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((moduleInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsDispletTemplateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setWindowsInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listOfSquidModeConfigsCompletedEventHandler(object sender, listOfSquidModeConfigsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfSquidModeConfigsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfSquidModeConfigsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeMessagePoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setPerspectiveWindowsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createApplicationCompletedEventHandler(object sender, createApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveAsTilingInDisplayCompletedEventHandler(object sender, saveAsTilingInDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveAsTilingInDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveAsTilingInDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSourcesInfo2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createUserCompletedEventHandler(object sender, createUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeDisplayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setGroupsInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeDisplaysCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void shareApplicationOnDisplayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getUserInfoCompletedEventHandler(object sender, getUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsharePerspectiveFromDisplayCompletedEventHandler(object sender, unsharePerspectiveFromDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unsharePerspectiveFromDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unsharePerspectiveFromDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getImageDecoratorDetail2CompletedEventHandler(object sender, getImageDecoratorDetail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImageDecoratorDetail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImageDecoratorDetail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public imageDecoratorDetail2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((imageDecoratorDetail2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void cleanupConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getMGSInfoCompletedEventHandler(object sender, getMGSInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMGSInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMGSInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mgsInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mgsInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDisplayWindowsCompletedEventHandler(object sender, getDisplayWindowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDisplayWindowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDisplayWindowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setImageDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSidebarDefaultSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void partialImportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllDisplaysCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void forceRemoveSystemVariableCompletedEventHandler(object sender, forceRemoveSystemVariableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceRemoveSystemVariableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceRemoveSystemVariableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllSourcesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllTilersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeTilerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getDispletsInfo2CompletedEventHandler(object sender, getDispletsInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDispletsInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDispletsInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public displetInfo2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((displetInfo2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeVideoTemplateURLCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSystemPropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void shareApplicationOnDisplay2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getStatusLabelDecoratorsDetailCompletedEventHandler(object sender, getStatusLabelDecoratorsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusLabelDecoratorsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusLabelDecoratorsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public statusLabelDecoratorDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((statusLabelDecoratorDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void removeSnapshotCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setSnapshotsInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllGroupsCompletedEventHandler(object sender, listAllGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public groupWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((groupWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createGroupCompletedEventHandler(object sender, createGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listAllDecoratorsCompletedEventHandler(object sender, listAllDecoratorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllDecoratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllDecoratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decoratorWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decoratorWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findBindingsCompletedEventHandler(object sender, findBindingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findBindingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findBindingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectSystemVariablesInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectSystemVariablesInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getProVNCDefaultSettingInfoCompletedEventHandler(object sender, getProVNCDefaultSettingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProVNCDefaultSettingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProVNCDefaultSettingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public proVNCDefaultSettingsInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((proVNCDefaultSettingsInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchGridsCompletedEventHandler(object sender, searchGridsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchGridsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchGridsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void markRestoreFinishedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createStaticTextDecoratorTemplateCompletedEventHandler(object sender, createStaticTextDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStaticTextDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStaticTextDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getBorderDecoratorDetailCompletedEventHandler(object sender, getBorderDecoratorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBorderDecoratorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBorderDecoratorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public borderDecoratorDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((borderDecoratorDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void listOfAssociatedVDSPerspectivesCompletedEventHandler(object sender, listOfAssociatedVDSPerspectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfAssociatedVDSPerspectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfAssociatedVDSPerspectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unbindCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSystemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getMessagesInfoCompletedEventHandler(object sender, getMessagesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMessagesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMessagesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public messageInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((messageInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeAllConfigurationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createDisplayModulesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSquidModeConfigurationInfoCompletedEventHandler(object sender, getSquidModeConfigurationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSquidModeConfigurationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSquidModeConfigurationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public squidModeConfigurationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((squidModeConfigurationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setPerspectiveWindowDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getGeneratedPerspectiveNameCompletedEventHandler(object sender, getGeneratedPerspectiveNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGeneratedPerspectiveNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGeneratedPerspectiveNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setStatusImageDecoratorsDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unshareAllPerspectivesFromDisplayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeSquidModeConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSystemVariablesInfoCompletedEventHandler(object sender, getSystemVariablesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemVariablesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemVariablesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public systemVariableInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((systemVariableInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setWebSourcesDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeApplicationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void unsubscribeConfigurationPoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void subscribeAllApplicationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void restoreCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createSourceNameDecoratorTemplateCompletedEventHandler(object sender, createSourceNameDecoratorTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSourceNameDecoratorTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSourceNameDecoratorTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchPerspectivesCompletedEventHandler(object sender, searchPerspectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchPerspectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchPerspectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getKeyboardShortcutDefaultSettingsInfoCompletedEventHandler(object sender, getKeyboardShortcutDefaultSettingsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getKeyboardShortcutDefaultSettingsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getKeyboardShortcutDefaultSettingsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public keyboardShortcutDefaultSettingsInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((keyboardShortcutDefaultSettingsInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void applyRoleToRecourcesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getScreenScrapeSourcesDetailCompletedEventHandler(object sender, getScreenScrapeSourcesDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getScreenScrapeSourcesDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getScreenScrapeSourcesDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public screenScrapeSourceDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((screenScrapeSourceDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void searchDecoratorsCompletedEventHandler(object sender, searchDecoratorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchDecoratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchDecoratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void bringDecoratorForwardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setPerspectivesInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void addVideoTemplateURLCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void copyTilersCompletedEventHandler(object sender, copyTilersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyTilersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyTilersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectId[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectId[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591