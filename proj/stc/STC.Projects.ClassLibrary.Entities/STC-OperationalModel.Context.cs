//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STC.Projects.ClassLibrary.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class STCOperationalDataContext : DbContext
    {
        public STCOperationalDataContext()
            : base("name=STCOperationalDataContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AssetStatusDIMView> AssetStatusDIMViews { get; set; }
        public virtual DbSet<AssetTypeDIMView> AssetTypeDIMViews { get; set; }
        public virtual DbSet<CheckedInPatrolView> CheckedInPatrolViews { get; set; }
        public virtual DbSet<CheckedInStaffView> CheckedInStaffViews { get; set; }
        public virtual DbSet<IncidentDispatchView> IncidentDispatchViews { get; set; }
        public virtual DbSet<IncidentStatusLogView> IncidentStatusLogViews { get; set; }
        public virtual DbSet<PatrolStatusDIMView> PatrolStatusDIMViews { get; set; }
        public virtual DbSet<ViolationTypesDIMView> ViolationTypesDIMViews { get; set; }
        public virtual DbSet<Conf_ControlPageMessages> Conf_ControlPageMessages { get; set; }
        public virtual DbSet<Conf_Layout> Conf_Layout { get; set; }
        public virtual DbSet<Conf_LayoutsPlaceHolders> Conf_LayoutsPlaceHolders { get; set; }
        public virtual DbSet<Conf_PageDetails> Conf_PageDetails { get; set; }
        public virtual DbSet<Conf_Pages> Conf_Pages { get; set; }
        public virtual DbSet<Conf_PlaceHolder> Conf_PlaceHolder { get; set; }
        public virtual DbSet<Conf_UserControl> Conf_UserControl { get; set; }
        public virtual DbSet<Conf_UserControlMessage> Conf_UserControlMessage { get; set; }
        public virtual DbSet<Conf_UsersPages> Conf_UsersPages { get; set; }
        public virtual DbSet<AssetLastStatu> AssetLastStatus { get; set; }
        public virtual DbSet<AssetLastStatusView> AssetLastStatusViews { get; set; }
        public virtual DbSet<Conf_ControlPagePublisherMessages> Conf_ControlPagePublisherMessages { get; set; }
        public virtual DbSet<Conf_UserControlPublisherMessage> Conf_UserControlPublisherMessage { get; set; }
        public virtual DbSet<ViolationsCountGroupedByTypePerDayOfWeekAndHourView> ViolationsCountGroupedByTypePerDayOfWeekAndHourViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByTypePerDayOfWeekView> ViolationsCountGroupedByTypePerDayOfWeekViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByTypePerDayView> ViolationsCountGroupedByTypePerDayViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByTypeView> ViolationsCountGroupedByTypeViews { get; set; }
        public virtual DbSet<ViolationsCountPerDayAndHourView> ViolationsCountPerDayAndHourViews { get; set; }
        public virtual DbSet<ViolationsCountPerDayOfWeekAndHourView> ViolationsCountPerDayOfWeekAndHourViews { get; set; }
        public virtual DbSet<ViolationsCountPerDayOfWeekView> ViolationsCountPerDayOfWeekViews { get; set; }
        public virtual DbSet<ViolationsCountPerDayView> ViolationsCountPerDayViews { get; set; }
        public virtual DbSet<Conf_MessageType> Conf_MessageType { get; set; }
        public virtual DbSet<ConfigurationView> ConfigurationViews { get; set; }
        public virtual DbSet<ViolationNotification> ViolationNotifications { get; set; }
        public virtual DbSet<IncidentType> IncidentTypes { get; set; }
        public virtual DbSet<Priority> Priorities { get; set; }
        public virtual DbSet<ViolationNotificationView> ViolationNotificationViews { get; set; }
        public virtual DbSet<IncidentView> IncidentViews { get; set; }
        public virtual DbSet<PatrolLastLocationView> PatrolLastLocationViews { get; set; }
        public virtual DbSet<UsersUserControl> UsersUserControls { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<ViolationsCountGroupedByLocationPerDayAndHourView> ViolationsCountGroupedByLocationPerDayAndHourViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByLocationPerDayOfWeekAndHourView> ViolationsCountGroupedByLocationPerDayOfWeekAndHourViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByLocationPerDayOfWeekView> ViolationsCountGroupedByLocationPerDayOfWeekViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByLocationPerDayView> ViolationsCountGroupedByLocationPerDayViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByLocationView> ViolationsCountGroupedByLocationViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByTypeAndLocationPerDayAndHourView> ViolationsCountGroupedByTypeAndLocationPerDayAndHourViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByTypeAndLocationPerDayOfWeekAndHourView> ViolationsCountGroupedByTypeAndLocationPerDayOfWeekAndHourViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByTypeAndLocationPerDayOfWeekView> ViolationsCountGroupedByTypeAndLocationPerDayOfWeekViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByTypeAndLocationPerDayView> ViolationsCountGroupedByTypeAndLocationPerDayViews { get; set; }
        public virtual DbSet<ViolationsCountGroupedByTypePerDayAndHourView> ViolationsCountGroupedByTypePerDayAndHourViews { get; set; }
        public virtual DbSet<AssetsDetailsView> AssetsDetailsViews { get; set; }
        public virtual DbSet<AssetsView> AssetsViews { get; set; }
        public virtual DbSet<TowerAction> TowerActions { get; set; }
        public virtual DbSet<TransformXML> TransformXMLs { get; set; }
        public virtual DbSet<Conf_SOPSourceSOPView> Conf_SOPSourceSOPView { get; set; }
        public virtual DbSet<Officer> Officers { get; set; }
        public virtual DbSet<OfficersLastLocation> OfficersLastLocations { get; set; }
        public virtual DbSet<OfficersLastLocationsView> OfficersLastLocationsViews { get; set; }
        public virtual DbSet<VehicleLiveTracking> VehicleLiveTrackings { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<UserArea> UserAreas { get; set; }
        public virtual DbSet<PatrolLastLocation> PatrolLastLocations { get; set; }
        public virtual DbSet<Patrol> Patrols { get; set; }
        public virtual DbSet<WantedVehicle> WantedVehicles { get; set; }
        public virtual DbSet<UserUserControlUser> UserUserControlUsers { get; set; }
        public virtual DbSet<UserUserControlView> UserUserControlViews { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<NotificationSOPLog> NotificationSOPLogs { get; set; }
        public virtual DbSet<NotificationStatu> NotificationStatus { get; set; }
        public virtual DbSet<SOPCommand> SOPCommands { get; set; }
        public virtual DbSet<NotificationLog> NotificationLogs { get; set; }
        public virtual DbSet<Asset> Assets { get; set; }
        public virtual DbSet<BusinessRulePriority> BusinessRulePriorities { get; set; }
        public virtual DbSet<CorrelationBusinessRule> CorrelationBusinessRules { get; set; }
        public virtual DbSet<OverSpeed> OverSpeeds { get; set; }
        public virtual DbSet<TrafficCrossTime> TrafficCrossTimes { get; set; }
        public virtual DbSet<VehicleType> VehicleTypes { get; set; }
        public virtual DbSet<KPITarget> KPITargets { get; set; }
        public virtual DbSet<Feature> Features { get; set; }
        public virtual DbSet<Rank> Ranks { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<RoleFeature> RoleFeatures { get; set; }
        public virtual DbSet<UserToken> UserTokens { get; set; }
        public virtual DbSet<ContactItem> ContactItems { get; set; }
        public virtual DbSet<EmergencyContact> EmergencyContacts { get; set; }
        public virtual DbSet<FAQ> FAQs { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<RoadSafetyTip> RoadSafetyTips { get; set; }
        public virtual DbSet<Weather> Weathers { get; set; }
        public virtual DbSet<CrispSession> CrispSessions { get; set; }
        public virtual DbSet<Nationality> Nationalities { get; set; }
        public virtual DbSet<PublicUser> PublicUsers { get; set; }
        public virtual DbSet<IncidentDispatch> IncidentDispatches { get; set; }
        public virtual DbSet<VehiclePlateClassification> VehiclePlateClassifications { get; set; }
        public virtual DbSet<VehiclePlateColor> VehiclePlateColors { get; set; }
        public virtual DbSet<VehiclePlateKind> VehiclePlateKinds { get; set; }
        public virtual DbSet<VehiclePlateSource> VehiclePlateSources { get; set; }
        public virtual DbSet<VehicleViolationClassification> VehicleViolationClassifications { get; set; }
        public virtual DbSet<VehicleViolationInterceptsType> VehicleViolationInterceptsTypes { get; set; }
        public virtual DbSet<Conf_SOP> Conf_SOP { get; set; }
        public virtual DbSet<Conf_SOPSourceSOP> Conf_SOPSourceSOP { get; set; }
        public virtual DbSet<VehicleViolationsType> VehicleViolationsTypes { get; set; }
        public virtual DbSet<Conf_SOPSource> Conf_SOPSource { get; set; }
        public virtual DbSet<ReportDangerou> ReportDangerous { get; set; }
        public virtual DbSet<SupervisorNotification> SupervisorNotifications { get; set; }
        public virtual DbSet<MobileLookup> MobileLookups { get; set; }
        public virtual DbSet<CorrelationDriverDetail> CorrelationDriverDetails { get; set; }
        public virtual DbSet<CorrelationViolationDetail> CorrelationViolationDetails { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<VehicleDetail> VehicleDetails { get; set; }
        public virtual DbSet<TimeDetail> TimeDetails { get; set; }
        public virtual DbSet<NewCorrelationRule> NewCorrelationRules { get; set; }
        public virtual DbSet<VehicleMake> VehicleMakes { get; set; }
        public virtual DbSet<VehicleUTSType> VehicleUTSTypes { get; set; }
        public virtual DbSet<CorrelationMessagesLog> CorrelationMessagesLogs { get; set; }
        public virtual DbSet<CorrelationMessagesLogView> CorrelationMessagesLogViews { get; set; }
        public virtual DbSet<IncidentArea> IncidentAreas { get; set; }
        public virtual DbSet<IncidentCause> IncidentCauses { get; set; }
        public virtual DbSet<IncidentCity> IncidentCities { get; set; }
        public virtual DbSet<IncidentCrashSeverity> IncidentCrashSeverities { get; set; }
        public virtual DbSet<IncidentCrashType> IncidentCrashTypes { get; set; }
        public virtual DbSet<IncidentEmirate> IncidentEmirates { get; set; }
        public virtual DbSet<IncidentIntersection> IncidentIntersections { get; set; }
        public virtual DbSet<IncidentLighting> IncidentLightings { get; set; }
        public virtual DbSet<IncidentLocation> IncidentLocations { get; set; }
        public virtual DbSet<IncidentLocationType> IncidentLocationTypes { get; set; }
        public virtual DbSet<IncidentPCondition> IncidentPConditions { get; set; }
        public virtual DbSet<IncidentRoadType> IncidentRoadTypes { get; set; }
        public virtual DbSet<IncidentWeather> IncidentWeathers { get; set; }
        public virtual DbSet<IncidentStatus> IncidentStatus { get; set; }
        public virtual DbSet<IncidentPoliceStation> IncidentPoliceStation { get; set; }
        public virtual DbSet<Incident> Incident { get; set; }
        public virtual DbSet<OfficerTask> OfficerTask { get; set; }
        public virtual DbSet<OfficerTaskStatus> OfficerTaskStatus { get; set; }
        public virtual DbSet<TaskStatus> TaskStatus { get; set; }
        public virtual DbSet<AutomaticReportDiminsion> AutomaticReportDiminsion { get; set; }
        public virtual DbSet<AutomaticReportGroups> AutomaticReportGroups { get; set; }
        public virtual DbSet<AutomaticReports> AutomaticReports { get; set; }
        public virtual DbSet<AutomaticReportsLog> AutomaticReportsLog { get; set; }
        public virtual DbSet<ParameterDiminsions> ParameterDiminsions { get; set; }
        public virtual DbSet<ReportSchedule> ReportSchedule { get; set; }
        public virtual DbSet<ReportsTemplate> ReportsTemplate { get; set; }
        public virtual DbSet<ReportTemplateParameter> ReportTemplateParameter { get; set; }
        public virtual DbSet<TemplateParameters> TemplateParameters { get; set; }
        public virtual DbSet<AccidentExcelMap> AccidentExcelMaps { get; set; }
        public virtual DbSet<UploadedFile> UploadedFiles { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GroupUser> GroupUsers { get; set; }
        public virtual DbSet<AgeClass> AgeClasses { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<LevelOfEducation> LevelOfEducations { get; set; }
        public virtual DbSet<ManualViolation> ManualViolations { get; set; }
        public virtual DbSet<ManualViolationLicenseSource> ManualViolationLicenseSources { get; set; }
        public virtual DbSet<ManualViolationRadarClass> ManualViolationRadarClasses { get; set; }
        public virtual DbSet<ManualViolationRadarType> ManualViolationRadarTypes { get; set; }
        public virtual DbSet<ManualViolationReason> ManualViolationReasons { get; set; }
        public virtual DbSet<ManualViolationType> ManualViolationTypes { get; set; }
        public virtual DbSet<ManualViolationVehicleType> ManualViolationVehicleTypes { get; set; }
        public virtual DbSet<MaritalStatu> MaritalStatus { get; set; }
        public virtual DbSet<DiminsionRelativeTypeId> DiminsionRelativeTypeIds { get; set; }
        public virtual DbSet<SmartOfficerNew> SmartOfficerNews { get; set; }
        public virtual DbSet<SearchForDangerousViolatorView> SearchForDangerousViolatorViews { get; set; }
        public virtual DbSet<AssetStatusThreshold> AssetStatusThresholds { get; set; }
    
        [DbFunction("STCOperationalDataContext", "fn_FilterViolations")]
        public virtual IQueryable<fn_FilterViolations_Result> fn_FilterViolations(Nullable<System.DateTime> date, Nullable<int> violationType, string locationCode)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var violationTypeParameter = violationType.HasValue ?
                new ObjectParameter("ViolationType", violationType) :
                new ObjectParameter("ViolationType", typeof(int));
    
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_FilterViolations_Result>("[STCOperationalDataContext].[fn_FilterViolations](@Date, @ViolationType, @LocationCode)", dateParameter, violationTypeParameter, locationCodeParameter);
        }
    
        [DbFunction("STCOperationalDataContext", "fn_GetViolationsDetailsByLocation")]
        public virtual IQueryable<fn_GetViolationsDetailsByLocation_Result> fn_GetViolationsDetailsByLocation(Nullable<System.DateTime> date, Nullable<int> violationTypeId, string locationCode)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var violationTypeIdParameter = violationTypeId.HasValue ?
                new ObjectParameter("ViolationTypeId", violationTypeId) :
                new ObjectParameter("ViolationTypeId", typeof(int));
    
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetViolationsDetailsByLocation_Result>("[STCOperationalDataContext].[fn_GetViolationsDetailsByLocation](@Date, @ViolationTypeId, @LocationCode)", dateParameter, violationTypeIdParameter, locationCodeParameter);
        }
    
        [DbFunction("STCOperationalDataContext", "fn_GroupViolationsByLocationAndType")]
        public virtual IQueryable<fn_GroupViolationsByLocationAndType_Result> fn_GroupViolationsByLocationAndType(Nullable<System.DateTime> date, Nullable<int> violationTypeId, string locationCode)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var violationTypeIdParameter = violationTypeId.HasValue ?
                new ObjectParameter("ViolationTypeId", violationTypeId) :
                new ObjectParameter("ViolationTypeId", typeof(int));
    
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GroupViolationsByLocationAndType_Result>("[STCOperationalDataContext].[fn_GroupViolationsByLocationAndType](@Date, @ViolationTypeId, @LocationCode)", dateParameter, violationTypeIdParameter, locationCodeParameter);
        }
    
        [DbFunction("STCOperationalDataContext", "fn_GroupViolationsByLocationAndStatus")]
        public virtual IQueryable<fn_GroupViolationsByLocationAndStatus_Result> fn_GroupViolationsByLocationAndStatus(Nullable<System.DateTime> date, Nullable<int> violationTypeId, string locationCode)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var violationTypeIdParameter = violationTypeId.HasValue ?
                new ObjectParameter("ViolationTypeId", violationTypeId) :
                new ObjectParameter("ViolationTypeId", typeof(int));
    
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GroupViolationsByLocationAndStatus_Result>("[STCOperationalDataContext].[fn_GroupViolationsByLocationAndStatus](@Date, @ViolationTypeId, @LocationCode)", dateParameter, violationTypeIdParameter, locationCodeParameter);
        }
    
        [DbFunction("STCOperationalDataContext", "fn_GroupViolationsByLocations")]
        public virtual IQueryable<fn_GroupViolationsByLocations_Result> fn_GroupViolationsByLocations(Nullable<System.DateTime> date, Nullable<int> violationTypeId)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var violationTypeIdParameter = violationTypeId.HasValue ?
                new ObjectParameter("ViolationTypeId", violationTypeId) :
                new ObjectParameter("ViolationTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GroupViolationsByLocations_Result>("[STCOperationalDataContext].[fn_GroupViolationsByLocations](@Date, @ViolationTypeId)", dateParameter, violationTypeIdParameter);
        }
    
        [DbFunction("STCOperationalDataContext", "fn_GetRecentEventsNotification")]
        public virtual IQueryable<fn_GetRecentEventsNotification_Result> fn_GetRecentEventsNotification(Nullable<int> timePeriod, Nullable<int> userId)
        {
            var timePeriodParameter = timePeriod.HasValue ?
                new ObjectParameter("TimePeriod", timePeriod) :
                new ObjectParameter("TimePeriod", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetRecentEventsNotification_Result>("[STCOperationalDataContext].[fn_GetRecentEventsNotification](@TimePeriod, @UserId)", timePeriodParameter, userIdParameter);
        }
    
        [DbFunction("STCOperationalDataContext", "fn_GetRecentViolationNotification")]
        public virtual IQueryable<fn_GetRecentViolationNotification_Result> fn_GetRecentViolationNotification(Nullable<int> timePeriod)
        {
            var timePeriodParameter = timePeriod.HasValue ?
                new ObjectParameter("TimePeriod", timePeriod) :
                new ObjectParameter("TimePeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetRecentViolationNotification_Result>("[STCOperationalDataContext].[fn_GetRecentViolationNotification](@TimePeriod)", timePeriodParameter);
        }
    
        [DbFunction("STCOperationalDataContext", "fn_GetRecentIncidentsNotification")]
        public virtual IQueryable<fn_GetRecentIncidentsNotification_Result> fn_GetRecentIncidentsNotification(Nullable<int> timePeriod)
        {
            var timePeriodParameter = timePeriod.HasValue ?
                new ObjectParameter("TimePeriod", timePeriod) :
                new ObjectParameter("TimePeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetRecentIncidentsNotification_Result>("[STCOperationalDataContext].[fn_GetRecentIncidentsNotification](@TimePeriod)", timePeriodParameter);
        }
    }
}
