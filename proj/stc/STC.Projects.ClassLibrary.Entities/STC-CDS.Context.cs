//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STC.Projects.ClassLibrary.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ViolationView> ViolationViews { get; set; }
        public virtual DbSet<CallOfServiceHistoricalView> CallOfServiceHistoricalViews { get; set; }
        public virtual DbSet<ViolationImageView> ViolationImageViews { get; set; }
        public virtual DbSet<DangerousVehicleViolation> DangerousVehicleViolations { get; set; }
        public virtual DbSet<DangerousVehicleView> DangerousVehicleViews { get; set; }
        public virtual DbSet<Activity> Activities { get; set; }
        public virtual DbSet<ActivityItemView> ActivityItemViews { get; set; }
        public virtual DbSet<ActivityLocationView> ActivityLocationViews { get; set; }
        public virtual DbSet<ActivityOrganization> ActivityOrganizations { get; set; }
        public virtual DbSet<ActivityPersonView> ActivityPersonViews { get; set; }
        public virtual DbSet<ItemView> ItemViews { get; set; }
        public virtual DbSet<OrganizationView> OrganizationViews { get; set; }
        public virtual DbSet<PersonView> PersonViews { get; set; }
        public virtual DbSet<ServiceCallDriver> ServiceCallDrivers { get; set; }
        public virtual DbSet<ServiceCallInsurance> ServiceCallInsurances { get; set; }
        public virtual DbSet<ServiceCallVehicle> ServiceCallVehicles { get; set; }
        public virtual DbSet<ServiceCall> ServiceCalls { get; set; }
        public virtual DbSet<LocationView> LocationViews { get; set; }
        public virtual DbSet<ItemRegistration> ItemRegistrations { get; set; }
        public virtual DbSet<ItemRegistrationAuthorityDIM> ItemRegistrationAuthorityDIMs { get; set; }
        public virtual DbSet<ItemRegistrationPlateCategoryDIM> ItemRegistrationPlateCategoryDIMs { get; set; }
        public virtual DbSet<ItemRegistrationPlateCodeDIM> ItemRegistrationPlateCodeDIMs { get; set; }
        public virtual DbSet<ItemRegistrationPlateKindDIM> ItemRegistrationPlateKindDIMs { get; set; }
        public virtual DbSet<Source> Sources { get; set; }
        public virtual DbSet<ActivityCategoryDIM> ActivityCategoryDIMs { get; set; }
        public virtual DbSet<ItemCategoryDIM> ItemCategoryDIMs { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<ItemInvolvementDIM> ItemInvolvementDIMs { get; set; }
        public virtual DbSet<ActivityItem> ActivityItems { get; set; }
        public virtual DbSet<ActivityLocation> ActivityLocations { get; set; }
        public virtual DbSet<ActivityPerson> ActivityPersons { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<ActivityReasonDIM> ActivityReasonDIMs { get; set; }
        public virtual DbSet<PersonEducation> PersonEducations { get; set; }
        public virtual DbSet<PersonGenderDIM> PersonGenderDIMs { get; set; }
        public virtual DbSet<PersonMaritalStatusDIM> PersonMaritalStatusDIMs { get; set; }
        public virtual DbSet<PersonCategoryDIM> PersonCategoryDIMs { get; set; }
        public virtual DbSet<PersonDriverLicense> PersonDriverLicenses { get; set; }
        public virtual DbSet<EducationCategoryDIM> EducationCategoryDIMs { get; set; }
        public virtual DbSet<EducationDegreeDIM> EducationDegreeDIMs { get; set; }
        public virtual DbSet<EducationStatusDIM> EducationStatusDIMs { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<LocationDatumDIM> LocationDatumDIMs { get; set; }
        public virtual DbSet<LocationCategoryDIM> LocationCategoryDIMs { get; set; }
        public virtual DbSet<StatusDIM> StatusDIMs { get; set; }
        public virtual DbSet<LocationInvolvementDIM> LocationInvolvementDIMs { get; set; }
        public virtual DbSet<PersonInvolvementDIM> PersonInvolvementDIMs { get; set; }
    
        [DbFunction("Entities", "fn_GroupHistoricalViolationsByLocations")]
        public virtual IQueryable<fn_GroupHistoricalViolationsByLocations_Result> fn_GroupHistoricalViolationsByLocations(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> violationTypeId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var violationTypeIdParameter = violationTypeId.HasValue ?
                new ObjectParameter("ViolationTypeId", violationTypeId) :
                new ObjectParameter("ViolationTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GroupHistoricalViolationsByLocations_Result>("[Entities].[fn_GroupHistoricalViolationsByLocations](@StartDate, @EndDate, @ViolationTypeId)", startDateParameter, endDateParameter, violationTypeIdParameter);
        }
    
        public virtual int usp_DeleteDangerousVehicleData(Nullable<long> activityId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteDangerousVehicleData", activityIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertDangerousVehicleEntity(string originalIdent, string sourceName, string activityCategoryCode, string activityCategoryDescription, string activityReasonCode, string activityReasonDescription, string statusCode, string statusDescription, string importanceHighLowCode, string importanceHighLowDescription, string highLowCode, string highLowDescription, string activityName, string activityDescription, Nullable<System.DateTime> activityStartDate, Nullable<System.DateTime> activityEndDate, Nullable<System.DateTime> activityDueDate, Nullable<System.DateTime> activityExpirationDate, Nullable<bool> isCompleted, Nullable<System.DateTime> activityDate, string rowStatusCode, string rowStatusDescription, string plateCode, string plateKind, string plateColor, string plateNumber, Nullable<System.DateTime> dateTime, Nullable<int> correlationPeriod)
        {
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var activityCategoryCodeParameter = activityCategoryCode != null ?
                new ObjectParameter("ActivityCategoryCode", activityCategoryCode) :
                new ObjectParameter("ActivityCategoryCode", typeof(string));
    
            var activityCategoryDescriptionParameter = activityCategoryDescription != null ?
                new ObjectParameter("ActivityCategoryDescription", activityCategoryDescription) :
                new ObjectParameter("ActivityCategoryDescription", typeof(string));
    
            var activityReasonCodeParameter = activityReasonCode != null ?
                new ObjectParameter("ActivityReasonCode", activityReasonCode) :
                new ObjectParameter("ActivityReasonCode", typeof(string));
    
            var activityReasonDescriptionParameter = activityReasonDescription != null ?
                new ObjectParameter("ActivityReasonDescription", activityReasonDescription) :
                new ObjectParameter("ActivityReasonDescription", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var statusDescriptionParameter = statusDescription != null ?
                new ObjectParameter("StatusDescription", statusDescription) :
                new ObjectParameter("StatusDescription", typeof(string));
    
            var importanceHighLowCodeParameter = importanceHighLowCode != null ?
                new ObjectParameter("ImportanceHighLowCode", importanceHighLowCode) :
                new ObjectParameter("ImportanceHighLowCode", typeof(string));
    
            var importanceHighLowDescriptionParameter = importanceHighLowDescription != null ?
                new ObjectParameter("ImportanceHighLowDescription", importanceHighLowDescription) :
                new ObjectParameter("ImportanceHighLowDescription", typeof(string));
    
            var highLowCodeParameter = highLowCode != null ?
                new ObjectParameter("HighLowCode", highLowCode) :
                new ObjectParameter("HighLowCode", typeof(string));
    
            var highLowDescriptionParameter = highLowDescription != null ?
                new ObjectParameter("HighLowDescription", highLowDescription) :
                new ObjectParameter("HighLowDescription", typeof(string));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("ActivityName", activityName) :
                new ObjectParameter("ActivityName", typeof(string));
    
            var activityDescriptionParameter = activityDescription != null ?
                new ObjectParameter("ActivityDescription", activityDescription) :
                new ObjectParameter("ActivityDescription", typeof(string));
    
            var activityStartDateParameter = activityStartDate.HasValue ?
                new ObjectParameter("ActivityStartDate", activityStartDate) :
                new ObjectParameter("ActivityStartDate", typeof(System.DateTime));
    
            var activityEndDateParameter = activityEndDate.HasValue ?
                new ObjectParameter("ActivityEndDate", activityEndDate) :
                new ObjectParameter("ActivityEndDate", typeof(System.DateTime));
    
            var activityDueDateParameter = activityDueDate.HasValue ?
                new ObjectParameter("ActivityDueDate", activityDueDate) :
                new ObjectParameter("ActivityDueDate", typeof(System.DateTime));
    
            var activityExpirationDateParameter = activityExpirationDate.HasValue ?
                new ObjectParameter("ActivityExpirationDate", activityExpirationDate) :
                new ObjectParameter("ActivityExpirationDate", typeof(System.DateTime));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("IsCompleted", isCompleted) :
                new ObjectParameter("IsCompleted", typeof(bool));
    
            var activityDateParameter = activityDate.HasValue ?
                new ObjectParameter("ActivityDate", activityDate) :
                new ObjectParameter("ActivityDate", typeof(System.DateTime));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var plateCodeParameter = plateCode != null ?
                new ObjectParameter("PlateCode", plateCode) :
                new ObjectParameter("PlateCode", typeof(string));
    
            var plateKindParameter = plateKind != null ?
                new ObjectParameter("PlateKind", plateKind) :
                new ObjectParameter("PlateKind", typeof(string));
    
            var plateColorParameter = plateColor != null ?
                new ObjectParameter("PlateColor", plateColor) :
                new ObjectParameter("PlateColor", typeof(string));
    
            var plateNumberParameter = plateNumber != null ?
                new ObjectParameter("PlateNumber", plateNumber) :
                new ObjectParameter("PlateNumber", typeof(string));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var correlationPeriodParameter = correlationPeriod.HasValue ?
                new ObjectParameter("CorrelationPeriod", correlationPeriod) :
                new ObjectParameter("CorrelationPeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertDangerousVehicleEntity", originalIdentParameter, sourceNameParameter, activityCategoryCodeParameter, activityCategoryDescriptionParameter, activityReasonCodeParameter, activityReasonDescriptionParameter, statusCodeParameter, statusDescriptionParameter, importanceHighLowCodeParameter, importanceHighLowDescriptionParameter, highLowCodeParameter, highLowDescriptionParameter, activityNameParameter, activityDescriptionParameter, activityStartDateParameter, activityEndDateParameter, activityDueDateParameter, activityExpirationDateParameter, isCompletedParameter, activityDateParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, plateCodeParameter, plateKindParameter, plateColorParameter, plateNumberParameter, dateTimeParameter, correlationPeriodParameter);
        }
    
        public virtual int usp_UpdateDangerousVehicleEntity(Nullable<long> activityId, string originalIdent, string sourceName, string activityCategoryCode, string activityCategoryDescription, string activityReasonCode, string activityReasonDescription, string statusCode, string statusDescription, string importanceHighLowCode, string importanceHighLowDescription, string highLowCode, string highLowDescription, string activityName, string activityDescription, Nullable<System.DateTime> activityStartDate, Nullable<System.DateTime> activityEndDate, Nullable<System.DateTime> activityDueDate, Nullable<System.DateTime> activityExpirationDate, Nullable<bool> isCompleted, Nullable<System.DateTime> activityDate, string rowStatusCode, string rowStatusDescription, string plateCode, string plateKind, string plateColor, string plateNumber, Nullable<System.DateTime> dateTime, Nullable<int> correlationPeriod)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var activityCategoryCodeParameter = activityCategoryCode != null ?
                new ObjectParameter("ActivityCategoryCode", activityCategoryCode) :
                new ObjectParameter("ActivityCategoryCode", typeof(string));
    
            var activityCategoryDescriptionParameter = activityCategoryDescription != null ?
                new ObjectParameter("ActivityCategoryDescription", activityCategoryDescription) :
                new ObjectParameter("ActivityCategoryDescription", typeof(string));
    
            var activityReasonCodeParameter = activityReasonCode != null ?
                new ObjectParameter("ActivityReasonCode", activityReasonCode) :
                new ObjectParameter("ActivityReasonCode", typeof(string));
    
            var activityReasonDescriptionParameter = activityReasonDescription != null ?
                new ObjectParameter("ActivityReasonDescription", activityReasonDescription) :
                new ObjectParameter("ActivityReasonDescription", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var statusDescriptionParameter = statusDescription != null ?
                new ObjectParameter("StatusDescription", statusDescription) :
                new ObjectParameter("StatusDescription", typeof(string));
    
            var importanceHighLowCodeParameter = importanceHighLowCode != null ?
                new ObjectParameter("ImportanceHighLowCode", importanceHighLowCode) :
                new ObjectParameter("ImportanceHighLowCode", typeof(string));
    
            var importanceHighLowDescriptionParameter = importanceHighLowDescription != null ?
                new ObjectParameter("ImportanceHighLowDescription", importanceHighLowDescription) :
                new ObjectParameter("ImportanceHighLowDescription", typeof(string));
    
            var highLowCodeParameter = highLowCode != null ?
                new ObjectParameter("HighLowCode", highLowCode) :
                new ObjectParameter("HighLowCode", typeof(string));
    
            var highLowDescriptionParameter = highLowDescription != null ?
                new ObjectParameter("HighLowDescription", highLowDescription) :
                new ObjectParameter("HighLowDescription", typeof(string));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("ActivityName", activityName) :
                new ObjectParameter("ActivityName", typeof(string));
    
            var activityDescriptionParameter = activityDescription != null ?
                new ObjectParameter("ActivityDescription", activityDescription) :
                new ObjectParameter("ActivityDescription", typeof(string));
    
            var activityStartDateParameter = activityStartDate.HasValue ?
                new ObjectParameter("ActivityStartDate", activityStartDate) :
                new ObjectParameter("ActivityStartDate", typeof(System.DateTime));
    
            var activityEndDateParameter = activityEndDate.HasValue ?
                new ObjectParameter("ActivityEndDate", activityEndDate) :
                new ObjectParameter("ActivityEndDate", typeof(System.DateTime));
    
            var activityDueDateParameter = activityDueDate.HasValue ?
                new ObjectParameter("ActivityDueDate", activityDueDate) :
                new ObjectParameter("ActivityDueDate", typeof(System.DateTime));
    
            var activityExpirationDateParameter = activityExpirationDate.HasValue ?
                new ObjectParameter("ActivityExpirationDate", activityExpirationDate) :
                new ObjectParameter("ActivityExpirationDate", typeof(System.DateTime));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("IsCompleted", isCompleted) :
                new ObjectParameter("IsCompleted", typeof(bool));
    
            var activityDateParameter = activityDate.HasValue ?
                new ObjectParameter("ActivityDate", activityDate) :
                new ObjectParameter("ActivityDate", typeof(System.DateTime));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var plateCodeParameter = plateCode != null ?
                new ObjectParameter("PlateCode", plateCode) :
                new ObjectParameter("PlateCode", typeof(string));
    
            var plateKindParameter = plateKind != null ?
                new ObjectParameter("PlateKind", plateKind) :
                new ObjectParameter("PlateKind", typeof(string));
    
            var plateColorParameter = plateColor != null ?
                new ObjectParameter("PlateColor", plateColor) :
                new ObjectParameter("PlateColor", typeof(string));
    
            var plateNumberParameter = plateNumber != null ?
                new ObjectParameter("PlateNumber", plateNumber) :
                new ObjectParameter("PlateNumber", typeof(string));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var correlationPeriodParameter = correlationPeriod.HasValue ?
                new ObjectParameter("CorrelationPeriod", correlationPeriod) :
                new ObjectParameter("CorrelationPeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateDangerousVehicleEntity", activityIdParameter, originalIdentParameter, sourceNameParameter, activityCategoryCodeParameter, activityCategoryDescriptionParameter, activityReasonCodeParameter, activityReasonDescriptionParameter, statusCodeParameter, statusDescriptionParameter, importanceHighLowCodeParameter, importanceHighLowDescriptionParameter, highLowCodeParameter, highLowDescriptionParameter, activityNameParameter, activityDescriptionParameter, activityStartDateParameter, activityEndDateParameter, activityDueDateParameter, activityExpirationDateParameter, isCompletedParameter, activityDateParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, plateCodeParameter, plateKindParameter, plateColorParameter, plateNumberParameter, dateTimeParameter, correlationPeriodParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertCustodyTransferEntity(string originalIdent, string sourceName, string activityCategoryCode, string activityCategoryDescription, string activityReasonCode, string activityReasonDescription, string statusCode, string statusDescription, string importanceHighLowCode, string importanceHighLowDescription, string highLowCode, string highLowDescription, string activityName, string activityDescription, Nullable<System.DateTime> activityStartDate, Nullable<System.DateTime> activityEndDate, Nullable<System.DateTime> activityDueDate, Nullable<System.DateTime> activityExpirationDate, Nullable<bool> isCompleted, Nullable<System.DateTime> activityDate, string rowStatusCode, string rowStatusDescription, string custodyTransferActionCode, string custodyTransferActionDescription)
        {
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var activityCategoryCodeParameter = activityCategoryCode != null ?
                new ObjectParameter("ActivityCategoryCode", activityCategoryCode) :
                new ObjectParameter("ActivityCategoryCode", typeof(string));
    
            var activityCategoryDescriptionParameter = activityCategoryDescription != null ?
                new ObjectParameter("ActivityCategoryDescription", activityCategoryDescription) :
                new ObjectParameter("ActivityCategoryDescription", typeof(string));
    
            var activityReasonCodeParameter = activityReasonCode != null ?
                new ObjectParameter("ActivityReasonCode", activityReasonCode) :
                new ObjectParameter("ActivityReasonCode", typeof(string));
    
            var activityReasonDescriptionParameter = activityReasonDescription != null ?
                new ObjectParameter("ActivityReasonDescription", activityReasonDescription) :
                new ObjectParameter("ActivityReasonDescription", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var statusDescriptionParameter = statusDescription != null ?
                new ObjectParameter("StatusDescription", statusDescription) :
                new ObjectParameter("StatusDescription", typeof(string));
    
            var importanceHighLowCodeParameter = importanceHighLowCode != null ?
                new ObjectParameter("ImportanceHighLowCode", importanceHighLowCode) :
                new ObjectParameter("ImportanceHighLowCode", typeof(string));
    
            var importanceHighLowDescriptionParameter = importanceHighLowDescription != null ?
                new ObjectParameter("ImportanceHighLowDescription", importanceHighLowDescription) :
                new ObjectParameter("ImportanceHighLowDescription", typeof(string));
    
            var highLowCodeParameter = highLowCode != null ?
                new ObjectParameter("HighLowCode", highLowCode) :
                new ObjectParameter("HighLowCode", typeof(string));
    
            var highLowDescriptionParameter = highLowDescription != null ?
                new ObjectParameter("HighLowDescription", highLowDescription) :
                new ObjectParameter("HighLowDescription", typeof(string));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("ActivityName", activityName) :
                new ObjectParameter("ActivityName", typeof(string));
    
            var activityDescriptionParameter = activityDescription != null ?
                new ObjectParameter("ActivityDescription", activityDescription) :
                new ObjectParameter("ActivityDescription", typeof(string));
    
            var activityStartDateParameter = activityStartDate.HasValue ?
                new ObjectParameter("ActivityStartDate", activityStartDate) :
                new ObjectParameter("ActivityStartDate", typeof(System.DateTime));
    
            var activityEndDateParameter = activityEndDate.HasValue ?
                new ObjectParameter("ActivityEndDate", activityEndDate) :
                new ObjectParameter("ActivityEndDate", typeof(System.DateTime));
    
            var activityDueDateParameter = activityDueDate.HasValue ?
                new ObjectParameter("ActivityDueDate", activityDueDate) :
                new ObjectParameter("ActivityDueDate", typeof(System.DateTime));
    
            var activityExpirationDateParameter = activityExpirationDate.HasValue ?
                new ObjectParameter("ActivityExpirationDate", activityExpirationDate) :
                new ObjectParameter("ActivityExpirationDate", typeof(System.DateTime));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("IsCompleted", isCompleted) :
                new ObjectParameter("IsCompleted", typeof(bool));
    
            var activityDateParameter = activityDate.HasValue ?
                new ObjectParameter("ActivityDate", activityDate) :
                new ObjectParameter("ActivityDate", typeof(System.DateTime));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var custodyTransferActionCodeParameter = custodyTransferActionCode != null ?
                new ObjectParameter("CustodyTransferActionCode", custodyTransferActionCode) :
                new ObjectParameter("CustodyTransferActionCode", typeof(string));
    
            var custodyTransferActionDescriptionParameter = custodyTransferActionDescription != null ?
                new ObjectParameter("CustodyTransferActionDescription", custodyTransferActionDescription) :
                new ObjectParameter("CustodyTransferActionDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertCustodyTransferEntity", originalIdentParameter, sourceNameParameter, activityCategoryCodeParameter, activityCategoryDescriptionParameter, activityReasonCodeParameter, activityReasonDescriptionParameter, statusCodeParameter, statusDescriptionParameter, importanceHighLowCodeParameter, importanceHighLowDescriptionParameter, highLowCodeParameter, highLowDescriptionParameter, activityNameParameter, activityDescriptionParameter, activityStartDateParameter, activityEndDateParameter, activityDueDateParameter, activityExpirationDateParameter, isCompletedParameter, activityDateParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, custodyTransferActionCodeParameter, custodyTransferActionDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertDangerousVehicleEntity1(string originalIdent, string sourceName, string activityCategoryCode, string activityCategoryDescription, string activityReasonCode, string activityReasonDescription, string statusCode, string statusDescription, string importanceHighLowCode, string importanceHighLowDescription, string highLowCode, string highLowDescription, string activityName, string activityDescription, Nullable<System.DateTime> activityStartDate, Nullable<System.DateTime> activityEndDate, Nullable<System.DateTime> activityDueDate, Nullable<System.DateTime> activityExpirationDate, Nullable<bool> isCompleted, Nullable<System.DateTime> activityDate, string rowStatusCode, string rowStatusDescription, string plateCode, string plateKind, string plateColor, string plateNumber, Nullable<System.DateTime> dateTime, Nullable<int> correlationPeriod)
        {
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var activityCategoryCodeParameter = activityCategoryCode != null ?
                new ObjectParameter("ActivityCategoryCode", activityCategoryCode) :
                new ObjectParameter("ActivityCategoryCode", typeof(string));
    
            var activityCategoryDescriptionParameter = activityCategoryDescription != null ?
                new ObjectParameter("ActivityCategoryDescription", activityCategoryDescription) :
                new ObjectParameter("ActivityCategoryDescription", typeof(string));
    
            var activityReasonCodeParameter = activityReasonCode != null ?
                new ObjectParameter("ActivityReasonCode", activityReasonCode) :
                new ObjectParameter("ActivityReasonCode", typeof(string));
    
            var activityReasonDescriptionParameter = activityReasonDescription != null ?
                new ObjectParameter("ActivityReasonDescription", activityReasonDescription) :
                new ObjectParameter("ActivityReasonDescription", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var statusDescriptionParameter = statusDescription != null ?
                new ObjectParameter("StatusDescription", statusDescription) :
                new ObjectParameter("StatusDescription", typeof(string));
    
            var importanceHighLowCodeParameter = importanceHighLowCode != null ?
                new ObjectParameter("ImportanceHighLowCode", importanceHighLowCode) :
                new ObjectParameter("ImportanceHighLowCode", typeof(string));
    
            var importanceHighLowDescriptionParameter = importanceHighLowDescription != null ?
                new ObjectParameter("ImportanceHighLowDescription", importanceHighLowDescription) :
                new ObjectParameter("ImportanceHighLowDescription", typeof(string));
    
            var highLowCodeParameter = highLowCode != null ?
                new ObjectParameter("HighLowCode", highLowCode) :
                new ObjectParameter("HighLowCode", typeof(string));
    
            var highLowDescriptionParameter = highLowDescription != null ?
                new ObjectParameter("HighLowDescription", highLowDescription) :
                new ObjectParameter("HighLowDescription", typeof(string));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("ActivityName", activityName) :
                new ObjectParameter("ActivityName", typeof(string));
    
            var activityDescriptionParameter = activityDescription != null ?
                new ObjectParameter("ActivityDescription", activityDescription) :
                new ObjectParameter("ActivityDescription", typeof(string));
    
            var activityStartDateParameter = activityStartDate.HasValue ?
                new ObjectParameter("ActivityStartDate", activityStartDate) :
                new ObjectParameter("ActivityStartDate", typeof(System.DateTime));
    
            var activityEndDateParameter = activityEndDate.HasValue ?
                new ObjectParameter("ActivityEndDate", activityEndDate) :
                new ObjectParameter("ActivityEndDate", typeof(System.DateTime));
    
            var activityDueDateParameter = activityDueDate.HasValue ?
                new ObjectParameter("ActivityDueDate", activityDueDate) :
                new ObjectParameter("ActivityDueDate", typeof(System.DateTime));
    
            var activityExpirationDateParameter = activityExpirationDate.HasValue ?
                new ObjectParameter("ActivityExpirationDate", activityExpirationDate) :
                new ObjectParameter("ActivityExpirationDate", typeof(System.DateTime));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("IsCompleted", isCompleted) :
                new ObjectParameter("IsCompleted", typeof(bool));
    
            var activityDateParameter = activityDate.HasValue ?
                new ObjectParameter("ActivityDate", activityDate) :
                new ObjectParameter("ActivityDate", typeof(System.DateTime));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var plateCodeParameter = plateCode != null ?
                new ObjectParameter("PlateCode", plateCode) :
                new ObjectParameter("PlateCode", typeof(string));
    
            var plateKindParameter = plateKind != null ?
                new ObjectParameter("PlateKind", plateKind) :
                new ObjectParameter("PlateKind", typeof(string));
    
            var plateColorParameter = plateColor != null ?
                new ObjectParameter("PlateColor", plateColor) :
                new ObjectParameter("PlateColor", typeof(string));
    
            var plateNumberParameter = plateNumber != null ?
                new ObjectParameter("PlateNumber", plateNumber) :
                new ObjectParameter("PlateNumber", typeof(string));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var correlationPeriodParameter = correlationPeriod.HasValue ?
                new ObjectParameter("CorrelationPeriod", correlationPeriod) :
                new ObjectParameter("CorrelationPeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertDangerousVehicleEntity1", originalIdentParameter, sourceNameParameter, activityCategoryCodeParameter, activityCategoryDescriptionParameter, activityReasonCodeParameter, activityReasonDescriptionParameter, statusCodeParameter, statusDescriptionParameter, importanceHighLowCodeParameter, importanceHighLowDescriptionParameter, highLowCodeParameter, highLowDescriptionParameter, activityNameParameter, activityDescriptionParameter, activityStartDateParameter, activityEndDateParameter, activityDueDateParameter, activityExpirationDateParameter, isCompletedParameter, activityDateParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, plateCodeParameter, plateKindParameter, plateColorParameter, plateNumberParameter, dateTimeParameter, correlationPeriodParameter);
        }
    
        public virtual ObjectResult<usp_GetDangerousVehicleEntity_Result> usp_GetDangerousVehicleEntity(Nullable<long> activityId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDangerousVehicleEntity_Result>("usp_GetDangerousVehicleEntity", activityIdParameter);
        }
    
        public virtual int usp_UpdateDangerousVehicleEntity1(Nullable<long> activityId, string originalIdent, string sourceName, string activityCategoryCode, string activityCategoryDescription, string activityReasonCode, string activityReasonDescription, string statusCode, string statusDescription, string importanceHighLowCode, string importanceHighLowDescription, string highLowCode, string highLowDescription, string activityName, string activityDescription, Nullable<System.DateTime> activityStartDate, Nullable<System.DateTime> activityEndDate, Nullable<System.DateTime> activityDueDate, Nullable<System.DateTime> activityExpirationDate, Nullable<bool> isCompleted, Nullable<System.DateTime> activityDate, string rowStatusCode, string rowStatusDescription, string plateCode, string plateKind, string plateColor, string plateNumber, Nullable<System.DateTime> dateTime, Nullable<int> correlationPeriod)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var activityCategoryCodeParameter = activityCategoryCode != null ?
                new ObjectParameter("ActivityCategoryCode", activityCategoryCode) :
                new ObjectParameter("ActivityCategoryCode", typeof(string));
    
            var activityCategoryDescriptionParameter = activityCategoryDescription != null ?
                new ObjectParameter("ActivityCategoryDescription", activityCategoryDescription) :
                new ObjectParameter("ActivityCategoryDescription", typeof(string));
    
            var activityReasonCodeParameter = activityReasonCode != null ?
                new ObjectParameter("ActivityReasonCode", activityReasonCode) :
                new ObjectParameter("ActivityReasonCode", typeof(string));
    
            var activityReasonDescriptionParameter = activityReasonDescription != null ?
                new ObjectParameter("ActivityReasonDescription", activityReasonDescription) :
                new ObjectParameter("ActivityReasonDescription", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var statusDescriptionParameter = statusDescription != null ?
                new ObjectParameter("StatusDescription", statusDescription) :
                new ObjectParameter("StatusDescription", typeof(string));
    
            var importanceHighLowCodeParameter = importanceHighLowCode != null ?
                new ObjectParameter("ImportanceHighLowCode", importanceHighLowCode) :
                new ObjectParameter("ImportanceHighLowCode", typeof(string));
    
            var importanceHighLowDescriptionParameter = importanceHighLowDescription != null ?
                new ObjectParameter("ImportanceHighLowDescription", importanceHighLowDescription) :
                new ObjectParameter("ImportanceHighLowDescription", typeof(string));
    
            var highLowCodeParameter = highLowCode != null ?
                new ObjectParameter("HighLowCode", highLowCode) :
                new ObjectParameter("HighLowCode", typeof(string));
    
            var highLowDescriptionParameter = highLowDescription != null ?
                new ObjectParameter("HighLowDescription", highLowDescription) :
                new ObjectParameter("HighLowDescription", typeof(string));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("ActivityName", activityName) :
                new ObjectParameter("ActivityName", typeof(string));
    
            var activityDescriptionParameter = activityDescription != null ?
                new ObjectParameter("ActivityDescription", activityDescription) :
                new ObjectParameter("ActivityDescription", typeof(string));
    
            var activityStartDateParameter = activityStartDate.HasValue ?
                new ObjectParameter("ActivityStartDate", activityStartDate) :
                new ObjectParameter("ActivityStartDate", typeof(System.DateTime));
    
            var activityEndDateParameter = activityEndDate.HasValue ?
                new ObjectParameter("ActivityEndDate", activityEndDate) :
                new ObjectParameter("ActivityEndDate", typeof(System.DateTime));
    
            var activityDueDateParameter = activityDueDate.HasValue ?
                new ObjectParameter("ActivityDueDate", activityDueDate) :
                new ObjectParameter("ActivityDueDate", typeof(System.DateTime));
    
            var activityExpirationDateParameter = activityExpirationDate.HasValue ?
                new ObjectParameter("ActivityExpirationDate", activityExpirationDate) :
                new ObjectParameter("ActivityExpirationDate", typeof(System.DateTime));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("IsCompleted", isCompleted) :
                new ObjectParameter("IsCompleted", typeof(bool));
    
            var activityDateParameter = activityDate.HasValue ?
                new ObjectParameter("ActivityDate", activityDate) :
                new ObjectParameter("ActivityDate", typeof(System.DateTime));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var plateCodeParameter = plateCode != null ?
                new ObjectParameter("PlateCode", plateCode) :
                new ObjectParameter("PlateCode", typeof(string));
    
            var plateKindParameter = plateKind != null ?
                new ObjectParameter("PlateKind", plateKind) :
                new ObjectParameter("PlateKind", typeof(string));
    
            var plateColorParameter = plateColor != null ?
                new ObjectParameter("PlateColor", plateColor) :
                new ObjectParameter("PlateColor", typeof(string));
    
            var plateNumberParameter = plateNumber != null ?
                new ObjectParameter("PlateNumber", plateNumber) :
                new ObjectParameter("PlateNumber", typeof(string));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var correlationPeriodParameter = correlationPeriod.HasValue ?
                new ObjectParameter("CorrelationPeriod", correlationPeriod) :
                new ObjectParameter("CorrelationPeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateDangerousVehicleEntity1", activityIdParameter, originalIdentParameter, sourceNameParameter, activityCategoryCodeParameter, activityCategoryDescriptionParameter, activityReasonCodeParameter, activityReasonDescriptionParameter, statusCodeParameter, statusDescriptionParameter, importanceHighLowCodeParameter, importanceHighLowDescriptionParameter, highLowCodeParameter, highLowDescriptionParameter, activityNameParameter, activityDescriptionParameter, activityStartDateParameter, activityEndDateParameter, activityDueDateParameter, activityExpirationDateParameter, isCompletedParameter, activityDateParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, plateCodeParameter, plateKindParameter, plateColorParameter, plateNumberParameter, dateTimeParameter, correlationPeriodParameter);
        }
    
        public virtual int usp_DeleteActivityItemData(Nullable<long> activityItemId)
        {
            var activityItemIdParameter = activityItemId.HasValue ?
                new ObjectParameter("ActivityItemId", activityItemId) :
                new ObjectParameter("ActivityItemId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteActivityItemData", activityItemIdParameter);
        }
    
        public virtual int usp_DeleteActivityLocationData(Nullable<long> activityLocationId)
        {
            var activityLocationIdParameter = activityLocationId.HasValue ?
                new ObjectParameter("ActivityLocationId", activityLocationId) :
                new ObjectParameter("ActivityLocationId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteActivityLocationData", activityLocationIdParameter);
        }
    
        public virtual int usp_DeleteActivityOrganizationData(Nullable<long> activityOrganizationId)
        {
            var activityOrganizationIdParameter = activityOrganizationId.HasValue ?
                new ObjectParameter("ActivityOrganizationId", activityOrganizationId) :
                new ObjectParameter("ActivityOrganizationId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteActivityOrganizationData", activityOrganizationIdParameter);
        }
    
        public virtual int usp_DeleteItemData(Nullable<long> itemId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteItemData", itemIdParameter);
        }
    
        public virtual int usp_DeleteLocationData(Nullable<long> locationId)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteLocationData", locationIdParameter);
        }
    
        public virtual int usp_DeleteOrganizationData(Nullable<long> organizationId)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteOrganizationData", organizationIdParameter);
        }
    
        public virtual int usp_DeletePersonData(Nullable<long> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeletePersonData", personIdParameter);
        }
    
        public virtual int usp_DeleteServiceCallData(Nullable<long> activityId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteServiceCallData", activityIdParameter);
        }
    
        public virtual int usp_DeleteServiceCallDriverData(Nullable<long> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteServiceCallDriverData", personIdParameter);
        }
    
        public virtual int usp_DeleteServiceCallInsuranceData(Nullable<long> organizationId)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteServiceCallInsuranceData", organizationIdParameter);
        }
    
        public virtual int usp_DeleteServiceCallVehicleData(Nullable<long> itemId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteServiceCallVehicleData", itemIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertActivityItemContainerData(string activityItemDescription, Nullable<long> activityId, Nullable<long> itemId, string sourceName, string itemInvolvementCode, string itemInvolvementDescription, string rowStatusCode, string rowStatusDescription)
        {
            var activityItemDescriptionParameter = activityItemDescription != null ?
                new ObjectParameter("ActivityItemDescription", activityItemDescription) :
                new ObjectParameter("ActivityItemDescription", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(long));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var itemInvolvementCodeParameter = itemInvolvementCode != null ?
                new ObjectParameter("ItemInvolvementCode", itemInvolvementCode) :
                new ObjectParameter("ItemInvolvementCode", typeof(string));
    
            var itemInvolvementDescriptionParameter = itemInvolvementDescription != null ?
                new ObjectParameter("ItemInvolvementDescription", itemInvolvementDescription) :
                new ObjectParameter("ItemInvolvementDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertActivityItemContainerData", activityItemDescriptionParameter, activityIdParameter, itemIdParameter, sourceNameParameter, itemInvolvementCodeParameter, itemInvolvementDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertActivityLocationContainerData(string activityLocationDescription, Nullable<long> activityId, Nullable<long> locationId, string sourceName, string locationInvolvementCode, string locationInvolvementDescription, string rowStatusCode, string rowStatusDescription)
        {
            var activityLocationDescriptionParameter = activityLocationDescription != null ?
                new ObjectParameter("ActivityLocationDescription", activityLocationDescription) :
                new ObjectParameter("ActivityLocationDescription", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(long));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var locationInvolvementCodeParameter = locationInvolvementCode != null ?
                new ObjectParameter("LocationInvolvementCode", locationInvolvementCode) :
                new ObjectParameter("LocationInvolvementCode", typeof(string));
    
            var locationInvolvementDescriptionParameter = locationInvolvementDescription != null ?
                new ObjectParameter("LocationInvolvementDescription", locationInvolvementDescription) :
                new ObjectParameter("LocationInvolvementDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertActivityLocationContainerData", activityLocationDescriptionParameter, activityIdParameter, locationIdParameter, sourceNameParameter, locationInvolvementCodeParameter, locationInvolvementDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertActivityOrganizationContainerData(string activityOrganizationDescription, Nullable<long> activityId, Nullable<long> organizationid, string sourceName, string organizationInvolvementCode, string organizationInvolvementDescription, string rowStatusCode, string rowStatusDescription)
        {
            var activityOrganizationDescriptionParameter = activityOrganizationDescription != null ?
                new ObjectParameter("ActivityOrganizationDescription", activityOrganizationDescription) :
                new ObjectParameter("ActivityOrganizationDescription", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var organizationidParameter = organizationid.HasValue ?
                new ObjectParameter("Organizationid", organizationid) :
                new ObjectParameter("Organizationid", typeof(long));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var organizationInvolvementCodeParameter = organizationInvolvementCode != null ?
                new ObjectParameter("OrganizationInvolvementCode", organizationInvolvementCode) :
                new ObjectParameter("OrganizationInvolvementCode", typeof(string));
    
            var organizationInvolvementDescriptionParameter = organizationInvolvementDescription != null ?
                new ObjectParameter("OrganizationInvolvementDescription", organizationInvolvementDescription) :
                new ObjectParameter("OrganizationInvolvementDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertActivityOrganizationContainerData", activityOrganizationDescriptionParameter, activityIdParameter, organizationidParameter, sourceNameParameter, organizationInvolvementCodeParameter, organizationInvolvementDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertActivityPersonContainerData(string activityPersonDescription, Nullable<long> personId, Nullable<long> activityId, string sourceName, string personInvolvementCode, string personInvolvementDescription, string rowStatusCode, string rowStatusDescription)
        {
            var activityPersonDescriptionParameter = activityPersonDescription != null ?
                new ObjectParameter("ActivityPersonDescription", activityPersonDescription) :
                new ObjectParameter("ActivityPersonDescription", typeof(string));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(long));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var personInvolvementCodeParameter = personInvolvementCode != null ?
                new ObjectParameter("PersonInvolvementCode", personInvolvementCode) :
                new ObjectParameter("PersonInvolvementCode", typeof(string));
    
            var personInvolvementDescriptionParameter = personInvolvementDescription != null ?
                new ObjectParameter("PersonInvolvementDescription", personInvolvementDescription) :
                new ObjectParameter("PersonInvolvementDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertActivityPersonContainerData", activityPersonDescriptionParameter, personIdParameter, activityIdParameter, sourceNameParameter, personInvolvementCodeParameter, personInvolvementDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertItemEntity(string originalIdent, string sourceName, string itemCategoryCode, string itemCategoryDescription, string itemStatusCode, string itemStatusDescription, string itemMakeModelCode, string itemMakeModelMake, string itemMakeModelModel, Nullable<int> modelYear, string itemPrimaryColorCode, string itemPrimaryColorDescription, string itemSecondaryColorCode, string itemSecondaryColorDescription, string itemConditionCode, string itemConditionDescription, string itemUsageCode, string itemUsageDescription, string itemName, string description, string serialIdentification, Nullable<double> itemValue, string sizeDescription, Nullable<double> heightMeasure, Nullable<double> lengthMeasure, Nullable<double> widthMeasure, Nullable<double> weightMeasure, string rowStatusCode, string rowStatusDescription)
        {
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var itemCategoryCodeParameter = itemCategoryCode != null ?
                new ObjectParameter("ItemCategoryCode", itemCategoryCode) :
                new ObjectParameter("ItemCategoryCode", typeof(string));
    
            var itemCategoryDescriptionParameter = itemCategoryDescription != null ?
                new ObjectParameter("ItemCategoryDescription", itemCategoryDescription) :
                new ObjectParameter("ItemCategoryDescription", typeof(string));
    
            var itemStatusCodeParameter = itemStatusCode != null ?
                new ObjectParameter("ItemStatusCode", itemStatusCode) :
                new ObjectParameter("ItemStatusCode", typeof(string));
    
            var itemStatusDescriptionParameter = itemStatusDescription != null ?
                new ObjectParameter("ItemStatusDescription", itemStatusDescription) :
                new ObjectParameter("ItemStatusDescription", typeof(string));
    
            var itemMakeModelCodeParameter = itemMakeModelCode != null ?
                new ObjectParameter("ItemMakeModelCode", itemMakeModelCode) :
                new ObjectParameter("ItemMakeModelCode", typeof(string));
    
            var itemMakeModelMakeParameter = itemMakeModelMake != null ?
                new ObjectParameter("ItemMakeModelMake", itemMakeModelMake) :
                new ObjectParameter("ItemMakeModelMake", typeof(string));
    
            var itemMakeModelModelParameter = itemMakeModelModel != null ?
                new ObjectParameter("ItemMakeModelModel", itemMakeModelModel) :
                new ObjectParameter("ItemMakeModelModel", typeof(string));
    
            var modelYearParameter = modelYear.HasValue ?
                new ObjectParameter("ModelYear", modelYear) :
                new ObjectParameter("ModelYear", typeof(int));
    
            var itemPrimaryColorCodeParameter = itemPrimaryColorCode != null ?
                new ObjectParameter("ItemPrimaryColorCode", itemPrimaryColorCode) :
                new ObjectParameter("ItemPrimaryColorCode", typeof(string));
    
            var itemPrimaryColorDescriptionParameter = itemPrimaryColorDescription != null ?
                new ObjectParameter("ItemPrimaryColorDescription", itemPrimaryColorDescription) :
                new ObjectParameter("ItemPrimaryColorDescription", typeof(string));
    
            var itemSecondaryColorCodeParameter = itemSecondaryColorCode != null ?
                new ObjectParameter("ItemSecondaryColorCode", itemSecondaryColorCode) :
                new ObjectParameter("ItemSecondaryColorCode", typeof(string));
    
            var itemSecondaryColorDescriptionParameter = itemSecondaryColorDescription != null ?
                new ObjectParameter("ItemSecondaryColorDescription", itemSecondaryColorDescription) :
                new ObjectParameter("ItemSecondaryColorDescription", typeof(string));
    
            var itemConditionCodeParameter = itemConditionCode != null ?
                new ObjectParameter("ItemConditionCode", itemConditionCode) :
                new ObjectParameter("ItemConditionCode", typeof(string));
    
            var itemConditionDescriptionParameter = itemConditionDescription != null ?
                new ObjectParameter("ItemConditionDescription", itemConditionDescription) :
                new ObjectParameter("ItemConditionDescription", typeof(string));
    
            var itemUsageCodeParameter = itemUsageCode != null ?
                new ObjectParameter("ItemUsageCode", itemUsageCode) :
                new ObjectParameter("ItemUsageCode", typeof(string));
    
            var itemUsageDescriptionParameter = itemUsageDescription != null ?
                new ObjectParameter("ItemUsageDescription", itemUsageDescription) :
                new ObjectParameter("ItemUsageDescription", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var serialIdentificationParameter = serialIdentification != null ?
                new ObjectParameter("SerialIdentification", serialIdentification) :
                new ObjectParameter("SerialIdentification", typeof(string));
    
            var itemValueParameter = itemValue.HasValue ?
                new ObjectParameter("ItemValue", itemValue) :
                new ObjectParameter("ItemValue", typeof(double));
    
            var sizeDescriptionParameter = sizeDescription != null ?
                new ObjectParameter("SizeDescription", sizeDescription) :
                new ObjectParameter("SizeDescription", typeof(string));
    
            var heightMeasureParameter = heightMeasure.HasValue ?
                new ObjectParameter("HeightMeasure", heightMeasure) :
                new ObjectParameter("HeightMeasure", typeof(double));
    
            var lengthMeasureParameter = lengthMeasure.HasValue ?
                new ObjectParameter("LengthMeasure", lengthMeasure) :
                new ObjectParameter("LengthMeasure", typeof(double));
    
            var widthMeasureParameter = widthMeasure.HasValue ?
                new ObjectParameter("WidthMeasure", widthMeasure) :
                new ObjectParameter("WidthMeasure", typeof(double));
    
            var weightMeasureParameter = weightMeasure.HasValue ?
                new ObjectParameter("WeightMeasure", weightMeasure) :
                new ObjectParameter("WeightMeasure", typeof(double));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertItemEntity", originalIdentParameter, sourceNameParameter, itemCategoryCodeParameter, itemCategoryDescriptionParameter, itemStatusCodeParameter, itemStatusDescriptionParameter, itemMakeModelCodeParameter, itemMakeModelMakeParameter, itemMakeModelModelParameter, modelYearParameter, itemPrimaryColorCodeParameter, itemPrimaryColorDescriptionParameter, itemSecondaryColorCodeParameter, itemSecondaryColorDescriptionParameter, itemConditionCodeParameter, itemConditionDescriptionParameter, itemUsageCodeParameter, itemUsageDescriptionParameter, itemNameParameter, descriptionParameter, serialIdentificationParameter, itemValueParameter, sizeDescriptionParameter, heightMeasureParameter, lengthMeasureParameter, widthMeasureParameter, weightMeasureParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertLocationEntity(string originalIdent, string sourceName, string locationCategoryCode, string locationCategoryDescription, string locationDatumCode, string locationDatumDescription, string locationIntersectionTypeCode, string locationIntersectionTypeDescription, string locationName, string description, string geoLEOCode, string geoLEODivision, string geoLEODistrict, string geoLEOSector, string geoLEOBeat, string geoLEODescription, string geoLocationSubDivisionState, string geoLocationSubDivisionCounty, string geoLocationSubDivisionCity, string geoLocationSubDivisionSubDivision, string geoCountryCode, string geoCountryCountryName, string geoCityCode, string geoCityCityName, string geoCityStateName, string geoCityCountyName, string geoCountyCode, string geoCountyCountyName, string geoCountyStateName, string geoZipCode, string geoZipZipCode, string geoStateCode, string geoStateStateName, string geoCensusTractCode, string geoCensusTractDescription, string locationStreetCategoryCode, string locationStreetCategoryDescription, string locationStreetDirectionPrefixCode, string locationStreetDirectionPrefixDescription, string locationStreetDirectionSuffixCode, string locationStreetDirectionSuffixDescription, string streetNumber, string streetName, string streetExtension, string address1, string address2, string address3, string postalCode, string postalCodeExtension, string crossStreet, string highwayPosition, System.Data.Entity.Spatial.DbGeometry geoPoint, System.Data.Entity.Spatial.DbGeometry boundry, string unit, string floor, string postOfficeBox, Nullable<double> altitudeAGL, Nullable<double> altitudeMSL, string orgAddress1, string orgAddress2, string orgAddress3, string orgStateCode, string orgCountry, string orgConty, string orgCity, string orgZip, string orgLat, string orgLong, Nullable<bool> orgLeoProcessed, Nullable<bool> orgSubProcessed, Nullable<bool> orgLocProcessed, string rowStatusCode, string rowStatusDescription)
        {
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var locationCategoryCodeParameter = locationCategoryCode != null ?
                new ObjectParameter("LocationCategoryCode", locationCategoryCode) :
                new ObjectParameter("LocationCategoryCode", typeof(string));
    
            var locationCategoryDescriptionParameter = locationCategoryDescription != null ?
                new ObjectParameter("LocationCategoryDescription", locationCategoryDescription) :
                new ObjectParameter("LocationCategoryDescription", typeof(string));
    
            var locationDatumCodeParameter = locationDatumCode != null ?
                new ObjectParameter("locationDatumCode", locationDatumCode) :
                new ObjectParameter("locationDatumCode", typeof(string));
    
            var locationDatumDescriptionParameter = locationDatumDescription != null ?
                new ObjectParameter("locationDatumDescription", locationDatumDescription) :
                new ObjectParameter("locationDatumDescription", typeof(string));
    
            var locationIntersectionTypeCodeParameter = locationIntersectionTypeCode != null ?
                new ObjectParameter("locationIntersectionTypeCode", locationIntersectionTypeCode) :
                new ObjectParameter("locationIntersectionTypeCode", typeof(string));
    
            var locationIntersectionTypeDescriptionParameter = locationIntersectionTypeDescription != null ?
                new ObjectParameter("locationIntersectionTypeDescription", locationIntersectionTypeDescription) :
                new ObjectParameter("locationIntersectionTypeDescription", typeof(string));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var geoLEOCodeParameter = geoLEOCode != null ?
                new ObjectParameter("GeoLEOCode", geoLEOCode) :
                new ObjectParameter("GeoLEOCode", typeof(string));
    
            var geoLEODivisionParameter = geoLEODivision != null ?
                new ObjectParameter("GeoLEODivision", geoLEODivision) :
                new ObjectParameter("GeoLEODivision", typeof(string));
    
            var geoLEODistrictParameter = geoLEODistrict != null ?
                new ObjectParameter("GeoLEODistrict", geoLEODistrict) :
                new ObjectParameter("GeoLEODistrict", typeof(string));
    
            var geoLEOSectorParameter = geoLEOSector != null ?
                new ObjectParameter("GeoLEOSector", geoLEOSector) :
                new ObjectParameter("GeoLEOSector", typeof(string));
    
            var geoLEOBeatParameter = geoLEOBeat != null ?
                new ObjectParameter("GeoLEOBeat", geoLEOBeat) :
                new ObjectParameter("GeoLEOBeat", typeof(string));
    
            var geoLEODescriptionParameter = geoLEODescription != null ?
                new ObjectParameter("GeoLEODescription", geoLEODescription) :
                new ObjectParameter("GeoLEODescription", typeof(string));
    
            var geoLocationSubDivisionStateParameter = geoLocationSubDivisionState != null ?
                new ObjectParameter("GeoLocationSubDivisionState", geoLocationSubDivisionState) :
                new ObjectParameter("GeoLocationSubDivisionState", typeof(string));
    
            var geoLocationSubDivisionCountyParameter = geoLocationSubDivisionCounty != null ?
                new ObjectParameter("GeoLocationSubDivisionCounty", geoLocationSubDivisionCounty) :
                new ObjectParameter("GeoLocationSubDivisionCounty", typeof(string));
    
            var geoLocationSubDivisionCityParameter = geoLocationSubDivisionCity != null ?
                new ObjectParameter("GeoLocationSubDivisionCity", geoLocationSubDivisionCity) :
                new ObjectParameter("GeoLocationSubDivisionCity", typeof(string));
    
            var geoLocationSubDivisionSubDivisionParameter = geoLocationSubDivisionSubDivision != null ?
                new ObjectParameter("GeoLocationSubDivisionSubDivision", geoLocationSubDivisionSubDivision) :
                new ObjectParameter("GeoLocationSubDivisionSubDivision", typeof(string));
    
            var geoCountryCodeParameter = geoCountryCode != null ?
                new ObjectParameter("GeoCountryCode", geoCountryCode) :
                new ObjectParameter("GeoCountryCode", typeof(string));
    
            var geoCountryCountryNameParameter = geoCountryCountryName != null ?
                new ObjectParameter("GeoCountryCountryName", geoCountryCountryName) :
                new ObjectParameter("GeoCountryCountryName", typeof(string));
    
            var geoCityCodeParameter = geoCityCode != null ?
                new ObjectParameter("GeoCityCode", geoCityCode) :
                new ObjectParameter("GeoCityCode", typeof(string));
    
            var geoCityCityNameParameter = geoCityCityName != null ?
                new ObjectParameter("GeoCityCityName", geoCityCityName) :
                new ObjectParameter("GeoCityCityName", typeof(string));
    
            var geoCityStateNameParameter = geoCityStateName != null ?
                new ObjectParameter("GeoCityStateName", geoCityStateName) :
                new ObjectParameter("GeoCityStateName", typeof(string));
    
            var geoCityCountyNameParameter = geoCityCountyName != null ?
                new ObjectParameter("GeoCityCountyName", geoCityCountyName) :
                new ObjectParameter("GeoCityCountyName", typeof(string));
    
            var geoCountyCodeParameter = geoCountyCode != null ?
                new ObjectParameter("GeoCountyCode", geoCountyCode) :
                new ObjectParameter("GeoCountyCode", typeof(string));
    
            var geoCountyCountyNameParameter = geoCountyCountyName != null ?
                new ObjectParameter("GeoCountyCountyName", geoCountyCountyName) :
                new ObjectParameter("GeoCountyCountyName", typeof(string));
    
            var geoCountyStateNameParameter = geoCountyStateName != null ?
                new ObjectParameter("GeoCountyStateName", geoCountyStateName) :
                new ObjectParameter("GeoCountyStateName", typeof(string));
    
            var geoZipCodeParameter = geoZipCode != null ?
                new ObjectParameter("GeoZipCode", geoZipCode) :
                new ObjectParameter("GeoZipCode", typeof(string));
    
            var geoZipZipCodeParameter = geoZipZipCode != null ?
                new ObjectParameter("GeoZipZipCode", geoZipZipCode) :
                new ObjectParameter("GeoZipZipCode", typeof(string));
    
            var geoStateCodeParameter = geoStateCode != null ?
                new ObjectParameter("GeoStateCode", geoStateCode) :
                new ObjectParameter("GeoStateCode", typeof(string));
    
            var geoStateStateNameParameter = geoStateStateName != null ?
                new ObjectParameter("GeoStateStateName", geoStateStateName) :
                new ObjectParameter("GeoStateStateName", typeof(string));
    
            var geoCensusTractCodeParameter = geoCensusTractCode != null ?
                new ObjectParameter("GeoCensusTractCode", geoCensusTractCode) :
                new ObjectParameter("GeoCensusTractCode", typeof(string));
    
            var geoCensusTractDescriptionParameter = geoCensusTractDescription != null ?
                new ObjectParameter("GeoCensusTractDescription", geoCensusTractDescription) :
                new ObjectParameter("GeoCensusTractDescription", typeof(string));
    
            var locationStreetCategoryCodeParameter = locationStreetCategoryCode != null ?
                new ObjectParameter("LocationStreetCategoryCode", locationStreetCategoryCode) :
                new ObjectParameter("LocationStreetCategoryCode", typeof(string));
    
            var locationStreetCategoryDescriptionParameter = locationStreetCategoryDescription != null ?
                new ObjectParameter("LocationStreetCategoryDescription", locationStreetCategoryDescription) :
                new ObjectParameter("LocationStreetCategoryDescription", typeof(string));
    
            var locationStreetDirectionPrefixCodeParameter = locationStreetDirectionPrefixCode != null ?
                new ObjectParameter("LocationStreetDirectionPrefixCode", locationStreetDirectionPrefixCode) :
                new ObjectParameter("LocationStreetDirectionPrefixCode", typeof(string));
    
            var locationStreetDirectionPrefixDescriptionParameter = locationStreetDirectionPrefixDescription != null ?
                new ObjectParameter("LocationStreetDirectionPrefixDescription", locationStreetDirectionPrefixDescription) :
                new ObjectParameter("LocationStreetDirectionPrefixDescription", typeof(string));
    
            var locationStreetDirectionSuffixCodeParameter = locationStreetDirectionSuffixCode != null ?
                new ObjectParameter("LocationStreetDirectionSuffixCode", locationStreetDirectionSuffixCode) :
                new ObjectParameter("LocationStreetDirectionSuffixCode", typeof(string));
    
            var locationStreetDirectionSuffixDescriptionParameter = locationStreetDirectionSuffixDescription != null ?
                new ObjectParameter("LocationStreetDirectionSuffixDescription", locationStreetDirectionSuffixDescription) :
                new ObjectParameter("LocationStreetDirectionSuffixDescription", typeof(string));
    
            var streetNumberParameter = streetNumber != null ?
                new ObjectParameter("StreetNumber", streetNumber) :
                new ObjectParameter("StreetNumber", typeof(string));
    
            var streetNameParameter = streetName != null ?
                new ObjectParameter("StreetName", streetName) :
                new ObjectParameter("StreetName", typeof(string));
    
            var streetExtensionParameter = streetExtension != null ?
                new ObjectParameter("StreetExtension", streetExtension) :
                new ObjectParameter("StreetExtension", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var postalCodeExtensionParameter = postalCodeExtension != null ?
                new ObjectParameter("PostalCodeExtension", postalCodeExtension) :
                new ObjectParameter("PostalCodeExtension", typeof(string));
    
            var crossStreetParameter = crossStreet != null ?
                new ObjectParameter("CrossStreet", crossStreet) :
                new ObjectParameter("CrossStreet", typeof(string));
    
            var highwayPositionParameter = highwayPosition != null ?
                new ObjectParameter("HighwayPosition", highwayPosition) :
                new ObjectParameter("HighwayPosition", typeof(string));
    
            var geoPointParameter = geoPoint != null ?
                new ObjectParameter("GeoPoint", geoPoint) :
                new ObjectParameter("GeoPoint", typeof(System.Data.Entity.Spatial.DbGeometry));
    
            var boundryParameter = boundry != null ?
                new ObjectParameter("Boundry", boundry) :
                new ObjectParameter("Boundry", typeof(System.Data.Entity.Spatial.DbGeometry));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var postOfficeBoxParameter = postOfficeBox != null ?
                new ObjectParameter("PostOfficeBox", postOfficeBox) :
                new ObjectParameter("PostOfficeBox", typeof(string));
    
            var altitudeAGLParameter = altitudeAGL.HasValue ?
                new ObjectParameter("AltitudeAGL", altitudeAGL) :
                new ObjectParameter("AltitudeAGL", typeof(double));
    
            var altitudeMSLParameter = altitudeMSL.HasValue ?
                new ObjectParameter("AltitudeMSL", altitudeMSL) :
                new ObjectParameter("AltitudeMSL", typeof(double));
    
            var orgAddress1Parameter = orgAddress1 != null ?
                new ObjectParameter("OrgAddress1", orgAddress1) :
                new ObjectParameter("OrgAddress1", typeof(string));
    
            var orgAddress2Parameter = orgAddress2 != null ?
                new ObjectParameter("OrgAddress2", orgAddress2) :
                new ObjectParameter("OrgAddress2", typeof(string));
    
            var orgAddress3Parameter = orgAddress3 != null ?
                new ObjectParameter("OrgAddress3", orgAddress3) :
                new ObjectParameter("OrgAddress3", typeof(string));
    
            var orgStateCodeParameter = orgStateCode != null ?
                new ObjectParameter("OrgStateCode", orgStateCode) :
                new ObjectParameter("OrgStateCode", typeof(string));
    
            var orgCountryParameter = orgCountry != null ?
                new ObjectParameter("OrgCountry", orgCountry) :
                new ObjectParameter("OrgCountry", typeof(string));
    
            var orgContyParameter = orgConty != null ?
                new ObjectParameter("OrgConty", orgConty) :
                new ObjectParameter("OrgConty", typeof(string));
    
            var orgCityParameter = orgCity != null ?
                new ObjectParameter("OrgCity", orgCity) :
                new ObjectParameter("OrgCity", typeof(string));
    
            var orgZipParameter = orgZip != null ?
                new ObjectParameter("OrgZip", orgZip) :
                new ObjectParameter("OrgZip", typeof(string));
    
            var orgLatParameter = orgLat != null ?
                new ObjectParameter("OrgLat", orgLat) :
                new ObjectParameter("OrgLat", typeof(string));
    
            var orgLongParameter = orgLong != null ?
                new ObjectParameter("OrgLong", orgLong) :
                new ObjectParameter("OrgLong", typeof(string));
    
            var orgLeoProcessedParameter = orgLeoProcessed.HasValue ?
                new ObjectParameter("OrgLeoProcessed", orgLeoProcessed) :
                new ObjectParameter("OrgLeoProcessed", typeof(bool));
    
            var orgSubProcessedParameter = orgSubProcessed.HasValue ?
                new ObjectParameter("OrgSubProcessed", orgSubProcessed) :
                new ObjectParameter("OrgSubProcessed", typeof(bool));
    
            var orgLocProcessedParameter = orgLocProcessed.HasValue ?
                new ObjectParameter("OrgLocProcessed", orgLocProcessed) :
                new ObjectParameter("OrgLocProcessed", typeof(bool));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertLocationEntity", originalIdentParameter, sourceNameParameter, locationCategoryCodeParameter, locationCategoryDescriptionParameter, locationDatumCodeParameter, locationDatumDescriptionParameter, locationIntersectionTypeCodeParameter, locationIntersectionTypeDescriptionParameter, locationNameParameter, descriptionParameter, geoLEOCodeParameter, geoLEODivisionParameter, geoLEODistrictParameter, geoLEOSectorParameter, geoLEOBeatParameter, geoLEODescriptionParameter, geoLocationSubDivisionStateParameter, geoLocationSubDivisionCountyParameter, geoLocationSubDivisionCityParameter, geoLocationSubDivisionSubDivisionParameter, geoCountryCodeParameter, geoCountryCountryNameParameter, geoCityCodeParameter, geoCityCityNameParameter, geoCityStateNameParameter, geoCityCountyNameParameter, geoCountyCodeParameter, geoCountyCountyNameParameter, geoCountyStateNameParameter, geoZipCodeParameter, geoZipZipCodeParameter, geoStateCodeParameter, geoStateStateNameParameter, geoCensusTractCodeParameter, geoCensusTractDescriptionParameter, locationStreetCategoryCodeParameter, locationStreetCategoryDescriptionParameter, locationStreetDirectionPrefixCodeParameter, locationStreetDirectionPrefixDescriptionParameter, locationStreetDirectionSuffixCodeParameter, locationStreetDirectionSuffixDescriptionParameter, streetNumberParameter, streetNameParameter, streetExtensionParameter, address1Parameter, address2Parameter, address3Parameter, postalCodeParameter, postalCodeExtensionParameter, crossStreetParameter, highwayPositionParameter, geoPointParameter, boundryParameter, unitParameter, floorParameter, postOfficeBoxParameter, altitudeAGLParameter, altitudeMSLParameter, orgAddress1Parameter, orgAddress2Parameter, orgAddress3Parameter, orgStateCodeParameter, orgCountryParameter, orgContyParameter, orgCityParameter, orgZipParameter, orgLatParameter, orgLongParameter, orgLeoProcessedParameter, orgSubProcessedParameter, orgLocProcessedParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertOrganizationEntity(string originalIdent, string sourceName, string organizationCategoryCode, string organizationCategoryDescription, string organizationStatusCode, string organizationStatusDescription, string name, string doingBusinessAs, string description, string abbreviationText, string iMONumber, Nullable<System.DateTime> establishedDateTime, Nullable<System.DateTime> terminationDateTime, Nullable<bool> incorporatedIndicator, string rowStatusCode, string rowStatusDescription)
        {
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var organizationCategoryCodeParameter = organizationCategoryCode != null ?
                new ObjectParameter("OrganizationCategoryCode", organizationCategoryCode) :
                new ObjectParameter("OrganizationCategoryCode", typeof(string));
    
            var organizationCategoryDescriptionParameter = organizationCategoryDescription != null ?
                new ObjectParameter("OrganizationCategoryDescription", organizationCategoryDescription) :
                new ObjectParameter("OrganizationCategoryDescription", typeof(string));
    
            var organizationStatusCodeParameter = organizationStatusCode != null ?
                new ObjectParameter("OrganizationStatusCode", organizationStatusCode) :
                new ObjectParameter("OrganizationStatusCode", typeof(string));
    
            var organizationStatusDescriptionParameter = organizationStatusDescription != null ?
                new ObjectParameter("OrganizationStatusDescription", organizationStatusDescription) :
                new ObjectParameter("OrganizationStatusDescription", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var doingBusinessAsParameter = doingBusinessAs != null ?
                new ObjectParameter("DoingBusinessAs", doingBusinessAs) :
                new ObjectParameter("DoingBusinessAs", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var abbreviationTextParameter = abbreviationText != null ?
                new ObjectParameter("AbbreviationText", abbreviationText) :
                new ObjectParameter("AbbreviationText", typeof(string));
    
            var iMONumberParameter = iMONumber != null ?
                new ObjectParameter("IMONumber", iMONumber) :
                new ObjectParameter("IMONumber", typeof(string));
    
            var establishedDateTimeParameter = establishedDateTime.HasValue ?
                new ObjectParameter("EstablishedDateTime", establishedDateTime) :
                new ObjectParameter("EstablishedDateTime", typeof(System.DateTime));
    
            var terminationDateTimeParameter = terminationDateTime.HasValue ?
                new ObjectParameter("TerminationDateTime", terminationDateTime) :
                new ObjectParameter("TerminationDateTime", typeof(System.DateTime));
    
            var incorporatedIndicatorParameter = incorporatedIndicator.HasValue ?
                new ObjectParameter("IncorporatedIndicator", incorporatedIndicator) :
                new ObjectParameter("IncorporatedIndicator", typeof(bool));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertOrganizationEntity", originalIdentParameter, sourceNameParameter, organizationCategoryCodeParameter, organizationCategoryDescriptionParameter, organizationStatusCodeParameter, organizationStatusDescriptionParameter, nameParameter, doingBusinessAsParameter, descriptionParameter, abbreviationTextParameter, iMONumberParameter, establishedDateTimeParameter, terminationDateTimeParameter, incorporatedIndicatorParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertPersonEntity(string description, string originalIdent, string sourceName, string personStatusCode, string personStatusDescription, string firstName, string middleName, string lastName, string moniker, string suffix, string prefix, Nullable<int> personCategoryId, string personGenderCode, string personGenderDescription, string rowStatusCode, string rowStatusDescription)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var personStatusCodeParameter = personStatusCode != null ?
                new ObjectParameter("PersonStatusCode", personStatusCode) :
                new ObjectParameter("PersonStatusCode", typeof(string));
    
            var personStatusDescriptionParameter = personStatusDescription != null ?
                new ObjectParameter("PersonStatusDescription", personStatusDescription) :
                new ObjectParameter("PersonStatusDescription", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var monikerParameter = moniker != null ?
                new ObjectParameter("Moniker", moniker) :
                new ObjectParameter("Moniker", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("Suffix", suffix) :
                new ObjectParameter("Suffix", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var personCategoryIdParameter = personCategoryId.HasValue ?
                new ObjectParameter("PersonCategoryId", personCategoryId) :
                new ObjectParameter("PersonCategoryId", typeof(int));
    
            var personGenderCodeParameter = personGenderCode != null ?
                new ObjectParameter("PersonGenderCode", personGenderCode) :
                new ObjectParameter("PersonGenderCode", typeof(string));
    
            var personGenderDescriptionParameter = personGenderDescription != null ?
                new ObjectParameter("PersonGenderDescription", personGenderDescription) :
                new ObjectParameter("PersonGenderDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertPersonEntity", descriptionParameter, originalIdentParameter, sourceNameParameter, personStatusCodeParameter, personStatusDescriptionParameter, firstNameParameter, middleNameParameter, lastNameParameter, monikerParameter, suffixParameter, prefixParameter, personCategoryIdParameter, personGenderCodeParameter, personGenderDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertServiceCallDriverEntity(string description, string originalIdent, string sourceName, string personStatusCode, string personStatusDescription, string firstName, string middleName, string lastName, string moniker, string suffix, string prefix, Nullable<int> personCategoryId, string personGenderCode, string personGenderDescription, string rowStatusCode, string rowStatusDescription, string driverNationalityCode, string driverNationalityDescription, string driverLicenceSourceCode, string driverLicenceSourceDescription, string driverLicenceTypeCode, string driverLicenceTypeDescription)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var personStatusCodeParameter = personStatusCode != null ?
                new ObjectParameter("PersonStatusCode", personStatusCode) :
                new ObjectParameter("PersonStatusCode", typeof(string));
    
            var personStatusDescriptionParameter = personStatusDescription != null ?
                new ObjectParameter("PersonStatusDescription", personStatusDescription) :
                new ObjectParameter("PersonStatusDescription", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var monikerParameter = moniker != null ?
                new ObjectParameter("Moniker", moniker) :
                new ObjectParameter("Moniker", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("Suffix", suffix) :
                new ObjectParameter("Suffix", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var personCategoryIdParameter = personCategoryId.HasValue ?
                new ObjectParameter("PersonCategoryId", personCategoryId) :
                new ObjectParameter("PersonCategoryId", typeof(int));
    
            var personGenderCodeParameter = personGenderCode != null ?
                new ObjectParameter("PersonGenderCode", personGenderCode) :
                new ObjectParameter("PersonGenderCode", typeof(string));
    
            var personGenderDescriptionParameter = personGenderDescription != null ?
                new ObjectParameter("PersonGenderDescription", personGenderDescription) :
                new ObjectParameter("PersonGenderDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var driverNationalityCodeParameter = driverNationalityCode != null ?
                new ObjectParameter("DriverNationalityCode", driverNationalityCode) :
                new ObjectParameter("DriverNationalityCode", typeof(string));
    
            var driverNationalityDescriptionParameter = driverNationalityDescription != null ?
                new ObjectParameter("DriverNationalityDescription", driverNationalityDescription) :
                new ObjectParameter("DriverNationalityDescription", typeof(string));
    
            var driverLicenceSourceCodeParameter = driverLicenceSourceCode != null ?
                new ObjectParameter("DriverLicenceSourceCode", driverLicenceSourceCode) :
                new ObjectParameter("DriverLicenceSourceCode", typeof(string));
    
            var driverLicenceSourceDescriptionParameter = driverLicenceSourceDescription != null ?
                new ObjectParameter("DriverLicenceSourceDescription", driverLicenceSourceDescription) :
                new ObjectParameter("DriverLicenceSourceDescription", typeof(string));
    
            var driverLicenceTypeCodeParameter = driverLicenceTypeCode != null ?
                new ObjectParameter("DriverLicenceTypeCode", driverLicenceTypeCode) :
                new ObjectParameter("DriverLicenceTypeCode", typeof(string));
    
            var driverLicenceTypeDescriptionParameter = driverLicenceTypeDescription != null ?
                new ObjectParameter("DriverLicenceTypeDescription", driverLicenceTypeDescription) :
                new ObjectParameter("DriverLicenceTypeDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertServiceCallDriverEntity", descriptionParameter, originalIdentParameter, sourceNameParameter, personStatusCodeParameter, personStatusDescriptionParameter, firstNameParameter, middleNameParameter, lastNameParameter, monikerParameter, suffixParameter, prefixParameter, personCategoryIdParameter, personGenderCodeParameter, personGenderDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, driverNationalityCodeParameter, driverNationalityDescriptionParameter, driverLicenceSourceCodeParameter, driverLicenceSourceDescriptionParameter, driverLicenceTypeCodeParameter, driverLicenceTypeDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertServiceCallEntity(string originalIdent, string sourceName, string activityCategoryCode, string activityCategoryDescription, string activityReasonCode, string activityReasonDescription, string statusCode, string statusDescription, string importanceHighLowCode, string importanceHighLowDescription, string highLowCode, string highLowDescription, string activityName, string activityDescription, Nullable<System.DateTime> activityStartDate, Nullable<System.DateTime> activityEndDate, Nullable<System.DateTime> activityDueDate, Nullable<System.DateTime> activityExpirationDate, Nullable<bool> isCompleted, Nullable<System.DateTime> activityDate, string rowStatusCode, string rowStatusDescription, string serviceCallCategoryCode, string serviceCallCategoryDescription, string serviceCallSourceCode, string serviceCallSourceDescription, string serviceCallDispositionCode, string serviceCallDispositionDescription, string serviceCallClearanceCode, string serviceCallClearanceDescription, string serviceCallPriorityCode, string serviceCallPriorityDescription, string serviceClassCode, string serviceClassDescription, string serviceCallStartMechanismCode, string serviceCallStartMechanismDescription, string serviceCallEndMechanismCode, string serviceCallEndMechanismDescription, Nullable<System.DateTime> serviceCallArrivedDate, Nullable<System.DateTime> serviceCallDispatchedDate, Nullable<System.DateTime> serviceCallClearedDate, Nullable<System.DateTime> serviceCallReceivedDate, Nullable<System.DateTime> serviceCallStagedDate, Nullable<System.DateTime> serviceCallInControlDate, Nullable<System.DateTime> serviceCallEnrouteDate, Nullable<bool> hazardCallIndicator, Nullable<bool> isSelfInitiated, Nullable<bool> hasPriorsIndicator, Nullable<bool> outofServiceIndicator, Nullable<int> lanesCount, Nullable<int> slightInjuriesCount, Nullable<int> mediumInjuriesCount, Nullable<int> severeInjuriesCount, Nullable<int> fatalitiesCount, Nullable<int> totalInjuriesFatalities, string crashSeverityCode, string crashSeverityDescription, string lightingConditionCode, string lightingConditionDescription)
        {
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var activityCategoryCodeParameter = activityCategoryCode != null ?
                new ObjectParameter("ActivityCategoryCode", activityCategoryCode) :
                new ObjectParameter("ActivityCategoryCode", typeof(string));
    
            var activityCategoryDescriptionParameter = activityCategoryDescription != null ?
                new ObjectParameter("ActivityCategoryDescription", activityCategoryDescription) :
                new ObjectParameter("ActivityCategoryDescription", typeof(string));
    
            var activityReasonCodeParameter = activityReasonCode != null ?
                new ObjectParameter("ActivityReasonCode", activityReasonCode) :
                new ObjectParameter("ActivityReasonCode", typeof(string));
    
            var activityReasonDescriptionParameter = activityReasonDescription != null ?
                new ObjectParameter("ActivityReasonDescription", activityReasonDescription) :
                new ObjectParameter("ActivityReasonDescription", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var statusDescriptionParameter = statusDescription != null ?
                new ObjectParameter("StatusDescription", statusDescription) :
                new ObjectParameter("StatusDescription", typeof(string));
    
            var importanceHighLowCodeParameter = importanceHighLowCode != null ?
                new ObjectParameter("ImportanceHighLowCode", importanceHighLowCode) :
                new ObjectParameter("ImportanceHighLowCode", typeof(string));
    
            var importanceHighLowDescriptionParameter = importanceHighLowDescription != null ?
                new ObjectParameter("ImportanceHighLowDescription", importanceHighLowDescription) :
                new ObjectParameter("ImportanceHighLowDescription", typeof(string));
    
            var highLowCodeParameter = highLowCode != null ?
                new ObjectParameter("HighLowCode", highLowCode) :
                new ObjectParameter("HighLowCode", typeof(string));
    
            var highLowDescriptionParameter = highLowDescription != null ?
                new ObjectParameter("HighLowDescription", highLowDescription) :
                new ObjectParameter("HighLowDescription", typeof(string));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("ActivityName", activityName) :
                new ObjectParameter("ActivityName", typeof(string));
    
            var activityDescriptionParameter = activityDescription != null ?
                new ObjectParameter("ActivityDescription", activityDescription) :
                new ObjectParameter("ActivityDescription", typeof(string));
    
            var activityStartDateParameter = activityStartDate.HasValue ?
                new ObjectParameter("ActivityStartDate", activityStartDate) :
                new ObjectParameter("ActivityStartDate", typeof(System.DateTime));
    
            var activityEndDateParameter = activityEndDate.HasValue ?
                new ObjectParameter("ActivityEndDate", activityEndDate) :
                new ObjectParameter("ActivityEndDate", typeof(System.DateTime));
    
            var activityDueDateParameter = activityDueDate.HasValue ?
                new ObjectParameter("ActivityDueDate", activityDueDate) :
                new ObjectParameter("ActivityDueDate", typeof(System.DateTime));
    
            var activityExpirationDateParameter = activityExpirationDate.HasValue ?
                new ObjectParameter("ActivityExpirationDate", activityExpirationDate) :
                new ObjectParameter("ActivityExpirationDate", typeof(System.DateTime));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("IsCompleted", isCompleted) :
                new ObjectParameter("IsCompleted", typeof(bool));
    
            var activityDateParameter = activityDate.HasValue ?
                new ObjectParameter("ActivityDate", activityDate) :
                new ObjectParameter("ActivityDate", typeof(System.DateTime));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var serviceCallCategoryCodeParameter = serviceCallCategoryCode != null ?
                new ObjectParameter("ServiceCallCategoryCode", serviceCallCategoryCode) :
                new ObjectParameter("ServiceCallCategoryCode", typeof(string));
    
            var serviceCallCategoryDescriptionParameter = serviceCallCategoryDescription != null ?
                new ObjectParameter("ServiceCallCategoryDescription", serviceCallCategoryDescription) :
                new ObjectParameter("ServiceCallCategoryDescription", typeof(string));
    
            var serviceCallSourceCodeParameter = serviceCallSourceCode != null ?
                new ObjectParameter("ServiceCallSourceCode", serviceCallSourceCode) :
                new ObjectParameter("ServiceCallSourceCode", typeof(string));
    
            var serviceCallSourceDescriptionParameter = serviceCallSourceDescription != null ?
                new ObjectParameter("ServiceCallSourceDescription", serviceCallSourceDescription) :
                new ObjectParameter("ServiceCallSourceDescription", typeof(string));
    
            var serviceCallDispositionCodeParameter = serviceCallDispositionCode != null ?
                new ObjectParameter("ServiceCallDispositionCode", serviceCallDispositionCode) :
                new ObjectParameter("ServiceCallDispositionCode", typeof(string));
    
            var serviceCallDispositionDescriptionParameter = serviceCallDispositionDescription != null ?
                new ObjectParameter("ServiceCallDispositionDescription", serviceCallDispositionDescription) :
                new ObjectParameter("ServiceCallDispositionDescription", typeof(string));
    
            var serviceCallClearanceCodeParameter = serviceCallClearanceCode != null ?
                new ObjectParameter("ServiceCallClearanceCode", serviceCallClearanceCode) :
                new ObjectParameter("ServiceCallClearanceCode", typeof(string));
    
            var serviceCallClearanceDescriptionParameter = serviceCallClearanceDescription != null ?
                new ObjectParameter("ServiceCallClearanceDescription", serviceCallClearanceDescription) :
                new ObjectParameter("ServiceCallClearanceDescription", typeof(string));
    
            var serviceCallPriorityCodeParameter = serviceCallPriorityCode != null ?
                new ObjectParameter("ServiceCallPriorityCode", serviceCallPriorityCode) :
                new ObjectParameter("ServiceCallPriorityCode", typeof(string));
    
            var serviceCallPriorityDescriptionParameter = serviceCallPriorityDescription != null ?
                new ObjectParameter("ServiceCallPriorityDescription", serviceCallPriorityDescription) :
                new ObjectParameter("ServiceCallPriorityDescription", typeof(string));
    
            var serviceClassCodeParameter = serviceClassCode != null ?
                new ObjectParameter("ServiceClassCode", serviceClassCode) :
                new ObjectParameter("ServiceClassCode", typeof(string));
    
            var serviceClassDescriptionParameter = serviceClassDescription != null ?
                new ObjectParameter("ServiceClassDescription", serviceClassDescription) :
                new ObjectParameter("ServiceClassDescription", typeof(string));
    
            var serviceCallStartMechanismCodeParameter = serviceCallStartMechanismCode != null ?
                new ObjectParameter("ServiceCallStartMechanismCode", serviceCallStartMechanismCode) :
                new ObjectParameter("ServiceCallStartMechanismCode", typeof(string));
    
            var serviceCallStartMechanismDescriptionParameter = serviceCallStartMechanismDescription != null ?
                new ObjectParameter("ServiceCallStartMechanismDescription", serviceCallStartMechanismDescription) :
                new ObjectParameter("ServiceCallStartMechanismDescription", typeof(string));
    
            var serviceCallEndMechanismCodeParameter = serviceCallEndMechanismCode != null ?
                new ObjectParameter("ServiceCallEndMechanismCode", serviceCallEndMechanismCode) :
                new ObjectParameter("ServiceCallEndMechanismCode", typeof(string));
    
            var serviceCallEndMechanismDescriptionParameter = serviceCallEndMechanismDescription != null ?
                new ObjectParameter("ServiceCallEndMechanismDescription", serviceCallEndMechanismDescription) :
                new ObjectParameter("ServiceCallEndMechanismDescription", typeof(string));
    
            var serviceCallArrivedDateParameter = serviceCallArrivedDate.HasValue ?
                new ObjectParameter("ServiceCallArrivedDate", serviceCallArrivedDate) :
                new ObjectParameter("ServiceCallArrivedDate", typeof(System.DateTime));
    
            var serviceCallDispatchedDateParameter = serviceCallDispatchedDate.HasValue ?
                new ObjectParameter("ServiceCallDispatchedDate", serviceCallDispatchedDate) :
                new ObjectParameter("ServiceCallDispatchedDate", typeof(System.DateTime));
    
            var serviceCallClearedDateParameter = serviceCallClearedDate.HasValue ?
                new ObjectParameter("ServiceCallClearedDate", serviceCallClearedDate) :
                new ObjectParameter("ServiceCallClearedDate", typeof(System.DateTime));
    
            var serviceCallReceivedDateParameter = serviceCallReceivedDate.HasValue ?
                new ObjectParameter("ServiceCallReceivedDate", serviceCallReceivedDate) :
                new ObjectParameter("ServiceCallReceivedDate", typeof(System.DateTime));
    
            var serviceCallStagedDateParameter = serviceCallStagedDate.HasValue ?
                new ObjectParameter("ServiceCallStagedDate", serviceCallStagedDate) :
                new ObjectParameter("ServiceCallStagedDate", typeof(System.DateTime));
    
            var serviceCallInControlDateParameter = serviceCallInControlDate.HasValue ?
                new ObjectParameter("ServiceCallInControlDate", serviceCallInControlDate) :
                new ObjectParameter("ServiceCallInControlDate", typeof(System.DateTime));
    
            var serviceCallEnrouteDateParameter = serviceCallEnrouteDate.HasValue ?
                new ObjectParameter("ServiceCallEnrouteDate", serviceCallEnrouteDate) :
                new ObjectParameter("ServiceCallEnrouteDate", typeof(System.DateTime));
    
            var hazardCallIndicatorParameter = hazardCallIndicator.HasValue ?
                new ObjectParameter("HazardCallIndicator", hazardCallIndicator) :
                new ObjectParameter("HazardCallIndicator", typeof(bool));
    
            var isSelfInitiatedParameter = isSelfInitiated.HasValue ?
                new ObjectParameter("IsSelfInitiated", isSelfInitiated) :
                new ObjectParameter("IsSelfInitiated", typeof(bool));
    
            var hasPriorsIndicatorParameter = hasPriorsIndicator.HasValue ?
                new ObjectParameter("HasPriorsIndicator", hasPriorsIndicator) :
                new ObjectParameter("HasPriorsIndicator", typeof(bool));
    
            var outofServiceIndicatorParameter = outofServiceIndicator.HasValue ?
                new ObjectParameter("OutofServiceIndicator", outofServiceIndicator) :
                new ObjectParameter("OutofServiceIndicator", typeof(bool));
    
            var lanesCountParameter = lanesCount.HasValue ?
                new ObjectParameter("LanesCount", lanesCount) :
                new ObjectParameter("LanesCount", typeof(int));
    
            var slightInjuriesCountParameter = slightInjuriesCount.HasValue ?
                new ObjectParameter("SlightInjuriesCount", slightInjuriesCount) :
                new ObjectParameter("SlightInjuriesCount", typeof(int));
    
            var mediumInjuriesCountParameter = mediumInjuriesCount.HasValue ?
                new ObjectParameter("MediumInjuriesCount", mediumInjuriesCount) :
                new ObjectParameter("MediumInjuriesCount", typeof(int));
    
            var severeInjuriesCountParameter = severeInjuriesCount.HasValue ?
                new ObjectParameter("SevereInjuriesCount", severeInjuriesCount) :
                new ObjectParameter("SevereInjuriesCount", typeof(int));
    
            var fatalitiesCountParameter = fatalitiesCount.HasValue ?
                new ObjectParameter("FatalitiesCount", fatalitiesCount) :
                new ObjectParameter("FatalitiesCount", typeof(int));
    
            var totalInjuriesFatalitiesParameter = totalInjuriesFatalities.HasValue ?
                new ObjectParameter("TotalInjuriesFatalities", totalInjuriesFatalities) :
                new ObjectParameter("TotalInjuriesFatalities", typeof(int));
    
            var crashSeverityCodeParameter = crashSeverityCode != null ?
                new ObjectParameter("CrashSeverityCode", crashSeverityCode) :
                new ObjectParameter("CrashSeverityCode", typeof(string));
    
            var crashSeverityDescriptionParameter = crashSeverityDescription != null ?
                new ObjectParameter("CrashSeverityDescription", crashSeverityDescription) :
                new ObjectParameter("CrashSeverityDescription", typeof(string));
    
            var lightingConditionCodeParameter = lightingConditionCode != null ?
                new ObjectParameter("LightingConditionCode", lightingConditionCode) :
                new ObjectParameter("LightingConditionCode", typeof(string));
    
            var lightingConditionDescriptionParameter = lightingConditionDescription != null ?
                new ObjectParameter("LightingConditionDescription", lightingConditionDescription) :
                new ObjectParameter("LightingConditionDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertServiceCallEntity", originalIdentParameter, sourceNameParameter, activityCategoryCodeParameter, activityCategoryDescriptionParameter, activityReasonCodeParameter, activityReasonDescriptionParameter, statusCodeParameter, statusDescriptionParameter, importanceHighLowCodeParameter, importanceHighLowDescriptionParameter, highLowCodeParameter, highLowDescriptionParameter, activityNameParameter, activityDescriptionParameter, activityStartDateParameter, activityEndDateParameter, activityDueDateParameter, activityExpirationDateParameter, isCompletedParameter, activityDateParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, serviceCallCategoryCodeParameter, serviceCallCategoryDescriptionParameter, serviceCallSourceCodeParameter, serviceCallSourceDescriptionParameter, serviceCallDispositionCodeParameter, serviceCallDispositionDescriptionParameter, serviceCallClearanceCodeParameter, serviceCallClearanceDescriptionParameter, serviceCallPriorityCodeParameter, serviceCallPriorityDescriptionParameter, serviceClassCodeParameter, serviceClassDescriptionParameter, serviceCallStartMechanismCodeParameter, serviceCallStartMechanismDescriptionParameter, serviceCallEndMechanismCodeParameter, serviceCallEndMechanismDescriptionParameter, serviceCallArrivedDateParameter, serviceCallDispatchedDateParameter, serviceCallClearedDateParameter, serviceCallReceivedDateParameter, serviceCallStagedDateParameter, serviceCallInControlDateParameter, serviceCallEnrouteDateParameter, hazardCallIndicatorParameter, isSelfInitiatedParameter, hasPriorsIndicatorParameter, outofServiceIndicatorParameter, lanesCountParameter, slightInjuriesCountParameter, mediumInjuriesCountParameter, severeInjuriesCountParameter, fatalitiesCountParameter, totalInjuriesFatalitiesParameter, crashSeverityCodeParameter, crashSeverityDescriptionParameter, lightingConditionCodeParameter, lightingConditionDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertServiceCallInsuranceEntity(string originalIdent, string sourceName, string organizationCategoryCode, string organizationCategoryDescription, string organizationStatusCode, string organizationStatusDescription, string name, string doingBusinessAs, string description, string abbreviationText, string iMONumber, Nullable<System.DateTime> establishedDateTime, Nullable<System.DateTime> terminationDateTime, Nullable<bool> incorporatedIndicator, string rowStatusCode, string rowStatusDescription, string insuranceTypeCode, string insuranceTypeDescription)
        {
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var organizationCategoryCodeParameter = organizationCategoryCode != null ?
                new ObjectParameter("OrganizationCategoryCode", organizationCategoryCode) :
                new ObjectParameter("OrganizationCategoryCode", typeof(string));
    
            var organizationCategoryDescriptionParameter = organizationCategoryDescription != null ?
                new ObjectParameter("OrganizationCategoryDescription", organizationCategoryDescription) :
                new ObjectParameter("OrganizationCategoryDescription", typeof(string));
    
            var organizationStatusCodeParameter = organizationStatusCode != null ?
                new ObjectParameter("OrganizationStatusCode", organizationStatusCode) :
                new ObjectParameter("OrganizationStatusCode", typeof(string));
    
            var organizationStatusDescriptionParameter = organizationStatusDescription != null ?
                new ObjectParameter("OrganizationStatusDescription", organizationStatusDescription) :
                new ObjectParameter("OrganizationStatusDescription", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var doingBusinessAsParameter = doingBusinessAs != null ?
                new ObjectParameter("DoingBusinessAs", doingBusinessAs) :
                new ObjectParameter("DoingBusinessAs", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var abbreviationTextParameter = abbreviationText != null ?
                new ObjectParameter("AbbreviationText", abbreviationText) :
                new ObjectParameter("AbbreviationText", typeof(string));
    
            var iMONumberParameter = iMONumber != null ?
                new ObjectParameter("IMONumber", iMONumber) :
                new ObjectParameter("IMONumber", typeof(string));
    
            var establishedDateTimeParameter = establishedDateTime.HasValue ?
                new ObjectParameter("EstablishedDateTime", establishedDateTime) :
                new ObjectParameter("EstablishedDateTime", typeof(System.DateTime));
    
            var terminationDateTimeParameter = terminationDateTime.HasValue ?
                new ObjectParameter("TerminationDateTime", terminationDateTime) :
                new ObjectParameter("TerminationDateTime", typeof(System.DateTime));
    
            var incorporatedIndicatorParameter = incorporatedIndicator.HasValue ?
                new ObjectParameter("IncorporatedIndicator", incorporatedIndicator) :
                new ObjectParameter("IncorporatedIndicator", typeof(bool));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var insuranceTypeCodeParameter = insuranceTypeCode != null ?
                new ObjectParameter("InsuranceTypeCode", insuranceTypeCode) :
                new ObjectParameter("InsuranceTypeCode", typeof(string));
    
            var insuranceTypeDescriptionParameter = insuranceTypeDescription != null ?
                new ObjectParameter("InsuranceTypeDescription", insuranceTypeDescription) :
                new ObjectParameter("InsuranceTypeDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertServiceCallInsuranceEntity", originalIdentParameter, sourceNameParameter, organizationCategoryCodeParameter, organizationCategoryDescriptionParameter, organizationStatusCodeParameter, organizationStatusDescriptionParameter, nameParameter, doingBusinessAsParameter, descriptionParameter, abbreviationTextParameter, iMONumberParameter, establishedDateTimeParameter, terminationDateTimeParameter, incorporatedIndicatorParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, insuranceTypeCodeParameter, insuranceTypeDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_InsertServiceCallVehicleEntity(string originalIdent, string sourceName, string itemCategoryCode, string itemCategoryDescription, string itemStatusCode, string itemStatusDescription, string itemMakeModelCode, string itemMakeModelMake, string itemMakeModelModel, Nullable<int> modelYear, string itemPrimaryColorCode, string itemPrimaryColorDescription, string itemSecondaryColorCode, string itemSecondaryColorDescription, string itemConditionCode, string itemConditionDescription, string itemUsageCode, string itemUsageDescription, string itemName, string description, string serialIdentification, Nullable<double> itemValue, string sizeDescription, Nullable<double> heightMeasure, Nullable<double> lengthMeasure, Nullable<double> widthMeasure, Nullable<double> weightMeasure, string rowStatusCode, string rowStatusDescription, string vehicleLiabilityCode, string vehicleLiabilityDescription, string vehicleCollisionPointCode, string vehicleCollisionPointDescription, string vehicleStatusCode, string vehicleStatusDescription, string vehicleCountryCode, string vehicleCountryDescription)
        {
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var itemCategoryCodeParameter = itemCategoryCode != null ?
                new ObjectParameter("ItemCategoryCode", itemCategoryCode) :
                new ObjectParameter("ItemCategoryCode", typeof(string));
    
            var itemCategoryDescriptionParameter = itemCategoryDescription != null ?
                new ObjectParameter("ItemCategoryDescription", itemCategoryDescription) :
                new ObjectParameter("ItemCategoryDescription", typeof(string));
    
            var itemStatusCodeParameter = itemStatusCode != null ?
                new ObjectParameter("ItemStatusCode", itemStatusCode) :
                new ObjectParameter("ItemStatusCode", typeof(string));
    
            var itemStatusDescriptionParameter = itemStatusDescription != null ?
                new ObjectParameter("ItemStatusDescription", itemStatusDescription) :
                new ObjectParameter("ItemStatusDescription", typeof(string));
    
            var itemMakeModelCodeParameter = itemMakeModelCode != null ?
                new ObjectParameter("ItemMakeModelCode", itemMakeModelCode) :
                new ObjectParameter("ItemMakeModelCode", typeof(string));
    
            var itemMakeModelMakeParameter = itemMakeModelMake != null ?
                new ObjectParameter("ItemMakeModelMake", itemMakeModelMake) :
                new ObjectParameter("ItemMakeModelMake", typeof(string));
    
            var itemMakeModelModelParameter = itemMakeModelModel != null ?
                new ObjectParameter("ItemMakeModelModel", itemMakeModelModel) :
                new ObjectParameter("ItemMakeModelModel", typeof(string));
    
            var modelYearParameter = modelYear.HasValue ?
                new ObjectParameter("ModelYear", modelYear) :
                new ObjectParameter("ModelYear", typeof(int));
    
            var itemPrimaryColorCodeParameter = itemPrimaryColorCode != null ?
                new ObjectParameter("ItemPrimaryColorCode", itemPrimaryColorCode) :
                new ObjectParameter("ItemPrimaryColorCode", typeof(string));
    
            var itemPrimaryColorDescriptionParameter = itemPrimaryColorDescription != null ?
                new ObjectParameter("ItemPrimaryColorDescription", itemPrimaryColorDescription) :
                new ObjectParameter("ItemPrimaryColorDescription", typeof(string));
    
            var itemSecondaryColorCodeParameter = itemSecondaryColorCode != null ?
                new ObjectParameter("ItemSecondaryColorCode", itemSecondaryColorCode) :
                new ObjectParameter("ItemSecondaryColorCode", typeof(string));
    
            var itemSecondaryColorDescriptionParameter = itemSecondaryColorDescription != null ?
                new ObjectParameter("ItemSecondaryColorDescription", itemSecondaryColorDescription) :
                new ObjectParameter("ItemSecondaryColorDescription", typeof(string));
    
            var itemConditionCodeParameter = itemConditionCode != null ?
                new ObjectParameter("ItemConditionCode", itemConditionCode) :
                new ObjectParameter("ItemConditionCode", typeof(string));
    
            var itemConditionDescriptionParameter = itemConditionDescription != null ?
                new ObjectParameter("ItemConditionDescription", itemConditionDescription) :
                new ObjectParameter("ItemConditionDescription", typeof(string));
    
            var itemUsageCodeParameter = itemUsageCode != null ?
                new ObjectParameter("ItemUsageCode", itemUsageCode) :
                new ObjectParameter("ItemUsageCode", typeof(string));
    
            var itemUsageDescriptionParameter = itemUsageDescription != null ?
                new ObjectParameter("ItemUsageDescription", itemUsageDescription) :
                new ObjectParameter("ItemUsageDescription", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var serialIdentificationParameter = serialIdentification != null ?
                new ObjectParameter("SerialIdentification", serialIdentification) :
                new ObjectParameter("SerialIdentification", typeof(string));
    
            var itemValueParameter = itemValue.HasValue ?
                new ObjectParameter("ItemValue", itemValue) :
                new ObjectParameter("ItemValue", typeof(double));
    
            var sizeDescriptionParameter = sizeDescription != null ?
                new ObjectParameter("SizeDescription", sizeDescription) :
                new ObjectParameter("SizeDescription", typeof(string));
    
            var heightMeasureParameter = heightMeasure.HasValue ?
                new ObjectParameter("HeightMeasure", heightMeasure) :
                new ObjectParameter("HeightMeasure", typeof(double));
    
            var lengthMeasureParameter = lengthMeasure.HasValue ?
                new ObjectParameter("LengthMeasure", lengthMeasure) :
                new ObjectParameter("LengthMeasure", typeof(double));
    
            var widthMeasureParameter = widthMeasure.HasValue ?
                new ObjectParameter("WidthMeasure", widthMeasure) :
                new ObjectParameter("WidthMeasure", typeof(double));
    
            var weightMeasureParameter = weightMeasure.HasValue ?
                new ObjectParameter("WeightMeasure", weightMeasure) :
                new ObjectParameter("WeightMeasure", typeof(double));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var vehicleLiabilityCodeParameter = vehicleLiabilityCode != null ?
                new ObjectParameter("VehicleLiabilityCode", vehicleLiabilityCode) :
                new ObjectParameter("VehicleLiabilityCode", typeof(string));
    
            var vehicleLiabilityDescriptionParameter = vehicleLiabilityDescription != null ?
                new ObjectParameter("VehicleLiabilityDescription", vehicleLiabilityDescription) :
                new ObjectParameter("VehicleLiabilityDescription", typeof(string));
    
            var vehicleCollisionPointCodeParameter = vehicleCollisionPointCode != null ?
                new ObjectParameter("VehicleCollisionPointCode", vehicleCollisionPointCode) :
                new ObjectParameter("VehicleCollisionPointCode", typeof(string));
    
            var vehicleCollisionPointDescriptionParameter = vehicleCollisionPointDescription != null ?
                new ObjectParameter("VehicleCollisionPointDescription", vehicleCollisionPointDescription) :
                new ObjectParameter("VehicleCollisionPointDescription", typeof(string));
    
            var vehicleStatusCodeParameter = vehicleStatusCode != null ?
                new ObjectParameter("VehicleStatusCode", vehicleStatusCode) :
                new ObjectParameter("VehicleStatusCode", typeof(string));
    
            var vehicleStatusDescriptionParameter = vehicleStatusDescription != null ?
                new ObjectParameter("VehicleStatusDescription", vehicleStatusDescription) :
                new ObjectParameter("VehicleStatusDescription", typeof(string));
    
            var vehicleCountryCodeParameter = vehicleCountryCode != null ?
                new ObjectParameter("VehicleCountryCode", vehicleCountryCode) :
                new ObjectParameter("VehicleCountryCode", typeof(string));
    
            var vehicleCountryDescriptionParameter = vehicleCountryDescription != null ?
                new ObjectParameter("VehicleCountryDescription", vehicleCountryDescription) :
                new ObjectParameter("VehicleCountryDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_InsertServiceCallVehicleEntity", originalIdentParameter, sourceNameParameter, itemCategoryCodeParameter, itemCategoryDescriptionParameter, itemStatusCodeParameter, itemStatusDescriptionParameter, itemMakeModelCodeParameter, itemMakeModelMakeParameter, itemMakeModelModelParameter, modelYearParameter, itemPrimaryColorCodeParameter, itemPrimaryColorDescriptionParameter, itemSecondaryColorCodeParameter, itemSecondaryColorDescriptionParameter, itemConditionCodeParameter, itemConditionDescriptionParameter, itemUsageCodeParameter, itemUsageDescriptionParameter, itemNameParameter, descriptionParameter, serialIdentificationParameter, itemValueParameter, sizeDescriptionParameter, heightMeasureParameter, lengthMeasureParameter, widthMeasureParameter, weightMeasureParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, vehicleLiabilityCodeParameter, vehicleLiabilityDescriptionParameter, vehicleCollisionPointCodeParameter, vehicleCollisionPointDescriptionParameter, vehicleStatusCodeParameter, vehicleStatusDescriptionParameter, vehicleCountryCodeParameter, vehicleCountryDescriptionParameter);
        }
    
        public virtual int usp_UpdateActivityItemEntity(Nullable<long> itemId, string originalIdent, string sourceName, string itemCategoryCode, string itemCategoryDescription, string itemStatusCode, string itemStatusDescription, string itemMakeModelCode, string itemMakeModelMake, string itemMakeModelModel, Nullable<int> modelYear, string itemPrimaryColorCode, string itemPrimaryColorDescription, string itemSecondaryColorCode, string itemSecondaryColorDescription, string itemConditionCode, string itemConditionDescription, string itemUsageCode, string itemUsageDescription, string itemName, string description, string serialIdentification, Nullable<double> itemValue, string sizeDescription, Nullable<double> heightMeasure, Nullable<double> lengthMeasure, Nullable<double> widthMeasure, Nullable<double> weightMeasure, string rowStatusCode, string rowStatusDescription, Nullable<long> activityItemId, string activityItemDescription, Nullable<long> activityId, string itemInvolvementCode, string itemInvolvementDescription)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var itemCategoryCodeParameter = itemCategoryCode != null ?
                new ObjectParameter("ItemCategoryCode", itemCategoryCode) :
                new ObjectParameter("ItemCategoryCode", typeof(string));
    
            var itemCategoryDescriptionParameter = itemCategoryDescription != null ?
                new ObjectParameter("ItemCategoryDescription", itemCategoryDescription) :
                new ObjectParameter("ItemCategoryDescription", typeof(string));
    
            var itemStatusCodeParameter = itemStatusCode != null ?
                new ObjectParameter("ItemStatusCode", itemStatusCode) :
                new ObjectParameter("ItemStatusCode", typeof(string));
    
            var itemStatusDescriptionParameter = itemStatusDescription != null ?
                new ObjectParameter("ItemStatusDescription", itemStatusDescription) :
                new ObjectParameter("ItemStatusDescription", typeof(string));
    
            var itemMakeModelCodeParameter = itemMakeModelCode != null ?
                new ObjectParameter("ItemMakeModelCode", itemMakeModelCode) :
                new ObjectParameter("ItemMakeModelCode", typeof(string));
    
            var itemMakeModelMakeParameter = itemMakeModelMake != null ?
                new ObjectParameter("ItemMakeModelMake", itemMakeModelMake) :
                new ObjectParameter("ItemMakeModelMake", typeof(string));
    
            var itemMakeModelModelParameter = itemMakeModelModel != null ?
                new ObjectParameter("ItemMakeModelModel", itemMakeModelModel) :
                new ObjectParameter("ItemMakeModelModel", typeof(string));
    
            var modelYearParameter = modelYear.HasValue ?
                new ObjectParameter("ModelYear", modelYear) :
                new ObjectParameter("ModelYear", typeof(int));
    
            var itemPrimaryColorCodeParameter = itemPrimaryColorCode != null ?
                new ObjectParameter("ItemPrimaryColorCode", itemPrimaryColorCode) :
                new ObjectParameter("ItemPrimaryColorCode", typeof(string));
    
            var itemPrimaryColorDescriptionParameter = itemPrimaryColorDescription != null ?
                new ObjectParameter("ItemPrimaryColorDescription", itemPrimaryColorDescription) :
                new ObjectParameter("ItemPrimaryColorDescription", typeof(string));
    
            var itemSecondaryColorCodeParameter = itemSecondaryColorCode != null ?
                new ObjectParameter("ItemSecondaryColorCode", itemSecondaryColorCode) :
                new ObjectParameter("ItemSecondaryColorCode", typeof(string));
    
            var itemSecondaryColorDescriptionParameter = itemSecondaryColorDescription != null ?
                new ObjectParameter("ItemSecondaryColorDescription", itemSecondaryColorDescription) :
                new ObjectParameter("ItemSecondaryColorDescription", typeof(string));
    
            var itemConditionCodeParameter = itemConditionCode != null ?
                new ObjectParameter("ItemConditionCode", itemConditionCode) :
                new ObjectParameter("ItemConditionCode", typeof(string));
    
            var itemConditionDescriptionParameter = itemConditionDescription != null ?
                new ObjectParameter("ItemConditionDescription", itemConditionDescription) :
                new ObjectParameter("ItemConditionDescription", typeof(string));
    
            var itemUsageCodeParameter = itemUsageCode != null ?
                new ObjectParameter("ItemUsageCode", itemUsageCode) :
                new ObjectParameter("ItemUsageCode", typeof(string));
    
            var itemUsageDescriptionParameter = itemUsageDescription != null ?
                new ObjectParameter("ItemUsageDescription", itemUsageDescription) :
                new ObjectParameter("ItemUsageDescription", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var serialIdentificationParameter = serialIdentification != null ?
                new ObjectParameter("SerialIdentification", serialIdentification) :
                new ObjectParameter("SerialIdentification", typeof(string));
    
            var itemValueParameter = itemValue.HasValue ?
                new ObjectParameter("ItemValue", itemValue) :
                new ObjectParameter("ItemValue", typeof(double));
    
            var sizeDescriptionParameter = sizeDescription != null ?
                new ObjectParameter("SizeDescription", sizeDescription) :
                new ObjectParameter("SizeDescription", typeof(string));
    
            var heightMeasureParameter = heightMeasure.HasValue ?
                new ObjectParameter("HeightMeasure", heightMeasure) :
                new ObjectParameter("HeightMeasure", typeof(double));
    
            var lengthMeasureParameter = lengthMeasure.HasValue ?
                new ObjectParameter("LengthMeasure", lengthMeasure) :
                new ObjectParameter("LengthMeasure", typeof(double));
    
            var widthMeasureParameter = widthMeasure.HasValue ?
                new ObjectParameter("WidthMeasure", widthMeasure) :
                new ObjectParameter("WidthMeasure", typeof(double));
    
            var weightMeasureParameter = weightMeasure.HasValue ?
                new ObjectParameter("WeightMeasure", weightMeasure) :
                new ObjectParameter("WeightMeasure", typeof(double));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var activityItemIdParameter = activityItemId.HasValue ?
                new ObjectParameter("ActivityItemId", activityItemId) :
                new ObjectParameter("ActivityItemId", typeof(long));
    
            var activityItemDescriptionParameter = activityItemDescription != null ?
                new ObjectParameter("ActivityItemDescription", activityItemDescription) :
                new ObjectParameter("ActivityItemDescription", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var itemInvolvementCodeParameter = itemInvolvementCode != null ?
                new ObjectParameter("ItemInvolvementCode", itemInvolvementCode) :
                new ObjectParameter("ItemInvolvementCode", typeof(string));
    
            var itemInvolvementDescriptionParameter = itemInvolvementDescription != null ?
                new ObjectParameter("ItemInvolvementDescription", itemInvolvementDescription) :
                new ObjectParameter("ItemInvolvementDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateActivityItemEntity", itemIdParameter, originalIdentParameter, sourceNameParameter, itemCategoryCodeParameter, itemCategoryDescriptionParameter, itemStatusCodeParameter, itemStatusDescriptionParameter, itemMakeModelCodeParameter, itemMakeModelMakeParameter, itemMakeModelModelParameter, modelYearParameter, itemPrimaryColorCodeParameter, itemPrimaryColorDescriptionParameter, itemSecondaryColorCodeParameter, itemSecondaryColorDescriptionParameter, itemConditionCodeParameter, itemConditionDescriptionParameter, itemUsageCodeParameter, itemUsageDescriptionParameter, itemNameParameter, descriptionParameter, serialIdentificationParameter, itemValueParameter, sizeDescriptionParameter, heightMeasureParameter, lengthMeasureParameter, widthMeasureParameter, weightMeasureParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, activityItemIdParameter, activityItemDescriptionParameter, activityIdParameter, itemInvolvementCodeParameter, itemInvolvementDescriptionParameter);
        }
    
        public virtual int usp_UpdateActivityLocationEntity(Nullable<long> locationId, string originalIdent, string sourceName, string locationCategoryCode, string locationCategoryDescription, string locationDatumCode, string locationDatumDescription, string locationIntersectionTypeCode, string locationIntersectionTypeDescription, string locationName, string description, string geoLEOCode, string geoLEODivision, string geoLEODistrict, string geoLEOSector, string geoLEOBeat, string geoLEODescription, string geoLocationSubDivisionState, string geoLocationSubDivisionCounty, string geoLocationSubDivisionCity, string geoLocationSubDivisionSubDivision, string geoCountryCode, string geoCountryCountryName, string geoCityCode, string geoCityCityName, string geoCityStateName, string geoCityCountyName, string geoCountyCode, string geoCountyCountyName, string geoCountyStateName, string geoZipCode, string geoZipZipCode, string geoStateCode, string geoStateStateName, string geoCensusTractCode, string geoCensusTractDescription, string locationStreetCategoryCode, string locationStreetCategoryDescription, string locationStreetDirectionPrefixCode, string locationStreetDirectionPrefixDescription, string locationStreetDirectionSuffixCode, string locationStreetDirectionSuffixDescription, string streetNumber, string streetName, string streetExtension, string address1, string address2, string address3, string postalCode, string postalCodeExtension, string crossStreet, string highwayPosition, System.Data.Entity.Spatial.DbGeometry geoPoint, System.Data.Entity.Spatial.DbGeometry boundry, string unit, string floor, string postOfficeBox, Nullable<double> altitudeAGL, Nullable<double> altitudeMSL, string orgAddress1, string orgAddress2, string orgAddress3, string orgStateCode, string orgCountry, string orgConty, string orgCity, string orgZip, string orgLat, string orgLong, Nullable<bool> orgLeoProcessed, Nullable<bool> orgSubProcessed, Nullable<bool> orgLocProcessed, string rowStatusCode, string rowStatusDescription, Nullable<long> activityLocationId, string activityLocationDescription, Nullable<long> activityId, string locationInvolvementCode, string locationInvolvementDescription)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var locationCategoryCodeParameter = locationCategoryCode != null ?
                new ObjectParameter("LocationCategoryCode", locationCategoryCode) :
                new ObjectParameter("LocationCategoryCode", typeof(string));
    
            var locationCategoryDescriptionParameter = locationCategoryDescription != null ?
                new ObjectParameter("LocationCategoryDescription", locationCategoryDescription) :
                new ObjectParameter("LocationCategoryDescription", typeof(string));
    
            var locationDatumCodeParameter = locationDatumCode != null ?
                new ObjectParameter("locationDatumCode", locationDatumCode) :
                new ObjectParameter("locationDatumCode", typeof(string));
    
            var locationDatumDescriptionParameter = locationDatumDescription != null ?
                new ObjectParameter("locationDatumDescription", locationDatumDescription) :
                new ObjectParameter("locationDatumDescription", typeof(string));
    
            var locationIntersectionTypeCodeParameter = locationIntersectionTypeCode != null ?
                new ObjectParameter("locationIntersectionTypeCode", locationIntersectionTypeCode) :
                new ObjectParameter("locationIntersectionTypeCode", typeof(string));
    
            var locationIntersectionTypeDescriptionParameter = locationIntersectionTypeDescription != null ?
                new ObjectParameter("locationIntersectionTypeDescription", locationIntersectionTypeDescription) :
                new ObjectParameter("locationIntersectionTypeDescription", typeof(string));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var geoLEOCodeParameter = geoLEOCode != null ?
                new ObjectParameter("GeoLEOCode", geoLEOCode) :
                new ObjectParameter("GeoLEOCode", typeof(string));
    
            var geoLEODivisionParameter = geoLEODivision != null ?
                new ObjectParameter("GeoLEODivision", geoLEODivision) :
                new ObjectParameter("GeoLEODivision", typeof(string));
    
            var geoLEODistrictParameter = geoLEODistrict != null ?
                new ObjectParameter("GeoLEODistrict", geoLEODistrict) :
                new ObjectParameter("GeoLEODistrict", typeof(string));
    
            var geoLEOSectorParameter = geoLEOSector != null ?
                new ObjectParameter("GeoLEOSector", geoLEOSector) :
                new ObjectParameter("GeoLEOSector", typeof(string));
    
            var geoLEOBeatParameter = geoLEOBeat != null ?
                new ObjectParameter("GeoLEOBeat", geoLEOBeat) :
                new ObjectParameter("GeoLEOBeat", typeof(string));
    
            var geoLEODescriptionParameter = geoLEODescription != null ?
                new ObjectParameter("GeoLEODescription", geoLEODescription) :
                new ObjectParameter("GeoLEODescription", typeof(string));
    
            var geoLocationSubDivisionStateParameter = geoLocationSubDivisionState != null ?
                new ObjectParameter("GeoLocationSubDivisionState", geoLocationSubDivisionState) :
                new ObjectParameter("GeoLocationSubDivisionState", typeof(string));
    
            var geoLocationSubDivisionCountyParameter = geoLocationSubDivisionCounty != null ?
                new ObjectParameter("GeoLocationSubDivisionCounty", geoLocationSubDivisionCounty) :
                new ObjectParameter("GeoLocationSubDivisionCounty", typeof(string));
    
            var geoLocationSubDivisionCityParameter = geoLocationSubDivisionCity != null ?
                new ObjectParameter("GeoLocationSubDivisionCity", geoLocationSubDivisionCity) :
                new ObjectParameter("GeoLocationSubDivisionCity", typeof(string));
    
            var geoLocationSubDivisionSubDivisionParameter = geoLocationSubDivisionSubDivision != null ?
                new ObjectParameter("GeoLocationSubDivisionSubDivision", geoLocationSubDivisionSubDivision) :
                new ObjectParameter("GeoLocationSubDivisionSubDivision", typeof(string));
    
            var geoCountryCodeParameter = geoCountryCode != null ?
                new ObjectParameter("GeoCountryCode", geoCountryCode) :
                new ObjectParameter("GeoCountryCode", typeof(string));
    
            var geoCountryCountryNameParameter = geoCountryCountryName != null ?
                new ObjectParameter("GeoCountryCountryName", geoCountryCountryName) :
                new ObjectParameter("GeoCountryCountryName", typeof(string));
    
            var geoCityCodeParameter = geoCityCode != null ?
                new ObjectParameter("GeoCityCode", geoCityCode) :
                new ObjectParameter("GeoCityCode", typeof(string));
    
            var geoCityCityNameParameter = geoCityCityName != null ?
                new ObjectParameter("GeoCityCityName", geoCityCityName) :
                new ObjectParameter("GeoCityCityName", typeof(string));
    
            var geoCityStateNameParameter = geoCityStateName != null ?
                new ObjectParameter("GeoCityStateName", geoCityStateName) :
                new ObjectParameter("GeoCityStateName", typeof(string));
    
            var geoCityCountyNameParameter = geoCityCountyName != null ?
                new ObjectParameter("GeoCityCountyName", geoCityCountyName) :
                new ObjectParameter("GeoCityCountyName", typeof(string));
    
            var geoCountyCodeParameter = geoCountyCode != null ?
                new ObjectParameter("GeoCountyCode", geoCountyCode) :
                new ObjectParameter("GeoCountyCode", typeof(string));
    
            var geoCountyCountyNameParameter = geoCountyCountyName != null ?
                new ObjectParameter("GeoCountyCountyName", geoCountyCountyName) :
                new ObjectParameter("GeoCountyCountyName", typeof(string));
    
            var geoCountyStateNameParameter = geoCountyStateName != null ?
                new ObjectParameter("GeoCountyStateName", geoCountyStateName) :
                new ObjectParameter("GeoCountyStateName", typeof(string));
    
            var geoZipCodeParameter = geoZipCode != null ?
                new ObjectParameter("GeoZipCode", geoZipCode) :
                new ObjectParameter("GeoZipCode", typeof(string));
    
            var geoZipZipCodeParameter = geoZipZipCode != null ?
                new ObjectParameter("GeoZipZipCode", geoZipZipCode) :
                new ObjectParameter("GeoZipZipCode", typeof(string));
    
            var geoStateCodeParameter = geoStateCode != null ?
                new ObjectParameter("GeoStateCode", geoStateCode) :
                new ObjectParameter("GeoStateCode", typeof(string));
    
            var geoStateStateNameParameter = geoStateStateName != null ?
                new ObjectParameter("GeoStateStateName", geoStateStateName) :
                new ObjectParameter("GeoStateStateName", typeof(string));
    
            var geoCensusTractCodeParameter = geoCensusTractCode != null ?
                new ObjectParameter("GeoCensusTractCode", geoCensusTractCode) :
                new ObjectParameter("GeoCensusTractCode", typeof(string));
    
            var geoCensusTractDescriptionParameter = geoCensusTractDescription != null ?
                new ObjectParameter("GeoCensusTractDescription", geoCensusTractDescription) :
                new ObjectParameter("GeoCensusTractDescription", typeof(string));
    
            var locationStreetCategoryCodeParameter = locationStreetCategoryCode != null ?
                new ObjectParameter("LocationStreetCategoryCode", locationStreetCategoryCode) :
                new ObjectParameter("LocationStreetCategoryCode", typeof(string));
    
            var locationStreetCategoryDescriptionParameter = locationStreetCategoryDescription != null ?
                new ObjectParameter("LocationStreetCategoryDescription", locationStreetCategoryDescription) :
                new ObjectParameter("LocationStreetCategoryDescription", typeof(string));
    
            var locationStreetDirectionPrefixCodeParameter = locationStreetDirectionPrefixCode != null ?
                new ObjectParameter("LocationStreetDirectionPrefixCode", locationStreetDirectionPrefixCode) :
                new ObjectParameter("LocationStreetDirectionPrefixCode", typeof(string));
    
            var locationStreetDirectionPrefixDescriptionParameter = locationStreetDirectionPrefixDescription != null ?
                new ObjectParameter("LocationStreetDirectionPrefixDescription", locationStreetDirectionPrefixDescription) :
                new ObjectParameter("LocationStreetDirectionPrefixDescription", typeof(string));
    
            var locationStreetDirectionSuffixCodeParameter = locationStreetDirectionSuffixCode != null ?
                new ObjectParameter("LocationStreetDirectionSuffixCode", locationStreetDirectionSuffixCode) :
                new ObjectParameter("LocationStreetDirectionSuffixCode", typeof(string));
    
            var locationStreetDirectionSuffixDescriptionParameter = locationStreetDirectionSuffixDescription != null ?
                new ObjectParameter("LocationStreetDirectionSuffixDescription", locationStreetDirectionSuffixDescription) :
                new ObjectParameter("LocationStreetDirectionSuffixDescription", typeof(string));
    
            var streetNumberParameter = streetNumber != null ?
                new ObjectParameter("StreetNumber", streetNumber) :
                new ObjectParameter("StreetNumber", typeof(string));
    
            var streetNameParameter = streetName != null ?
                new ObjectParameter("StreetName", streetName) :
                new ObjectParameter("StreetName", typeof(string));
    
            var streetExtensionParameter = streetExtension != null ?
                new ObjectParameter("StreetExtension", streetExtension) :
                new ObjectParameter("StreetExtension", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var postalCodeExtensionParameter = postalCodeExtension != null ?
                new ObjectParameter("PostalCodeExtension", postalCodeExtension) :
                new ObjectParameter("PostalCodeExtension", typeof(string));
    
            var crossStreetParameter = crossStreet != null ?
                new ObjectParameter("CrossStreet", crossStreet) :
                new ObjectParameter("CrossStreet", typeof(string));
    
            var highwayPositionParameter = highwayPosition != null ?
                new ObjectParameter("HighwayPosition", highwayPosition) :
                new ObjectParameter("HighwayPosition", typeof(string));
    
            var geoPointParameter = geoPoint != null ?
                new ObjectParameter("GeoPoint", geoPoint) :
                new ObjectParameter("GeoPoint", typeof(System.Data.Entity.Spatial.DbGeometry));
    
            var boundryParameter = boundry != null ?
                new ObjectParameter("Boundry", boundry) :
                new ObjectParameter("Boundry", typeof(System.Data.Entity.Spatial.DbGeometry));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var postOfficeBoxParameter = postOfficeBox != null ?
                new ObjectParameter("PostOfficeBox", postOfficeBox) :
                new ObjectParameter("PostOfficeBox", typeof(string));
    
            var altitudeAGLParameter = altitudeAGL.HasValue ?
                new ObjectParameter("AltitudeAGL", altitudeAGL) :
                new ObjectParameter("AltitudeAGL", typeof(double));
    
            var altitudeMSLParameter = altitudeMSL.HasValue ?
                new ObjectParameter("AltitudeMSL", altitudeMSL) :
                new ObjectParameter("AltitudeMSL", typeof(double));
    
            var orgAddress1Parameter = orgAddress1 != null ?
                new ObjectParameter("OrgAddress1", orgAddress1) :
                new ObjectParameter("OrgAddress1", typeof(string));
    
            var orgAddress2Parameter = orgAddress2 != null ?
                new ObjectParameter("OrgAddress2", orgAddress2) :
                new ObjectParameter("OrgAddress2", typeof(string));
    
            var orgAddress3Parameter = orgAddress3 != null ?
                new ObjectParameter("OrgAddress3", orgAddress3) :
                new ObjectParameter("OrgAddress3", typeof(string));
    
            var orgStateCodeParameter = orgStateCode != null ?
                new ObjectParameter("OrgStateCode", orgStateCode) :
                new ObjectParameter("OrgStateCode", typeof(string));
    
            var orgCountryParameter = orgCountry != null ?
                new ObjectParameter("OrgCountry", orgCountry) :
                new ObjectParameter("OrgCountry", typeof(string));
    
            var orgContyParameter = orgConty != null ?
                new ObjectParameter("OrgConty", orgConty) :
                new ObjectParameter("OrgConty", typeof(string));
    
            var orgCityParameter = orgCity != null ?
                new ObjectParameter("OrgCity", orgCity) :
                new ObjectParameter("OrgCity", typeof(string));
    
            var orgZipParameter = orgZip != null ?
                new ObjectParameter("OrgZip", orgZip) :
                new ObjectParameter("OrgZip", typeof(string));
    
            var orgLatParameter = orgLat != null ?
                new ObjectParameter("OrgLat", orgLat) :
                new ObjectParameter("OrgLat", typeof(string));
    
            var orgLongParameter = orgLong != null ?
                new ObjectParameter("OrgLong", orgLong) :
                new ObjectParameter("OrgLong", typeof(string));
    
            var orgLeoProcessedParameter = orgLeoProcessed.HasValue ?
                new ObjectParameter("OrgLeoProcessed", orgLeoProcessed) :
                new ObjectParameter("OrgLeoProcessed", typeof(bool));
    
            var orgSubProcessedParameter = orgSubProcessed.HasValue ?
                new ObjectParameter("OrgSubProcessed", orgSubProcessed) :
                new ObjectParameter("OrgSubProcessed", typeof(bool));
    
            var orgLocProcessedParameter = orgLocProcessed.HasValue ?
                new ObjectParameter("OrgLocProcessed", orgLocProcessed) :
                new ObjectParameter("OrgLocProcessed", typeof(bool));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var activityLocationIdParameter = activityLocationId.HasValue ?
                new ObjectParameter("ActivityLocationId", activityLocationId) :
                new ObjectParameter("ActivityLocationId", typeof(long));
    
            var activityLocationDescriptionParameter = activityLocationDescription != null ?
                new ObjectParameter("ActivityLocationDescription", activityLocationDescription) :
                new ObjectParameter("ActivityLocationDescription", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var locationInvolvementCodeParameter = locationInvolvementCode != null ?
                new ObjectParameter("LocationInvolvementCode", locationInvolvementCode) :
                new ObjectParameter("LocationInvolvementCode", typeof(string));
    
            var locationInvolvementDescriptionParameter = locationInvolvementDescription != null ?
                new ObjectParameter("LocationInvolvementDescription", locationInvolvementDescription) :
                new ObjectParameter("LocationInvolvementDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateActivityLocationEntity", locationIdParameter, originalIdentParameter, sourceNameParameter, locationCategoryCodeParameter, locationCategoryDescriptionParameter, locationDatumCodeParameter, locationDatumDescriptionParameter, locationIntersectionTypeCodeParameter, locationIntersectionTypeDescriptionParameter, locationNameParameter, descriptionParameter, geoLEOCodeParameter, geoLEODivisionParameter, geoLEODistrictParameter, geoLEOSectorParameter, geoLEOBeatParameter, geoLEODescriptionParameter, geoLocationSubDivisionStateParameter, geoLocationSubDivisionCountyParameter, geoLocationSubDivisionCityParameter, geoLocationSubDivisionSubDivisionParameter, geoCountryCodeParameter, geoCountryCountryNameParameter, geoCityCodeParameter, geoCityCityNameParameter, geoCityStateNameParameter, geoCityCountyNameParameter, geoCountyCodeParameter, geoCountyCountyNameParameter, geoCountyStateNameParameter, geoZipCodeParameter, geoZipZipCodeParameter, geoStateCodeParameter, geoStateStateNameParameter, geoCensusTractCodeParameter, geoCensusTractDescriptionParameter, locationStreetCategoryCodeParameter, locationStreetCategoryDescriptionParameter, locationStreetDirectionPrefixCodeParameter, locationStreetDirectionPrefixDescriptionParameter, locationStreetDirectionSuffixCodeParameter, locationStreetDirectionSuffixDescriptionParameter, streetNumberParameter, streetNameParameter, streetExtensionParameter, address1Parameter, address2Parameter, address3Parameter, postalCodeParameter, postalCodeExtensionParameter, crossStreetParameter, highwayPositionParameter, geoPointParameter, boundryParameter, unitParameter, floorParameter, postOfficeBoxParameter, altitudeAGLParameter, altitudeMSLParameter, orgAddress1Parameter, orgAddress2Parameter, orgAddress3Parameter, orgStateCodeParameter, orgCountryParameter, orgContyParameter, orgCityParameter, orgZipParameter, orgLatParameter, orgLongParameter, orgLeoProcessedParameter, orgSubProcessedParameter, orgLocProcessedParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, activityLocationIdParameter, activityLocationDescriptionParameter, activityIdParameter, locationInvolvementCodeParameter, locationInvolvementDescriptionParameter);
        }
    
        public virtual int usp_UpdateActivityOrganizationEntity(Nullable<long> organizationId, string originalIdent, string sourceName, string organizationCategoryCode, string organizationCategoryDescription, string organizationStatusCode, string organizationStatusDescription, string name, string doingBusinessAs, string description, string abbreviationText, string iMONumber, Nullable<System.DateTime> establishedDateTime, Nullable<System.DateTime> terminationDateTime, Nullable<bool> incorporatedIndicator, string rowStatusCode, string rowStatusDescription, Nullable<long> activityOrganizationId, string activityOrganizationDescription, Nullable<long> activityId, string organizationInvolvementCode, string organizationInvolvementDescription)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var organizationCategoryCodeParameter = organizationCategoryCode != null ?
                new ObjectParameter("OrganizationCategoryCode", organizationCategoryCode) :
                new ObjectParameter("OrganizationCategoryCode", typeof(string));
    
            var organizationCategoryDescriptionParameter = organizationCategoryDescription != null ?
                new ObjectParameter("OrganizationCategoryDescription", organizationCategoryDescription) :
                new ObjectParameter("OrganizationCategoryDescription", typeof(string));
    
            var organizationStatusCodeParameter = organizationStatusCode != null ?
                new ObjectParameter("OrganizationStatusCode", organizationStatusCode) :
                new ObjectParameter("OrganizationStatusCode", typeof(string));
    
            var organizationStatusDescriptionParameter = organizationStatusDescription != null ?
                new ObjectParameter("OrganizationStatusDescription", organizationStatusDescription) :
                new ObjectParameter("OrganizationStatusDescription", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var doingBusinessAsParameter = doingBusinessAs != null ?
                new ObjectParameter("DoingBusinessAs", doingBusinessAs) :
                new ObjectParameter("DoingBusinessAs", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var abbreviationTextParameter = abbreviationText != null ?
                new ObjectParameter("AbbreviationText", abbreviationText) :
                new ObjectParameter("AbbreviationText", typeof(string));
    
            var iMONumberParameter = iMONumber != null ?
                new ObjectParameter("IMONumber", iMONumber) :
                new ObjectParameter("IMONumber", typeof(string));
    
            var establishedDateTimeParameter = establishedDateTime.HasValue ?
                new ObjectParameter("EstablishedDateTime", establishedDateTime) :
                new ObjectParameter("EstablishedDateTime", typeof(System.DateTime));
    
            var terminationDateTimeParameter = terminationDateTime.HasValue ?
                new ObjectParameter("TerminationDateTime", terminationDateTime) :
                new ObjectParameter("TerminationDateTime", typeof(System.DateTime));
    
            var incorporatedIndicatorParameter = incorporatedIndicator.HasValue ?
                new ObjectParameter("IncorporatedIndicator", incorporatedIndicator) :
                new ObjectParameter("IncorporatedIndicator", typeof(bool));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var activityOrganizationIdParameter = activityOrganizationId.HasValue ?
                new ObjectParameter("ActivityOrganizationId", activityOrganizationId) :
                new ObjectParameter("ActivityOrganizationId", typeof(long));
    
            var activityOrganizationDescriptionParameter = activityOrganizationDescription != null ?
                new ObjectParameter("ActivityOrganizationDescription", activityOrganizationDescription) :
                new ObjectParameter("ActivityOrganizationDescription", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var organizationInvolvementCodeParameter = organizationInvolvementCode != null ?
                new ObjectParameter("OrganizationInvolvementCode", organizationInvolvementCode) :
                new ObjectParameter("OrganizationInvolvementCode", typeof(string));
    
            var organizationInvolvementDescriptionParameter = organizationInvolvementDescription != null ?
                new ObjectParameter("OrganizationInvolvementDescription", organizationInvolvementDescription) :
                new ObjectParameter("OrganizationInvolvementDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateActivityOrganizationEntity", organizationIdParameter, originalIdentParameter, sourceNameParameter, organizationCategoryCodeParameter, organizationCategoryDescriptionParameter, organizationStatusCodeParameter, organizationStatusDescriptionParameter, nameParameter, doingBusinessAsParameter, descriptionParameter, abbreviationTextParameter, iMONumberParameter, establishedDateTimeParameter, terminationDateTimeParameter, incorporatedIndicatorParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, activityOrganizationIdParameter, activityOrganizationDescriptionParameter, activityIdParameter, organizationInvolvementCodeParameter, organizationInvolvementDescriptionParameter);
        }
    
        public virtual int usp_UpdateActivityPersonEntity(Nullable<long> personId, string description, string originalIdent, string sourceName, string personStatusCode, string personStatusDescription, string firstName, string middleName, string lastName, string moniker, string suffix, string prefix, Nullable<int> personCategoryId, string personGenderCode, string personGenderDescription, string rowStatusCode, string rowStatusDescription, Nullable<long> activityPersonId, string activityPersonDescription, Nullable<long> activityId, string personInvolvementCode, string personInvolvementDescription)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var personStatusCodeParameter = personStatusCode != null ?
                new ObjectParameter("PersonStatusCode", personStatusCode) :
                new ObjectParameter("PersonStatusCode", typeof(string));
    
            var personStatusDescriptionParameter = personStatusDescription != null ?
                new ObjectParameter("PersonStatusDescription", personStatusDescription) :
                new ObjectParameter("PersonStatusDescription", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var monikerParameter = moniker != null ?
                new ObjectParameter("Moniker", moniker) :
                new ObjectParameter("Moniker", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("Suffix", suffix) :
                new ObjectParameter("Suffix", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var personCategoryIdParameter = personCategoryId.HasValue ?
                new ObjectParameter("PersonCategoryId", personCategoryId) :
                new ObjectParameter("PersonCategoryId", typeof(int));
    
            var personGenderCodeParameter = personGenderCode != null ?
                new ObjectParameter("PersonGenderCode", personGenderCode) :
                new ObjectParameter("PersonGenderCode", typeof(string));
    
            var personGenderDescriptionParameter = personGenderDescription != null ?
                new ObjectParameter("PersonGenderDescription", personGenderDescription) :
                new ObjectParameter("PersonGenderDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var activityPersonIdParameter = activityPersonId.HasValue ?
                new ObjectParameter("ActivityPersonId", activityPersonId) :
                new ObjectParameter("ActivityPersonId", typeof(long));
    
            var activityPersonDescriptionParameter = activityPersonDescription != null ?
                new ObjectParameter("ActivityPersonDescription", activityPersonDescription) :
                new ObjectParameter("ActivityPersonDescription", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var personInvolvementCodeParameter = personInvolvementCode != null ?
                new ObjectParameter("PersonInvolvementCode", personInvolvementCode) :
                new ObjectParameter("PersonInvolvementCode", typeof(string));
    
            var personInvolvementDescriptionParameter = personInvolvementDescription != null ?
                new ObjectParameter("PersonInvolvementDescription", personInvolvementDescription) :
                new ObjectParameter("PersonInvolvementDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateActivityPersonEntity", personIdParameter, descriptionParameter, originalIdentParameter, sourceNameParameter, personStatusCodeParameter, personStatusDescriptionParameter, firstNameParameter, middleNameParameter, lastNameParameter, monikerParameter, suffixParameter, prefixParameter, personCategoryIdParameter, personGenderCodeParameter, personGenderDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, activityPersonIdParameter, activityPersonDescriptionParameter, activityIdParameter, personInvolvementCodeParameter, personInvolvementDescriptionParameter);
        }
    
        public virtual int usp_UpdateItemEntity(Nullable<long> itemId, string originalIdent, string sourceName, string itemCategoryCode, string itemCategoryDescription, string itemStatusCode, string itemStatusDescription, string itemMakeModelCode, string itemMakeModelMake, string itemMakeModelModel, Nullable<int> modelYear, string itemPrimaryColorCode, string itemPrimaryColorDescription, string itemSecondaryColorCode, string itemSecondaryColorDescription, string itemConditionCode, string itemConditionDescription, string itemUsageCode, string itemUsageDescription, string itemName, string description, string serialIdentification, Nullable<double> itemValue, string sizeDescription, Nullable<double> heightMeasure, Nullable<double> lengthMeasure, Nullable<double> widthMeasure, Nullable<double> weightMeasure, string rowStatusCode, string rowStatusDescription)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var itemCategoryCodeParameter = itemCategoryCode != null ?
                new ObjectParameter("ItemCategoryCode", itemCategoryCode) :
                new ObjectParameter("ItemCategoryCode", typeof(string));
    
            var itemCategoryDescriptionParameter = itemCategoryDescription != null ?
                new ObjectParameter("ItemCategoryDescription", itemCategoryDescription) :
                new ObjectParameter("ItemCategoryDescription", typeof(string));
    
            var itemStatusCodeParameter = itemStatusCode != null ?
                new ObjectParameter("ItemStatusCode", itemStatusCode) :
                new ObjectParameter("ItemStatusCode", typeof(string));
    
            var itemStatusDescriptionParameter = itemStatusDescription != null ?
                new ObjectParameter("ItemStatusDescription", itemStatusDescription) :
                new ObjectParameter("ItemStatusDescription", typeof(string));
    
            var itemMakeModelCodeParameter = itemMakeModelCode != null ?
                new ObjectParameter("ItemMakeModelCode", itemMakeModelCode) :
                new ObjectParameter("ItemMakeModelCode", typeof(string));
    
            var itemMakeModelMakeParameter = itemMakeModelMake != null ?
                new ObjectParameter("ItemMakeModelMake", itemMakeModelMake) :
                new ObjectParameter("ItemMakeModelMake", typeof(string));
    
            var itemMakeModelModelParameter = itemMakeModelModel != null ?
                new ObjectParameter("ItemMakeModelModel", itemMakeModelModel) :
                new ObjectParameter("ItemMakeModelModel", typeof(string));
    
            var modelYearParameter = modelYear.HasValue ?
                new ObjectParameter("ModelYear", modelYear) :
                new ObjectParameter("ModelYear", typeof(int));
    
            var itemPrimaryColorCodeParameter = itemPrimaryColorCode != null ?
                new ObjectParameter("ItemPrimaryColorCode", itemPrimaryColorCode) :
                new ObjectParameter("ItemPrimaryColorCode", typeof(string));
    
            var itemPrimaryColorDescriptionParameter = itemPrimaryColorDescription != null ?
                new ObjectParameter("ItemPrimaryColorDescription", itemPrimaryColorDescription) :
                new ObjectParameter("ItemPrimaryColorDescription", typeof(string));
    
            var itemSecondaryColorCodeParameter = itemSecondaryColorCode != null ?
                new ObjectParameter("ItemSecondaryColorCode", itemSecondaryColorCode) :
                new ObjectParameter("ItemSecondaryColorCode", typeof(string));
    
            var itemSecondaryColorDescriptionParameter = itemSecondaryColorDescription != null ?
                new ObjectParameter("ItemSecondaryColorDescription", itemSecondaryColorDescription) :
                new ObjectParameter("ItemSecondaryColorDescription", typeof(string));
    
            var itemConditionCodeParameter = itemConditionCode != null ?
                new ObjectParameter("ItemConditionCode", itemConditionCode) :
                new ObjectParameter("ItemConditionCode", typeof(string));
    
            var itemConditionDescriptionParameter = itemConditionDescription != null ?
                new ObjectParameter("ItemConditionDescription", itemConditionDescription) :
                new ObjectParameter("ItemConditionDescription", typeof(string));
    
            var itemUsageCodeParameter = itemUsageCode != null ?
                new ObjectParameter("ItemUsageCode", itemUsageCode) :
                new ObjectParameter("ItemUsageCode", typeof(string));
    
            var itemUsageDescriptionParameter = itemUsageDescription != null ?
                new ObjectParameter("ItemUsageDescription", itemUsageDescription) :
                new ObjectParameter("ItemUsageDescription", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var serialIdentificationParameter = serialIdentification != null ?
                new ObjectParameter("SerialIdentification", serialIdentification) :
                new ObjectParameter("SerialIdentification", typeof(string));
    
            var itemValueParameter = itemValue.HasValue ?
                new ObjectParameter("ItemValue", itemValue) :
                new ObjectParameter("ItemValue", typeof(double));
    
            var sizeDescriptionParameter = sizeDescription != null ?
                new ObjectParameter("SizeDescription", sizeDescription) :
                new ObjectParameter("SizeDescription", typeof(string));
    
            var heightMeasureParameter = heightMeasure.HasValue ?
                new ObjectParameter("HeightMeasure", heightMeasure) :
                new ObjectParameter("HeightMeasure", typeof(double));
    
            var lengthMeasureParameter = lengthMeasure.HasValue ?
                new ObjectParameter("LengthMeasure", lengthMeasure) :
                new ObjectParameter("LengthMeasure", typeof(double));
    
            var widthMeasureParameter = widthMeasure.HasValue ?
                new ObjectParameter("WidthMeasure", widthMeasure) :
                new ObjectParameter("WidthMeasure", typeof(double));
    
            var weightMeasureParameter = weightMeasure.HasValue ?
                new ObjectParameter("WeightMeasure", weightMeasure) :
                new ObjectParameter("WeightMeasure", typeof(double));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateItemEntity", itemIdParameter, originalIdentParameter, sourceNameParameter, itemCategoryCodeParameter, itemCategoryDescriptionParameter, itemStatusCodeParameter, itemStatusDescriptionParameter, itemMakeModelCodeParameter, itemMakeModelMakeParameter, itemMakeModelModelParameter, modelYearParameter, itemPrimaryColorCodeParameter, itemPrimaryColorDescriptionParameter, itemSecondaryColorCodeParameter, itemSecondaryColorDescriptionParameter, itemConditionCodeParameter, itemConditionDescriptionParameter, itemUsageCodeParameter, itemUsageDescriptionParameter, itemNameParameter, descriptionParameter, serialIdentificationParameter, itemValueParameter, sizeDescriptionParameter, heightMeasureParameter, lengthMeasureParameter, widthMeasureParameter, weightMeasureParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual int usp_UpdateLocationEntity(Nullable<long> locationId, string originalIdent, string sourceName, string locationCategoryCode, string locationCategoryDescription, string locationDatumCode, string locationDatumDescription, string locationIntersectionTypeCode, string locationIntersectionTypeDescription, string locationName, string description, string geoLEOCode, string geoLEODivision, string geoLEODistrict, string geoLEOSector, string geoLEOBeat, string geoLEODescription, string geoLocationSubDivisionState, string geoLocationSubDivisionCounty, string geoLocationSubDivisionCity, string geoLocationSubDivisionSubDivision, string geoCountryCode, string geoCountryCountryName, string geoCityCode, string geoCityCityName, string geoCityStateName, string geoCityCountyName, string geoCountyCode, string geoCountyCountyName, string geoCountyStateName, string geoZipCode, string geoZipZipCode, string geoStateCode, string geoStateStateName, string geoCensusTractCode, string geoCensusTractDescription, string locationStreetCategoryCode, string locationStreetCategoryDescription, string locationStreetDirectionPrefixCode, string locationStreetDirectionPrefixDescription, string locationStreetDirectionSuffixCode, string locationStreetDirectionSuffixDescription, string streetNumber, string streetName, string streetExtension, string address1, string address2, string address3, string postalCode, string postalCodeExtension, string crossStreet, string highwayPosition, System.Data.Entity.Spatial.DbGeometry geoPoint, System.Data.Entity.Spatial.DbGeometry boundry, string unit, string floor, string postOfficeBox, Nullable<double> altitudeAGL, Nullable<double> altitudeMSL, string orgAddress1, string orgAddress2, string orgAddress3, string orgStateCode, string orgCountry, string orgConty, string orgCity, string orgZip, string orgLat, string orgLong, Nullable<bool> orgLeoProcessed, Nullable<bool> orgSubProcessed, Nullable<bool> orgLocProcessed, string rowStatusCode, string rowStatusDescription)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var locationCategoryCodeParameter = locationCategoryCode != null ?
                new ObjectParameter("LocationCategoryCode", locationCategoryCode) :
                new ObjectParameter("LocationCategoryCode", typeof(string));
    
            var locationCategoryDescriptionParameter = locationCategoryDescription != null ?
                new ObjectParameter("LocationCategoryDescription", locationCategoryDescription) :
                new ObjectParameter("LocationCategoryDescription", typeof(string));
    
            var locationDatumCodeParameter = locationDatumCode != null ?
                new ObjectParameter("locationDatumCode", locationDatumCode) :
                new ObjectParameter("locationDatumCode", typeof(string));
    
            var locationDatumDescriptionParameter = locationDatumDescription != null ?
                new ObjectParameter("locationDatumDescription", locationDatumDescription) :
                new ObjectParameter("locationDatumDescription", typeof(string));
    
            var locationIntersectionTypeCodeParameter = locationIntersectionTypeCode != null ?
                new ObjectParameter("locationIntersectionTypeCode", locationIntersectionTypeCode) :
                new ObjectParameter("locationIntersectionTypeCode", typeof(string));
    
            var locationIntersectionTypeDescriptionParameter = locationIntersectionTypeDescription != null ?
                new ObjectParameter("locationIntersectionTypeDescription", locationIntersectionTypeDescription) :
                new ObjectParameter("locationIntersectionTypeDescription", typeof(string));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var geoLEOCodeParameter = geoLEOCode != null ?
                new ObjectParameter("GeoLEOCode", geoLEOCode) :
                new ObjectParameter("GeoLEOCode", typeof(string));
    
            var geoLEODivisionParameter = geoLEODivision != null ?
                new ObjectParameter("GeoLEODivision", geoLEODivision) :
                new ObjectParameter("GeoLEODivision", typeof(string));
    
            var geoLEODistrictParameter = geoLEODistrict != null ?
                new ObjectParameter("GeoLEODistrict", geoLEODistrict) :
                new ObjectParameter("GeoLEODistrict", typeof(string));
    
            var geoLEOSectorParameter = geoLEOSector != null ?
                new ObjectParameter("GeoLEOSector", geoLEOSector) :
                new ObjectParameter("GeoLEOSector", typeof(string));
    
            var geoLEOBeatParameter = geoLEOBeat != null ?
                new ObjectParameter("GeoLEOBeat", geoLEOBeat) :
                new ObjectParameter("GeoLEOBeat", typeof(string));
    
            var geoLEODescriptionParameter = geoLEODescription != null ?
                new ObjectParameter("GeoLEODescription", geoLEODescription) :
                new ObjectParameter("GeoLEODescription", typeof(string));
    
            var geoLocationSubDivisionStateParameter = geoLocationSubDivisionState != null ?
                new ObjectParameter("GeoLocationSubDivisionState", geoLocationSubDivisionState) :
                new ObjectParameter("GeoLocationSubDivisionState", typeof(string));
    
            var geoLocationSubDivisionCountyParameter = geoLocationSubDivisionCounty != null ?
                new ObjectParameter("GeoLocationSubDivisionCounty", geoLocationSubDivisionCounty) :
                new ObjectParameter("GeoLocationSubDivisionCounty", typeof(string));
    
            var geoLocationSubDivisionCityParameter = geoLocationSubDivisionCity != null ?
                new ObjectParameter("GeoLocationSubDivisionCity", geoLocationSubDivisionCity) :
                new ObjectParameter("GeoLocationSubDivisionCity", typeof(string));
    
            var geoLocationSubDivisionSubDivisionParameter = geoLocationSubDivisionSubDivision != null ?
                new ObjectParameter("GeoLocationSubDivisionSubDivision", geoLocationSubDivisionSubDivision) :
                new ObjectParameter("GeoLocationSubDivisionSubDivision", typeof(string));
    
            var geoCountryCodeParameter = geoCountryCode != null ?
                new ObjectParameter("GeoCountryCode", geoCountryCode) :
                new ObjectParameter("GeoCountryCode", typeof(string));
    
            var geoCountryCountryNameParameter = geoCountryCountryName != null ?
                new ObjectParameter("GeoCountryCountryName", geoCountryCountryName) :
                new ObjectParameter("GeoCountryCountryName", typeof(string));
    
            var geoCityCodeParameter = geoCityCode != null ?
                new ObjectParameter("GeoCityCode", geoCityCode) :
                new ObjectParameter("GeoCityCode", typeof(string));
    
            var geoCityCityNameParameter = geoCityCityName != null ?
                new ObjectParameter("GeoCityCityName", geoCityCityName) :
                new ObjectParameter("GeoCityCityName", typeof(string));
    
            var geoCityStateNameParameter = geoCityStateName != null ?
                new ObjectParameter("GeoCityStateName", geoCityStateName) :
                new ObjectParameter("GeoCityStateName", typeof(string));
    
            var geoCityCountyNameParameter = geoCityCountyName != null ?
                new ObjectParameter("GeoCityCountyName", geoCityCountyName) :
                new ObjectParameter("GeoCityCountyName", typeof(string));
    
            var geoCountyCodeParameter = geoCountyCode != null ?
                new ObjectParameter("GeoCountyCode", geoCountyCode) :
                new ObjectParameter("GeoCountyCode", typeof(string));
    
            var geoCountyCountyNameParameter = geoCountyCountyName != null ?
                new ObjectParameter("GeoCountyCountyName", geoCountyCountyName) :
                new ObjectParameter("GeoCountyCountyName", typeof(string));
    
            var geoCountyStateNameParameter = geoCountyStateName != null ?
                new ObjectParameter("GeoCountyStateName", geoCountyStateName) :
                new ObjectParameter("GeoCountyStateName", typeof(string));
    
            var geoZipCodeParameter = geoZipCode != null ?
                new ObjectParameter("GeoZipCode", geoZipCode) :
                new ObjectParameter("GeoZipCode", typeof(string));
    
            var geoZipZipCodeParameter = geoZipZipCode != null ?
                new ObjectParameter("GeoZipZipCode", geoZipZipCode) :
                new ObjectParameter("GeoZipZipCode", typeof(string));
    
            var geoStateCodeParameter = geoStateCode != null ?
                new ObjectParameter("GeoStateCode", geoStateCode) :
                new ObjectParameter("GeoStateCode", typeof(string));
    
            var geoStateStateNameParameter = geoStateStateName != null ?
                new ObjectParameter("GeoStateStateName", geoStateStateName) :
                new ObjectParameter("GeoStateStateName", typeof(string));
    
            var geoCensusTractCodeParameter = geoCensusTractCode != null ?
                new ObjectParameter("GeoCensusTractCode", geoCensusTractCode) :
                new ObjectParameter("GeoCensusTractCode", typeof(string));
    
            var geoCensusTractDescriptionParameter = geoCensusTractDescription != null ?
                new ObjectParameter("GeoCensusTractDescription", geoCensusTractDescription) :
                new ObjectParameter("GeoCensusTractDescription", typeof(string));
    
            var locationStreetCategoryCodeParameter = locationStreetCategoryCode != null ?
                new ObjectParameter("LocationStreetCategoryCode", locationStreetCategoryCode) :
                new ObjectParameter("LocationStreetCategoryCode", typeof(string));
    
            var locationStreetCategoryDescriptionParameter = locationStreetCategoryDescription != null ?
                new ObjectParameter("LocationStreetCategoryDescription", locationStreetCategoryDescription) :
                new ObjectParameter("LocationStreetCategoryDescription", typeof(string));
    
            var locationStreetDirectionPrefixCodeParameter = locationStreetDirectionPrefixCode != null ?
                new ObjectParameter("LocationStreetDirectionPrefixCode", locationStreetDirectionPrefixCode) :
                new ObjectParameter("LocationStreetDirectionPrefixCode", typeof(string));
    
            var locationStreetDirectionPrefixDescriptionParameter = locationStreetDirectionPrefixDescription != null ?
                new ObjectParameter("LocationStreetDirectionPrefixDescription", locationStreetDirectionPrefixDescription) :
                new ObjectParameter("LocationStreetDirectionPrefixDescription", typeof(string));
    
            var locationStreetDirectionSuffixCodeParameter = locationStreetDirectionSuffixCode != null ?
                new ObjectParameter("LocationStreetDirectionSuffixCode", locationStreetDirectionSuffixCode) :
                new ObjectParameter("LocationStreetDirectionSuffixCode", typeof(string));
    
            var locationStreetDirectionSuffixDescriptionParameter = locationStreetDirectionSuffixDescription != null ?
                new ObjectParameter("LocationStreetDirectionSuffixDescription", locationStreetDirectionSuffixDescription) :
                new ObjectParameter("LocationStreetDirectionSuffixDescription", typeof(string));
    
            var streetNumberParameter = streetNumber != null ?
                new ObjectParameter("StreetNumber", streetNumber) :
                new ObjectParameter("StreetNumber", typeof(string));
    
            var streetNameParameter = streetName != null ?
                new ObjectParameter("StreetName", streetName) :
                new ObjectParameter("StreetName", typeof(string));
    
            var streetExtensionParameter = streetExtension != null ?
                new ObjectParameter("StreetExtension", streetExtension) :
                new ObjectParameter("StreetExtension", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var postalCodeExtensionParameter = postalCodeExtension != null ?
                new ObjectParameter("PostalCodeExtension", postalCodeExtension) :
                new ObjectParameter("PostalCodeExtension", typeof(string));
    
            var crossStreetParameter = crossStreet != null ?
                new ObjectParameter("CrossStreet", crossStreet) :
                new ObjectParameter("CrossStreet", typeof(string));
    
            var highwayPositionParameter = highwayPosition != null ?
                new ObjectParameter("HighwayPosition", highwayPosition) :
                new ObjectParameter("HighwayPosition", typeof(string));
    
            var geoPointParameter = geoPoint != null ?
                new ObjectParameter("GeoPoint", geoPoint) :
                new ObjectParameter("GeoPoint", typeof(System.Data.Entity.Spatial.DbGeometry));
    
            var boundryParameter = boundry != null ?
                new ObjectParameter("Boundry", boundry) :
                new ObjectParameter("Boundry", typeof(System.Data.Entity.Spatial.DbGeometry));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var postOfficeBoxParameter = postOfficeBox != null ?
                new ObjectParameter("PostOfficeBox", postOfficeBox) :
                new ObjectParameter("PostOfficeBox", typeof(string));
    
            var altitudeAGLParameter = altitudeAGL.HasValue ?
                new ObjectParameter("AltitudeAGL", altitudeAGL) :
                new ObjectParameter("AltitudeAGL", typeof(double));
    
            var altitudeMSLParameter = altitudeMSL.HasValue ?
                new ObjectParameter("AltitudeMSL", altitudeMSL) :
                new ObjectParameter("AltitudeMSL", typeof(double));
    
            var orgAddress1Parameter = orgAddress1 != null ?
                new ObjectParameter("OrgAddress1", orgAddress1) :
                new ObjectParameter("OrgAddress1", typeof(string));
    
            var orgAddress2Parameter = orgAddress2 != null ?
                new ObjectParameter("OrgAddress2", orgAddress2) :
                new ObjectParameter("OrgAddress2", typeof(string));
    
            var orgAddress3Parameter = orgAddress3 != null ?
                new ObjectParameter("OrgAddress3", orgAddress3) :
                new ObjectParameter("OrgAddress3", typeof(string));
    
            var orgStateCodeParameter = orgStateCode != null ?
                new ObjectParameter("OrgStateCode", orgStateCode) :
                new ObjectParameter("OrgStateCode", typeof(string));
    
            var orgCountryParameter = orgCountry != null ?
                new ObjectParameter("OrgCountry", orgCountry) :
                new ObjectParameter("OrgCountry", typeof(string));
    
            var orgContyParameter = orgConty != null ?
                new ObjectParameter("OrgConty", orgConty) :
                new ObjectParameter("OrgConty", typeof(string));
    
            var orgCityParameter = orgCity != null ?
                new ObjectParameter("OrgCity", orgCity) :
                new ObjectParameter("OrgCity", typeof(string));
    
            var orgZipParameter = orgZip != null ?
                new ObjectParameter("OrgZip", orgZip) :
                new ObjectParameter("OrgZip", typeof(string));
    
            var orgLatParameter = orgLat != null ?
                new ObjectParameter("OrgLat", orgLat) :
                new ObjectParameter("OrgLat", typeof(string));
    
            var orgLongParameter = orgLong != null ?
                new ObjectParameter("OrgLong", orgLong) :
                new ObjectParameter("OrgLong", typeof(string));
    
            var orgLeoProcessedParameter = orgLeoProcessed.HasValue ?
                new ObjectParameter("OrgLeoProcessed", orgLeoProcessed) :
                new ObjectParameter("OrgLeoProcessed", typeof(bool));
    
            var orgSubProcessedParameter = orgSubProcessed.HasValue ?
                new ObjectParameter("OrgSubProcessed", orgSubProcessed) :
                new ObjectParameter("OrgSubProcessed", typeof(bool));
    
            var orgLocProcessedParameter = orgLocProcessed.HasValue ?
                new ObjectParameter("OrgLocProcessed", orgLocProcessed) :
                new ObjectParameter("OrgLocProcessed", typeof(bool));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateLocationEntity", locationIdParameter, originalIdentParameter, sourceNameParameter, locationCategoryCodeParameter, locationCategoryDescriptionParameter, locationDatumCodeParameter, locationDatumDescriptionParameter, locationIntersectionTypeCodeParameter, locationIntersectionTypeDescriptionParameter, locationNameParameter, descriptionParameter, geoLEOCodeParameter, geoLEODivisionParameter, geoLEODistrictParameter, geoLEOSectorParameter, geoLEOBeatParameter, geoLEODescriptionParameter, geoLocationSubDivisionStateParameter, geoLocationSubDivisionCountyParameter, geoLocationSubDivisionCityParameter, geoLocationSubDivisionSubDivisionParameter, geoCountryCodeParameter, geoCountryCountryNameParameter, geoCityCodeParameter, geoCityCityNameParameter, geoCityStateNameParameter, geoCityCountyNameParameter, geoCountyCodeParameter, geoCountyCountyNameParameter, geoCountyStateNameParameter, geoZipCodeParameter, geoZipZipCodeParameter, geoStateCodeParameter, geoStateStateNameParameter, geoCensusTractCodeParameter, geoCensusTractDescriptionParameter, locationStreetCategoryCodeParameter, locationStreetCategoryDescriptionParameter, locationStreetDirectionPrefixCodeParameter, locationStreetDirectionPrefixDescriptionParameter, locationStreetDirectionSuffixCodeParameter, locationStreetDirectionSuffixDescriptionParameter, streetNumberParameter, streetNameParameter, streetExtensionParameter, address1Parameter, address2Parameter, address3Parameter, postalCodeParameter, postalCodeExtensionParameter, crossStreetParameter, highwayPositionParameter, geoPointParameter, boundryParameter, unitParameter, floorParameter, postOfficeBoxParameter, altitudeAGLParameter, altitudeMSLParameter, orgAddress1Parameter, orgAddress2Parameter, orgAddress3Parameter, orgStateCodeParameter, orgCountryParameter, orgContyParameter, orgCityParameter, orgZipParameter, orgLatParameter, orgLongParameter, orgLeoProcessedParameter, orgSubProcessedParameter, orgLocProcessedParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual int usp_UpdateOrganizationEntity(Nullable<long> organizationId, string originalIdent, string sourceName, string organizationCategoryCode, string organizationCategoryDescription, string organizationStatusCode, string organizationStatusDescription, string name, string doingBusinessAs, string description, string abbreviationText, string iMONumber, Nullable<System.DateTime> establishedDateTime, Nullable<System.DateTime> terminationDateTime, Nullable<bool> incorporatedIndicator, string rowStatusCode, string rowStatusDescription)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var organizationCategoryCodeParameter = organizationCategoryCode != null ?
                new ObjectParameter("OrganizationCategoryCode", organizationCategoryCode) :
                new ObjectParameter("OrganizationCategoryCode", typeof(string));
    
            var organizationCategoryDescriptionParameter = organizationCategoryDescription != null ?
                new ObjectParameter("OrganizationCategoryDescription", organizationCategoryDescription) :
                new ObjectParameter("OrganizationCategoryDescription", typeof(string));
    
            var organizationStatusCodeParameter = organizationStatusCode != null ?
                new ObjectParameter("OrganizationStatusCode", organizationStatusCode) :
                new ObjectParameter("OrganizationStatusCode", typeof(string));
    
            var organizationStatusDescriptionParameter = organizationStatusDescription != null ?
                new ObjectParameter("OrganizationStatusDescription", organizationStatusDescription) :
                new ObjectParameter("OrganizationStatusDescription", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var doingBusinessAsParameter = doingBusinessAs != null ?
                new ObjectParameter("DoingBusinessAs", doingBusinessAs) :
                new ObjectParameter("DoingBusinessAs", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var abbreviationTextParameter = abbreviationText != null ?
                new ObjectParameter("AbbreviationText", abbreviationText) :
                new ObjectParameter("AbbreviationText", typeof(string));
    
            var iMONumberParameter = iMONumber != null ?
                new ObjectParameter("IMONumber", iMONumber) :
                new ObjectParameter("IMONumber", typeof(string));
    
            var establishedDateTimeParameter = establishedDateTime.HasValue ?
                new ObjectParameter("EstablishedDateTime", establishedDateTime) :
                new ObjectParameter("EstablishedDateTime", typeof(System.DateTime));
    
            var terminationDateTimeParameter = terminationDateTime.HasValue ?
                new ObjectParameter("TerminationDateTime", terminationDateTime) :
                new ObjectParameter("TerminationDateTime", typeof(System.DateTime));
    
            var incorporatedIndicatorParameter = incorporatedIndicator.HasValue ?
                new ObjectParameter("IncorporatedIndicator", incorporatedIndicator) :
                new ObjectParameter("IncorporatedIndicator", typeof(bool));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateOrganizationEntity", organizationIdParameter, originalIdentParameter, sourceNameParameter, organizationCategoryCodeParameter, organizationCategoryDescriptionParameter, organizationStatusCodeParameter, organizationStatusDescriptionParameter, nameParameter, doingBusinessAsParameter, descriptionParameter, abbreviationTextParameter, iMONumberParameter, establishedDateTimeParameter, terminationDateTimeParameter, incorporatedIndicatorParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual int usp_UpdatePersonEntity(Nullable<long> personId, string description, string originalIdent, string sourceName, string personStatusCode, string personStatusDescription, string firstName, string middleName, string lastName, string moniker, string suffix, string prefix, Nullable<int> personCategoryId, string personGenderCode, string personGenderDescription, string rowStatusCode, string rowStatusDescription)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var personStatusCodeParameter = personStatusCode != null ?
                new ObjectParameter("PersonStatusCode", personStatusCode) :
                new ObjectParameter("PersonStatusCode", typeof(string));
    
            var personStatusDescriptionParameter = personStatusDescription != null ?
                new ObjectParameter("PersonStatusDescription", personStatusDescription) :
                new ObjectParameter("PersonStatusDescription", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var monikerParameter = moniker != null ?
                new ObjectParameter("Moniker", moniker) :
                new ObjectParameter("Moniker", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("Suffix", suffix) :
                new ObjectParameter("Suffix", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var personCategoryIdParameter = personCategoryId.HasValue ?
                new ObjectParameter("PersonCategoryId", personCategoryId) :
                new ObjectParameter("PersonCategoryId", typeof(int));
    
            var personGenderCodeParameter = personGenderCode != null ?
                new ObjectParameter("PersonGenderCode", personGenderCode) :
                new ObjectParameter("PersonGenderCode", typeof(string));
    
            var personGenderDescriptionParameter = personGenderDescription != null ?
                new ObjectParameter("PersonGenderDescription", personGenderDescription) :
                new ObjectParameter("PersonGenderDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdatePersonEntity", personIdParameter, descriptionParameter, originalIdentParameter, sourceNameParameter, personStatusCodeParameter, personStatusDescriptionParameter, firstNameParameter, middleNameParameter, lastNameParameter, monikerParameter, suffixParameter, prefixParameter, personCategoryIdParameter, personGenderCodeParameter, personGenderDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual int usp_UpdateServiceCallDriverEntity(Nullable<long> personId, string description, string originalIdent, string sourceName, string personStatusCode, string personStatusDescription, string firstName, string middleName, string lastName, string moniker, string suffix, string prefix, Nullable<int> personCategoryId, string personGenderCode, string personGenderDescription, string rowStatusCode, string rowStatusDescription, string driverNationalityCode, string driverNationalityDescription, string driverLicenceSourceCode, string driverLicenceSourceDescription, string driverLicenceTypeCode, string driverLicenceTypeDescription)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var personStatusCodeParameter = personStatusCode != null ?
                new ObjectParameter("PersonStatusCode", personStatusCode) :
                new ObjectParameter("PersonStatusCode", typeof(string));
    
            var personStatusDescriptionParameter = personStatusDescription != null ?
                new ObjectParameter("PersonStatusDescription", personStatusDescription) :
                new ObjectParameter("PersonStatusDescription", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var monikerParameter = moniker != null ?
                new ObjectParameter("Moniker", moniker) :
                new ObjectParameter("Moniker", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("Suffix", suffix) :
                new ObjectParameter("Suffix", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var personCategoryIdParameter = personCategoryId.HasValue ?
                new ObjectParameter("PersonCategoryId", personCategoryId) :
                new ObjectParameter("PersonCategoryId", typeof(int));
    
            var personGenderCodeParameter = personGenderCode != null ?
                new ObjectParameter("PersonGenderCode", personGenderCode) :
                new ObjectParameter("PersonGenderCode", typeof(string));
    
            var personGenderDescriptionParameter = personGenderDescription != null ?
                new ObjectParameter("PersonGenderDescription", personGenderDescription) :
                new ObjectParameter("PersonGenderDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var driverNationalityCodeParameter = driverNationalityCode != null ?
                new ObjectParameter("DriverNationalityCode", driverNationalityCode) :
                new ObjectParameter("DriverNationalityCode", typeof(string));
    
            var driverNationalityDescriptionParameter = driverNationalityDescription != null ?
                new ObjectParameter("DriverNationalityDescription", driverNationalityDescription) :
                new ObjectParameter("DriverNationalityDescription", typeof(string));
    
            var driverLicenceSourceCodeParameter = driverLicenceSourceCode != null ?
                new ObjectParameter("DriverLicenceSourceCode", driverLicenceSourceCode) :
                new ObjectParameter("DriverLicenceSourceCode", typeof(string));
    
            var driverLicenceSourceDescriptionParameter = driverLicenceSourceDescription != null ?
                new ObjectParameter("DriverLicenceSourceDescription", driverLicenceSourceDescription) :
                new ObjectParameter("DriverLicenceSourceDescription", typeof(string));
    
            var driverLicenceTypeCodeParameter = driverLicenceTypeCode != null ?
                new ObjectParameter("DriverLicenceTypeCode", driverLicenceTypeCode) :
                new ObjectParameter("DriverLicenceTypeCode", typeof(string));
    
            var driverLicenceTypeDescriptionParameter = driverLicenceTypeDescription != null ?
                new ObjectParameter("DriverLicenceTypeDescription", driverLicenceTypeDescription) :
                new ObjectParameter("DriverLicenceTypeDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateServiceCallDriverEntity", personIdParameter, descriptionParameter, originalIdentParameter, sourceNameParameter, personStatusCodeParameter, personStatusDescriptionParameter, firstNameParameter, middleNameParameter, lastNameParameter, monikerParameter, suffixParameter, prefixParameter, personCategoryIdParameter, personGenderCodeParameter, personGenderDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, driverNationalityCodeParameter, driverNationalityDescriptionParameter, driverLicenceSourceCodeParameter, driverLicenceSourceDescriptionParameter, driverLicenceTypeCodeParameter, driverLicenceTypeDescriptionParameter);
        }
    
        public virtual int usp_UpdateServiceCallEntity(Nullable<long> activityId, string originalIdent, string sourceName, string activityCategoryCode, string activityCategoryDescription, string activityReasonCode, string activityReasonDescription, string statusCode, string statusDescription, string importanceHighLowCode, string importanceHighLowDescription, string highLowCode, string highLowDescription, string activityName, string activityDescription, Nullable<System.DateTime> activityStartDate, Nullable<System.DateTime> activityEndDate, Nullable<System.DateTime> activityDueDate, Nullable<System.DateTime> activityExpirationDate, Nullable<bool> isCompleted, Nullable<System.DateTime> activityDate, string rowStatusCode, string rowStatusDescription, string serviceCallCategoryCode, string serviceCallCategoryDescription, string serviceCallSourceCode, string serviceCallSourceDescription, string serviceCallDispositionCode, string serviceCallDispositionDescription, string serviceCallClearanceCode, string serviceCallClearanceDescription, string serviceCallPriorityCode, string serviceCallPriorityDescription, string serviceClassCode, string serviceClassDescription, string serviceCallStartMechanismCode, string serviceCallStartMechanismDescription, string serviceCallEndMechanismCode, string serviceCallEndMechanismDescription, Nullable<System.DateTime> serviceCallArrivedDate, Nullable<System.DateTime> serviceCallDispatchedDate, Nullable<System.DateTime> serviceCallClearedDate, Nullable<System.DateTime> serviceCallReceivedDate, Nullable<System.DateTime> serviceCallStagedDate, Nullable<System.DateTime> serviceCallInControlDate, Nullable<System.DateTime> serviceCallEnrouteDate, Nullable<bool> hazardCallIndicator, Nullable<bool> isSelfInitiated, Nullable<bool> hasPriorsIndicator, Nullable<bool> outofServiceIndicator, Nullable<int> lanesCount, Nullable<int> slightInjuriesCount, Nullable<int> mediumInjuriesCount, Nullable<int> severeInjuriesCount, Nullable<int> fatalitiesCount, Nullable<int> totalInjuriesFatalities, string crashSeverityCode, string crashSeverityDescription, string lightingConditionCode, string lightingConditionDescription)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var activityCategoryCodeParameter = activityCategoryCode != null ?
                new ObjectParameter("ActivityCategoryCode", activityCategoryCode) :
                new ObjectParameter("ActivityCategoryCode", typeof(string));
    
            var activityCategoryDescriptionParameter = activityCategoryDescription != null ?
                new ObjectParameter("ActivityCategoryDescription", activityCategoryDescription) :
                new ObjectParameter("ActivityCategoryDescription", typeof(string));
    
            var activityReasonCodeParameter = activityReasonCode != null ?
                new ObjectParameter("ActivityReasonCode", activityReasonCode) :
                new ObjectParameter("ActivityReasonCode", typeof(string));
    
            var activityReasonDescriptionParameter = activityReasonDescription != null ?
                new ObjectParameter("ActivityReasonDescription", activityReasonDescription) :
                new ObjectParameter("ActivityReasonDescription", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var statusDescriptionParameter = statusDescription != null ?
                new ObjectParameter("StatusDescription", statusDescription) :
                new ObjectParameter("StatusDescription", typeof(string));
    
            var importanceHighLowCodeParameter = importanceHighLowCode != null ?
                new ObjectParameter("ImportanceHighLowCode", importanceHighLowCode) :
                new ObjectParameter("ImportanceHighLowCode", typeof(string));
    
            var importanceHighLowDescriptionParameter = importanceHighLowDescription != null ?
                new ObjectParameter("ImportanceHighLowDescription", importanceHighLowDescription) :
                new ObjectParameter("ImportanceHighLowDescription", typeof(string));
    
            var highLowCodeParameter = highLowCode != null ?
                new ObjectParameter("HighLowCode", highLowCode) :
                new ObjectParameter("HighLowCode", typeof(string));
    
            var highLowDescriptionParameter = highLowDescription != null ?
                new ObjectParameter("HighLowDescription", highLowDescription) :
                new ObjectParameter("HighLowDescription", typeof(string));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("ActivityName", activityName) :
                new ObjectParameter("ActivityName", typeof(string));
    
            var activityDescriptionParameter = activityDescription != null ?
                new ObjectParameter("ActivityDescription", activityDescription) :
                new ObjectParameter("ActivityDescription", typeof(string));
    
            var activityStartDateParameter = activityStartDate.HasValue ?
                new ObjectParameter("ActivityStartDate", activityStartDate) :
                new ObjectParameter("ActivityStartDate", typeof(System.DateTime));
    
            var activityEndDateParameter = activityEndDate.HasValue ?
                new ObjectParameter("ActivityEndDate", activityEndDate) :
                new ObjectParameter("ActivityEndDate", typeof(System.DateTime));
    
            var activityDueDateParameter = activityDueDate.HasValue ?
                new ObjectParameter("ActivityDueDate", activityDueDate) :
                new ObjectParameter("ActivityDueDate", typeof(System.DateTime));
    
            var activityExpirationDateParameter = activityExpirationDate.HasValue ?
                new ObjectParameter("ActivityExpirationDate", activityExpirationDate) :
                new ObjectParameter("ActivityExpirationDate", typeof(System.DateTime));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("IsCompleted", isCompleted) :
                new ObjectParameter("IsCompleted", typeof(bool));
    
            var activityDateParameter = activityDate.HasValue ?
                new ObjectParameter("ActivityDate", activityDate) :
                new ObjectParameter("ActivityDate", typeof(System.DateTime));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var serviceCallCategoryCodeParameter = serviceCallCategoryCode != null ?
                new ObjectParameter("ServiceCallCategoryCode", serviceCallCategoryCode) :
                new ObjectParameter("ServiceCallCategoryCode", typeof(string));
    
            var serviceCallCategoryDescriptionParameter = serviceCallCategoryDescription != null ?
                new ObjectParameter("ServiceCallCategoryDescription", serviceCallCategoryDescription) :
                new ObjectParameter("ServiceCallCategoryDescription", typeof(string));
    
            var serviceCallSourceCodeParameter = serviceCallSourceCode != null ?
                new ObjectParameter("ServiceCallSourceCode", serviceCallSourceCode) :
                new ObjectParameter("ServiceCallSourceCode", typeof(string));
    
            var serviceCallSourceDescriptionParameter = serviceCallSourceDescription != null ?
                new ObjectParameter("ServiceCallSourceDescription", serviceCallSourceDescription) :
                new ObjectParameter("ServiceCallSourceDescription", typeof(string));
    
            var serviceCallDispositionCodeParameter = serviceCallDispositionCode != null ?
                new ObjectParameter("ServiceCallDispositionCode", serviceCallDispositionCode) :
                new ObjectParameter("ServiceCallDispositionCode", typeof(string));
    
            var serviceCallDispositionDescriptionParameter = serviceCallDispositionDescription != null ?
                new ObjectParameter("ServiceCallDispositionDescription", serviceCallDispositionDescription) :
                new ObjectParameter("ServiceCallDispositionDescription", typeof(string));
    
            var serviceCallClearanceCodeParameter = serviceCallClearanceCode != null ?
                new ObjectParameter("ServiceCallClearanceCode", serviceCallClearanceCode) :
                new ObjectParameter("ServiceCallClearanceCode", typeof(string));
    
            var serviceCallClearanceDescriptionParameter = serviceCallClearanceDescription != null ?
                new ObjectParameter("ServiceCallClearanceDescription", serviceCallClearanceDescription) :
                new ObjectParameter("ServiceCallClearanceDescription", typeof(string));
    
            var serviceCallPriorityCodeParameter = serviceCallPriorityCode != null ?
                new ObjectParameter("ServiceCallPriorityCode", serviceCallPriorityCode) :
                new ObjectParameter("ServiceCallPriorityCode", typeof(string));
    
            var serviceCallPriorityDescriptionParameter = serviceCallPriorityDescription != null ?
                new ObjectParameter("ServiceCallPriorityDescription", serviceCallPriorityDescription) :
                new ObjectParameter("ServiceCallPriorityDescription", typeof(string));
    
            var serviceClassCodeParameter = serviceClassCode != null ?
                new ObjectParameter("ServiceClassCode", serviceClassCode) :
                new ObjectParameter("ServiceClassCode", typeof(string));
    
            var serviceClassDescriptionParameter = serviceClassDescription != null ?
                new ObjectParameter("ServiceClassDescription", serviceClassDescription) :
                new ObjectParameter("ServiceClassDescription", typeof(string));
    
            var serviceCallStartMechanismCodeParameter = serviceCallStartMechanismCode != null ?
                new ObjectParameter("ServiceCallStartMechanismCode", serviceCallStartMechanismCode) :
                new ObjectParameter("ServiceCallStartMechanismCode", typeof(string));
    
            var serviceCallStartMechanismDescriptionParameter = serviceCallStartMechanismDescription != null ?
                new ObjectParameter("ServiceCallStartMechanismDescription", serviceCallStartMechanismDescription) :
                new ObjectParameter("ServiceCallStartMechanismDescription", typeof(string));
    
            var serviceCallEndMechanismCodeParameter = serviceCallEndMechanismCode != null ?
                new ObjectParameter("ServiceCallEndMechanismCode", serviceCallEndMechanismCode) :
                new ObjectParameter("ServiceCallEndMechanismCode", typeof(string));
    
            var serviceCallEndMechanismDescriptionParameter = serviceCallEndMechanismDescription != null ?
                new ObjectParameter("ServiceCallEndMechanismDescription", serviceCallEndMechanismDescription) :
                new ObjectParameter("ServiceCallEndMechanismDescription", typeof(string));
    
            var serviceCallArrivedDateParameter = serviceCallArrivedDate.HasValue ?
                new ObjectParameter("ServiceCallArrivedDate", serviceCallArrivedDate) :
                new ObjectParameter("ServiceCallArrivedDate", typeof(System.DateTime));
    
            var serviceCallDispatchedDateParameter = serviceCallDispatchedDate.HasValue ?
                new ObjectParameter("ServiceCallDispatchedDate", serviceCallDispatchedDate) :
                new ObjectParameter("ServiceCallDispatchedDate", typeof(System.DateTime));
    
            var serviceCallClearedDateParameter = serviceCallClearedDate.HasValue ?
                new ObjectParameter("ServiceCallClearedDate", serviceCallClearedDate) :
                new ObjectParameter("ServiceCallClearedDate", typeof(System.DateTime));
    
            var serviceCallReceivedDateParameter = serviceCallReceivedDate.HasValue ?
                new ObjectParameter("ServiceCallReceivedDate", serviceCallReceivedDate) :
                new ObjectParameter("ServiceCallReceivedDate", typeof(System.DateTime));
    
            var serviceCallStagedDateParameter = serviceCallStagedDate.HasValue ?
                new ObjectParameter("ServiceCallStagedDate", serviceCallStagedDate) :
                new ObjectParameter("ServiceCallStagedDate", typeof(System.DateTime));
    
            var serviceCallInControlDateParameter = serviceCallInControlDate.HasValue ?
                new ObjectParameter("ServiceCallInControlDate", serviceCallInControlDate) :
                new ObjectParameter("ServiceCallInControlDate", typeof(System.DateTime));
    
            var serviceCallEnrouteDateParameter = serviceCallEnrouteDate.HasValue ?
                new ObjectParameter("ServiceCallEnrouteDate", serviceCallEnrouteDate) :
                new ObjectParameter("ServiceCallEnrouteDate", typeof(System.DateTime));
    
            var hazardCallIndicatorParameter = hazardCallIndicator.HasValue ?
                new ObjectParameter("HazardCallIndicator", hazardCallIndicator) :
                new ObjectParameter("HazardCallIndicator", typeof(bool));
    
            var isSelfInitiatedParameter = isSelfInitiated.HasValue ?
                new ObjectParameter("IsSelfInitiated", isSelfInitiated) :
                new ObjectParameter("IsSelfInitiated", typeof(bool));
    
            var hasPriorsIndicatorParameter = hasPriorsIndicator.HasValue ?
                new ObjectParameter("HasPriorsIndicator", hasPriorsIndicator) :
                new ObjectParameter("HasPriorsIndicator", typeof(bool));
    
            var outofServiceIndicatorParameter = outofServiceIndicator.HasValue ?
                new ObjectParameter("OutofServiceIndicator", outofServiceIndicator) :
                new ObjectParameter("OutofServiceIndicator", typeof(bool));
    
            var lanesCountParameter = lanesCount.HasValue ?
                new ObjectParameter("LanesCount", lanesCount) :
                new ObjectParameter("LanesCount", typeof(int));
    
            var slightInjuriesCountParameter = slightInjuriesCount.HasValue ?
                new ObjectParameter("SlightInjuriesCount", slightInjuriesCount) :
                new ObjectParameter("SlightInjuriesCount", typeof(int));
    
            var mediumInjuriesCountParameter = mediumInjuriesCount.HasValue ?
                new ObjectParameter("MediumInjuriesCount", mediumInjuriesCount) :
                new ObjectParameter("MediumInjuriesCount", typeof(int));
    
            var severeInjuriesCountParameter = severeInjuriesCount.HasValue ?
                new ObjectParameter("SevereInjuriesCount", severeInjuriesCount) :
                new ObjectParameter("SevereInjuriesCount", typeof(int));
    
            var fatalitiesCountParameter = fatalitiesCount.HasValue ?
                new ObjectParameter("FatalitiesCount", fatalitiesCount) :
                new ObjectParameter("FatalitiesCount", typeof(int));
    
            var totalInjuriesFatalitiesParameter = totalInjuriesFatalities.HasValue ?
                new ObjectParameter("TotalInjuriesFatalities", totalInjuriesFatalities) :
                new ObjectParameter("TotalInjuriesFatalities", typeof(int));
    
            var crashSeverityCodeParameter = crashSeverityCode != null ?
                new ObjectParameter("CrashSeverityCode", crashSeverityCode) :
                new ObjectParameter("CrashSeverityCode", typeof(string));
    
            var crashSeverityDescriptionParameter = crashSeverityDescription != null ?
                new ObjectParameter("CrashSeverityDescription", crashSeverityDescription) :
                new ObjectParameter("CrashSeverityDescription", typeof(string));
    
            var lightingConditionCodeParameter = lightingConditionCode != null ?
                new ObjectParameter("LightingConditionCode", lightingConditionCode) :
                new ObjectParameter("LightingConditionCode", typeof(string));
    
            var lightingConditionDescriptionParameter = lightingConditionDescription != null ?
                new ObjectParameter("LightingConditionDescription", lightingConditionDescription) :
                new ObjectParameter("LightingConditionDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateServiceCallEntity", activityIdParameter, originalIdentParameter, sourceNameParameter, activityCategoryCodeParameter, activityCategoryDescriptionParameter, activityReasonCodeParameter, activityReasonDescriptionParameter, statusCodeParameter, statusDescriptionParameter, importanceHighLowCodeParameter, importanceHighLowDescriptionParameter, highLowCodeParameter, highLowDescriptionParameter, activityNameParameter, activityDescriptionParameter, activityStartDateParameter, activityEndDateParameter, activityDueDateParameter, activityExpirationDateParameter, isCompletedParameter, activityDateParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, serviceCallCategoryCodeParameter, serviceCallCategoryDescriptionParameter, serviceCallSourceCodeParameter, serviceCallSourceDescriptionParameter, serviceCallDispositionCodeParameter, serviceCallDispositionDescriptionParameter, serviceCallClearanceCodeParameter, serviceCallClearanceDescriptionParameter, serviceCallPriorityCodeParameter, serviceCallPriorityDescriptionParameter, serviceClassCodeParameter, serviceClassDescriptionParameter, serviceCallStartMechanismCodeParameter, serviceCallStartMechanismDescriptionParameter, serviceCallEndMechanismCodeParameter, serviceCallEndMechanismDescriptionParameter, serviceCallArrivedDateParameter, serviceCallDispatchedDateParameter, serviceCallClearedDateParameter, serviceCallReceivedDateParameter, serviceCallStagedDateParameter, serviceCallInControlDateParameter, serviceCallEnrouteDateParameter, hazardCallIndicatorParameter, isSelfInitiatedParameter, hasPriorsIndicatorParameter, outofServiceIndicatorParameter, lanesCountParameter, slightInjuriesCountParameter, mediumInjuriesCountParameter, severeInjuriesCountParameter, fatalitiesCountParameter, totalInjuriesFatalitiesParameter, crashSeverityCodeParameter, crashSeverityDescriptionParameter, lightingConditionCodeParameter, lightingConditionDescriptionParameter);
        }
    
        public virtual int usp_UpdateServiceCallInsuranceEntity(Nullable<long> organizationId, string originalIdent, string sourceName, string organizationCategoryCode, string organizationCategoryDescription, string organizationStatusCode, string organizationStatusDescription, string name, string doingBusinessAs, string description, string abbreviationText, string iMONumber, Nullable<System.DateTime> establishedDateTime, Nullable<System.DateTime> terminationDateTime, Nullable<bool> incorporatedIndicator, string rowStatusCode, string rowStatusDescription, string insuranceTypeCode, string insuranceTypeDescription)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var organizationCategoryCodeParameter = organizationCategoryCode != null ?
                new ObjectParameter("OrganizationCategoryCode", organizationCategoryCode) :
                new ObjectParameter("OrganizationCategoryCode", typeof(string));
    
            var organizationCategoryDescriptionParameter = organizationCategoryDescription != null ?
                new ObjectParameter("OrganizationCategoryDescription", organizationCategoryDescription) :
                new ObjectParameter("OrganizationCategoryDescription", typeof(string));
    
            var organizationStatusCodeParameter = organizationStatusCode != null ?
                new ObjectParameter("OrganizationStatusCode", organizationStatusCode) :
                new ObjectParameter("OrganizationStatusCode", typeof(string));
    
            var organizationStatusDescriptionParameter = organizationStatusDescription != null ?
                new ObjectParameter("OrganizationStatusDescription", organizationStatusDescription) :
                new ObjectParameter("OrganizationStatusDescription", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var doingBusinessAsParameter = doingBusinessAs != null ?
                new ObjectParameter("DoingBusinessAs", doingBusinessAs) :
                new ObjectParameter("DoingBusinessAs", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var abbreviationTextParameter = abbreviationText != null ?
                new ObjectParameter("AbbreviationText", abbreviationText) :
                new ObjectParameter("AbbreviationText", typeof(string));
    
            var iMONumberParameter = iMONumber != null ?
                new ObjectParameter("IMONumber", iMONumber) :
                new ObjectParameter("IMONumber", typeof(string));
    
            var establishedDateTimeParameter = establishedDateTime.HasValue ?
                new ObjectParameter("EstablishedDateTime", establishedDateTime) :
                new ObjectParameter("EstablishedDateTime", typeof(System.DateTime));
    
            var terminationDateTimeParameter = terminationDateTime.HasValue ?
                new ObjectParameter("TerminationDateTime", terminationDateTime) :
                new ObjectParameter("TerminationDateTime", typeof(System.DateTime));
    
            var incorporatedIndicatorParameter = incorporatedIndicator.HasValue ?
                new ObjectParameter("IncorporatedIndicator", incorporatedIndicator) :
                new ObjectParameter("IncorporatedIndicator", typeof(bool));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var insuranceTypeCodeParameter = insuranceTypeCode != null ?
                new ObjectParameter("InsuranceTypeCode", insuranceTypeCode) :
                new ObjectParameter("InsuranceTypeCode", typeof(string));
    
            var insuranceTypeDescriptionParameter = insuranceTypeDescription != null ?
                new ObjectParameter("InsuranceTypeDescription", insuranceTypeDescription) :
                new ObjectParameter("InsuranceTypeDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateServiceCallInsuranceEntity", organizationIdParameter, originalIdentParameter, sourceNameParameter, organizationCategoryCodeParameter, organizationCategoryDescriptionParameter, organizationStatusCodeParameter, organizationStatusDescriptionParameter, nameParameter, doingBusinessAsParameter, descriptionParameter, abbreviationTextParameter, iMONumberParameter, establishedDateTimeParameter, terminationDateTimeParameter, incorporatedIndicatorParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, insuranceTypeCodeParameter, insuranceTypeDescriptionParameter);
        }
    
        public virtual int usp_UpdateServiceCallVehicleEntity(Nullable<long> itemId, string originalIdent, string sourceName, string itemCategoryCode, string itemCategoryDescription, string itemStatusCode, string itemStatusDescription, string itemMakeModelCode, string itemMakeModelMake, string itemMakeModelModel, Nullable<int> modelYear, string itemPrimaryColorCode, string itemPrimaryColorDescription, string itemSecondaryColorCode, string itemSecondaryColorDescription, string itemConditionCode, string itemConditionDescription, string itemUsageCode, string itemUsageDescription, string itemName, string description, string serialIdentification, Nullable<double> itemValue, string sizeDescription, Nullable<double> heightMeasure, Nullable<double> lengthMeasure, Nullable<double> widthMeasure, Nullable<double> weightMeasure, string rowStatusCode, string rowStatusDescription, string vehicleLiabilityCode, string vehicleLiabilityDescription, string vehicleCollisionPointCode, string vehicleCollisionPointDescription, string vehicleStatusCode, string vehicleStatusDescription, string vehicleCountryCode, string vehicleCountryDescription)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(long));
    
            var originalIdentParameter = originalIdent != null ?
                new ObjectParameter("OriginalIdent", originalIdent) :
                new ObjectParameter("OriginalIdent", typeof(string));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var itemCategoryCodeParameter = itemCategoryCode != null ?
                new ObjectParameter("ItemCategoryCode", itemCategoryCode) :
                new ObjectParameter("ItemCategoryCode", typeof(string));
    
            var itemCategoryDescriptionParameter = itemCategoryDescription != null ?
                new ObjectParameter("ItemCategoryDescription", itemCategoryDescription) :
                new ObjectParameter("ItemCategoryDescription", typeof(string));
    
            var itemStatusCodeParameter = itemStatusCode != null ?
                new ObjectParameter("ItemStatusCode", itemStatusCode) :
                new ObjectParameter("ItemStatusCode", typeof(string));
    
            var itemStatusDescriptionParameter = itemStatusDescription != null ?
                new ObjectParameter("ItemStatusDescription", itemStatusDescription) :
                new ObjectParameter("ItemStatusDescription", typeof(string));
    
            var itemMakeModelCodeParameter = itemMakeModelCode != null ?
                new ObjectParameter("ItemMakeModelCode", itemMakeModelCode) :
                new ObjectParameter("ItemMakeModelCode", typeof(string));
    
            var itemMakeModelMakeParameter = itemMakeModelMake != null ?
                new ObjectParameter("ItemMakeModelMake", itemMakeModelMake) :
                new ObjectParameter("ItemMakeModelMake", typeof(string));
    
            var itemMakeModelModelParameter = itemMakeModelModel != null ?
                new ObjectParameter("ItemMakeModelModel", itemMakeModelModel) :
                new ObjectParameter("ItemMakeModelModel", typeof(string));
    
            var modelYearParameter = modelYear.HasValue ?
                new ObjectParameter("ModelYear", modelYear) :
                new ObjectParameter("ModelYear", typeof(int));
    
            var itemPrimaryColorCodeParameter = itemPrimaryColorCode != null ?
                new ObjectParameter("ItemPrimaryColorCode", itemPrimaryColorCode) :
                new ObjectParameter("ItemPrimaryColorCode", typeof(string));
    
            var itemPrimaryColorDescriptionParameter = itemPrimaryColorDescription != null ?
                new ObjectParameter("ItemPrimaryColorDescription", itemPrimaryColorDescription) :
                new ObjectParameter("ItemPrimaryColorDescription", typeof(string));
    
            var itemSecondaryColorCodeParameter = itemSecondaryColorCode != null ?
                new ObjectParameter("ItemSecondaryColorCode", itemSecondaryColorCode) :
                new ObjectParameter("ItemSecondaryColorCode", typeof(string));
    
            var itemSecondaryColorDescriptionParameter = itemSecondaryColorDescription != null ?
                new ObjectParameter("ItemSecondaryColorDescription", itemSecondaryColorDescription) :
                new ObjectParameter("ItemSecondaryColorDescription", typeof(string));
    
            var itemConditionCodeParameter = itemConditionCode != null ?
                new ObjectParameter("ItemConditionCode", itemConditionCode) :
                new ObjectParameter("ItemConditionCode", typeof(string));
    
            var itemConditionDescriptionParameter = itemConditionDescription != null ?
                new ObjectParameter("ItemConditionDescription", itemConditionDescription) :
                new ObjectParameter("ItemConditionDescription", typeof(string));
    
            var itemUsageCodeParameter = itemUsageCode != null ?
                new ObjectParameter("ItemUsageCode", itemUsageCode) :
                new ObjectParameter("ItemUsageCode", typeof(string));
    
            var itemUsageDescriptionParameter = itemUsageDescription != null ?
                new ObjectParameter("ItemUsageDescription", itemUsageDescription) :
                new ObjectParameter("ItemUsageDescription", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var serialIdentificationParameter = serialIdentification != null ?
                new ObjectParameter("SerialIdentification", serialIdentification) :
                new ObjectParameter("SerialIdentification", typeof(string));
    
            var itemValueParameter = itemValue.HasValue ?
                new ObjectParameter("ItemValue", itemValue) :
                new ObjectParameter("ItemValue", typeof(double));
    
            var sizeDescriptionParameter = sizeDescription != null ?
                new ObjectParameter("SizeDescription", sizeDescription) :
                new ObjectParameter("SizeDescription", typeof(string));
    
            var heightMeasureParameter = heightMeasure.HasValue ?
                new ObjectParameter("HeightMeasure", heightMeasure) :
                new ObjectParameter("HeightMeasure", typeof(double));
    
            var lengthMeasureParameter = lengthMeasure.HasValue ?
                new ObjectParameter("LengthMeasure", lengthMeasure) :
                new ObjectParameter("LengthMeasure", typeof(double));
    
            var widthMeasureParameter = widthMeasure.HasValue ?
                new ObjectParameter("WidthMeasure", widthMeasure) :
                new ObjectParameter("WidthMeasure", typeof(double));
    
            var weightMeasureParameter = weightMeasure.HasValue ?
                new ObjectParameter("WeightMeasure", weightMeasure) :
                new ObjectParameter("WeightMeasure", typeof(double));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            var vehicleLiabilityCodeParameter = vehicleLiabilityCode != null ?
                new ObjectParameter("VehicleLiabilityCode", vehicleLiabilityCode) :
                new ObjectParameter("VehicleLiabilityCode", typeof(string));
    
            var vehicleLiabilityDescriptionParameter = vehicleLiabilityDescription != null ?
                new ObjectParameter("VehicleLiabilityDescription", vehicleLiabilityDescription) :
                new ObjectParameter("VehicleLiabilityDescription", typeof(string));
    
            var vehicleCollisionPointCodeParameter = vehicleCollisionPointCode != null ?
                new ObjectParameter("VehicleCollisionPointCode", vehicleCollisionPointCode) :
                new ObjectParameter("VehicleCollisionPointCode", typeof(string));
    
            var vehicleCollisionPointDescriptionParameter = vehicleCollisionPointDescription != null ?
                new ObjectParameter("VehicleCollisionPointDescription", vehicleCollisionPointDescription) :
                new ObjectParameter("VehicleCollisionPointDescription", typeof(string));
    
            var vehicleStatusCodeParameter = vehicleStatusCode != null ?
                new ObjectParameter("VehicleStatusCode", vehicleStatusCode) :
                new ObjectParameter("VehicleStatusCode", typeof(string));
    
            var vehicleStatusDescriptionParameter = vehicleStatusDescription != null ?
                new ObjectParameter("VehicleStatusDescription", vehicleStatusDescription) :
                new ObjectParameter("VehicleStatusDescription", typeof(string));
    
            var vehicleCountryCodeParameter = vehicleCountryCode != null ?
                new ObjectParameter("VehicleCountryCode", vehicleCountryCode) :
                new ObjectParameter("VehicleCountryCode", typeof(string));
    
            var vehicleCountryDescriptionParameter = vehicleCountryDescription != null ?
                new ObjectParameter("VehicleCountryDescription", vehicleCountryDescription) :
                new ObjectParameter("VehicleCountryDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateServiceCallVehicleEntity", itemIdParameter, originalIdentParameter, sourceNameParameter, itemCategoryCodeParameter, itemCategoryDescriptionParameter, itemStatusCodeParameter, itemStatusDescriptionParameter, itemMakeModelCodeParameter, itemMakeModelMakeParameter, itemMakeModelModelParameter, modelYearParameter, itemPrimaryColorCodeParameter, itemPrimaryColorDescriptionParameter, itemSecondaryColorCodeParameter, itemSecondaryColorDescriptionParameter, itemConditionCodeParameter, itemConditionDescriptionParameter, itemUsageCodeParameter, itemUsageDescriptionParameter, itemNameParameter, descriptionParameter, serialIdentificationParameter, itemValueParameter, sizeDescriptionParameter, heightMeasureParameter, lengthMeasureParameter, widthMeasureParameter, weightMeasureParameter, rowStatusCodeParameter, rowStatusDescriptionParameter, vehicleLiabilityCodeParameter, vehicleLiabilityDescriptionParameter, vehicleCollisionPointCodeParameter, vehicleCollisionPointDescriptionParameter, vehicleStatusCodeParameter, vehicleStatusDescriptionParameter, vehicleCountryCodeParameter, vehicleCountryDescriptionParameter);
        }
    
        public virtual int usp_UpdateActivityItemContainerData(Nullable<long> activityItemId, string activityItemDescription, Nullable<long> activityId, Nullable<long> itemId, string sourceName, string itemInvolvementCode, string itemInvolvementDescription, string rowStatusCode, string rowStatusDescription)
        {
            var activityItemIdParameter = activityItemId.HasValue ?
                new ObjectParameter("ActivityItemId", activityItemId) :
                new ObjectParameter("ActivityItemId", typeof(long));
    
            var activityItemDescriptionParameter = activityItemDescription != null ?
                new ObjectParameter("ActivityItemDescription", activityItemDescription) :
                new ObjectParameter("ActivityItemDescription", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(long));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var itemInvolvementCodeParameter = itemInvolvementCode != null ?
                new ObjectParameter("ItemInvolvementCode", itemInvolvementCode) :
                new ObjectParameter("ItemInvolvementCode", typeof(string));
    
            var itemInvolvementDescriptionParameter = itemInvolvementDescription != null ?
                new ObjectParameter("ItemInvolvementDescription", itemInvolvementDescription) :
                new ObjectParameter("ItemInvolvementDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateActivityItemContainerData", activityItemIdParameter, activityItemDescriptionParameter, activityIdParameter, itemIdParameter, sourceNameParameter, itemInvolvementCodeParameter, itemInvolvementDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual int usp_UpdateActivityLocationContainerData(Nullable<long> activityLocationId, string activityLocationDescription, Nullable<long> activityId, Nullable<long> locationId, string sourceName, string locationInvolvementCode, string locationInvolvementDescription, string rowStatusCode, string rowStatusDescription)
        {
            var activityLocationIdParameter = activityLocationId.HasValue ?
                new ObjectParameter("ActivityLocationId", activityLocationId) :
                new ObjectParameter("ActivityLocationId", typeof(long));
    
            var activityLocationDescriptionParameter = activityLocationDescription != null ?
                new ObjectParameter("ActivityLocationDescription", activityLocationDescription) :
                new ObjectParameter("ActivityLocationDescription", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(long));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var locationInvolvementCodeParameter = locationInvolvementCode != null ?
                new ObjectParameter("LocationInvolvementCode", locationInvolvementCode) :
                new ObjectParameter("LocationInvolvementCode", typeof(string));
    
            var locationInvolvementDescriptionParameter = locationInvolvementDescription != null ?
                new ObjectParameter("LocationInvolvementDescription", locationInvolvementDescription) :
                new ObjectParameter("LocationInvolvementDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateActivityLocationContainerData", activityLocationIdParameter, activityLocationDescriptionParameter, activityIdParameter, locationIdParameter, sourceNameParameter, locationInvolvementCodeParameter, locationInvolvementDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual int usp_UpdateActivityOrganizationContainerData(Nullable<long> activityOrganizationId, string activityOrganizationDescription, Nullable<long> activityId, Nullable<long> organizationid, string sourceName, string organizationInvolvementCode, string organizationInvolvementDescription, string rowStatusCode, string rowStatusDescription)
        {
            var activityOrganizationIdParameter = activityOrganizationId.HasValue ?
                new ObjectParameter("ActivityOrganizationId", activityOrganizationId) :
                new ObjectParameter("ActivityOrganizationId", typeof(long));
    
            var activityOrganizationDescriptionParameter = activityOrganizationDescription != null ?
                new ObjectParameter("ActivityOrganizationDescription", activityOrganizationDescription) :
                new ObjectParameter("ActivityOrganizationDescription", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var organizationidParameter = organizationid.HasValue ?
                new ObjectParameter("Organizationid", organizationid) :
                new ObjectParameter("Organizationid", typeof(long));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var organizationInvolvementCodeParameter = organizationInvolvementCode != null ?
                new ObjectParameter("OrganizationInvolvementCode", organizationInvolvementCode) :
                new ObjectParameter("OrganizationInvolvementCode", typeof(string));
    
            var organizationInvolvementDescriptionParameter = organizationInvolvementDescription != null ?
                new ObjectParameter("OrganizationInvolvementDescription", organizationInvolvementDescription) :
                new ObjectParameter("OrganizationInvolvementDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateActivityOrganizationContainerData", activityOrganizationIdParameter, activityOrganizationDescriptionParameter, activityIdParameter, organizationidParameter, sourceNameParameter, organizationInvolvementCodeParameter, organizationInvolvementDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual int usp_UpdateActivityPersonContainerData(Nullable<long> activityPersonId, string activityPersonDescription, Nullable<long> personId, Nullable<long> activityId, string sourceName, string personInvolvementCode, string personInvolvementDescription, string rowStatusCode, string rowStatusDescription)
        {
            var activityPersonIdParameter = activityPersonId.HasValue ?
                new ObjectParameter("ActivityPersonId", activityPersonId) :
                new ObjectParameter("ActivityPersonId", typeof(long));
    
            var activityPersonDescriptionParameter = activityPersonDescription != null ?
                new ObjectParameter("ActivityPersonDescription", activityPersonDescription) :
                new ObjectParameter("ActivityPersonDescription", typeof(string));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(long));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(long));
    
            var sourceNameParameter = sourceName != null ?
                new ObjectParameter("SourceName", sourceName) :
                new ObjectParameter("SourceName", typeof(string));
    
            var personInvolvementCodeParameter = personInvolvementCode != null ?
                new ObjectParameter("PersonInvolvementCode", personInvolvementCode) :
                new ObjectParameter("PersonInvolvementCode", typeof(string));
    
            var personInvolvementDescriptionParameter = personInvolvementDescription != null ?
                new ObjectParameter("PersonInvolvementDescription", personInvolvementDescription) :
                new ObjectParameter("PersonInvolvementDescription", typeof(string));
    
            var rowStatusCodeParameter = rowStatusCode != null ?
                new ObjectParameter("RowStatusCode", rowStatusCode) :
                new ObjectParameter("RowStatusCode", typeof(string));
    
            var rowStatusDescriptionParameter = rowStatusDescription != null ?
                new ObjectParameter("RowStatusDescription", rowStatusDescription) :
                new ObjectParameter("RowStatusDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateActivityPersonContainerData", activityPersonIdParameter, activityPersonDescriptionParameter, personIdParameter, activityIdParameter, sourceNameParameter, personInvolvementCodeParameter, personInvolvementDescriptionParameter, rowStatusCodeParameter, rowStatusDescriptionParameter);
        }
    
        public virtual int usp_DeleteActivityPersonData(Nullable<long> activityPersonId)
        {
            var activityPersonIdParameter = activityPersonId.HasValue ?
                new ObjectParameter("ActivityPersonId", activityPersonId) :
                new ObjectParameter("ActivityPersonId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteActivityPersonData", activityPersonIdParameter);
        }
    }
}
