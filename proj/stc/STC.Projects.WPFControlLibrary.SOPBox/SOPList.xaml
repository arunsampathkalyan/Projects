<UserControl x:Class="STC.Projects.WPFControlLibrary.SOPBox.SOPList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:localx="clr-namespace:STC.Projects.WPFControlLibrary.SOPBox.UserControlsViewModel"           
             xmlns:local="clr-namespace:STC.Projects.WPFControlLibrary.SOPBox.UserControls"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:p="clr-namespace:STC.Projects.WPFControlLibrary.SOPBox.Properties"
             xmlns:Converter="clr-namespace:STC.Projects.ClassLibrary.Common.Converters;assembly=STC.Projects.ClassLibrary.Common"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d">

    <UserControl.Resources>
        
        <Storyboard x:Key="ImageMediaUCOpen">
            <DoubleAnimation Storyboard.TargetName="borderImageMediaControl" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" From="900" To="0" Duration="0:0:1" SpeedRatio="4" />
        </Storyboard>

        <Storyboard x:Key="ImageMediaUCClose">
            <DoubleAnimation Storyboard.TargetName="borderImageMediaControl" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" From="0" To="900" Duration="0:0:1" SpeedRatio="6" />
        </Storyboard>


        <Converter:HorizontalAlignmentConverter x:Key="HorizontalAlignmentConverter"/>
        <!--<SolidColorBrush x:Key="Button.Static.Background" Color="#ff9c00"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#ff9c00"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#ffffff"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#ff9c00"/>
        <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="#ff9c00"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#ffffff"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#ff9c00"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#fff"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource Button.MouseOver.Foreground}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style x:Key="IsMoseOvernone" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#49b13c" TargetName="bg" />
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Opacity" Value="0.5"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IsMoseOverButton" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#10302d" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#00ffcc" />
            <Setter Property="Cursor" Value="Hand"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#10302d">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#00ffcc" TargetName="bg" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="BorderBrush" Value="#10302d" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <HierarchicalDataTemplate x:Key="SopListTemplate" ItemsSource="{Binding SOPItems}">

            <Border Name="border"  Padding="5">
                <Grid Width="140">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <!--<Image Name="Img" Visibility="Hidden" Source="{Binding ImgCheckedSource}" Width="20" Height="20" Margin="3,0,3,0" Grid.Column="0"/>-->

                    <Grid x:Name="gridPathTick" FlowDirection="LeftToRight" Visibility="Hidden" Margin="-10,0,3,0" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left">
                        <Border Name="backgroundGrid" Width="20" Height="20" Background="#64605F" CornerRadius="20" Visibility="Visible" />
                        <Path x:Name="pathTick" Data="M28.166016,0L32,3.8740238 11.496002,19.745 0,7.9879777 4.4200134,4.6370251 12.070007,12.476016z" 
                              Stretch="Uniform" Fill="#3b3c3e" Width="15" Height="15" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <RotateTransform Angle="-5" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>

                    <TextBlock Name="SOPContent" Visibility="Hidden" FontFamily="Open Sans - Regular" Foreground="#00FECE" FontSize="13.5" Text="{Binding Path=SOPContent}" Grid.Column="1" Padding="5" TextWrapping="Wrap" HorizontalAlignment="Stretch">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="Black" FillBehavior="HoldEnd"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <ListView Name="UserControlModelList" Grid.Column="0" Grid.ColumnSpan="2" Margin="0" Padding="0" BorderThickness="0" Background="{x:Null}" FontFamily="Helvetica" Foreground="#00ffcc" FontSize="12" ItemsSource="{Binding UserControlModel}">

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Border x:Name="border" Background="Transparent">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualState x:Name="Unselected" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="0" Value="LightBlue" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="SelectedUnfocused">
                                                            <Storyboard>
                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="0" Value="SkyBlue" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{x:Null}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                </Grid>

            </Border>


            <HierarchicalDataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--<Setter TargetName="border" Property="Background" Value="#00FECE"/>-->
                    <Setter TargetName="pathTick" Property="Fill" Value="#00FECE"/>
                    <Setter TargetName="backgroundGrid" Property="Background" Value="#008871"/>
                    <Setter TargetName="SOPContent" Property="Foreground" Value="Black"/>

                </Trigger>

                <DataTrigger Binding="{Binding IsParent}" Value="True">

                    <Setter TargetName="border" Property="Height" Value="35"/>
                    <Setter TargetName="border" Property="BorderThickness" Value="0"/>

                    <Setter TargetName="gridPathTick" Property="Visibility" Value="Visible"/>

                    <!--<Setter TargetName="pathTick" Property="Fill" Value="#00FECE"/>
                    <Setter TargetName="backgroundGrid" Property="Background" Value="#008871"/>-->
                    <!--<Setter TargetName="SOPContent" Property="Foreground" Value="Black"/>-->

                    <!--<Setter TargetName="Img" Property="Visibility" Value="Visible"/>-->
                    <!--<Setter TargetName="BorderRank" Property="Visibility" Value="Visible"/>-->
                    <Setter TargetName="SOPContent" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="UserControlModelList" Property="Visibility" Value="Hidden"/>

                </DataTrigger>

            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>

        <Style TargetType="telerik:RadPanelBarItem">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />

            <Setter Property="FontFamily" Value="Open Sans - Regular"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontSize" Value="13.5"/>
            <Setter Property="Foreground" Value="#00FECE" />
            <Setter Property="Margin" Value="5"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                        <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!--<VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalVisual"/>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="arrow"/>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOut"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected"/>
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ExpandStates">
                                            <VisualState x:Name="Expanded">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="180" Storyboard.TargetProperty="Angle" Storyboard.TargetName="directionRotation"/>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Collapsed"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>-->

                            <Grid x:Name="HeaderRow">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Border x:Name="NormalVisual" BorderBrush="#2b0e0e" BorderThickness="0" Grid.ColumnSpan="5">
                                    <Border BorderBrush="#2b0e0e" BorderThickness="1">
                                        <Border.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#002b22" FillBehavior="HoldEnd"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                    </DataTrigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </Border>
                                <Border x:Name="MouseOverVisual" Background="#003e32" BorderBrush="#00ffcc" BorderThickness="1" Grid.ColumnSpan="5" Opacity="0">
                                    <Border Background="#003e32" BorderThickness="0">

                                    </Border>
                                </Border>
                                <Border x:Name="SelectVisual" Background="#00514a" BorderBrush="#00ffcc" BorderThickness="1" Grid.ColumnSpan="5" Opacity="0">

                                    <Border Background="#00514a" BorderThickness="0">

                                    </Border>
                                </Border>

                                <!--<Border x:Name="NormalVisual" BorderBrush="Red" BorderThickness="0" Grid.ColumnSpan="5">
                                    <Border BorderBrush="Red" Background="#3b3c3e" BorderThickness="1.5"/>


                                </Border>

                                <Border x:Name="MouseOverVisual" Background="#00FECE" BorderBrush="Aqua" BorderThickness="1" Grid.ColumnSpan="5" Opacity="0">
                                    <Border Background="#003e32" BorderThickness="1">

                                    </Border>
                                </Border>
                                <Border x:Name="SelectVisual" Background="#00FECE" BorderBrush="#00ffcc" BorderThickness="1" Grid.ColumnSpan="5" Opacity="0">

                                    <Border Background="#00FECE" BorderThickness="1">

                                    </Border>
                                </Border>-->
                                <Border x:Name="DisabledVisual" BorderThickness="1" Grid.ColumnSpan="5" Opacity="0">
                                    <Border BorderBrush="Transparent" BorderThickness="1"/>
                                </Border>
                                <!--<Path x:Name="arrow" Visibility="Visible" Grid.Column="5" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Right" Margin="7,0" Opacity="3" RenderTransformOrigin="0.5,0.5" Stretch="None" Stroke="#00ffcc" StrokeThickness="2" VerticalAlignment="Center">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0"/>
                                    </Path.RenderTransform>
                                </Path>-->
                                <ContentControl x:Name="Header" Grid.ColumnSpan="4" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="FocusVisual" Grid.ColumnSpan="5" Grid.Column="0" IsHitTestVisible="False" Stroke="Black" StrokeThickness="0" StrokeDashArray="1 2" Visibility="Collapsed"/>
                            </Grid>
                            <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                <ItemsPresenter />
                            </Grid>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Opacity" TargetName="SelectVisual" Value="0"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                            </Trigger>

                            <Trigger Property="IsExpanded" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="arrow"/>-->
                                            <DoubleAnimation Duration="0:0:0.2" From="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="Opacity" TargetName="SelectVisual" Value="1"/>
                                <!--<Setter Property="LayoutTransform" TargetName="arrow">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <RotateTransform Angle="180"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>-->
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Visibility" TargetName="ItemsContainer" Value="Visible"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisual" Value="1"/>
                                <Setter Property="Opacity" TargetName="NormalVisual" Value="0"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="MouseOverVisual" Value="0"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <telerik:PanelBarPanel IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="Level" Value="1">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                                <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <!--<VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalVisual"/>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="arrow"/>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOut"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected"/>
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ExpandStates">
                                            <VisualState x:Name="Expanded">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="180" Storyboard.TargetProperty="Angle" Storyboard.TargetName="directionRotation"/>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Collapsed"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>-->

                                    <Grid x:Name="HeaderRow">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Border x:Name="NormalVisual" BorderBrush="Red" BorderThickness="0" Grid.ColumnSpan="5">
                                            <Border BorderBrush="Red" Background="#3b3c3e" BorderThickness="1">
                                                <Border.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                                                <DataTrigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#002b22" FillBehavior="HoldEnd"/>
                                                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#00FECE" FillBehavior="HoldEnd"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </DataTrigger.EnterActions>
                                                            </DataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>
                                        </Border>
                                        <Border x:Name="MouseOverVisual" Background="#00FECE" BorderBrush="Aqua" BorderThickness="1" Grid.ColumnSpan="5" Opacity="0">
                                            <Border Background="#00FECE" BorderThickness="0">

                                            </Border>
                                        </Border>
                                        <Border x:Name="SelectVisual" Background="#00FECE" BorderBrush="#00ffcc" BorderThickness="1" Grid.ColumnSpan="5" Opacity="0">

                                            <Border Background="#00FECE" BorderThickness="0">

                                            </Border>
                                        </Border>
                                        <Border x:Name="DisabledVisual" BorderThickness="1" Grid.ColumnSpan="5" Opacity="0">
                                            <Border BorderBrush="Transparent" BorderThickness="1"/>
                                        </Border>
                                        <Path x:Name="arrow" Visibility="Collapsed" Grid.Column="5" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Right" Margin="7,0" Opacity="3" RenderTransformOrigin="0.5,0.5" Stretch="None" Stroke="#00ffcc" StrokeThickness="2" VerticalAlignment="Center">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0"/>
                                            </Path.RenderTransform>
                                        </Path>


                                        <Grid x:Name="gridPathTick" FlowDirection="LeftToRight" Visibility="Visible" Margin="-10,0,3,0" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left">
                                            <Border Name="backgroundGrid" Width="20" Height="20" Background="#64605F" CornerRadius="20" Visibility="Visible" />
                                            <Path x:Name="pathTick" Data="M28.166016,0L32,3.8740238 11.496002,19.745 0,7.9879777 4.4200134,4.6370251 12.070007,12.476016z" 
                              Stretch="Uniform" Fill="#3b3c3e" Width="15" Height="15" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <TransformGroup.Children>
                                                            <RotateTransform Angle="-5" />
                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                        </TransformGroup.Children>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>

                                        <ContentControl x:Name="Header" Grid.Column="1" Grid.ColumnSpan="4" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Rectangle x:Name="FocusVisual" Grid.ColumnSpan="5" Grid.Column="0" IsHitTestVisible="False" Stroke="Black" StrokeThickness="0" StrokeDashArray="1 2" Visibility="Collapsed"/>
                                    </Grid>
                                    <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                        <telerik:LayoutTransformControl x:Name="transformationRoot" IsTabStop="False">
                                            <ItemsPresenter/>
                                        </telerik:LayoutTransformControl>
                                    </Grid>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Opacity" TargetName="SelectVisual" Value="1"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="TextElement.Foreground" Value="Black"/>

                                    </Trigger>

                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                                    </Trigger>

                                    <Trigger Property="IsExpanded" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="arrow"/>-->
                                                    <DoubleAnimation Duration="0:0:0.2" From="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                        <Setter Property="Opacity" TargetName="SelectVisual" Value="1"/>
                                        <!--<Setter Property="LayoutTransform" TargetName="arrow">
                                            <Setter.Value>
                                                <TransformGroup>
                                                    <RotateTransform Angle="180"/>
                                                </TransformGroup>
                                            </Setter.Value>
                                        </Setter>-->
                                        <Setter Property="Visibility" TargetName="ItemsContainer" Value="Visible"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>

                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="DisabledVisual" Value="1"/>
                                        <Setter Property="Opacity" TargetName="NormalVisual" Value="0"/>
                                    </Trigger>

                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" TargetName="MouseOverVisual" Value="1"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="TextElement.Foreground" Value="Black"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>

        </Style>


        <DataTemplate x:Key="ListViewSOPListTemplate">

            <Border Name="border"  BorderThickness="1.5" BorderBrush="Red" Background="#3b3c3e" Padding="5" Margin="2">
                <Grid Width="140">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <!--<Image Name="Img" Visibility="Hidden" Source="{Binding ImgCheckedSource}" Width="20" Height="20" Margin="3,0,3,0" Grid.Column="0"/>-->

                    <Grid x:Name="gridPathTick" FlowDirection="LeftToRight" Visibility="Visible" Margin="-10,0,3,0" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left">
                        <Border Name="backgroundGrid" Width="20" Height="20" Background="#64605F" CornerRadius="20" Visibility="Visible" />
                        <Path x:Name="pathTick" Data="M28.166016,0L32,3.8740238 11.496002,19.745 0,7.9879777 4.4200134,4.6370251 12.070007,12.476016z" 
                              Stretch="Uniform" Fill="#3b3c3e" Width="15" Height="15" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <RotateTransform Angle="-5" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>

                    <TextBlock Name="SOPContent" Visibility="Visible" FontFamily="Open Sans - Regular" Foreground="#00FECE" FontSize="13.5" Text="{Binding Path=SOPContent}" Grid.Column="1" Padding="5" TextWrapping="Wrap" HorizontalAlignment="Stretch">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="Black" FillBehavior="HoldEnd"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>


            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#00FECE"/>
                    <Setter TargetName="border" Property="BorderBrush" Value="Aqua"/>
                    <Setter TargetName="SOPContent" Property="Foreground" Value="Black"/>
                    <Setter TargetName="pathTick" Property="Fill" Value="#00FECE"/>
                    <Setter TargetName="backgroundGrid" Property="Background" Value="#008871"/>
                </Trigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#00FECE"/>
                    <Setter TargetName="border" Property="BorderBrush" Value="Aqua"/>
                    <Setter TargetName="SOPContent" Property="Foreground" Value="Black"/>
                    <Setter TargetName="pathTick" Property="Fill" Value="#00FECE"/>
                    <Setter TargetName="backgroundGrid" Property="Background" Value="#008871"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSopItemCompleted}" Value="True">
                    <Setter TargetName="border" Property="BorderBrush" Value="#00FECE"/>
                    <Setter TargetName="pathTick" Property="Fill" Value="#008871"/>
                    <Setter TargetName="backgroundGrid" Property="Background" Value="#00FECE"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True"/>
                        <Condition Binding="{Binding Path=IsSopItemCompleted}" Value="True"/>
                    </MultiDataTrigger.Conditions>

                    <Setter TargetName="border" Property="Background" Value="#00FECE"/>
                    <Setter TargetName="border" Property="BorderBrush" Value="Aqua"/>
                    <Setter TargetName="SOPContent" Property="Foreground" Value="Black"/>
                    <Setter TargetName="pathTick" Property="Fill" Value="#00FECE"/>
                    <Setter TargetName="backgroundGrid" Property="Background" Value="#008871"/>

                </MultiDataTrigger>

            </DataTemplate.Triggers>
        </DataTemplate>


        <DataTemplate DataType="{x:Type localx:CamerasListViewModel}">
            <local:CamerasListUserControl DataContext="{Binding}" AddChildContent="OnAddChildContent" CloseCanvas="OnCloseCanvas" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type localx:AssignedPatrolsViewModel}">
            <local:AssignedPatrolsUserControl DataContext="{Binding}" AddChildContent="OnAddChildContent" CloseCanvas="OnCloseCanvas" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type localx:RadarsListViewModel}">
            <local:RadarsListUserControl DataContext="{Binding}" AddChildContent="OnAddChildContent" CloseCanvas="OnCloseCanvas" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type localx:TowersListViewModel}">
            <local:SmartTowersListUserControl DataContext="{Binding}" AddChildContent="OnAddChildContent" CloseCanvas="OnCloseCanvas" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type localx:TowerCamerasListActionPanelViewModel}"/>

        <DataTemplate DataType="{x:Type localx:PatrolsListViewModel}">
            <local:PatrolsListUserControl DataContext="{Binding}" AddChildContent="OnAddChildContent" CloseCanvas="OnCloseCanvas" GoToNextStep="SOPList_GoToNextStep"  Loaded="PatrolsListUserControl_OnLoaded" />
            <!--Loaded="PatrolsListUserControl_OnLoaded"-->
        </DataTemplate>

        <DataTemplate DataType="{x:Type localx:PatrolCamerasListViewModel}">
            <local:PatrolCamerasListUserControl DataContext="{Binding}" AddChildContent="OnAddChildContent" CloseCanvas="OnCloseCanvas" GoToNextStep="SOPList_GoToNextStep" Loaded="PatrolsListUserControl_OnLoaded" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type localx:CamerasListActionPanelViewModel}"/>
        <DataTemplate DataType="{x:Type localx:EmptyViewModel}">
            <TextBlock Text="" Width="0" Height="0"></TextBlock>
        </DataTemplate>
        <DoubleAnimation x:Key="ScaleSOPControl" Storyboard.TargetName="radExpanderSOP" Storyboard.TargetProperty="Width"
                             To="210" Duration="0:0:1"/>

        <DoubleAnimation x:Key="ReturnToDefaultScaleSOPControl" Storyboard.TargetName="radExpanderSOP" Storyboard.TargetProperty="Width"
                             To="0" Duration="0:0:1"/>

        <DoubleAnimation x:Key="ScaleGridBasicInfo" Storyboard.TargetName="gridItemBasicInfo" Storyboard.TargetProperty="Width"
                             To="210" Duration="0:0:1"/>

        <DoubleAnimation x:Key="ReturnToDefaultScaleGridBasicInfo" Storyboard.TargetName="gridItemBasicInfo" Storyboard.TargetProperty="Width"
                             To="0" Duration="0:0:1"/>
        <Style x:Key="solidListView" TargetType="{x:Type ListViewItem}">
            <Style.Resources>
                <!-- SelectedItem with focus -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
        			Color="Transparent" />
                <!-- SelectedItem without focus -->
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
        			Color="Transparent" />
                <!-- SelectedItem text foreground -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
        			Color="Black" />
            </Style.Resources>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template" Value="{DynamicResource ListBoxItemControlTemplate1}"/>
        </Style>
        <ControlTemplate x:Key="ListBoxItemControlTemplate1" TargetType="{x:Type ListBoxItem}">
            <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" HorizontalAlignment="Right">
                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Bd" Value="#1F26A0DA"/>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="#A826A0DA"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                        <Condition Property="IsSelected" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Bd" Value="#3DDADADA"/>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                        <Condition Property="IsSelected" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Bd" Value="#3D26A0DA"/>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListViewStyle1" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Template="{DynamicResource ScrollViewerControlTemplate1}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="11" Background="#FF131313" BorderBrush="{x:Null}" BorderThickness="0" Style="{DynamicResource ScrollBarStyle1}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
            </Grid>
        </ControlTemplate>
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid x:Name="border" Background="#FF131313" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="2,2.25"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD"/>
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="#FF3E3E3E" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,0"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="10">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Background="#FF131313" Width="10">
                                <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Stretch="Uniform"/>
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Stretch="Uniform"/>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


    </UserControl.Resources>
    <Canvas x:Name="canvasSOPList" Margin="0,45,270,0" Background="Black" Opacity="0.97">

        
        
        <Grid Panel.ZIndex="4" Canvas.Right="0">
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="290"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid x:Name="gridItemBasicInfo"  Grid.Row="0"
              
              Canvas.Right="205" Canvas.Top="0" Panel.ZIndex="5" 
              Opacity="1.5" Width="270" 
              HorizontalAlignment="Right" FlowDirection="LeftToRight"
              Margin="0,5,0,5">

                <ListView x:Name="itemsCtrBasicInfo" ItemsSource="{Binding EventDetailsList}" HorizontalAlignment="Right" Margin="0,0,10,0"
                          Background="{x:Null}" BorderBrush="#00FECE" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemContainerStyle="{StaticResource solidListView}" Style="{DynamicResource ListViewStyle1}">
                    <!--<ListView.Resources>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource solidListView}">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                        </Style>
                    </ListView.Resources>-->
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style x:Key="textBlockFieldNameStyle" TargetType="TextBlock">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="#8B8F96"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="FontFamily" Value="Open Sans - Regular"/>
                                    <Setter Property="FontSize" Value="13"/>

                                </Style>
                                <Style x:Key="textBlockFieldValueStyle" TargetType="TextBlock">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="#00FECE"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="FontFamily" Value="Open Sans - Regular"/>
                                    <Setter Property="FontSize" Value="14"/>

                                </Style>
                            </DataTemplate.Resources>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <!--<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="105"/>
                                    <ColumnDefinition Width="155"/>
                                </Grid.ColumnDefinitions>-->
                                <TextBlock x:Name="txtBlkKeyField" Text="{Binding Path=Name}" Grid.Column="0" TextAlignment="Right" Margin="5,1,5,0"
                                           HorizontalAlignment="{Binding Converter={StaticResource HorizontalAlignmentConverter}, ConverterParameter=Right}" TextWrapping="Wrap" Style="{StaticResource textBlockFieldNameStyle}" ></TextBlock>
                                <TextBlock x:Name="txtBlkValField" Text="{Binding Path=Value}" TextWrapping="Wrap"
                                   Grid.Row="1" IsEnabled="False" TextAlignment="Right" Margin="10,1,5,0" HorizontalAlignment="{Binding Converter={StaticResource HorizontalAlignmentConverter}, ConverterParameter=Right}" Style="{StaticResource textBlockFieldValueStyle}"></TextBlock>

                                <Grid x:Name="gridPlateNumImgfield" Grid.Row="1" FlowDirection="LeftToRight" Visibility="Collapsed">
                                    <Image Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/numberplate.png" Width="120" Height="35" HorizontalAlignment="Right" Margin="2,0,5,0" VerticalAlignment="Center"></Image>

                                    <TextBlock x:Name="txtBlkPlateField" Text="10" FontSize="13"  TextWrapping="Wrap" Foreground="#FFFFFF" FontWeight="Bold" VerticalAlignment="Center"
                                               Grid.Row="1" IsEnabled="False" TextAlignment="Left" Margin="10,5,5,0" HorizontalAlignment="Left" Style="{StaticResource textBlockFieldValueStyle}"/>

                                    <TextBlock x:Name="txtBlkPlateNumValField" Text="{Binding Path=Value}" TextWrapping="Wrap" Foreground="Black" FontWeight="Bold" VerticalAlignment="Center"
                                   Grid.Row="1" IsEnabled="False" TextAlignment="Left" Margin="65,5,10,0" HorizontalAlignment="Left" Style="{StaticResource textBlockFieldValueStyle}"></TextBlock>
                                </Grid>

                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=Name}" Value="{x:Static p:Resources.strPlateNum}">
                                    <Setter TargetName="gridPlateNumImgfield" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="txtBlkValField" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>



            </Grid>

            <Grid x:Name="radExpanderSOP" Width="0" Height="Auto" Grid.Row="1" Background="Transparent" Opacity="0.85"
              VerticalAlignment="Top" Canvas.Right="0" Panel.ZIndex="4" HorizontalAlignment="Right" Margin="0,-5,0,0">
                <!--<Grid.Background>
                    <ImageBrush ImageSource="images/dotted_bg.png"/>
                </Grid.Background>-->

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Margin="10,0,0,0" Text="{x:Static p:Resources.strSOPList}" TextAlignment="Left" Foreground="#00ffcc" FontSize="20" FontFamily="Helvetica"/>

                <Border Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Center"
                    BorderBrush="#00ffcc" BorderThickness="0 2 0 0" CornerRadius="2">

                    <!--<telerik:RadPanelBar Name="SopListPanel" Width="190" ItemsSource="{Binding SopList}" Height="Auto" ItemClick="SopListPanel_ItemClick"
                                         ScrollViewer.HorizontalScrollBarVisibility="Hidden" Expanded="SopListPanel_Expanded"
                                         ScrollViewer.VerticalScrollBarVisibility="Auto" Background="Transparent" BorderBrush="{x:Null}" Cursor="Hand">
                        
                    </telerik:RadPanelBar>-->

                    <ListView Name="SopListPanel" Width="190" ItemsSource="{Binding SopList}" Height="Auto" SelectionChanged="SopListPanel_SelectionChanged"
                                         ScrollViewer.HorizontalScrollBarVisibility="Hidden" ItemTemplate="{StaticResource ListViewSOPListTemplate}" SelectionMode="Single"
                                         ScrollViewer.VerticalScrollBarVisibility="Auto" Background="Transparent" BorderBrush="{x:Null}" Cursor="Hand">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="Transparent" />
                                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="SopListPanelItem_PreviewMouseLeftButtonDown" />
                                
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <ContentPresenter x:Name="SopListContentPresenter" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>



                </Border>

                <Button Grid.Row="2" Grid.ColumnSpan="2" Content="{x:Static p:Resources.strEnd}" Grid.Column="0" IsEnabled="True" FontFamily="Helvetica"  FontSize="18" Width="100" Height="30" Click="Button_Click" Style="{DynamicResource IsMoseOverButton}" Margin="12,10,28,10"/>
                <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" IsEnabled="True" FontFamily="Helvetica"  FontSize="18" Width="25" Height="25" Click="Cancle_Click" Style="{DynamicResource IsMoseOverButton}" 
                    VerticalAlignment="Top" HorizontalAlignment="Right"
                    Background="Transparent" BorderThickness="0"
                    Margin="5,5">
                    <Button.Template>
                        <ControlTemplate>
                            <Image x:Name="imgCancel" Source="/STC.Projects.WPFControlLibrary.SOPBox;component/images/close_blue.png" Width="30" Height="20" Margin="0,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter TargetName="imgCancel" Property="Source" Value="/STC.Projects.WPFControlLibrary.SOPBox;component/images/close_hover.jpg"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

            </Grid>            
            
        </Grid>







        <!--<Canvas Canvas.Right="475" Canvas.Top="200" Name="PopupCanvas" Opacity="1" Visibility="Visible" HorizontalAlignment="Left" MouseLeftButtonDown="PopupCanvas_MouseLeftButtonDown" Panel.ZIndex="6"/>-->
        <Canvas Canvas.Right="475" Canvas.Top="290" Name="PopupCanvas" Opacity="0.95" Visibility="Visible" HorizontalAlignment="Left" MouseLeftButtonDown="PopupCanvas_MouseLeftButtonDown" Panel.ZIndex="6"/>

        
      
        <Canvas Canvas.Top="100" Canvas.Bottom="0" Name="PopupMediaCanvas" Opacity="0.85" Visibility="Collapsed" HorizontalAlignment="Left"  Panel.ZIndex="6">
            <!--<Border x:Name="borderImageMediaControl" MinHeight="600" MinWidth="700" HorizontalAlignment="Stretch" Opacity="1" VerticalAlignment="Stretch"  BorderThickness="0">
                <Border.RenderTransform>
                    <TranslateTransform Y="900"></TranslateTransform>
                </Border.RenderTransform>
                <local:ImageMediaGalleryUserControl x:Name="ImageMediaGalleryUC"/>
            </Border>-->
        </Canvas>

    </Canvas>
</UserControl>
