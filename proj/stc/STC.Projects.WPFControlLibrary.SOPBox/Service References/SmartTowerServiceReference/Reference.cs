//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TowerPredefinedMessageDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.SmartTowerInteg" +
        "ration.DTO")]
    [System.SerializableAttribute()]
    public partial class TowerPredefinedMessageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MyLastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NotificationEnabledField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageDescription {
            get {
                return this.MessageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageDescriptionField, value) != true)) {
                    this.MessageDescriptionField = value;
                    this.RaisePropertyChanged("MessageDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MyLastUpdate {
            get {
                return this.MyLastUpdateField;
            }
            set {
                if ((this.MyLastUpdateField.Equals(value) != true)) {
                    this.MyLastUpdateField = value;
                    this.RaisePropertyChanged("MyLastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> NotificationEnabled {
            get {
                return this.NotificationEnabledField;
            }
            set {
                if ((this.NotificationEnabledField.Equals(value) != true)) {
                    this.NotificationEnabledField = value;
                    this.RaisePropertyChanged("NotificationEnabled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TowerMessageDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.SmartTowerInteg" +
        "ration.DTO")]
    [System.SerializableAttribute()]
    public partial class TowerMessageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArabicMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EnableNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MixedMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MyLastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TowerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArabicMessage {
            get {
                return this.ArabicMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ArabicMessageField, value) != true)) {
                    this.ArabicMessageField = value;
                    this.RaisePropertyChanged("ArabicMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EnableNotification {
            get {
                return this.EnableNotificationField;
            }
            set {
                if ((this.EnableNotificationField.Equals(value) != true)) {
                    this.EnableNotificationField = value;
                    this.RaisePropertyChanged("EnableNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishMessage {
            get {
                return this.EnglishMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishMessageField, value) != true)) {
                    this.EnglishMessageField = value;
                    this.RaisePropertyChanged("EnglishMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentImage {
            get {
                return this.IncidentImageField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentImageField, value) != true)) {
                    this.IncidentImageField = value;
                    this.RaisePropertyChanged("IncidentImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MixedMessage {
            get {
                return this.MixedMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MixedMessageField, value) != true)) {
                    this.MixedMessageField = value;
                    this.RaisePropertyChanged("MixedMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MyLastUpdate {
            get {
                return this.MyLastUpdateField;
            }
            set {
                if ((this.MyLastUpdateField.Equals(value) != true)) {
                    this.MyLastUpdateField = value;
                    this.RaisePropertyChanged("MyLastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TowerId {
            get {
                return this.TowerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TowerIdField, value) != true)) {
                    this.TowerIdField = value;
                    this.RaisePropertyChanged("TowerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorReadingDTO", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.ClassLibrary.SmartTowerInteg" +
        "ration.DTO")]
    [System.SerializableAttribute()]
    public partial class SensorReadingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstantMORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrecipitationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelfTestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstantMOR {
            get {
                return this.InstantMORField;
            }
            set {
                if ((object.ReferenceEquals(this.InstantMORField, value) != true)) {
                    this.InstantMORField = value;
                    this.RaisePropertyChanged("InstantMOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOR {
            get {
                return this.MORField;
            }
            set {
                if ((object.ReferenceEquals(this.MORField, value) != true)) {
                    this.MORField = value;
                    this.RaisePropertyChanged("MOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodField, value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Precipitation {
            get {
                return this.PrecipitationField;
            }
            set {
                if ((object.ReferenceEquals(this.PrecipitationField, value) != true)) {
                    this.PrecipitationField = value;
                    this.RaisePropertyChanged("Precipitation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelfTest {
            get {
                return this.SelfTestField;
            }
            set {
                if ((object.ReferenceEquals(this.SelfTestField, value) != true)) {
                    this.SelfTestField = value;
                    this.RaisePropertyChanged("SelfTest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorID {
            get {
                return this.SensorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorIDField, value) != true)) {
                    this.SensorIDField = value;
                    this.RaisePropertyChanged("SensorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.TemperatureField, value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmartTowerServiceReference.ISmartTowerIntegrationService")]
    public interface ISmartTowerIntegrationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartTowerIntegrationService/GetAllTowerStaticMessages", ReplyAction="http://tempuri.org/ISmartTowerIntegrationService/GetAllTowerStaticMessagesRespons" +
            "e")]
        STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerPredefinedMessageDTO[] GetAllTowerStaticMessages(string TowerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartTowerIntegrationService/GetAllTowerStaticMessages", ReplyAction="http://tempuri.org/ISmartTowerIntegrationService/GetAllTowerStaticMessagesRespons" +
            "e")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerPredefinedMessageDTO[]> GetAllTowerStaticMessagesAsync(string TowerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartTowerIntegrationService/UpdateTowerCurrentMessage", ReplyAction="http://tempuri.org/ISmartTowerIntegrationService/UpdateTowerCurrentMessageRespons" +
            "e")]
        bool UpdateTowerCurrentMessage(STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerMessageDTO TowerMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartTowerIntegrationService/UpdateTowerCurrentMessage", ReplyAction="http://tempuri.org/ISmartTowerIntegrationService/UpdateTowerCurrentMessageRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> UpdateTowerCurrentMessageAsync(STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerMessageDTO TowerMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartTowerIntegrationService/GetTowerCurrentMessage", ReplyAction="http://tempuri.org/ISmartTowerIntegrationService/GetTowerCurrentMessageResponse")]
        STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerMessageDTO GetTowerCurrentMessage(string TowerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartTowerIntegrationService/GetTowerCurrentMessage", ReplyAction="http://tempuri.org/ISmartTowerIntegrationService/GetTowerCurrentMessageResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerMessageDTO> GetTowerCurrentMessageAsync(string TowerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartTowerIntegrationService/GetTowerSensorCurrentReading", ReplyAction="http://tempuri.org/ISmartTowerIntegrationService/GetTowerSensorCurrentReadingResp" +
            "onse")]
        STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.SensorReadingDTO GetTowerSensorCurrentReading(string SensorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartTowerIntegrationService/GetTowerSensorCurrentReading", ReplyAction="http://tempuri.org/ISmartTowerIntegrationService/GetTowerSensorCurrentReadingResp" +
            "onse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.SensorReadingDTO> GetTowerSensorCurrentReadingAsync(string SensorId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISmartTowerIntegrationServiceChannel : STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.ISmartTowerIntegrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmartTowerIntegrationServiceClient : System.ServiceModel.ClientBase<STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.ISmartTowerIntegrationService>, STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.ISmartTowerIntegrationService {
        
        public SmartTowerIntegrationServiceClient() {
        }
        
        public SmartTowerIntegrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmartTowerIntegrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartTowerIntegrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartTowerIntegrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerPredefinedMessageDTO[] GetAllTowerStaticMessages(string TowerId) {
            return base.Channel.GetAllTowerStaticMessages(TowerId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerPredefinedMessageDTO[]> GetAllTowerStaticMessagesAsync(string TowerId) {
            return base.Channel.GetAllTowerStaticMessagesAsync(TowerId);
        }
        
        public bool UpdateTowerCurrentMessage(STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerMessageDTO TowerMessage) {
            return base.Channel.UpdateTowerCurrentMessage(TowerMessage);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTowerCurrentMessageAsync(STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerMessageDTO TowerMessage) {
            return base.Channel.UpdateTowerCurrentMessageAsync(TowerMessage);
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerMessageDTO GetTowerCurrentMessage(string TowerId) {
            return base.Channel.GetTowerCurrentMessage(TowerId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.TowerMessageDTO> GetTowerCurrentMessageAsync(string TowerId) {
            return base.Channel.GetTowerCurrentMessageAsync(TowerId);
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.SensorReadingDTO GetTowerSensorCurrentReading(string SensorId) {
            return base.Channel.GetTowerSensorCurrentReading(SensorId);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.SmartTowerServiceReference.SensorReadingDTO> GetTowerSensorCurrentReadingAsync(string SensorId) {
            return base.Channel.GetTowerSensorCurrentReadingAsync(SensorId);
        }
    }
}
