//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrafficProfileRequest", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Request")]
    [System.SerializableAttribute()]
    public partial class TrafficProfileRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TcfNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TcfNo {
            get {
                return this.TcfNoField;
            }
            set {
                if ((this.TcfNoField.Equals(value) != true)) {
                    this.TcfNoField = value;
                    this.RaisePropertyChanged("TcfNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrafficProfileResponse", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Response")]
    [System.SerializableAttribute()]
    public partial class TrafficProfileResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArabicNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EducationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstablishmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EstablishmentSSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeBuildingNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeFlatNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HomeStreetCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeTelephoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaritalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NationalityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OccupationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PassportExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PassportIssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassportNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReligionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResidenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TcfKindCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TcfNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TcfTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TradeLicenseExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TradeLicenseIssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeLicenseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TradeLicenseSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UnifiedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkBuildingNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WorkStreetCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkTelephoneNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArabicName {
            get {
                return this.ArabicNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArabicNameField, value) != true)) {
                    this.ArabicNameField = value;
                    this.RaisePropertyChanged("ArabicName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EducationCode {
            get {
                return this.EducationCodeField;
            }
            set {
                if ((this.EducationCodeField.Equals(value) != true)) {
                    this.EducationCodeField = value;
                    this.RaisePropertyChanged("EducationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishName {
            get {
                return this.EnglishNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishNameField, value) != true)) {
                    this.EnglishNameField = value;
                    this.RaisePropertyChanged("EnglishName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstablishmentNo {
            get {
                return this.EstablishmentNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstablishmentNoField, value) != true)) {
                    this.EstablishmentNoField = value;
                    this.RaisePropertyChanged("EstablishmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EstablishmentSSourceCode {
            get {
                return this.EstablishmentSSourceCodeField;
            }
            set {
                if ((this.EstablishmentSSourceCodeField.Equals(value) != true)) {
                    this.EstablishmentSSourceCodeField = value;
                    this.RaisePropertyChanged("EstablishmentSSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeAddress {
            get {
                return this.HomeAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeAddressField, value) != true)) {
                    this.HomeAddressField = value;
                    this.RaisePropertyChanged("HomeAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeBuildingNo {
            get {
                return this.HomeBuildingNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeBuildingNoField, value) != true)) {
                    this.HomeBuildingNoField = value;
                    this.RaisePropertyChanged("HomeBuildingNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeFlatNo {
            get {
                return this.HomeFlatNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeFlatNoField, value) != true)) {
                    this.HomeFlatNoField = value;
                    this.RaisePropertyChanged("HomeFlatNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HomeStreetCode {
            get {
                return this.HomeStreetCodeField;
            }
            set {
                if ((this.HomeStreetCodeField.Equals(value) != true)) {
                    this.HomeStreetCodeField = value;
                    this.RaisePropertyChanged("HomeStreetCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeTelephoneNo {
            get {
                return this.HomeTelephoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeTelephoneNoField, value) != true)) {
                    this.HomeTelephoneNoField = value;
                    this.RaisePropertyChanged("HomeTelephoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaritalCode {
            get {
                return this.MaritalCodeField;
            }
            set {
                if ((this.MaritalCodeField.Equals(value) != true)) {
                    this.MaritalCodeField = value;
                    this.RaisePropertyChanged("MaritalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NationalityCode {
            get {
                return this.NationalityCodeField;
            }
            set {
                if ((this.NationalityCodeField.Equals(value) != true)) {
                    this.NationalityCodeField = value;
                    this.RaisePropertyChanged("NationalityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OccupationCode {
            get {
                return this.OccupationCodeField;
            }
            set {
                if ((this.OccupationCodeField.Equals(value) != true)) {
                    this.OccupationCodeField = value;
                    this.RaisePropertyChanged("OccupationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POBox {
            get {
                return this.POBoxField;
            }
            set {
                if ((object.ReferenceEquals(this.POBoxField, value) != true)) {
                    this.POBoxField = value;
                    this.RaisePropertyChanged("POBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PassportExpiryDate {
            get {
                return this.PassportExpiryDateField;
            }
            set {
                if ((this.PassportExpiryDateField.Equals(value) != true)) {
                    this.PassportExpiryDateField = value;
                    this.RaisePropertyChanged("PassportExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PassportIssueDate {
            get {
                return this.PassportIssueDateField;
            }
            set {
                if ((this.PassportIssueDateField.Equals(value) != true)) {
                    this.PassportIssueDateField = value;
                    this.RaisePropertyChanged("PassportIssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassportNo {
            get {
                return this.PassportNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PassportNoField, value) != true)) {
                    this.PassportNoField = value;
                    this.RaisePropertyChanged("PassportNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReligionCode {
            get {
                return this.ReligionCodeField;
            }
            set {
                if ((this.ReligionCodeField.Equals(value) != true)) {
                    this.ReligionCodeField = value;
                    this.RaisePropertyChanged("ReligionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResidenceNo {
            get {
                return this.ResidenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ResidenceNoField, value) != true)) {
                    this.ResidenceNoField = value;
                    this.RaisePropertyChanged("ResidenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TcfKindCode {
            get {
                return this.TcfKindCodeField;
            }
            set {
                if ((this.TcfKindCodeField.Equals(value) != true)) {
                    this.TcfKindCodeField = value;
                    this.RaisePropertyChanged("TcfKindCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TcfNo {
            get {
                return this.TcfNoField;
            }
            set {
                if ((this.TcfNoField.Equals(value) != true)) {
                    this.TcfNoField = value;
                    this.RaisePropertyChanged("TcfNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TcfTypeCode {
            get {
                return this.TcfTypeCodeField;
            }
            set {
                if ((this.TcfTypeCodeField.Equals(value) != true)) {
                    this.TcfTypeCodeField = value;
                    this.RaisePropertyChanged("TcfTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TradeLicenseExpiryDate {
            get {
                return this.TradeLicenseExpiryDateField;
            }
            set {
                if ((this.TradeLicenseExpiryDateField.Equals(value) != true)) {
                    this.TradeLicenseExpiryDateField = value;
                    this.RaisePropertyChanged("TradeLicenseExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TradeLicenseIssueDate {
            get {
                return this.TradeLicenseIssueDateField;
            }
            set {
                if ((this.TradeLicenseIssueDateField.Equals(value) != true)) {
                    this.TradeLicenseIssueDateField = value;
                    this.RaisePropertyChanged("TradeLicenseIssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeLicenseNo {
            get {
                return this.TradeLicenseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeLicenseNoField, value) != true)) {
                    this.TradeLicenseNoField = value;
                    this.RaisePropertyChanged("TradeLicenseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TradeLicenseSourceCode {
            get {
                return this.TradeLicenseSourceCodeField;
            }
            set {
                if ((this.TradeLicenseSourceCodeField.Equals(value) != true)) {
                    this.TradeLicenseSourceCodeField = value;
                    this.RaisePropertyChanged("TradeLicenseSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UnifiedID {
            get {
                return this.UnifiedIDField;
            }
            set {
                if ((this.UnifiedIDField.Equals(value) != true)) {
                    this.UnifiedIDField = value;
                    this.RaisePropertyChanged("UnifiedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkAddress {
            get {
                return this.WorkAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkAddressField, value) != true)) {
                    this.WorkAddressField = value;
                    this.RaisePropertyChanged("WorkAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkBuildingNo {
            get {
                return this.WorkBuildingNoField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkBuildingNoField, value) != true)) {
                    this.WorkBuildingNoField = value;
                    this.RaisePropertyChanged("WorkBuildingNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WorkStreetCode {
            get {
                return this.WorkStreetCodeField;
            }
            set {
                if ((this.WorkStreetCodeField.Equals(value) != true)) {
                    this.WorkStreetCodeField = value;
                    this.RaisePropertyChanged("WorkStreetCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkTelephoneNo {
            get {
                return this.WorkTelephoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTelephoneNoField, value) != true)) {
                    this.WorkTelephoneNoField = value;
                    this.RaisePropertyChanged("WorkTelephoneNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Request")]
    [System.SerializableAttribute()]
    public partial class PersonDetailsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TcfNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UnifiedIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TcfNo {
            get {
                return this.TcfNoField;
            }
            set {
                if ((this.TcfNoField.Equals(value) != true)) {
                    this.TcfNoField = value;
                    this.RaisePropertyChanged("TcfNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UnifiedId {
            get {
                return this.UnifiedIdField;
            }
            set {
                if ((this.UnifiedIdField.Equals(value) != true)) {
                    this.UnifiedIdField = value;
                    this.RaisePropertyChanged("UnifiedId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Request")]
    [System.SerializableAttribute()]
    public partial class VehicleDetailsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChassisNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChassisNoExistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateColorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateKindCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PlateOrgNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateTypeCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChassisNo {
            get {
                return this.ChassisNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChassisNoField, value) != true)) {
                    this.ChassisNoField = value;
                    this.RaisePropertyChanged("ChassisNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChassisNoExist {
            get {
                return this.ChassisNoExistField;
            }
            set {
                if ((this.ChassisNoExistField.Equals(value) != true)) {
                    this.ChassisNoExistField = value;
                    this.RaisePropertyChanged("ChassisNoExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateColorCode {
            get {
                return this.PlateColorCodeField;
            }
            set {
                if ((this.PlateColorCodeField.Equals(value) != true)) {
                    this.PlateColorCodeField = value;
                    this.RaisePropertyChanged("PlateColorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateKindCode {
            get {
                return this.PlateKindCodeField;
            }
            set {
                if ((this.PlateKindCodeField.Equals(value) != true)) {
                    this.PlateKindCodeField = value;
                    this.RaisePropertyChanged("PlateKindCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateNo {
            get {
                return this.PlateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateNoField, value) != true)) {
                    this.PlateNoField = value;
                    this.RaisePropertyChanged("PlateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PlateOrgNo {
            get {
                return this.PlateOrgNoField;
            }
            set {
                if ((this.PlateOrgNoField.Equals(value) != true)) {
                    this.PlateOrgNoField = value;
                    this.RaisePropertyChanged("PlateOrgNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateSourceCode {
            get {
                return this.PlateSourceCodeField;
            }
            set {
                if ((this.PlateSourceCodeField.Equals(value) != true)) {
                    this.PlateSourceCodeField = value;
                    this.RaisePropertyChanged("PlateSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateTypeCode {
            get {
                return this.PlateTypeCodeField;
            }
            set {
                if ((this.PlateTypeCodeField.Equals(value) != true)) {
                    this.PlateTypeCodeField = value;
                    this.RaisePropertyChanged("PlateTypeCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Response")]
    [System.SerializableAttribute()]
    public partial class VehicleDetailsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxisCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChairsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChassisNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CylinderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoorCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasColorGlassPermitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasHandicapPermitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HorsePowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceCompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceKindArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceKindEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsurancePolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDrivingBannedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KindArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KindCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KindEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MortgageDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MortgageRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerTcfArabicNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerTcfEnglishNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerTcfNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.PlateKey PlateInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteeringArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteeringCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteeringEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightEmptyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightFullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WheelsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AxisCount {
            get {
                return this.AxisCountField;
            }
            set {
                if ((object.ReferenceEquals(this.AxisCountField, value) != true)) {
                    this.AxisCountField = value;
                    this.RaisePropertyChanged("AxisCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chairs {
            get {
                return this.ChairsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChairsField, value) != true)) {
                    this.ChairsField = value;
                    this.RaisePropertyChanged("Chairs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChassisNo {
            get {
                return this.ChassisNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChassisNoField, value) != true)) {
                    this.ChassisNoField = value;
                    this.RaisePropertyChanged("ChassisNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorArabicDesc {
            get {
                return this.ColorArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorArabicDescField, value) != true)) {
                    this.ColorArabicDescField = value;
                    this.RaisePropertyChanged("ColorArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorCode {
            get {
                return this.ColorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorCodeField, value) != true)) {
                    this.ColorCodeField = value;
                    this.RaisePropertyChanged("ColorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorEnglishDesc {
            get {
                return this.ColorEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorEnglishDescField, value) != true)) {
                    this.ColorEnglishDescField = value;
                    this.RaisePropertyChanged("ColorEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cylinder {
            get {
                return this.CylinderField;
            }
            set {
                if ((object.ReferenceEquals(this.CylinderField, value) != true)) {
                    this.CylinderField = value;
                    this.RaisePropertyChanged("Cylinder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoorCount {
            get {
                return this.DoorCountField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorCountField, value) != true)) {
                    this.DoorCountField = value;
                    this.RaisePropertyChanged("DoorCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineNo {
            get {
                return this.EngineNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineNoField, value) != true)) {
                    this.EngineNoField = value;
                    this.RaisePropertyChanged("EngineNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelArabicDesc {
            get {
                return this.FuelArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelArabicDescField, value) != true)) {
                    this.FuelArabicDescField = value;
                    this.RaisePropertyChanged("FuelArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelCode {
            get {
                return this.FuelCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelCodeField, value) != true)) {
                    this.FuelCodeField = value;
                    this.RaisePropertyChanged("FuelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelEnglishDesc {
            get {
                return this.FuelEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelEnglishDescField, value) != true)) {
                    this.FuelEnglishDescField = value;
                    this.RaisePropertyChanged("FuelEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearArabicDesc {
            get {
                return this.GearArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GearArabicDescField, value) != true)) {
                    this.GearArabicDescField = value;
                    this.RaisePropertyChanged("GearArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearCode {
            get {
                return this.GearCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GearCodeField, value) != true)) {
                    this.GearCodeField = value;
                    this.RaisePropertyChanged("GearCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearEnglishDesc {
            get {
                return this.GearEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GearEnglishDescField, value) != true)) {
                    this.GearEnglishDescField = value;
                    this.RaisePropertyChanged("GearEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasColorGlassPermit {
            get {
                return this.HasColorGlassPermitField;
            }
            set {
                if ((this.HasColorGlassPermitField.Equals(value) != true)) {
                    this.HasColorGlassPermitField = value;
                    this.RaisePropertyChanged("HasColorGlassPermit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasHandicapPermit {
            get {
                return this.HasHandicapPermitField;
            }
            set {
                if ((this.HasHandicapPermitField.Equals(value) != true)) {
                    this.HasHandicapPermitField = value;
                    this.RaisePropertyChanged("HasHandicapPermit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HorsePower {
            get {
                return this.HorsePowerField;
            }
            set {
                if ((object.ReferenceEquals(this.HorsePowerField, value) != true)) {
                    this.HorsePowerField = value;
                    this.RaisePropertyChanged("HorsePower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceCompanyName {
            get {
                return this.InsuranceCompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceCompanyNameField, value) != true)) {
                    this.InsuranceCompanyNameField = value;
                    this.RaisePropertyChanged("InsuranceCompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceExpiryDate {
            get {
                return this.InsuranceExpiryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceExpiryDateField, value) != true)) {
                    this.InsuranceExpiryDateField = value;
                    this.RaisePropertyChanged("InsuranceExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceKindArabicDesc {
            get {
                return this.InsuranceKindArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceKindArabicDescField, value) != true)) {
                    this.InsuranceKindArabicDescField = value;
                    this.RaisePropertyChanged("InsuranceKindArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceKindEnglishDesc {
            get {
                return this.InsuranceKindEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceKindEnglishDescField, value) != true)) {
                    this.InsuranceKindEnglishDescField = value;
                    this.RaisePropertyChanged("InsuranceKindEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsurancePolicyNo {
            get {
                return this.InsurancePolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InsurancePolicyNoField, value) != true)) {
                    this.InsurancePolicyNoField = value;
                    this.RaisePropertyChanged("InsurancePolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDrivingBanned {
            get {
                return this.IsDrivingBannedField;
            }
            set {
                if ((this.IsDrivingBannedField.Equals(value) != true)) {
                    this.IsDrivingBannedField = value;
                    this.RaisePropertyChanged("IsDrivingBanned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KindArabicDesc {
            get {
                return this.KindArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KindArabicDescField, value) != true)) {
                    this.KindArabicDescField = value;
                    this.RaisePropertyChanged("KindArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KindCode {
            get {
                return this.KindCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KindCodeField, value) != true)) {
                    this.KindCodeField = value;
                    this.RaisePropertyChanged("KindCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KindEnglishDesc {
            get {
                return this.KindEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KindEnglishDescField, value) != true)) {
                    this.KindEnglishDescField = value;
                    this.RaisePropertyChanged("KindEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeArabicDesc {
            get {
                return this.MakeArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeArabicDescField, value) != true)) {
                    this.MakeArabicDescField = value;
                    this.RaisePropertyChanged("MakeArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeCode {
            get {
                return this.MakeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeCodeField, value) != true)) {
                    this.MakeCodeField = value;
                    this.RaisePropertyChanged("MakeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeEnglishDesc {
            get {
                return this.MakeEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeEnglishDescField, value) != true)) {
                    this.MakeEnglishDescField = value;
                    this.RaisePropertyChanged("MakeEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelArabicDesc {
            get {
                return this.ModelArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelArabicDescField, value) != true)) {
                    this.ModelArabicDescField = value;
                    this.RaisePropertyChanged("ModelArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelCode {
            get {
                return this.ModelCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelCodeField, value) != true)) {
                    this.ModelCodeField = value;
                    this.RaisePropertyChanged("ModelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelEnglishDesc {
            get {
                return this.ModelEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelEnglishDescField, value) != true)) {
                    this.ModelEnglishDescField = value;
                    this.RaisePropertyChanged("ModelEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MortgageDesc {
            get {
                return this.MortgageDescField;
            }
            set {
                if ((object.ReferenceEquals(this.MortgageDescField, value) != true)) {
                    this.MortgageDescField = value;
                    this.RaisePropertyChanged("MortgageDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MortgageRef {
            get {
                return this.MortgageRefField;
            }
            set {
                if ((object.ReferenceEquals(this.MortgageRefField, value) != true)) {
                    this.MortgageRefField = value;
                    this.RaisePropertyChanged("MortgageRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalityArabicDesc {
            get {
                return this.NationalityArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityArabicDescField, value) != true)) {
                    this.NationalityArabicDescField = value;
                    this.RaisePropertyChanged("NationalityArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalityCode {
            get {
                return this.NationalityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityCodeField, value) != true)) {
                    this.NationalityCodeField = value;
                    this.RaisePropertyChanged("NationalityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalityEnglishDesc {
            get {
                return this.NationalityEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityEnglishDescField, value) != true)) {
                    this.NationalityEnglishDescField = value;
                    this.RaisePropertyChanged("NationalityEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerTcfArabicName {
            get {
                return this.OwnerTcfArabicNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerTcfArabicNameField, value) != true)) {
                    this.OwnerTcfArabicNameField = value;
                    this.RaisePropertyChanged("OwnerTcfArabicName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerTcfEnglishName {
            get {
                return this.OwnerTcfEnglishNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerTcfEnglishNameField, value) != true)) {
                    this.OwnerTcfEnglishNameField = value;
                    this.RaisePropertyChanged("OwnerTcfEnglishName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerTcfNo {
            get {
                return this.OwnerTcfNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerTcfNoField, value) != true)) {
                    this.OwnerTcfNoField = value;
                    this.RaisePropertyChanged("OwnerTcfNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.PlateKey PlateInfo {
            get {
                return this.PlateInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateInfoField, value) != true)) {
                    this.PlateInfoField = value;
                    this.RaisePropertyChanged("PlateInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationDateField, value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationExpiryDate {
            get {
                return this.RegistrationExpiryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationExpiryDateField, value) != true)) {
                    this.RegistrationExpiryDateField = value;
                    this.RaisePropertyChanged("RegistrationExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationRemarks {
            get {
                return this.RegistrationRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationRemarksField, value) != true)) {
                    this.RegistrationRemarksField = value;
                    this.RaisePropertyChanged("RegistrationRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SteeringArabicDesc {
            get {
                return this.SteeringArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.SteeringArabicDescField, value) != true)) {
                    this.SteeringArabicDescField = value;
                    this.RaisePropertyChanged("SteeringArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SteeringCode {
            get {
                return this.SteeringCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SteeringCodeField, value) != true)) {
                    this.SteeringCodeField = value;
                    this.RaisePropertyChanged("SteeringCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SteeringEnglishDesc {
            get {
                return this.SteeringEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.SteeringEnglishDescField, value) != true)) {
                    this.SteeringEnglishDescField = value;
                    this.RaisePropertyChanged("SteeringEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeArabicDesc {
            get {
                return this.TypeArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeArabicDescField, value) != true)) {
                    this.TypeArabicDescField = value;
                    this.RaisePropertyChanged("TypeArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeEnglishDesc {
            get {
                return this.TypeEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeEnglishDescField, value) != true)) {
                    this.TypeEnglishDescField = value;
                    this.RaisePropertyChanged("TypeEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightArabicDesc {
            get {
                return this.WeightArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightArabicDescField, value) != true)) {
                    this.WeightArabicDescField = value;
                    this.RaisePropertyChanged("WeightArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightCode {
            get {
                return this.WeightCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightCodeField, value) != true)) {
                    this.WeightCodeField = value;
                    this.RaisePropertyChanged("WeightCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightEmpty {
            get {
                return this.WeightEmptyField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightEmptyField, value) != true)) {
                    this.WeightEmptyField = value;
                    this.RaisePropertyChanged("WeightEmpty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightEnglishDesc {
            get {
                return this.WeightEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightEnglishDescField, value) != true)) {
                    this.WeightEnglishDescField = value;
                    this.RaisePropertyChanged("WeightEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightFull {
            get {
                return this.WeightFullField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightFullField, value) != true)) {
                    this.WeightFullField = value;
                    this.RaisePropertyChanged("WeightFull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WheelsCount {
            get {
                return this.WheelsCountField;
            }
            set {
                if ((object.ReferenceEquals(this.WheelsCountField, value) != true)) {
                    this.WheelsCountField = value;
                    this.RaisePropertyChanged("WheelsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Year {
            get {
                return this.YearField;
            }
            set {
                if ((object.ReferenceEquals(this.YearField, value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlateKey", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Class")]
    [System.SerializableAttribute()]
    public partial class PlateKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateColorArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlateColorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateColorEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateKindArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlateKindCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateKindEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PlateOrgNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateSourceArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlateSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateSourceEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateTypeArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlateTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateTypeEnglishDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateColorArabicDesc {
            get {
                return this.PlateColorArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateColorArabicDescField, value) != true)) {
                    this.PlateColorArabicDescField = value;
                    this.RaisePropertyChanged("PlateColorArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlateColorCode {
            get {
                return this.PlateColorCodeField;
            }
            set {
                if ((this.PlateColorCodeField.Equals(value) != true)) {
                    this.PlateColorCodeField = value;
                    this.RaisePropertyChanged("PlateColorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateColorEnglishDesc {
            get {
                return this.PlateColorEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateColorEnglishDescField, value) != true)) {
                    this.PlateColorEnglishDescField = value;
                    this.RaisePropertyChanged("PlateColorEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateKindArabicDesc {
            get {
                return this.PlateKindArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateKindArabicDescField, value) != true)) {
                    this.PlateKindArabicDescField = value;
                    this.RaisePropertyChanged("PlateKindArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlateKindCode {
            get {
                return this.PlateKindCodeField;
            }
            set {
                if ((this.PlateKindCodeField.Equals(value) != true)) {
                    this.PlateKindCodeField = value;
                    this.RaisePropertyChanged("PlateKindCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateKindEnglishDesc {
            get {
                return this.PlateKindEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateKindEnglishDescField, value) != true)) {
                    this.PlateKindEnglishDescField = value;
                    this.RaisePropertyChanged("PlateKindEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateNo {
            get {
                return this.PlateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateNoField, value) != true)) {
                    this.PlateNoField = value;
                    this.RaisePropertyChanged("PlateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PlateOrgNo {
            get {
                return this.PlateOrgNoField;
            }
            set {
                if ((this.PlateOrgNoField.Equals(value) != true)) {
                    this.PlateOrgNoField = value;
                    this.RaisePropertyChanged("PlateOrgNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateSourceArabicDesc {
            get {
                return this.PlateSourceArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateSourceArabicDescField, value) != true)) {
                    this.PlateSourceArabicDescField = value;
                    this.RaisePropertyChanged("PlateSourceArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlateSourceCode {
            get {
                return this.PlateSourceCodeField;
            }
            set {
                if ((this.PlateSourceCodeField.Equals(value) != true)) {
                    this.PlateSourceCodeField = value;
                    this.RaisePropertyChanged("PlateSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateSourceEnglishDesc {
            get {
                return this.PlateSourceEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateSourceEnglishDescField, value) != true)) {
                    this.PlateSourceEnglishDescField = value;
                    this.RaisePropertyChanged("PlateSourceEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateTypeArabicDesc {
            get {
                return this.PlateTypeArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateTypeArabicDescField, value) != true)) {
                    this.PlateTypeArabicDescField = value;
                    this.RaisePropertyChanged("PlateTypeArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlateTypeCode {
            get {
                return this.PlateTypeCodeField;
            }
            set {
                if ((this.PlateTypeCodeField.Equals(value) != true)) {
                    this.PlateTypeCodeField = value;
                    this.RaisePropertyChanged("PlateTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateTypeEnglishDesc {
            get {
                return this.PlateTypeEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateTypeEnglishDescField, value) != true)) {
                    this.PlateTypeEnglishDescField = value;
                    this.RaisePropertyChanged("PlateTypeEnglishDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NationalIDRequest", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Request")]
    [System.SerializableAttribute()]
    public partial class NationalIDRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalNo {
            get {
                return this.NationalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalNoField, value) != true)) {
                    this.NationalNoField = value;
                    this.RaisePropertyChanged("NationalNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrafficNoResponse", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Response")]
    [System.SerializableAttribute()]
    public partial class TrafficNoResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TcfNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TcfNo {
            get {
                return this.TcfNoField;
            }
            set {
                if ((this.TcfNoField.Equals(value) != true)) {
                    this.TcfNoField = value;
                    this.RaisePropertyChanged("TcfNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnifiedIDRequest", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Request")]
    [System.SerializableAttribute()]
    public partial class UnifiedIDRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UnifiedIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UnifiedID {
            get {
                return this.UnifiedIDField;
            }
            set {
                if ((this.UnifiedIDField.Equals(value) != true)) {
                    this.UnifiedIDField = value;
                    this.RaisePropertyChanged("UnifiedID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketsDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Request")]
    [System.SerializableAttribute()]
    public partial class TicketsDetailsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LicenseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LicenseSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateColorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateKindCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PlateOrgNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TcfNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LicenseNumber {
            get {
                return this.LicenseNumberField;
            }
            set {
                if ((this.LicenseNumberField.Equals(value) != true)) {
                    this.LicenseNumberField = value;
                    this.RaisePropertyChanged("LicenseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LicenseSourceCode {
            get {
                return this.LicenseSourceCodeField;
            }
            set {
                if ((this.LicenseSourceCodeField.Equals(value) != true)) {
                    this.LicenseSourceCodeField = value;
                    this.RaisePropertyChanged("LicenseSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateColorCode {
            get {
                return this.PlateColorCodeField;
            }
            set {
                if ((this.PlateColorCodeField.Equals(value) != true)) {
                    this.PlateColorCodeField = value;
                    this.RaisePropertyChanged("PlateColorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateKindCode {
            get {
                return this.PlateKindCodeField;
            }
            set {
                if ((this.PlateKindCodeField.Equals(value) != true)) {
                    this.PlateKindCodeField = value;
                    this.RaisePropertyChanged("PlateKindCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateNo {
            get {
                return this.PlateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateNoField, value) != true)) {
                    this.PlateNoField = value;
                    this.RaisePropertyChanged("PlateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PlateOrgNo {
            get {
                return this.PlateOrgNoField;
            }
            set {
                if ((this.PlateOrgNoField.Equals(value) != true)) {
                    this.PlateOrgNoField = value;
                    this.RaisePropertyChanged("PlateOrgNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateSourceCode {
            get {
                return this.PlateSourceCodeField;
            }
            set {
                if ((this.PlateSourceCodeField.Equals(value) != true)) {
                    this.PlateSourceCodeField = value;
                    this.RaisePropertyChanged("PlateSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateTypeCode {
            get {
                return this.PlateTypeCodeField;
            }
            set {
                if ((this.PlateTypeCodeField.Equals(value) != true)) {
                    this.PlateTypeCodeField = value;
                    this.RaisePropertyChanged("PlateTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TcfNo {
            get {
                return this.TcfNoField;
            }
            set {
                if ((this.TcfNoField.Equals(value) != true)) {
                    this.TcfNoField = value;
                    this.RaisePropertyChanged("TcfNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketsDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Response")]
    [System.SerializableAttribute()]
    public partial class TicketsDetailsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BlackPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DiscountRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DriverTcfNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExternalTicketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWebPayableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LateChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LicenseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LicenseSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationDescriptionArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationDescriptionEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateColorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateKindCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PlateOrgNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlateTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TicketDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TicketNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TicketTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalAmountAfterDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VehicleOwnerTcfNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlackPoints {
            get {
                return this.BlackPointsField;
            }
            set {
                if ((this.BlackPointsField.Equals(value) != true)) {
                    this.BlackPointsField = value;
                    this.RaisePropertyChanged("BlackPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DiscountRate {
            get {
                return this.DiscountRateField;
            }
            set {
                if ((this.DiscountRateField.Equals(value) != true)) {
                    this.DiscountRateField = value;
                    this.RaisePropertyChanged("DiscountRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DriverTcfNo {
            get {
                return this.DriverTcfNoField;
            }
            set {
                if ((this.DriverTcfNoField.Equals(value) != true)) {
                    this.DriverTcfNoField = value;
                    this.RaisePropertyChanged("DriverTcfNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExternalTicket {
            get {
                return this.IsExternalTicketField;
            }
            set {
                if ((this.IsExternalTicketField.Equals(value) != true)) {
                    this.IsExternalTicketField = value;
                    this.RaisePropertyChanged("IsExternalTicket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWebPayable {
            get {
                return this.IsWebPayableField;
            }
            set {
                if ((this.IsWebPayableField.Equals(value) != true)) {
                    this.IsWebPayableField = value;
                    this.RaisePropertyChanged("IsWebPayable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LateCharges {
            get {
                return this.LateChargesField;
            }
            set {
                if ((this.LateChargesField.Equals(value) != true)) {
                    this.LateChargesField = value;
                    this.RaisePropertyChanged("LateCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LicenseNumber {
            get {
                return this.LicenseNumberField;
            }
            set {
                if ((this.LicenseNumberField.Equals(value) != true)) {
                    this.LicenseNumberField = value;
                    this.RaisePropertyChanged("LicenseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LicenseSourceCode {
            get {
                return this.LicenseSourceCodeField;
            }
            set {
                if ((this.LicenseSourceCodeField.Equals(value) != true)) {
                    this.LicenseSourceCodeField = value;
                    this.RaisePropertyChanged("LicenseSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationDescriptionAr {
            get {
                return this.LocationDescriptionArField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationDescriptionArField, value) != true)) {
                    this.LocationDescriptionArField = value;
                    this.RaisePropertyChanged("LocationDescriptionAr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationDescriptionEn {
            get {
                return this.LocationDescriptionEnField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationDescriptionEnField, value) != true)) {
                    this.LocationDescriptionEnField = value;
                    this.RaisePropertyChanged("LocationDescriptionEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateColorCode {
            get {
                return this.PlateColorCodeField;
            }
            set {
                if ((this.PlateColorCodeField.Equals(value) != true)) {
                    this.PlateColorCodeField = value;
                    this.RaisePropertyChanged("PlateColorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateKindCode {
            get {
                return this.PlateKindCodeField;
            }
            set {
                if ((this.PlateKindCodeField.Equals(value) != true)) {
                    this.PlateKindCodeField = value;
                    this.RaisePropertyChanged("PlateKindCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlateNo {
            get {
                return this.PlateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateNoField, value) != true)) {
                    this.PlateNoField = value;
                    this.RaisePropertyChanged("PlateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PlateOrgNo {
            get {
                return this.PlateOrgNoField;
            }
            set {
                if ((this.PlateOrgNoField.Equals(value) != true)) {
                    this.PlateOrgNoField = value;
                    this.RaisePropertyChanged("PlateOrgNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateSourceCode {
            get {
                return this.PlateSourceCodeField;
            }
            set {
                if ((this.PlateSourceCodeField.Equals(value) != true)) {
                    this.PlateSourceCodeField = value;
                    this.RaisePropertyChanged("PlateSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlateTypeCode {
            get {
                return this.PlateTypeCodeField;
            }
            set {
                if ((this.PlateTypeCodeField.Equals(value) != true)) {
                    this.PlateTypeCodeField = value;
                    this.RaisePropertyChanged("PlateTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TicketDate {
            get {
                return this.TicketDateField;
            }
            set {
                if ((this.TicketDateField.Equals(value) != true)) {
                    this.TicketDateField = value;
                    this.RaisePropertyChanged("TicketDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TicketNumber {
            get {
                return this.TicketNumberField;
            }
            set {
                if ((this.TicketNumberField.Equals(value) != true)) {
                    this.TicketNumberField = value;
                    this.RaisePropertyChanged("TicketNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketSourceCode {
            get {
                return this.TicketSourceCodeField;
            }
            set {
                if ((this.TicketSourceCodeField.Equals(value) != true)) {
                    this.TicketSourceCodeField = value;
                    this.RaisePropertyChanged("TicketSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TicketTime {
            get {
                return this.TicketTimeField;
            }
            set {
                if ((this.TicketTimeField.Equals(value) != true)) {
                    this.TicketTimeField = value;
                    this.RaisePropertyChanged("TicketTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketType {
            get {
                return this.TicketTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketTypeField, value) != true)) {
                    this.TicketTypeField = value;
                    this.RaisePropertyChanged("TicketType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketYear {
            get {
                return this.TicketYearField;
            }
            set {
                if ((this.TicketYearField.Equals(value) != true)) {
                    this.TicketYearField = value;
                    this.RaisePropertyChanged("TicketYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalAmountAfterDiscount {
            get {
                return this.TotalAmountAfterDiscountField;
            }
            set {
                if ((this.TotalAmountAfterDiscountField.Equals(value) != true)) {
                    this.TotalAmountAfterDiscountField = value;
                    this.RaisePropertyChanged("TotalAmountAfterDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VehicleOwnerTcfNo {
            get {
                return this.VehicleOwnerTcfNoField;
            }
            set {
                if ((this.VehicleOwnerTcfNoField.Equals(value) != true)) {
                    this.VehicleOwnerTcfNoField = value;
                    this.RaisePropertyChanged("VehicleOwnerTcfNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewTicketRequest", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Request")]
    [System.SerializableAttribute()]
    public partial class NewTicketRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CapturedSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DriverTcfNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseKey LicenseInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.GPSLocation LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MaterialsCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MeasuredSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.PlateKey PlateInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadarKindCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RadarTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SpeedLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TicketDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TicketNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VehicleColorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VehicleMakeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VehicleModelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleOwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VehicleOwnerTcfNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VehicleTypeCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CapturedSpeed {
            get {
                return this.CapturedSpeedField;
            }
            set {
                if ((this.CapturedSpeedField.Equals(value) != true)) {
                    this.CapturedSpeedField = value;
                    this.RaisePropertyChanged("CapturedSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverName {
            get {
                return this.DriverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverNameField, value) != true)) {
                    this.DriverNameField = value;
                    this.RaisePropertyChanged("DriverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DriverTcfNo {
            get {
                return this.DriverTcfNoField;
            }
            set {
                if ((this.DriverTcfNoField.Equals(value) != true)) {
                    this.DriverTcfNoField = value;
                    this.RaisePropertyChanged("DriverTcfNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseKey LicenseInfo {
            get {
                return this.LicenseInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseInfoField, value) != true)) {
                    this.LicenseInfoField = value;
                    this.RaisePropertyChanged("LicenseInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.GPSLocation Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((this.LocationCodeField.Equals(value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MaterialsCodes {
            get {
                return this.MaterialsCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialsCodesField, value) != true)) {
                    this.MaterialsCodesField = value;
                    this.RaisePropertyChanged("MaterialsCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MeasuredSpeed {
            get {
                return this.MeasuredSpeedField;
            }
            set {
                if ((this.MeasuredSpeedField.Equals(value) != true)) {
                    this.MeasuredSpeedField = value;
                    this.RaisePropertyChanged("MeasuredSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.PlateKey PlateInfo {
            get {
                return this.PlateInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateInfoField, value) != true)) {
                    this.PlateInfoField = value;
                    this.RaisePropertyChanged("PlateInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RadarKindCode {
            get {
                return this.RadarKindCodeField;
            }
            set {
                if ((this.RadarKindCodeField.Equals(value) != true)) {
                    this.RadarKindCodeField = value;
                    this.RaisePropertyChanged("RadarKindCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RadarTypeCode {
            get {
                return this.RadarTypeCodeField;
            }
            set {
                if ((this.RadarTypeCodeField.Equals(value) != true)) {
                    this.RadarTypeCodeField = value;
                    this.RaisePropertyChanged("RadarTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SpeedLimit {
            get {
                return this.SpeedLimitField;
            }
            set {
                if ((this.SpeedLimitField.Equals(value) != true)) {
                    this.SpeedLimitField = value;
                    this.RaisePropertyChanged("SpeedLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TicketDateTime {
            get {
                return this.TicketDateTimeField;
            }
            set {
                if ((this.TicketDateTimeField.Equals(value) != true)) {
                    this.TicketDateTimeField = value;
                    this.RaisePropertyChanged("TicketDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TicketNo {
            get {
                return this.TicketNoField;
            }
            set {
                if ((this.TicketNoField.Equals(value) != true)) {
                    this.TicketNoField = value;
                    this.RaisePropertyChanged("TicketNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketType {
            get {
                return this.TicketTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketTypeField, value) != true)) {
                    this.TicketTypeField = value;
                    this.RaisePropertyChanged("TicketType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VehicleColorCode {
            get {
                return this.VehicleColorCodeField;
            }
            set {
                if ((this.VehicleColorCodeField.Equals(value) != true)) {
                    this.VehicleColorCodeField = value;
                    this.RaisePropertyChanged("VehicleColorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VehicleMakeCode {
            get {
                return this.VehicleMakeCodeField;
            }
            set {
                if ((this.VehicleMakeCodeField.Equals(value) != true)) {
                    this.VehicleMakeCodeField = value;
                    this.RaisePropertyChanged("VehicleMakeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VehicleModelCode {
            get {
                return this.VehicleModelCodeField;
            }
            set {
                if ((this.VehicleModelCodeField.Equals(value) != true)) {
                    this.VehicleModelCodeField = value;
                    this.RaisePropertyChanged("VehicleModelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleOwnerName {
            get {
                return this.VehicleOwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleOwnerNameField, value) != true)) {
                    this.VehicleOwnerNameField = value;
                    this.RaisePropertyChanged("VehicleOwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VehicleOwnerTcfNo {
            get {
                return this.VehicleOwnerTcfNoField;
            }
            set {
                if ((this.VehicleOwnerTcfNoField.Equals(value) != true)) {
                    this.VehicleOwnerTcfNoField = value;
                    this.RaisePropertyChanged("VehicleOwnerTcfNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VehicleTypeCode {
            get {
                return this.VehicleTypeCodeField;
            }
            set {
                if ((this.VehicleTypeCodeField.Equals(value) != true)) {
                    this.VehicleTypeCodeField = value;
                    this.RaisePropertyChanged("VehicleTypeCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseKey", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Class")]
    [System.SerializableAttribute()]
    public partial class LicenseKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LicenseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseSourceArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LicenseSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseSourceEnglishDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LicenseNo {
            get {
                return this.LicenseNoField;
            }
            set {
                if ((this.LicenseNoField.Equals(value) != true)) {
                    this.LicenseNoField = value;
                    this.RaisePropertyChanged("LicenseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseSourceArabicDesc {
            get {
                return this.LicenseSourceArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseSourceArabicDescField, value) != true)) {
                    this.LicenseSourceArabicDescField = value;
                    this.RaisePropertyChanged("LicenseSourceArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LicenseSourceCode {
            get {
                return this.LicenseSourceCodeField;
            }
            set {
                if ((this.LicenseSourceCodeField.Equals(value) != true)) {
                    this.LicenseSourceCodeField = value;
                    this.RaisePropertyChanged("LicenseSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseSourceEnglishDesc {
            get {
                return this.LicenseSourceEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseSourceEnglishDescField, value) != true)) {
                    this.LicenseSourceEnglishDescField = value;
                    this.RaisePropertyChanged("LicenseSourceEnglishDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GPSLocation", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Class")]
    [System.SerializableAttribute()]
    public partial class GPSLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string X {
            get {
                return this.XField;
            }
            set {
                if ((object.ReferenceEquals(this.XField, value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Y {
            get {
                return this.YField;
            }
            set {
                if ((object.ReferenceEquals(this.YField, value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewTicketResponse", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Response")]
    [System.SerializableAttribute()]
    public partial class NewTicketResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TicketNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketSourceCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TicketNo {
            get {
                return this.TicketNoField;
            }
            set {
                if ((this.TicketNoField.Equals(value) != true)) {
                    this.TicketNoField = value;
                    this.RaisePropertyChanged("TicketNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketSourceCode {
            get {
                return this.TicketSourceCodeField;
            }
            set {
                if ((this.TicketSourceCodeField.Equals(value) != true)) {
                    this.TicketSourceCodeField = value;
                    this.RaisePropertyChanged("TicketSourceCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LookupRecordResponse", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Response")]
    [System.SerializableAttribute()]
    public partial class LookupRecordResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArabicDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArabicDescription {
            get {
                return this.ArabicDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ArabicDescriptionField, value) != true)) {
                    this.ArabicDescriptionField = value;
                    this.RaisePropertyChanged("ArabicDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishDescription {
            get {
                return this.EnglishDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishDescriptionField, value) != true)) {
                    this.EnglishDescriptionField = value;
                    this.RaisePropertyChanged("EnglishDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Request")]
    [System.SerializableAttribute()]
    public partial class LicenseDetailsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseKey LicenseInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TcfNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TicketDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseKey LicenseInfo {
            get {
                return this.LicenseInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseInfoField, value) != true)) {
                    this.LicenseInfoField = value;
                    this.RaisePropertyChanged("LicenseInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemCode {
            get {
                return this.SystemCodeField;
            }
            set {
                if ((this.SystemCodeField.Equals(value) != true)) {
                    this.SystemCodeField = value;
                    this.RaisePropertyChanged("SystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TcfNo {
            get {
                return this.TcfNoField;
            }
            set {
                if ((this.TcfNoField.Equals(value) != true)) {
                    this.TcfNoField = value;
                    this.RaisePropertyChanged("TcfNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TicketDate {
            get {
                return this.TicketDateField;
            }
            set {
                if ((this.TicketDateField.Equals(value) != true)) {
                    this.TicketDateField = value;
                    this.RaisePropertyChanged("TicketDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Response")]
    [System.SerializableAttribute()]
    public partial class LicenseDetailsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BlackPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverArabicNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverEnglishNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FLSCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FLSDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasBlackPointsFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBannedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LicenseIssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseKey LicenseKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseKindArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LicenseKindCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseKindEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LicenseRenewingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LicesenExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicalStatusArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhysicalStatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicalStatusEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.SubLicense[] SubLicensesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TcfNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BlackPoints {
            get {
                return this.BlackPointsField;
            }
            set {
                if ((this.BlackPointsField.Equals(value) != true)) {
                    this.BlackPointsField = value;
                    this.RaisePropertyChanged("BlackPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverArabicName {
            get {
                return this.DriverArabicNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverArabicNameField, value) != true)) {
                    this.DriverArabicNameField = value;
                    this.RaisePropertyChanged("DriverArabicName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverEnglishName {
            get {
                return this.DriverEnglishNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverEnglishNameField, value) != true)) {
                    this.DriverEnglishNameField = value;
                    this.RaisePropertyChanged("DriverEnglishName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FLSCode {
            get {
                return this.FLSCodeField;
            }
            set {
                if ((this.FLSCodeField.Equals(value) != true)) {
                    this.FLSCodeField = value;
                    this.RaisePropertyChanged("FLSCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLSDesc {
            get {
                return this.FLSDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FLSDescField, value) != true)) {
                    this.FLSDescField = value;
                    this.RaisePropertyChanged("FLSDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasBlackPointsFile {
            get {
                return this.HasBlackPointsFileField;
            }
            set {
                if ((this.HasBlackPointsFileField.Equals(value) != true)) {
                    this.HasBlackPointsFileField = value;
                    this.RaisePropertyChanged("HasBlackPointsFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBanned {
            get {
                return this.IsBannedField;
            }
            set {
                if ((this.IsBannedField.Equals(value) != true)) {
                    this.IsBannedField = value;
                    this.RaisePropertyChanged("IsBanned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LicenseIssueDate {
            get {
                return this.LicenseIssueDateField;
            }
            set {
                if ((this.LicenseIssueDateField.Equals(value) != true)) {
                    this.LicenseIssueDateField = value;
                    this.RaisePropertyChanged("LicenseIssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseKey LicenseKey {
            get {
                return this.LicenseKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseKeyField, value) != true)) {
                    this.LicenseKeyField = value;
                    this.RaisePropertyChanged("LicenseKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseKindArabicDesc {
            get {
                return this.LicenseKindArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseKindArabicDescField, value) != true)) {
                    this.LicenseKindArabicDescField = value;
                    this.RaisePropertyChanged("LicenseKindArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LicenseKindCode {
            get {
                return this.LicenseKindCodeField;
            }
            set {
                if ((this.LicenseKindCodeField.Equals(value) != true)) {
                    this.LicenseKindCodeField = value;
                    this.RaisePropertyChanged("LicenseKindCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseKindEnglishDesc {
            get {
                return this.LicenseKindEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseKindEnglishDescField, value) != true)) {
                    this.LicenseKindEnglishDescField = value;
                    this.RaisePropertyChanged("LicenseKindEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LicenseRenewingDate {
            get {
                return this.LicenseRenewingDateField;
            }
            set {
                if ((this.LicenseRenewingDateField.Equals(value) != true)) {
                    this.LicenseRenewingDateField = value;
                    this.RaisePropertyChanged("LicenseRenewingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LicesenExpiryDate {
            get {
                return this.LicesenExpiryDateField;
            }
            set {
                if ((this.LicesenExpiryDateField.Equals(value) != true)) {
                    this.LicesenExpiryDateField = value;
                    this.RaisePropertyChanged("LicesenExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicalStatusArabicDesc {
            get {
                return this.PhysicalStatusArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalStatusArabicDescField, value) != true)) {
                    this.PhysicalStatusArabicDescField = value;
                    this.RaisePropertyChanged("PhysicalStatusArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhysicalStatusCode {
            get {
                return this.PhysicalStatusCodeField;
            }
            set {
                if ((this.PhysicalStatusCodeField.Equals(value) != true)) {
                    this.PhysicalStatusCodeField = value;
                    this.RaisePropertyChanged("PhysicalStatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicalStatusEnglishDesc {
            get {
                return this.PhysicalStatusEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalStatusEnglishDescField, value) != true)) {
                    this.PhysicalStatusEnglishDescField = value;
                    this.RaisePropertyChanged("PhysicalStatusEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.SubLicense[] SubLicenses {
            get {
                return this.SubLicensesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubLicensesField, value) != true)) {
                    this.SubLicensesField = value;
                    this.RaisePropertyChanged("SubLicenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TcfNo {
            get {
                return this.TcfNoField;
            }
            set {
                if ((this.TcfNoField.Equals(value) != true)) {
                    this.TcfNoField = value;
                    this.RaisePropertyChanged("TcfNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubLicense", Namespace="http://schemas.datacontract.org/2004/07/STC.Projects.WCF.ServiceLayer.Class")]
    [System.SerializableAttribute()]
    public partial class SubLicense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GearCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GearEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseTypeArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LicenseTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseTypeEnglishDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LicenseTypeIssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseTypeSourceArabicDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LicenseTypeSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseTypeSourceEnglishDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearArabicDesc {
            get {
                return this.GearArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GearArabicDescField, value) != true)) {
                    this.GearArabicDescField = value;
                    this.RaisePropertyChanged("GearArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GearCode {
            get {
                return this.GearCodeField;
            }
            set {
                if ((this.GearCodeField.Equals(value) != true)) {
                    this.GearCodeField = value;
                    this.RaisePropertyChanged("GearCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GearEnglishDesc {
            get {
                return this.GearEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GearEnglishDescField, value) != true)) {
                    this.GearEnglishDescField = value;
                    this.RaisePropertyChanged("GearEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseTypeArabicDesc {
            get {
                return this.LicenseTypeArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseTypeArabicDescField, value) != true)) {
                    this.LicenseTypeArabicDescField = value;
                    this.RaisePropertyChanged("LicenseTypeArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LicenseTypeCode {
            get {
                return this.LicenseTypeCodeField;
            }
            set {
                if ((this.LicenseTypeCodeField.Equals(value) != true)) {
                    this.LicenseTypeCodeField = value;
                    this.RaisePropertyChanged("LicenseTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseTypeEnglishDesc {
            get {
                return this.LicenseTypeEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseTypeEnglishDescField, value) != true)) {
                    this.LicenseTypeEnglishDescField = value;
                    this.RaisePropertyChanged("LicenseTypeEnglishDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LicenseTypeIssueDate {
            get {
                return this.LicenseTypeIssueDateField;
            }
            set {
                if ((this.LicenseTypeIssueDateField.Equals(value) != true)) {
                    this.LicenseTypeIssueDateField = value;
                    this.RaisePropertyChanged("LicenseTypeIssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseTypeSourceArabicDesc {
            get {
                return this.LicenseTypeSourceArabicDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseTypeSourceArabicDescField, value) != true)) {
                    this.LicenseTypeSourceArabicDescField = value;
                    this.RaisePropertyChanged("LicenseTypeSourceArabicDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LicenseTypeSourceCode {
            get {
                return this.LicenseTypeSourceCodeField;
            }
            set {
                if ((this.LicenseTypeSourceCodeField.Equals(value) != true)) {
                    this.LicenseTypeSourceCodeField = value;
                    this.RaisePropertyChanged("LicenseTypeSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseTypeSourceEnglishDesc {
            get {
                return this.LicenseTypeSourceEnglishDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseTypeSourceEnglishDescField, value) != true)) {
                    this.LicenseTypeSourceEnglishDescField = value;
                    this.RaisePropertyChanged("LicenseTypeSourceEnglishDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ADPUTSserviceReference.IADPUTSService")]
    public interface IADPUTSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetTrafficProfile", ReplyAction="http://tempuri.org/IADPUTSService/GetTrafficProfileResponse")]
        STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficProfileResponse GetTrafficProfile(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficProfileRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetTrafficProfile", ReplyAction="http://tempuri.org/IADPUTSService/GetTrafficProfileResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficProfileResponse> GetTrafficProfileAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficProfileRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetPersonIsWanted", ReplyAction="http://tempuri.org/IADPUTSService/GetPersonIsWantedResponse")]
        bool GetPersonIsWanted(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.PersonDetailsRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetPersonIsWanted", ReplyAction="http://tempuri.org/IADPUTSService/GetPersonIsWantedResponse")]
        System.Threading.Tasks.Task<bool> GetPersonIsWantedAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.PersonDetailsRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleIsWanted", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleIsWantedResponse")]
        bool GetVehicleIsWanted(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleIsWanted", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleIsWantedResponse")]
        System.Threading.Tasks.Task<bool> GetVehicleIsWantedAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleDetails", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleDetailsResponse")]
        STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsResponse GetVehicleDetails(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleDetails", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleDetailsResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsResponse> GetVehicleDetailsAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetTrfNoByNID", ReplyAction="http://tempuri.org/IADPUTSService/GetTrfNoByNIDResponse")]
        STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficNoResponse GetTrfNoByNID(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NationalIDRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetTrfNoByNID", ReplyAction="http://tempuri.org/IADPUTSService/GetTrfNoByNIDResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficNoResponse> GetTrfNoByNIDAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NationalIDRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetTrfNoByUID", ReplyAction="http://tempuri.org/IADPUTSService/GetTrfNoByUIDResponse")]
        STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficNoResponse GetTrfNoByUID(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.UnifiedIDRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetTrfNoByUID", ReplyAction="http://tempuri.org/IADPUTSService/GetTrfNoByUIDResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficNoResponse> GetTrfNoByUIDAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.UnifiedIDRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetTicketDetails", ReplyAction="http://tempuri.org/IADPUTSService/GetTicketDetailsResponse")]
        STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TicketsDetailsResponse[] GetTicketDetails(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TicketsDetailsRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetTicketDetails", ReplyAction="http://tempuri.org/IADPUTSService/GetTicketDetailsResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TicketsDetailsResponse[]> GetTicketDetailsAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TicketsDetailsRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/CreateNewTicket", ReplyAction="http://tempuri.org/IADPUTSService/CreateNewTicketResponse")]
        STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NewTicketResponse CreateNewTicket(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NewTicketRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/CreateNewTicket", ReplyAction="http://tempuri.org/IADPUTSService/CreateNewTicketResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NewTicketResponse> CreateNewTicketAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NewTicketRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetLocationsLookup", ReplyAction="http://tempuri.org/IADPUTSService/GetLocationsLookupResponse")]
        STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LookupRecordResponse[] GetLocationsLookup(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetLocationsLookup", ReplyAction="http://tempuri.org/IADPUTSService/GetLocationsLookupResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LookupRecordResponse[]> GetLocationsLookupAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetLicenseDetails", ReplyAction="http://tempuri.org/IADPUTSService/GetLicenseDetailsResponse")]
        STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseDetailsResponse GetLicenseDetails(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseDetailsRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetLicenseDetails", ReplyAction="http://tempuri.org/IADPUTSService/GetLicenseDetailsResponse")]
        System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseDetailsResponse> GetLicenseDetailsAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseDetailsRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehiclePlateClassifications", ReplyAction="http://tempuri.org/IADPUTSService/GetVehiclePlateClassificationsResponse")]
        STC.Projects.ClassLibrary.DTO.VehiclePlateClassificationsDTO[] GetVehiclePlateClassifications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehiclePlateClassifications", ReplyAction="http://tempuri.org/IADPUTSService/GetVehiclePlateClassificationsResponse")]
        System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehiclePlateClassificationsDTO[]> GetVehiclePlateClassificationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehiclePlateColor", ReplyAction="http://tempuri.org/IADPUTSService/GetVehiclePlateColorResponse")]
        STC.Projects.ClassLibrary.DTO.VehiclePlateColorDTO[] GetVehiclePlateColor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehiclePlateColor", ReplyAction="http://tempuri.org/IADPUTSService/GetVehiclePlateColorResponse")]
        System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehiclePlateColorDTO[]> GetVehiclePlateColorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehiclePlateKind", ReplyAction="http://tempuri.org/IADPUTSService/GetVehiclePlateKindResponse")]
        STC.Projects.ClassLibrary.DTO.VehiclePlateKindDTO[] GetVehiclePlateKind();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehiclePlateKind", ReplyAction="http://tempuri.org/IADPUTSService/GetVehiclePlateKindResponse")]
        System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehiclePlateKindDTO[]> GetVehiclePlateKindAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehiclePlateSource", ReplyAction="http://tempuri.org/IADPUTSService/GetVehiclePlateSourceResponse")]
        STC.Projects.ClassLibrary.DTO.VehiclePlateSourceDTO[] GetVehiclePlateSource();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehiclePlateSource", ReplyAction="http://tempuri.org/IADPUTSService/GetVehiclePlateSourceResponse")]
        System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehiclePlateSourceDTO[]> GetVehiclePlateSourceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleViolationClassifications", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleViolationClassificationsResponse")]
        STC.Projects.ClassLibrary.DTO.VehicleViolationClassificationsDTO[] GetVehicleViolationClassifications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleViolationClassifications", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleViolationClassificationsResponse")]
        System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehicleViolationClassificationsDTO[]> GetVehicleViolationClassificationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleViolationInterceptsTypes", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleViolationInterceptsTypesResponse")]
        STC.Projects.ClassLibrary.DTO.VehicleViolationInterceptsTypesDTO[] GetVehicleViolationInterceptsTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleViolationInterceptsTypes", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleViolationInterceptsTypesResponse")]
        System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehicleViolationInterceptsTypesDTO[]> GetVehicleViolationInterceptsTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleViolationsTypes", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleViolationsTypesResponse")]
        STC.Projects.ClassLibrary.DTO.VehicleViolationsTypesDTO[] GetVehicleViolationsTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleViolationsTypes", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleViolationsTypesResponse")]
        System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehicleViolationsTypesDTO[]> GetVehicleViolationsTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleUTSTypes", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleUTSTypesResponse")]
        STC.Projects.ClassLibrary.DTO.VehicleUTSTypeDTO[] GetVehicleUTSTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleUTSTypes", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleUTSTypesResponse")]
        System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehicleUTSTypeDTO[]> GetVehicleUTSTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleUTSModels", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleUTSModelsResponse")]
        STC.Projects.ClassLibrary.DTO.VehicleModelDTO[] GetVehicleUTSModels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADPUTSService/GetVehicleUTSModels", ReplyAction="http://tempuri.org/IADPUTSService/GetVehicleUTSModelsResponse")]
        System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehicleModelDTO[]> GetVehicleUTSModelsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IADPUTSServiceChannel : STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.IADPUTSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ADPUTSServiceClient : System.ServiceModel.ClientBase<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.IADPUTSService>, STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.IADPUTSService {
        
        public ADPUTSServiceClient() {
        }
        
        public ADPUTSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ADPUTSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ADPUTSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ADPUTSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficProfileResponse GetTrafficProfile(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficProfileRequest req) {
            return base.Channel.GetTrafficProfile(req);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficProfileResponse> GetTrafficProfileAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficProfileRequest req) {
            return base.Channel.GetTrafficProfileAsync(req);
        }
        
        public bool GetPersonIsWanted(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.PersonDetailsRequest req) {
            return base.Channel.GetPersonIsWanted(req);
        }
        
        public System.Threading.Tasks.Task<bool> GetPersonIsWantedAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.PersonDetailsRequest req) {
            return base.Channel.GetPersonIsWantedAsync(req);
        }
        
        public bool GetVehicleIsWanted(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsRequest req) {
            return base.Channel.GetVehicleIsWanted(req);
        }
        
        public System.Threading.Tasks.Task<bool> GetVehicleIsWantedAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsRequest req) {
            return base.Channel.GetVehicleIsWantedAsync(req);
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsResponse GetVehicleDetails(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsRequest req) {
            return base.Channel.GetVehicleDetails(req);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsResponse> GetVehicleDetailsAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.VehicleDetailsRequest req) {
            return base.Channel.GetVehicleDetailsAsync(req);
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficNoResponse GetTrfNoByNID(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NationalIDRequest req) {
            return base.Channel.GetTrfNoByNID(req);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficNoResponse> GetTrfNoByNIDAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NationalIDRequest req) {
            return base.Channel.GetTrfNoByNIDAsync(req);
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficNoResponse GetTrfNoByUID(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.UnifiedIDRequest req) {
            return base.Channel.GetTrfNoByUID(req);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TrafficNoResponse> GetTrfNoByUIDAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.UnifiedIDRequest req) {
            return base.Channel.GetTrfNoByUIDAsync(req);
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TicketsDetailsResponse[] GetTicketDetails(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TicketsDetailsRequest req) {
            return base.Channel.GetTicketDetails(req);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TicketsDetailsResponse[]> GetTicketDetailsAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.TicketsDetailsRequest req) {
            return base.Channel.GetTicketDetailsAsync(req);
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NewTicketResponse CreateNewTicket(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NewTicketRequest req) {
            return base.Channel.CreateNewTicket(req);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NewTicketResponse> CreateNewTicketAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.NewTicketRequest req) {
            return base.Channel.CreateNewTicketAsync(req);
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LookupRecordResponse[] GetLocationsLookup(string Username, string Password) {
            return base.Channel.GetLocationsLookup(Username, Password);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LookupRecordResponse[]> GetLocationsLookupAsync(string Username, string Password) {
            return base.Channel.GetLocationsLookupAsync(Username, Password);
        }
        
        public STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseDetailsResponse GetLicenseDetails(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseDetailsRequest req) {
            return base.Channel.GetLicenseDetails(req);
        }
        
        public System.Threading.Tasks.Task<STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseDetailsResponse> GetLicenseDetailsAsync(STC.Projects.WPFControlLibrary.SOPBox.ADPUTSserviceReference.LicenseDetailsRequest req) {
            return base.Channel.GetLicenseDetailsAsync(req);
        }
        
        public STC.Projects.ClassLibrary.DTO.VehiclePlateClassificationsDTO[] GetVehiclePlateClassifications() {
            return base.Channel.GetVehiclePlateClassifications();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehiclePlateClassificationsDTO[]> GetVehiclePlateClassificationsAsync() {
            return base.Channel.GetVehiclePlateClassificationsAsync();
        }
        
        public STC.Projects.ClassLibrary.DTO.VehiclePlateColorDTO[] GetVehiclePlateColor() {
            return base.Channel.GetVehiclePlateColor();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehiclePlateColorDTO[]> GetVehiclePlateColorAsync() {
            return base.Channel.GetVehiclePlateColorAsync();
        }
        
        public STC.Projects.ClassLibrary.DTO.VehiclePlateKindDTO[] GetVehiclePlateKind() {
            return base.Channel.GetVehiclePlateKind();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehiclePlateKindDTO[]> GetVehiclePlateKindAsync() {
            return base.Channel.GetVehiclePlateKindAsync();
        }
        
        public STC.Projects.ClassLibrary.DTO.VehiclePlateSourceDTO[] GetVehiclePlateSource() {
            return base.Channel.GetVehiclePlateSource();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehiclePlateSourceDTO[]> GetVehiclePlateSourceAsync() {
            return base.Channel.GetVehiclePlateSourceAsync();
        }
        
        public STC.Projects.ClassLibrary.DTO.VehicleViolationClassificationsDTO[] GetVehicleViolationClassifications() {
            return base.Channel.GetVehicleViolationClassifications();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehicleViolationClassificationsDTO[]> GetVehicleViolationClassificationsAsync() {
            return base.Channel.GetVehicleViolationClassificationsAsync();
        }
        
        public STC.Projects.ClassLibrary.DTO.VehicleViolationInterceptsTypesDTO[] GetVehicleViolationInterceptsTypes() {
            return base.Channel.GetVehicleViolationInterceptsTypes();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehicleViolationInterceptsTypesDTO[]> GetVehicleViolationInterceptsTypesAsync() {
            return base.Channel.GetVehicleViolationInterceptsTypesAsync();
        }
        
        public STC.Projects.ClassLibrary.DTO.VehicleViolationsTypesDTO[] GetVehicleViolationsTypes() {
            return base.Channel.GetVehicleViolationsTypes();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehicleViolationsTypesDTO[]> GetVehicleViolationsTypesAsync() {
            return base.Channel.GetVehicleViolationsTypesAsync();
        }
        
        public STC.Projects.ClassLibrary.DTO.VehicleUTSTypeDTO[] GetVehicleUTSTypes() {
            return base.Channel.GetVehicleUTSTypes();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehicleUTSTypeDTO[]> GetVehicleUTSTypesAsync() {
            return base.Channel.GetVehicleUTSTypesAsync();
        }
        
        public STC.Projects.ClassLibrary.DTO.VehicleModelDTO[] GetVehicleUTSModels() {
            return base.Channel.GetVehicleUTSModels();
        }
        
        public System.Threading.Tasks.Task<STC.Projects.ClassLibrary.DTO.VehicleModelDTO[]> GetVehicleUTSModelsAsync() {
            return base.Channel.GetVehicleUTSModelsAsync();
        }
    }
}
