<UserControl x:Class="STC.Projects.WPFControlLibrary.SOPBox.UserControls.SocialMediaUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:tools="clr-namespace:Telerik.Windows.Media.Imaging.Tools;assembly=Telerik.Windows.Controls.ImageEditor"
             xmlns:p="clr-namespace:STC.Projects.WPFControlLibrary.SOPBox.Properties"
             mc:Ignorable="d" Opacity="0.95"
             xmlns:Telerik="http://schemas.telerik.com/2008/xaml/presentation"
             RenderTransformOrigin="0.5,.5">

    <UserControl.RenderTransform>
        <TranslateTransform X="385" />
    </UserControl.RenderTransform>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Page.Loaded">
            <BeginStoryboard>
                <Storyboard >
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" From="300" To="0" Duration="0:0:1" BeginTime="0:0:0.001" SpeedRatio="3" >

                    </DoubleAnimation>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>

    <UserControl.Resources>

        <Storyboard x:Key="MyStoryboard">
            <DoubleAnimation Storyboard.TargetName="CamerasListActionPanelUIcontrol" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" From="0" To="300" Duration="0:0:1" SpeedRatio="4" />
        </Storyboard>

        <Style x:Key="IsMoseOvernone" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="bg" />
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Opacity" Value="0.5"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IsMoseOverGrid" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#008c99" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#00ffcc" />
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#008c99">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#00ffcc" TargetName="bg" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="BorderBrush" Value="#008c99" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="#00ffcc" />
            <Setter Property="Background" Value="#2bb774"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnChecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="25"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnUnchecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                    <SplineThicknessKeyFrame KeyTime="00:00:00.3000000" Value="1,1,1,1"/>
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <DockPanel x:Name="dockPanel">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                            <Grid Margin="5,5,5,5" Width="60" Height="20" Background="#2bb774">

                                <TextBlock HorizontalAlignment="Left" Margin="2,0,0,0" Width="30" FontSize="12" FontWeight="Bold" Text="{x:Static p:Resources.strOff}" TextWrapping="Wrap"/>
                                <TextBlock Text="{x:Static p:Resources.strOn}" TextWrapping="Wrap" FontWeight="Bold" FontSize="12" HorizontalAlignment="Right" Margin="5,0,5,0"/>
                                <Border HorizontalAlignment="Left" x:Name="slider" Width="23" RenderTransformOrigin="0.5,0.5" Margin="1,1,1,1">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFF" Offset="0"/>
                                            <GradientStop Color="#FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFF" Offset="1"/>
                                            <GradientStop Color="#FFFFFF" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </DockPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">


            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#00ffcc"/>
            <!--<Setter Property="BorderThickness" Value="1"/>-->
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent,RelativeSource={x:Static RelativeSource.Self}}"></Setter>
                    <Setter Property="BorderBrush" Value="Red"></Setter>
                    <!--<Setter Property="Background" Value="Yellow"></Setter>-->
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>



    <Grid Width="260" Height="Auto">
        <Grid.Background>
            <ImageBrush ImageSource="/STC.Projects.WPFControlLibrary.SOPBox;component/images/dotted_bg.png"/>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <TextBlock Text="{x:Static p:Resources.strPublishStory}" Grid.Row="0" Foreground="#00ffcc" Grid.Column="0" FontSize="20" FontFamily="Helvetica" HorizontalAlignment="Left" Grid.ColumnSpan="2"/>

        <Button x:Name="Btnback" Grid.Row="0" Grid.Column="1" Click="ClosePopup_OnClick" Width="20" Height="20" HorizontalAlignment="Right" ScrollViewer.VerticalScrollBarVisibility="Disabled" BorderBrush="{x:Null}" Foreground="{x:Null}" Style="{DynamicResource IsMoseOvernone}">
            <Image Width="18" Height="18" Source="/STC.Projects.WPFControlLibrary.SOPBox;component/images/close_blue.png" FlowDirection="LeftToRight"/>
        </Button>

        <Telerik:RadBusyIndicator Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" IsBusy="False" x:Name="radBusyIndicator" Foreground="#00ffcc"/>

        <Border BorderBrush="#10302d" BorderThickness="1" CornerRadius="2" Grid.Row="1" Grid.ColumnSpan="2">
            <Grid>
                <Grid x:Name="LayoutRoot">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!--<StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">-->
                    <TextBlock Text="{x:Static p:Resources.strNewMessage}" FontSize="16" FontFamily="Helvetica" Grid.Row="0" Grid.Column="0" Foreground="#00ffcc" Margin="20,5" VerticalAlignment="Center" Height="22" />

                    <TextBlock MinWidth="35" FontSize="14" FontFamily="Helvetica" Grid.Row="0" Grid.Column="0" Opacity=".7" VerticalAlignment="Bottom"  HorizontalAlignment="Right" TextAlignment="Center" Margin="15,0"
                                           Text="{Binding MsgRemainingLength}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="#00ffcc"></Setter>
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>

                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMaxCharsCrossed}" Value="False" />
                                            <Condition Binding="{Binding ElementName=TwitterCheckBox, Path=IsChecked}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Foreground" Value="#00ffcc" />
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>

                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMaxCharsCrossed}" Value="True" />
                                            <Condition Binding="{Binding ElementName=TwitterCheckBox, Path=IsChecked}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Foreground" Value="Red" />
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        </TextBlock>



                    <TextBox MinHeight="55" MaxHeight="100"  Grid.Row="1"  Foreground="#00ffcc" FontFamily="Helvetica" FontSize="16" Name="MessageText" MinLines="3" Margin="15,5,15,5" TextWrapping="Wrap"
                             Text="{Binding MsgToPost, UpdateSourceTrigger= PropertyChanged, ValidatesOnDataErrors=True}">
                        <TextBox.CaretBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">

                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="DarkOrange" Offset="0" />
                                    <GradientStop Color="DarkOrange" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </TextBox.CaretBrush>
                        </TextBox>

                        <Grid Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Background="Transparent" Foreground="#00ffcc" Grid.Row="0" Grid.Column="0" Height="25" HorizontalAlignment="Left" x:Name="TxtBrowseFile" VerticalAlignment="Top" Width="150" FontFamily="Helvetica" FontSize="14" Margin="5"
                                 Text="{Binding FilePath, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Grid.Row="0" Grid.Column="1" Content="{x:Static p:Resources.strBrowseImage}" Height="25" x:Name="BtnBrowse" VerticalAlignment="Center" Width="75" Click="BtnBrowse_OnClick" Style="{DynamicResource IsMoseOverGrid}"  />
                    </Grid>

                    <Grid Grid.Row="3" Margin="10" Width="210">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30*"></ColumnDefinition>
                            <ColumnDefinition Width="30*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <TextBlock Text="{x:Static p:Resources.strSelectSocialService}" FontSize="16" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Foreground="#00ffcc" FontFamily="Helvetica" Margin="0,5" VerticalAlignment="Center" Height="22" />

                        <CheckBox Grid.Column="0" Grid.Row="1" Margin="20,12,0,12" HorizontalAlignment="Left"  Name="FacebookCheckBox"  VerticalAlignment="Center" Width="15" Height="16" FlowDirection="LeftToRight" Cursor="Hand"
                                  IsChecked="{Binding IsFaceBookChecked}"/>
                        <Image Grid.Column="0" Grid.Row="1" Margin="0,7,40,7" HorizontalAlignment="Right"  Source="../images/Facebook.png" Width="25"/>

                        <CheckBox Grid.Column="1" Grid.Row="1" Margin="20,12,0,12" HorizontalAlignment="Left" Name="TwitterCheckBox" VerticalAlignment="Center" Width="15" Height="15" FlowDirection="LeftToRight" Cursor="Hand"
                                  IsChecked="{Binding IsTwitterChecked}"/>
                        <Image Grid.Column="1" Grid.Row="1" Margin="0,7,40,7" HorizontalAlignment="Right" Source="../images/Twitter.png" Width="25"/>
                    </Grid>

                    <Button x:Name="btnPublishEvent" Content="{x:Static p:Resources.strPublish}" FontSize="16"  Grid.Row="4" Click="PublishEvent_OnClick" Margin="20" Width="125" Height="30" Style="{DynamicResource IsMoseOverGrid}"
                            IsEnabled="{Binding IsPublishButtonEnabled}"/>

                </Grid>

                <Grid x:Name="ConfirmationGrid" Visibility="Collapsed" Margin="0,6,0,0">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="90"></RowDefinition>
                        <RowDefinition Height="62"></RowDefinition>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Name="ConfirmationText" Text="{x:Static p:Resources.strPostSent}" Margin="63,23,63,43" Foreground="#00ffcc" FontSize="16" FontFamily="Helvetica" FontWeight="Bold" HorizontalAlignment="Center" Width="275"/>

                    <Button Content="{x:Static p:Resources.strDone}" FontSize="16" Grid.Row="1" Click="DoneClosePopup_OnClick" HorizontalAlignment="Center" Margin="138,17,138,16" Width="124" Height="30" Style="{DynamicResource IsMoseOverGrid}" />

                </Grid>
            </Grid>
        </Border>
    </Grid>


</UserControl>
