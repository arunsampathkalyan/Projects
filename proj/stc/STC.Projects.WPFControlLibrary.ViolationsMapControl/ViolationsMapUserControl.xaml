<UserControl x:Class="STC.Projects.WPFControlLibrary.ViolationsMapControl.ViolationsMapUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:Primitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls.Navigation"
             xmlns:TabControl="clr-namespace:Telerik.Windows.Controls.TabControl;assembly=Telerik.Windows.Controls.Navigation"
             xmlns:ChartAnimation="clr-namespace:STC.Projects.ClassLibrary.Common.ChartAnimation;assembly=STC.Projects.ClassLibrary.Common"
             xmlns:EsriVM="clr-namespace:STC.Projects.ClassLibrary.Common;assembly=STC.Projects.ClassLibrary.Common"
             xmlns:Esri="http://schemas.esri.com/arcgis/runtime/2013"
             xmlns:p="clr-namespace:STC.Projects.WPFControlLibrary.ViolationsMapControl.Properties"
             xmlns:ChartUserControls="clr-namespace:STC.Projects.WPFControlLibrary.ViolationsMapControl.ChartUserControls"
             mc:Ignorable="d">

    <UserControl.Resources>

        <EsriVM:EsriMapViewModel x:Key="EsriVM"/>
        
        
        <Esri:SimpleFillSymbol x:Key="BufferSymbolCircleSmall"  Style="Solid" >
            <Esri:SimpleFillSymbol.Outline>
                <Esri:SimpleLineSymbol Color="#DE6A58" Width="2" />
            </Esri:SimpleFillSymbol.Outline>
        </Esri:SimpleFillSymbol>

        <Esri:SimpleFillSymbol x:Key="BufferSymbolCircleBig"  Style="Solid" >
            <Esri:SimpleFillSymbol.Outline>
                <Esri:SimpleLineSymbol Color="#DE6A58" Width="2" />
            </Esri:SimpleFillSymbol.Outline>
        </Esri:SimpleFillSymbol>

        <Style x:Key="TextBlockStyle" TargetType="TextBlock">

            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="2" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Label">

            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="2" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style TargetType="Button">
            <Setter Property="Foreground" Value="#00ffcc" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="5" Opacity=".5" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>                       

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#49b13c" TargetName="bg" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style TargetType="TextBox">


            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#00ffcc"/>
            <!--<Setter Property="BorderThickness" Value="1"/>-->
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<ControlTemplate x:Key="CustomCheckBox" TargetType="CheckBox">
            <Grid>
                <Path x:Name="Equis"
          Opacity="0"
          Stroke="Red"
          Fill="Red"
          Stretch="UniformToFill"
          StrokeThickness="20"
          Data="M 30,100 L 80,140 L 160,60"
          Margin="0,0,2,2" />
                <ContentPresenter Margin="4"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked"
             Value="true">
                    <Setter TargetName="Equis"
              Property="Opacity"
              Value="1" />
                </Trigger>
                <Trigger Property="IsChecked"
             Value="false">
                    <Setter TargetName="Equis"
              Property="Opacity"
              Value="0" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>-->

        <Style TargetType="CheckBox" x:Key="chkboxStylekey">


            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="BorderBrush" Value="#00ffcc"/>

            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Opacity" Value=".6"/>

            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" Value="#ffd452"/>
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>

                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderBrush" Value="#ffd452"/>
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="RadioButton">


            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".9" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>



        </Style>

        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background" Value="Yellow"/>
        </Style>

        <!--<Style TargetType="ComboBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsEditable" Value="True"/>
            <Setter Property="BorderBrush" Value="#00ffcc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="bg" />
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Opacity" Value="0.5"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RadToggleButtonStyle1" TargetType="{x:Type telerik:RadToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#171717"/>
            <Setter Property="Background" Value="#171717"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterPressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CommonStatesWrapper"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DisabledChecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOverChecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent" Offset="0"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerCheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="0.169"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BackgroundVisibility">
                                    <VisualState x:Name="BackgroundIsHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="BackgroundIsVisible"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStatesGroup">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterMouseOverBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterPressedBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Transparent"/>
                                            <GradientStop Color="Transparent" Offset="0.126"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Border x:Name="DisabledVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="#79bf00" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Grid x:Name="CommonStatesWrapper">
                                <Border x:Name="FocusVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="#79bf00" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                    <Border x:Name="FocusInnerVisual" BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                                <Border x:Name="CheckedVisual" BorderBrush="Transparent" BorderThickness="1" Background="#79bf00" Padding="0" CornerRadius="0">
                                    <Border x:Name="InnerCheckedVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}" Style="{DynamicResource FocusVisual}"/>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsChecked" Value="True"/>
        </Style>

        <Style x:Key="RadToggleButtonStyleSetting" TargetType="{x:Type telerik:RadToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#171717"/>
            <Setter Property="Background" Value="#171717"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterPressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CommonStatesWrapper"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DisabledChecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOverChecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent" Offset="0"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerCheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="0.169"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BackgroundVisibility">
                                    <VisualState x:Name="BackgroundIsHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="BackgroundIsVisible"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                        </Storyboard>

                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStatesGroup">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterMouseOverBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterPressedBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Transparent"/>
                                            <GradientStop Color="Transparent" Offset="0.126"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Border x:Name="DisabledVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Grid x:Name="CommonStatesWrapper">
                                <Border x:Name="FocusVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                    <Border x:Name="FocusInnerVisual" BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                                <Border x:Name="CheckedVisual" Opacity="0" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Padding="5" CornerRadius="5">
                                    <Border x:Name="InnerCheckedVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsChecked" Value="True"/>
        </Style>

        <Style x:Key="RadPanelBarItemStyle1" TargetType="{x:Type telerik:RadPanelBarItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                        <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOut"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="HeaderRow" Background="Transparent" Margin="5,0" MinHeight="{TemplateBinding MinHeight}">
                                <Border x:Name="MouseOverVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="SelectedVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="DisabledVisual" BorderBrush="#171717" BorderThickness="1" Background="#fff" CornerRadius="1" Opacity="0">
                                    <Border BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <ContentControl x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" RadiusY="2" RadiusX="2" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
                            </Grid>
                            <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                <ItemsPresenter/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White"/>
                        <GradientStop Color="#fff" Offset="0.43"/>
                        <GradientStop Color="#fff" Offset="0.44"/>
                        <GradientStop Color="#fff" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="ChildItemsTemplate">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                        <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOut"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="HeaderRow" Background="Transparent" Margin="5,0" MinHeight="{TemplateBinding MinHeight}">
                                <Border x:Name="MouseOverVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="SelectedVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="DisabledVisual" BorderBrush="#171717" BorderThickness="1" Background="#fff" CornerRadius="1" Opacity="0">
                                    <Border BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <ContentControl x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" RadiusY="2" RadiusX="2" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
                            </Grid>
                            <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                <ItemsPresenter/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <telerik:PanelBarPanel IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Level" Value="1">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                                <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Arrow"/>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOut"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected"/>
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ExpandStates">
                                            <VisualState x:Name="Expanded">
                                                <Storyboard>

                                                    <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Collapsed"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="HeaderRow" UseLayoutRounding="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="NormalVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="5" Margin="-1,0,-1,-1">
                                            <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}"/>
                                        </Border>
                                        <Border x:Name="MouseOverVisual" BorderBrush="#fff" BorderThickness="1" Grid.ColumnSpan="5" Margin="-1,0,-1,-1" Opacity="0">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#fff" Offset="1"/>
                                                    <GradientStop Color="#fff" Offset="0"/>
                                                    <GradientStop Color="#fff" Offset="0.43"/>
                                                    <GradientStop Color="#fff" Offset="0.42"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}"/>
                                        </Border>
                                        <Border x:Name="SelectedVisual" BorderThickness="1" Grid.ColumnSpan="5" Margin="-1,0,-1,-1" Opacity="0">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#fff"/>
                                                    <GradientStop Color="#fff" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#fff" Offset="0.996"/>
                                                    <GradientStop Color="#fff" Offset="0.17"/>
                                                    <GradientStop Color="#fff" Offset="0.57"/>
                                                    <GradientStop Color="#fff" Offset="0.56"/>
                                                    <GradientStop Color="#fff"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border BorderThickness="1" Background="{x:Null}">
                                                <Border.BorderBrush>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#fff"/>
                                                        <GradientStop Color="#fff" Offset="0.126"/>
                                                    </LinearGradientBrush>
                                                </Border.BorderBrush>
                                            </Border>
                                        </Border>
                                        <Path x:Name="Arrow" Grid.Column="5" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="left" Margin="7,0" Opacity="1" RenderTransformOrigin="0.5,0.5" Stretch="None" Stroke="Black" StrokeThickness="2" VerticalAlignment="Center">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0"/>
                                            </Path.RenderTransform>
                                        </Path>
                                        <ContentControl x:Name="Header" Grid.ColumnSpan="4" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Rectangle x:Name="FocusVisual" Grid.ColumnSpan="5" Grid.Column="0" IsHitTestVisible="False" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
                                    </Grid>
                                    <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                        <telerik:LayoutTransformControl x:Name="transformationRoot" IsTabStop="False">
                                            <ItemsPresenter/>
                                        </telerik:LayoutTransformControl>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RadToggleButtonStyle" TargetType="{x:Type telerik:RadToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#002b22"/>
            <Setter Property="CornerRadius" Value="1"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterPressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CommonStatesWrapper"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DisabledChecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOverChecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774" Offset="0"/>
                                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                                            <GradientStop Color="#2bb774" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774"/>
                                                            <GradientStop Color="#2bb774" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerCheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774"/>
                                                            <GradientStop Color="#2bb774" Offset="0.169"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="BackgroundVisibility">
                                    <VisualState x:Name="BackgroundIsHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="BackgroundIsVisible"/>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="FocusStatesGroup">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Border x:Name="OuterBorder" BorderBrush="#00ffcc" BorderThickness="0.6" Background="{x:Null}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Border BorderBrush="#00ffcc" BorderThickness="0.6" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterMouseOverBorder" BorderBrush="Transparent" BorderThickness="0.6" CornerRadius="{TemplateBinding CornerRadius}" Background="#ffd452" Opacity="0">
                                <Border BorderBrush="Transparent" BorderThickness="0.6" Background="#ffd452" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterPressedBorder" BorderBrush="Transparent" Background="#00ffcc" BorderThickness="0.6" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">

                                <Border BorderBrush="Transparent" BorderThickness="0.6" Background="#00ffcc" CornerRadius="{TemplateBinding InnerCornerRadius}"/>

                            </Border>
                            <Border x:Name="DisabledVisual" BorderBrush="#008C99" BorderThickness="0.6" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Grid x:Name="CommonStatesWrapper">
                                <Border x:Name="FocusVisual" BorderBrush="#008C99" BorderThickness="0.6" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                    <Border x:Name="FocusInnerVisual" BorderBrush="#008C99" BorderThickness="0.6" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                                <Border x:Name="CheckedVisual" Background="#00ffcc" BorderBrush="Transparent" BorderThickness="0.6" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">

                                    <Border x:Name="InnerCheckedVisual" BorderBrush="Transparent" BorderThickness="0.6" Background="#00ffcc" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="#00ffcc"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <LinearGradientBrush x:Key="HorizontalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="Transparent" Offset="1.0" />
        </LinearGradientBrush>
        <RadialGradientBrush x:Key="RoundButtonDefaultBrush">
            <GradientStop Color="#38B24A" Offset="1"/>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="RoundButtonPressedBrush">
            <GradientStop Color="#38B24A" Offset="1"/>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="RoundButtonMouseOverBrush">
            <GradientStop Color="#38B24A" Offset="1"/>
        </RadialGradientBrush>
        <ControlTemplate x:Key="RoundButtonTemplate" TargetType="RepeatButton">
            <Grid>
                <Ellipse Name="PART_Ellipse" 
                         Width="20"
                         Height="30" 
                         Stroke="Black"
                         Fill="{StaticResource RoundButtonDefaultBrush}"/>
                <ContentPresenter Name="PART_ContentPresenter"  ContentSource="Content" Margin="0,0,0,6" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center"
                                  TextBlock.Foreground="White"
                                  TextBlock.FontSize="18"
                                  TextBlock.FontWeight="Bold"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="PART_Ellipse" Property="Fill" Value="{StaticResource RoundButtonMouseOverBrush}" />
                    <Setter TargetName="PART_ContentPresenter" Property="TextBlock.Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="PART_Ellipse" Property="Fill" Value="{StaticResource RoundButtonPressedBrush}" />
                    <Setter TargetName="PART_ContentPresenter" Property="TextBlock.Foreground" Value="White" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="DecreaseSliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Height="10" Background="#00ffcc" CornerRadius="5" Margin="1,0,-5,0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Gray" Height="{TemplateBinding Height}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundButtonStyle" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template" Value="{StaticResource RoundButtonTemplate}" />
        </Style>

        <Style x:Key="SliderThumbStyle" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="false"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Width" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Canvas>
                            <Path Margin="0,0" Data="M 8,3 L 0,15 0,30 15,30 15,15 8,3" Stroke="Black"
                              Name="Ellipse" Fill="Yellow" RenderTransformOrigin="0.5,0.5" Height="30" Canvas.Left="-10" Stretch="Fill" Canvas.Top="-5" Width="11" >
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Ellipse" Property="Fill" Value="#EAE9E4"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Ellipse" Property="Fill" Value="#EAE9E4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderCustomStyle" TargetType="Slider">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" Name="row" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" Name="column" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>



                            <Border Name="PART_Border" 
                            BorderBrush="Gray" BorderThickness="1" 
                            Padding="1"
                            CornerRadius="2" 
                            Grid.Row="1" Grid.Column="1"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            Background="{StaticResource HorizontalBrush}"
                            HorizontalAlignment="Stretch"  
                            VerticalAlignment="Center" />

                            <Track Name="PART_Track" 
                               HorizontalAlignment="Stretch" 
                               VerticalAlignment="Center"   
                               Grid.Row="1" Grid.Column="1"
                               Width="{TemplateBinding Width}" 
                               Height="{TemplateBinding Height}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="Slider.DecreaseLarge" 
                                          Style="{StaticResource DecreaseSliderButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="Slider.IncreaseLarge" 
                                          Style="{StaticResource SliderButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter TargetName="PART_Border" Property="HorizontalAlignment" Value="Center" />
                                <Setter TargetName="PART_Border" Property="VerticalAlignment" Value="Stretch" />
                                <Setter TargetName="PART_Track" Property="HorizontalAlignment" Value="Center" />

                                <Setter TargetName="PART_Track" Property="VerticalAlignment" Value="Stretch" />
                                <Setter TargetName="row" Property="Height" Value="*" />
                                <Setter TargetName="column" Property="Width" Value="auto" />

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <SolidColorBrush x:Key="Button.Static.Background2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="Transparent"/>

        <DataTemplate x:Key="labol">
            <TextBlock Foreground="#00ffcc" Text="{Binding}" Margin="4"/>
        </DataTemplate>

        <Style x:Key="MenuButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RadToggleButtonStyle2" TargetType="{x:Type telerik:RadToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="Background" Value="#171717"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="CornerRadius" Value="1"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterPressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CommonStatesWrapper"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DisabledChecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOverChecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774" Offset="0"/>
                                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                                            <GradientStop Color="#2bb774" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774"/>
                                                            <GradientStop Color="#2bb774" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerCheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774"/>
                                                            <GradientStop Color="#2bb774" Offset="0.169"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BackgroundVisibility">
                                    <VisualState x:Name="BackgroundIsHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="BackgroundIsVisible"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStatesGroup">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Border BorderBrush="#171717" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterMouseOverBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#2bb774" Offset="0"/>
                                        <GradientStop Color="#2bb774" Offset="0.5"/>
                                        <GradientStop Color="#2bb774" Offset="0.5"/>
                                        <GradientStop Color="#2bb774" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterPressedBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Transparent"/>
                                            <GradientStop Color="Transparent" Offset="0.126"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Border x:Name="DisabledVisual" BorderBrush="#2bb774" BorderThickness="{TemplateBinding BorderThickness}" Background="#2bb774" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Grid x:Name="CommonStatesWrapper">
                                <Border x:Name="FocusVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                    <Border x:Name="FocusInnerVisual" BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                                <Border x:Name="CheckedVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#2bb774" Offset="0"/>
                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                            <GradientStop Color="#2bb774" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border x:Name="InnerCheckedVisual" BorderBrush="#171717" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IsMoseOvernone" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="bg" />
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Opacity" Value="0.5"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IsMoseOverGrid" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="bg" />
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BigButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#2bb774" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#f2f2f2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="#49b13c">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#ffffff" TargetName="bg" />
                                <Setter Property="Foreground" Value="#2bb774" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="telrikCombBoxStyle" TargetType="telerik:RadComboBox">
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="telerik:RadComboBox">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                              Margin="{TemplateBinding Margin}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!--<Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="..\Images\dotted_bg.png"/>
                </Setter.Value>
            </Setter>-->

            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style x:Name="comboBoxItemStyle" TargetType="telerik:RadComboBoxItem">
                        <Setter Property="Foreground" Value="#00ffcc"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <!--<Setter Property="Background">
                            <Setter.Value>
                                <ImageBrush ImageSource="..\Images\dotted_bg.png"/>
                            </Setter.Value>
                        </Setter>-->

                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="3" Opacity=".9" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>


        <!--Checkbox Base Style-->

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#0e171b"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#00ffcc"/>

        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#0e171b"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#0e171b"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#00ffcc"/>
        <Style x:Key="CheckBoxBaseStyleKey" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <!--<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->

            <Setter Property="BorderThickness" Value="1"/>

            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="BorderBrush" Value="#00ffcc"/>

            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Opacity" Value=".7"/>

            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="2" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" FlowDirection="LeftToRight" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Opacity" Value="1"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Opacity" Value=".6"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Checkbox Base Style-->

        <Storyboard x:Key="OpenPopupsPanel">
            <DoubleAnimation Storyboard.TargetName="gridPopups" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             Duration="0:0:1" To="0" SpeedRatio="2"/>
        </Storyboard>

        <Storyboard x:Key="ClosePopupsPanel">
            <DoubleAnimation Storyboard.TargetName="gridPopups" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" 
                             Duration="0:0:1" To="490" SpeedRatio="2"/>
        </Storyboard>

    </UserControl.Resources>

    <Grid Width="1310" Height="840" RenderTransformOrigin="0.5,0.5">
        <Grid.Style>
            <Style>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="UserControl.Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
                                                    BeginTime="0:0:0.1" Duration="0:0:0.5"  From="1600" To="0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>

                </Style.Triggers>
            </Style>
        </Grid.Style>

        <Grid.RenderTransform>
            <TransformGroup>
                <TranslateTransform/>
            </TransformGroup>
        </Grid.RenderTransform>

        <Grid.Resources>
            <DataTemplate x:Key="ListDataTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding Name}" />
                    <TextBlock Grid.Column="1" Text="{Binding Value}" />
                </Grid>
            </DataTemplate>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="39.1*"/>
            <RowDefinition Height="841*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition />
            <!--<ColumnDefinition Width="500"/>-->
        </Grid.ColumnDefinitions>

        <Grid x:Name="gridPopups" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="2" Width="490" HorizontalAlignment="Right" Panel.ZIndex="5">
            <Grid.Background>
                <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/dotted_bg.png"/>
            </Grid.Background>

            <Grid.RenderTransform>
                <TranslateTransform X="490"/>
            </Grid.RenderTransform>

            <Grid.RowDefinitions>
                <RowDefinition Height="13"/>
                <RowDefinition Height="27"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Button x:Name="btnClosePopups" Click="btnClosePopups_Click" HorizontalAlignment="Right" Width="20" Height="20" Margin="0,10,10,10" Style="{StaticResource IsMoseOvernone}" Grid.RowSpan="2">
                <Image Width="18" Height="18" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/Close-icon.png" FlowDirection="LeftToRight"/>
            </Button>

            <Border x:Name="mapTipRadarAssetsViolations" Grid.Row="2" Width="480" Height="185" CornerRadius="15"
                        BorderThickness="0" Margin="5" HorizontalAlignment="left" VerticalAlignment="Top"
                        Visibility="Collapsed" BorderBrush="#10302d" Background="Transparent">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Margin="10" FontSize="20" Foreground="#00ffcc" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Left"  Text="{x:Static p:Resources.strViolationsAssetsDetails}"/>

                    <TextBlock Margin="10,0,0,0" Padding="0,5,0,0"  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" FontSize="16" Foreground="#ffd452" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{x:Static p:Resources.strBasicInfo}"/>

                    <Border BorderBrush="#10302d" BorderThickness="2" CornerRadius="3" Margin="5" Grid.Row="2">
                        <!--Basic Info-->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="5"/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="3"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Margin="15,0,0,0" Grid.Row="2" Grid.Column="0" FontSize="14" TextWrapping="Wrap" Foreground="#00ffcc" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{x:Static p:Resources.strRadarID}"/>
                            <TextBlock Margin="15,0,0,0" Grid.Row="2" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Foreground="#007474" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{Binding AssetViolationsDetails.AssetCode}"/>

                            <TextBlock Margin="15,0,0,0" Grid.Row="3" Grid.Column="0" FontSize="14" TextWrapping="Wrap" Foreground="#00ffcc" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{x:Static p:Resources.strRadarFactory}"/>
                            <TextBlock Margin="15,0,0,0" Grid.Row="3" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Foreground="#007474" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{Binding AssetViolationsDetails.AssetVendor}"/>

                            <TextBlock Margin="15,0,0,0" Grid.Row="4" Grid.Column="0" FontSize="14" TextWrapping="Wrap" Foreground="#00ffcc" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{x:Static p:Resources.strViolationCountMonth}"/>
                            <TextBlock Margin="15,0,0,0" Grid.Row="4" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Foreground="#007474" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{Binding AssetViolationsDetails.AssetViolationCountMonth}"/>



                            <TextBlock Margin="5,0,0,0" Grid.Row="2" Grid.Column="2" FontSize="14" TextWrapping="Wrap" Foreground="#00ffcc" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{x:Static p:Resources.strRadarLocation}"/>
                            <TextBlock Margin="15,0,0,0" Grid.Row="2" Grid.Column="3" FontSize="14" TextWrapping="Wrap" Foreground="#007474" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{Binding AssetViolationsDetails.AssetLocation}"/>

                            <TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="2" FontSize="14" TextWrapping="Wrap" Foreground="#00ffcc" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{x:Static p:Resources.strViolationsCount}"/>
                            <TextBlock Margin="15,0,0,0" Grid.Row="3" Grid.Column="3" FontSize="14" TextWrapping="Wrap" Foreground="#007474" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{Binding AssetViolationsDetails.AssetViolationCount}"/>

                            <TextBlock Margin="5,0,0,0" Grid.Row="4" Grid.Column="2" FontSize="14" TextWrapping="Wrap" Foreground="#00ffcc" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{x:Static p:Resources.strViolationCountYear}"/>
                            <TextBlock Margin="15,0,0,0" Grid.Row="4" Grid.Column="3" FontSize="14" TextWrapping="Wrap" Foreground="#007474" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{Binding AssetViolationsDetails.AssetViolationCountYearly}"/>


                        </Grid>
                    </Border>

                </Grid>
            </Border>

            <Border x:Name="mapTipSmartTowerAssetsViolations" Grid.Row="2" Width="480" Height="185" CornerRadius="15" 
                        BorderThickness="0" Margin="5" HorizontalAlignment="left" VerticalAlignment="Top" 
                        Visibility="Collapsed" BorderBrush="#10302d" Background="Transparent">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Margin="10" FontSize="20" Foreground="#00ffcc" FontFamily="Heletica" TextAlignment="Center" HorizontalAlignment="Left" Text="{x:Static p:Resources.strViolationsAssetsDetails}"/>

                    <TextBlock VerticalAlignment="Center" Padding="0,5,0,0" Margin="10,0,0,0" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" FontSize="16" Foreground="#ffd452" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strBasicInfo}"/>

                    <Border BorderBrush="#10302d" BorderThickness="2" CornerRadius="3" Margin="5" Grid.Row="2">
                        <!--Basic Info-->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="5"/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="3"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Margin="5,0,0,0" Grid.Row="2" Grid.Column="0" FontSize="14" TextWrapping="Wrap" Foreground="#00ffcc" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{x:Static p:Resources.strRadarID}"/>
                            <TextBlock Margin="5,0,0,0" Grid.Row="2" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Foreground="#007474" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding AssetViolationsDetails.AssetCode}"/>

                            <TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="0" FontSize="14" TextWrapping="Wrap" Foreground="#00ffcc" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{x:Static p:Resources.strRadarFactory}"/>
                            <TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Foreground="#007474" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding AssetViolationsDetails.AssetVendor}"/>

                            <TextBlock Margin="5,0,0,0" Grid.Row="4" Grid.Column="0" FontSize="14" TextWrapping="Wrap" Foreground="#00ffcc" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Left" Text="{x:Static p:Resources.strViolationCountMonth}"/>
                            <TextBlock Margin="5,0,0,0" Grid.Row="4" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Foreground="#007474" FontFamily="Helvetica" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding AssetViolationsDetails.AssetViolationCountMonth}"/>


                            <TextBlock Margin="5,0,0,0" Grid.Row="2" Grid.Column="2" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="#00ffcc" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strRadarLocation}"/>
                            <TextBlock Margin="5,0,0,0" Grid.Row="2" Grid.Column="3" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="#007474" TextAlignment="Center" Text="{Binding AssetViolationsDetails.AssetLocation}"/>

                            <TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="2" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="#00ffcc" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strViolationsCount}"/>
                            <TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="3" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="#007474" FontFamily="Helvetica" TextAlignment="Center" Text="{Binding AssetViolationsDetails.AssetViolationCount}"/>

                            <TextBlock Margin="5,0,0,0" Grid.Row="4" Grid.Column="2" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="#00ffcc" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strViolationCountYear}"/>
                            <TextBlock Margin="5,0,0,0" Grid.Row="4" Grid.Column="3" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="#007474" FontFamily="Helvetica" TextAlignment="Center" Text="{Binding AssetViolationsDetails.AssetViolationCountYearly}"/>

                        </Grid>
                    </Border>
                </Grid>
            </Border>

        </Grid>

        <Grid x:Name="gridChartArea" Width="490" Margin="-50,0,0,0" Grid.Column="3" Panel.ZIndex="1"  Grid.RowSpan="4">
                <Grid.Background>
                    <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/dotted_bg.png"/>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition/>

                    </Grid.RowDefinitions>
                    <Grid x:Name="gridViolnCategryCheckBox" Grid.Row="0" VerticalAlignment="Center">
                    <StackPanel Orientation="Horizontal" IsEnabled="False">
                            <CheckBox x:Name="chboxShowDangOnly" Height="25" Style="{StaticResource CheckBoxBaseStyleKey}" Content="{x:Static p:Resources.strShowDangOnly}" Margin="2,0,10,0"></CheckBox>
                        <CheckBox x:Name="chboxShowHeatMap" Height="25" Style="{StaticResource CheckBoxBaseStyleKey}" Content="{x:Static p:Resources.strShowHeatMap}" Margin="10,0,10,0"></CheckBox>
                        <CheckBox x:Name="chboxActivatePred" Height="25" Style="{StaticResource CheckBoxBaseStyleKey}" Content="{x:Static p:Resources.strShowActPredict}" Margin="5,0,10,0"></CheckBox>
                        </StackPanel>


                    </Grid>
                    <Grid x:Name="gridRegionType" Grid.Row="1" >
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <!--<ListView Grid.Row="1"></ListView>-->
                        <TextBlock Text="{x:Static p:Resources.strRegions}" FontSize="16" HorizontalAlignment="Left" Foreground="#00ffcc"></TextBlock>

                        <Button VerticalAlignment="Top" Background="Transparent"
                            Grid.Row="1"   Grid.Column="0" Margin="0,0,0,0" Click="ButtonIsLand_Click" IsEnabled="False">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                                        <StackPanel x:Name ="spBtn" Orientation="Horizontal" Height="35" >
                                            <!--<Image x:Name="imgName"  Source="Images\Prediction_Icon.png" Width="30" HorizontalAlignment="Left" Margin="5,0,10,0"/>-->
                                            <!--<Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                            <TextBlock x:Name="txtBlkBtnName"  Foreground="#00ffcc" VerticalAlignment="Center"  Width="110" Text="{x:Static p:Resources.strIsLand}" TextAlignment="Center" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"   Value="true">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value=".7"/>
                                    </Trigger>

                                    <DataTrigger Binding="{Binding Path=CheckBtn}" Value="{x:Static p:Resources.strIsLand}">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>


                            </Button.Template>
                        </Button>

                        <Button VerticalAlignment="Top" Background="Transparent"
                            Grid.Row="1"   Grid.Column="1" Margin="5,0,0,0" Click="ButtonAlAin_Click" IsEnabled="False">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                                        <StackPanel x:Name ="spBtn" Orientation="Horizontal" Height="35">
                                            <!--<Image x:Name="imgName"  Source="Images\Prediction_Icon.png" Width="30" HorizontalAlignment="Left" Margin="5,0,10,0"/>-->
                                            <!--<Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                            <TextBlock x:Name="txtBlkBtnName"  Foreground="#00ffcc" VerticalAlignment="Center"  Width="110" Text="{x:Static p:Resources.strAlAin}" TextAlignment="Center" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"   Value="true">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value=".7"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Path=CheckBtn}" Value="{x:Static p:Resources.strAlAin}">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>


                            </Button.Template>
                        </Button>

                        <Button VerticalAlignment="Top" Background="Transparent"
                            Grid.Row="1"   Grid.Column="2" Margin="5,0,5,0" Click="ButtonGharbaya_Click" IsEnabled="False">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                                        <StackPanel x:Name ="spBtn" Orientation="Horizontal" Height="35">
                                            <!--<Image x:Name="imgName"  Source="Images\Prediction_Icon.png" Width="30" HorizontalAlignment="Left" Margin="5,0,10,0"/>-->
                                            <!--<Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                            <TextBlock x:Name="txtBlkBtnName"  Foreground="#00ffcc" VerticalAlignment="Center"  Width="110" Text="{x:Static p:Resources.strGharbaya}" TextAlignment="Center" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"   Value="true">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value=".7"/> 
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Path=CheckBtn}" Value="{x:Static p:Resources.strGharbaya}">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>


                            </Button.Template>
                        </Button>

                        <!--<Button Content="IsLand" Background="Transparent" Foreground="#00ffcc"
                            Grid.Row="1" Grid.Column="0"></Button>-->
                        <!--<Button Content="Al" Background="Transparent" Foreground="#00ffcc"
                            Grid.Row="1" Grid.Column="1"></Button>-->
                        <!--<Button Content="Gharbaya" Background="Transparent" Foreground="#00ffcc"
                            Grid.Row="1" Grid.Column="2"></Button>-->
                    </Grid>
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Breakdown of Count Data" FontSize="16" HorizontalAlignment="Left" Margin="5,0,0,0"></TextBlock>
                        <StackPanel x:Name="spPeriodsBtn" Grid.Column="1" Orientation="Horizontal" Margin="0,3">
                            <TextBlock Text="{x:Static p:Resources.strPeriod}" Style="{StaticResource TextBlockStyle}"></TextBlock>
                            <Button x:Name="btnPreviousData" Width="50" BorderBrush="Transparent" Height="50" Margin="0,-5" Click="ButtonPreviousClick_Click">
                                <!--<Button.Background>
                            <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_prev.png"/>
                        </Button.Background>-->
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Grid x:Name="grdBtn">
                                            <Image x:Name="img" FlowDirection="{Binding ElementName=grdBtn, Path=FlowDirection}" Stretch="Fill" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_prev.png"/>
                                            <Border Name="btnBrdr" Width="20" Height="20"></Border>

                                        </Grid>
                                        <ControlTemplate.Triggers>

                                            <Trigger Property="IsMouseOver"   Value="true">
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <!--<Setter TargetName="btnBrdr" Property="Background" Value="#ffd452"/>

                                            <Setter TargetName="btnBrdr" Property="Opacity" Value=".5"/>-->

                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Button Width="50" x:Name="btnNextData" Background="Transparent" BorderBrush="Transparent" Margin="10,-5,10,-5"  Height="50" Click="ButtonNext_Click">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Grid x:Name="grdBtn">
                                            <Image x:Name="img" FlowDirection="{Binding ElementName=grdBtn, Path=FlowDirection}"  Stretch="Fill" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_next.png"/>
                                            <Border Name="btnBrdr" Width="20" Height="20"></Border>

                                        </Grid>

                                        <ControlTemplate.Triggers>

                                            <Trigger Property="IsMouseOver"   Value="true">
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <!--<Setter TargetName="btnBrdr" Property="Background" Value="#ffd452"/>

                                            <Setter TargetName="btnBrdr" Property="Opacity" Value=".5"/>-->

                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>
                    </Grid>

                    <!--<Border x:Name="chartAreaDetails" Grid.Row="3" BorderThickness="1" BorderBrush="#00ffcc" Margin="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" BorderThickness="1" BorderBrush="#00ffcc" Margin="5">
                        <ChartUserControls:ViolationsCountChartMonthlyUserControl/>
                    </Border>
                    <Border Grid.Row="1" BorderThickness="1" BorderBrush="#00ffcc" Margin="5">
                        <ChartUserControls:ViolationsCountMonthlyLineChartUserControl/>
                    </Border>
                </Grid>
            </Border>-->

                    <Border x:Name="chartAreaMonthly" Visibility="Visible" Grid.Row="3" BorderThickness="1" BorderBrush="#00ffcc" Margin="5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" BorderThickness="1" BorderBrush="#00ffcc" Margin="5">
                                <ChartUserControls:ViolationsCountChartMonthlyUserControl x:Name="chartMonthlyBarChart"/>
                            </Border>
                            <Border x:Name="abc" Grid.Row="1" BorderThickness="1" BorderBrush="#00ffcc" Margin="5">
                                <ChartUserControls:ViolationsCountMonthlyLineChartUserControl x:Name="chartMonthlyLineChart"/>
                            </Border>
                        </Grid>
                    </Border>


                    <!--<Border x:Name="chartAreaWeekly" Visibility="Collapsed" Grid.Row="3" BorderThickness="1" BorderBrush="#00ffcc" Margin="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" BorderThickness="1" BorderBrush="#00ffcc" Margin="5">
                        <ChartUserControls:ViolationsCountChartWeeklyUserControl/>
                    </Border>
                    <Border Grid.Row="1" BorderThickness="1" BorderBrush="#00ffcc" Margin="5">
                        <ChartUserControls:ViolationsCountWeeklyLineChartUserControl/>
                    </Border>
                </Grid>
            </Border>-->

                </Grid>




            </Grid>

            <Grid Panel.ZIndex="1" Background="Transparent" Opacity="0.95" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90*"/>
                    <ColumnDefinition Width="35*"/>
                    <ColumnDefinition Width="60*"/>
                </Grid.ColumnDefinitions>

                <!--<Image Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/logo.png" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" />-->
                <TextBlock x:Name="TxtDate" FontSize="16" Foreground="#fcfcfc" Grid.Column="0" Margin="5,7,5,7"/>
                <TextBlock x:Name="TxtTime" FontSize="16" Foreground="#fcfcfc" Grid.Column="1" Margin="15,7,15,7"/>

                <Border Visibility="Collapsed" Grid.Column="2" Margin="10,8,1,8" BorderBrush="#10302d" Background="#000000" Opacity="0.8" BorderThickness="1">
                    <Grid Height="22" VerticalAlignment="Top" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition/>
                            <!--<ColumnDefinition/>-->
                        </Grid.ColumnDefinitions>


                        <telerik:RadWatermarkTextBox x:Name="txtSearch" WatermarkContent="Search" Padding="2px" FontSize="14" Foreground="#00ffCC" ToolTip="Search" Background="Transparent" BorderBrush="Transparent" KeyDown="txtSearch_KeyDown" FontFamily="Helvetica" Grid.ColumnSpan="2" Margin="3,-3,29,3" />

                        <Button x:Name="btnSearch" Grid.Column="1" ToolTip="Search" Style="{StaticResource IsMoseOverGrid}" Margin="0,0,5,0" Width="Auto" Height="24" Click="btnSearch_Click">
                            <Image Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/search.png"/>
                        </Button>

                        <!--<Button  Grid.Column="2"  Width="32" Height="24" Click="ToggleMenu_Click" HorizontalAlignment="left"  ToolTip="حدد ماذا تريد ان تشاهد على الخريطه">
                        <Button.Background>
                            <ImageBrush  ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_layers.png"/>
                        </Button.Background>

                        <Button.Style>
                            <Style TargetType="Button">

                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                -->
                        <!--<Setter Property="Foreground" Value="#ffffff" />-->
                        <!--

                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" TargetName="bg">
                                                        <Setter.Value>
                                                            <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_layers_hover.png" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Foreground" Value="Transparent" />
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="Opacity" Value="0.5"></Setter>
                                                </Trigger>

                                                <DataTrigger Binding="{Binding Path=CheckBtn}" Value="Check">
                                                    <Setter Property="Background" TargetName="bg">
                                                        <Setter.Value>
                                                            <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_layers_selected.png" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Foreground" Value="Transparent" />
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="Opacity" Value="0.5"></Setter>
                                                </DataTrigger>

                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>

                    </Button>-->

                    </Grid>
                </Border>

                <Grid Background="Black" x:Name="grdFilterCateg" Opacity=".8" Grid.Column="2" Grid.Row="0" Margin="0,0,50,0" HorizontalAlignment="Right" Visibility="Visible" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>

                    </Grid.RowDefinitions>

                    <Button Width="140"  Opacity=".8" Background="Transparent" x:Name="radToggleFilterTypeBtn" Grid.Row="0" Margin="5,4,4,2" HorizontalAlignment="Right" Visibility="Visible" VerticalAlignment="Top" Click="ToggleMenu_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                                    <Grid x:Name="grdBtn" Height="25" Width="135" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="25"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock x:Name="txtBlkBtnName"  Foreground="#00ffcc" VerticalAlignment="Center"  Width="80" Text="{x:Static p:Resources.strView}" HorizontalAlignment="Center" TextAlignment="Center" Margin="25,0,0,0" />
                                        <Image x:Name="img" Grid.Column="1" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_green_arrow_down.png" Margin="0,2,0,0"/>

                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"   Value="true">
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>
                                        <Setter TargetName="img" Property="Source" Value="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_black_arrow_down.png"/>
                                        <Setter TargetName="grdBtn" Property="Background" Value="#ffd452"/>
                                        <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                        </Button.Template>
                    </Button>
                </Grid>
            </Grid>

            <Esri:MapView x:Name="esriMapView" Grid.Column="0" Grid.ColumnSpan="3" MouseDown="esriMapView_MouseDown" Grid.RowSpan="2" Margin="0,0,0,0" MouseLeftButtonDown="esriMapView_MouseLeftButtonDown">

                <Esri:MapView.Overlays>
                    <Esri:OverlayItemsControl/>
                </Esri:MapView.Overlays>

                <Esri:Map >
                    <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"/>-->
                    <Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer"/>
                    <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer"/>-->

                    <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Dark_Gray_Base/MapServer"/>-->

                <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="{Binding Source={StaticResource EsriVM}, Path=MapLayerServiceUrl}"/>-->

                <!--<Esri:ArcGISLocalTiledLayer ID="BaseMap" Path="ESRI TPK File\EsriBaseMap.tpk" />-->
                </Esri:Map>
            </Esri:MapView>

            <Grid Grid.Column="2" Grid.Row="1" Width="230" Background="Transparent" HorizontalAlignment="right" VerticalAlignment="Top">

                <Grid Width="230" Background="Transparent" HorizontalAlignment="left" VerticalAlignment="Top" Margin="-290,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="81*"/>
                        <ColumnDefinition Width="149*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                </Grid>
            </Grid>

            <StackPanel Background="Transparent" Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Height="51" Width="142" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="430,10,0,0" Visibility="Collapsed">
                <Button Margin="5,0,0,0" x:Name="btnESRITOPO" ToolTip="Topo View" Grid.Column="7" HorizontalAlignment="Left" Width="45" Height="45" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource IsMoseOvernone}"
                        Tag="http://services.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer" Click="btnESRITOPO_Click">
                    <Image Width="40" Height="40" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/noti_icon/Topo icon.png"/>
                </Button>

                <Button x:Name="btnESRIStreet" ToolTip="Street View" Grid.Column="7" HorizontalAlignment="Left" Width="45" Height="45" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource IsMoseOvernone}"
                        Tag="http://services.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer" Click="btnESRIStreet_Click">
                    <Image Width="40" Height="40" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/noti_icon/street icon.png"/>
                </Button>

                <Button x:Name="btnESRIImagery" ToolTip="Satellite View" Grid.Column="7" HorizontalAlignment="Left" Width="45" Height="45" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource IsMoseOvernone}"
                        Tag="http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer" Click="btnESRIImagery_Click">
                    <Image Width="40" Height="40" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/noti_icon/sat icon.png"/>
                </Button>
            </StackPanel>

            <StackPanel Background="Transparent" Orientation="Vertical" Grid.Column="0" Grid.Row="1" Height="Auto" Width="Auto" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="5,110">
                <RepeatButton x:Name="btnZoomIn" ToolTip="تكبير" Grid.Column="7" HorizontalAlignment="Left" Width="35" Height="35" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource RepeatButtonStyle}" Click="btnZoomIn_Click">
                    <Image Width="30" Height="30" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Zoom_IN.png"/>
                </RepeatButton>

                <RepeatButton x:Name="btnZoomOut" ToolTip="تصغير" Grid.Column="7" HorizontalAlignment="Left" Width="35" Height="35" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource RepeatButtonStyle}" Click="btnZoomOut_Click">
                    <Image Width="30" Height="30" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Zoom_Out.png"/>
                </RepeatButton>

                <Button  x:Name="btnReturnToDefaultView" ToolTip="تصغير" Grid.Column="7" HorizontalAlignment="Left" Width="35" Height="35" Background="{x:Null}" BorderBrush="{x:Null}" Style="{StaticResource IsMoseOvernone}" Click="btnReturnToDefaultView_Click">
                <Image Width="30" Height="30" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/zoom_default.png"/>
                </Button>
            </StackPanel>

            <Grid Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Margin="110,0,0,0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="65"></RowDefinition>
                    <RowDefinition Height="35"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="1.7*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button x:Name="btnHistoricalView" Content="{x:Static p:Resources.strHistorical}" Background="#2bb774" Foreground="#00ffcc" Tag="Historical" Visibility="Collapsed" FontSize="24" Grid.ColumnSpan="3" Height="51" Width="142" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="350,10,0,0" Click="btnHistoricalView_Click"/>
                <Border Grid.Row="1" Grid.ColumnSpan="2" BorderBrush="Gray" BorderThickness="2" x:Name="HistoricalDataPanel" HorizontalAlignment="Left" Visibility="Collapsed">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{x:Static p:Resources.strFromDate}" Foreground="Black" FontSize="16" HorizontalAlignment="Left"  ></Label>
                        <DatePicker x:Name="frmDatePicker" Height="50" Width="100" BorderThickness="0" Margin="0,6,0,0" SelectedDateChanged="frmDatePicker_SelectedDateChanged" SelectedDate="{Binding FromDate}"  DisplayDateEnd="{x:Static System:DateTime.Today}" ></DatePicker>
                        <Label Content="{x:Static p:Resources.strToDate}" Foreground="Black" FontSize="16"  HorizontalAlignment="Left" ></Label>
                        <DatePicker x:Name="toDatePicker" Height="50" Width="100" BorderThickness="0" Margin="0,6,0,0" SelectedDateChanged="toDatePicker_SelectedDateChanged" SelectedDate="{Binding ToDate}" DisplayDateEnd="{x:Static System:DateTime.Today}"></DatePicker>
                        <Button x:Name="btnShow" Content="{x:Static p:Resources.strShow}" Click="btnShow_Click" Background="#2bb774" Foreground="#00ffcc" Tag="Historical" FontSize="12" Width="60" Height="25" HorizontalAlignment="Left" />
                    </StackPanel>
                </Border>
                <Border Grid.Row="1" Grid.ColumnSpan="2" BorderBrush="Gray" BorderThickness="2" x:Name="HistoricalDataPanelMonthly" Visibility="Collapsed" HorizontalAlignment="Left">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="80"/>

                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="80"/>

                        </Grid.ColumnDefinitions>

                        <telerik:RadComboBox x:Name="cmbBoxFromYear" Height="25" Grid.Column="0"
                                     
                                     Style="{StaticResource telrikCombBoxStyle}" 
                                     ItemsSource="{Binding YearValueColl}" SelectedIndex="0"
                                     SelectedItem="{Binding YearValue}"/>

                        <telerik:RadComboBox x:Name="cmbBoxFromMonth" Height="25" Grid.Column="1"
                                     
                                     Style="{StaticResource telrikCombBoxStyle}" 
                                     ItemsSource="{Binding FromMonthValueColl}"
                                     SelectedIndex="{Binding FromMonthValue}"/>





                        <TextBlock Text="to" VerticalAlignment="Center" Grid.Column="2"></TextBlock>

                        <telerik:RadComboBox x:Name="cmbBoxToYear" Height="25" Grid.Column="3"
                                     
                                     Style="{StaticResource telrikCombBoxStyle}" 
                                     ItemsSource="{Binding YearValueColl}" SelectedIndex="0"
                                     SelectedItem="{Binding YearValue}"/>

                        <telerik:RadComboBox x:Name="cmbBoxToMonth" Height="25" Grid.Column="4"
                                     
                                     Style="{StaticResource telrikCombBoxStyle}" 
                                     ItemsSource="{Binding ToMonthValueColl}"
                                     SelectedIndex="{Binding ToMonthValue}"/>
                        <Button Content="{x:Static p:Resources.strShow}" Click="btnShow_Click" Background="#2bb774" Foreground="#00ffcc" Tag="Historical" FontSize="12" Grid.Column="5" Height="25" HorizontalAlignment="Center" />

                    </Grid>







                </Border>
                <Border Grid.Row="1" Grid.ColumnSpan="2" Width="410" BorderBrush="Gray" BorderThickness="2" x:Name="HistoricalDataPanelWeekly" Visibility="Collapsed" HorizontalAlignment="Left">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="25"/>
                            <ColumnDefinition Width="75"/>
                            <ColumnDefinition Width="25"/>
                            <ColumnDefinition Width="75"/>
                            <ColumnDefinition Width="70"/>

                        </Grid.ColumnDefinitions>

                        <telerik:RadComboBox x:Name="cmbBoxYearWeek" Height="25" Grid.Column="0"
                                     
                                     Style="{StaticResource telrikCombBoxStyle}" 
                                     ItemsSource="{Binding YearValueColl}" SelectedIndex="0"
                                     SelectedItem="{Binding YearValue}"/>

                        <telerik:RadComboBox x:Name="cmbBoxToMonthWeek" Height="25" Grid.Column="1"
                                     
                                     Style="{StaticResource telrikCombBoxStyle}" 
                                     ItemsSource="{Binding ToMonthValueColl}"
                                     SelectedIndex="{Binding ToMonthValue}"/>
                        <telerik:RadComboBox x:Name="cmbBoxfromWeek" Height="25" Grid.Column="2"
                                     
                                     Style="{StaticResource telrikCombBoxStyle}" 
                                     ItemsSource="{Binding WeekOfMonthColl}"
                                     SelectedIndex="{Binding FromWeekStartValue}"/>

                        <TextBlock Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" Text="to"></TextBlock>


                        <telerik:RadComboBox x:Name="cmbBoxToYearWeek" Height="25" Grid.Column="4"
                                     
                                     Style="{StaticResource telrikCombBoxStyle}" 
                                     ItemsSource="{Binding YearValueColl}" SelectedIndex="0"
                                     SelectedItem="{Binding YearValue}"/>





                        <telerik:RadComboBox x:Name="cmbBoxToWeek" Height="25" Grid.Column="5"
                                     
                                     Style="{StaticResource telrikCombBoxStyle}" 
                                     ItemsSource="{Binding WeekOfMonthColl}"
                                     SelectedIndex="{Binding ToWeekStartValue}"/>

                        <Button Content="{x:Static p:Resources.strShow}" Click="btnShow_Click" Background="#2bb774" Foreground="#00ffcc" Tag="Historical" FontSize="12" Grid.Column="6" Height="25" HorizontalAlignment="Center" />

                    </Grid>

                </Border>





                <telerik:RadToggleButton Width="150" Height="35" Opacity=".8" Background="#000000" x:Name="radToggleFilterType" HorizontalAlignment="Right" Grid.Column="2" Grid.Row="0" Margin="0,-40,3,0" Visibility="Collapsed" VerticalAlignment="Top">
                    <Border Margin="5,2" Width="130" Height="25" BorderBrush="#00ffcc" BorderThickness=".5">
                        <Grid Background="#000000">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>

                            </Grid.ColumnDefinitions>

                            <!--<Image x:Name="ImgFilterArrow" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/violation_selc.png" Margin="10,1,0,1" Grid.Column="1" />-->
                            <Button VerticalAlignment="Stretch" 
                                Grid.Row="0" Width="140" Height="25"  HorizontalAlignment="left"  ToolTip="حدد ماذا تريد ان تشاهد على الخريطه">
                                <Button.Background>
                                    <ImageBrush  ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_green_arrow_down.png"/>
                                </Button.Background>

                                <Button.Style>
                                    <Style TargetType="Button">

                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <!--<Setter Property="Foreground" Value="#ffffff" />-->

                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" TargetName="bg">
                                                                <Setter.Value>
                                                                    <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_black_arrow_down.png" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Foreground" Value="Transparent" />
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                            <Setter Property="Opacity" Value="0.5"></Setter>
                                                        </Trigger>

                                                        <DataTrigger Binding="{Binding Path=CheckBtn}" Value="Check">
                                                            <!--<Setter Property="Background" TargetName="bg">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_layers_selected.png" />
                                                            </Setter.Value>
                                                        </Setter>-->
                                                            <Setter Property="Foreground" Value="Transparent" />
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                            <Setter Property="Opacity" Value="0.5"></Setter>
                                                        </DataTrigger>

                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>

                            </Button>
                            <TextBlock Text="View" HorizontalAlignment="Center" Foreground="#00ffcc" Margin="10,5" Grid.Column="0" />
                        </Grid>
                    </Border>
                </telerik:RadToggleButton>
                <Border x:Name="MenuPanelFilter" Height="90" Width="150" HorizontalAlignment="Right" VerticalAlignment="Top" BorderBrush="#10302d" BorderThickness="1" Grid.RowSpan="3" Grid.Column="2"  Panel.ZIndex="101" Visibility="Collapsed" Background="Black" Opacity="0.8" Margin="0,-10,53,653">
                    <StackPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <!--<RowDefinition/>-->
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!--<Button VerticalAlignment="Stretch" Background="Transparent"
                                Grid.Row="0" Width="140" Height="25" Click="radTglFilBtnCount_Click" Margin="0,3,0,0">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                                        <StackPanel x:Name ="spBtn"  Height="25" Width="135" >
                                            -->
                            <!--<Image x:Name="imgName"  Source="Images\Prediction_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0"/>
                                            <Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                            <!--
                                            <TextBlock x:Name="txtBlkBtnName"  Foreground="#00ffcc" VerticalAlignment="Center"  Width="110" Text="Count" HorizontalAlignment="Center" TextAlignment="Center" />
                                        </StackPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"   Value="true">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>
                                            -->
                            <!--<Setter TargetName="imgName1"  Property="Visibility" Value="Visible" />
                                            <Setter TargetName="imgName" Property="Visibility" Value="Collapsed" />-->
                            <!--
                                            <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </Trigger>

                                        <DataTrigger Binding="{Binding Path=CheckBtn}" Value="Count">
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>
                                            -->
                            <!--<Setter TargetName="imgName1" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="imgName" Property="Visibility" Value="Collapsed" />-->
                            <!--
                                            <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>

                            </Button.Template>
                        </Button>-->

                            <Button VerticalAlignment="Stretch" Background="Transparent"
                                Grid.Row="0" Width="140" Height="25" Click="radTglFilBtnDays_Click" Margin="0,3,0,0">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                                            <StackPanel x:Name ="spBtn"  Height="25" Width="135" >
                                                <!--<Image x:Name="imgName"  Source="Images\Prediction_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0"/>
                                            <Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                                <TextBlock x:Name="txtBlkBtnName"  Foreground="#00ffcc" VerticalAlignment="Center"  Width="110" Text="{x:Static p:Resources.strDaily}" HorizontalAlignment="Center" TextAlignment="Center" />
                                            </StackPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver"   Value="true">
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>
                                                <!--<Setter TargetName="imgName1"  Property="Visibility" Value="Visible" />
                                            <Setter TargetName="imgName" Property="Visibility" Value="Collapsed" />-->
                                                <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                                <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                            </Trigger>

                                            <DataTrigger Binding="{Binding Path=CheckBtn}" Value="{x:Static p:Resources.strDaily}">
                                                <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>
                                                <!--<Setter TargetName="imgName1" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="imgName" Property="Visibility" Value="Collapsed" />-->
                                                <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                                <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>

                                </Button.Template>
                            </Button>

                            <Button VerticalAlignment="Stretch" Background="Transparent"
                                Grid.Row="1" Width="140" Height="25" Click="radTglFilBtnWeekly_Click" Margin="0,3,0,0">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                                            <StackPanel x:Name ="spBtn"  Height="25" Width="135" >
                                                <!--<Image x:Name="imgName"  Source="Images\Prediction_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0"/>
                                            <Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                                <TextBlock x:Name="txtBlkBtnName"  Foreground="#00ffcc" VerticalAlignment="Center"  Width="110" Text="{x:Static p:Resources.strWeekly}" HorizontalAlignment="Center" TextAlignment="Center" />
                                            </StackPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver"   Value="true">
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>
                                                <!--<Setter TargetName="imgName1"  Property="Visibility" Value="Visible" />
                                            <Setter TargetName="imgName" Property="Visibility" Value="Collapsed" />-->
                                                <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                                <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                            </Trigger>

                                            <DataTrigger Binding="{Binding Path=CheckBtn}" Value="{x:Static p:Resources.strWeekly}">
                                                <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>
                                                <!--<Setter TargetName="imgName1" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="imgName" Property="Visibility" Value="Collapsed" />-->
                                                <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                                <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>

                                </Button.Template>
                            </Button>

                            <Button VerticalAlignment="Stretch" Background="Transparent"
                                Grid.Row="2" Width="140" Height="25" Click="radTglFilBtnMonthly_Click" Margin="0,3,0,0">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                                            <StackPanel x:Name ="spBtn"  Height="25" Width="135" >
                                                <!--<Image x:Name="imgName"  Source="Images\Prediction_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0"/>
                                            <Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                                <TextBlock x:Name="txtBlkBtnName"  Foreground="#00ffcc" VerticalAlignment="Center"  Width="110" Text="{x:Static p:Resources.strMonthly}" HorizontalAlignment="Center" TextAlignment="Center" />
                                            </StackPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver"   Value="true">
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>
                                                <!--<Setter TargetName="imgName1"  Property="Visibility" Value="Visible" />
                                            <Setter TargetName="imgName" Property="Visibility" Value="Collapsed" />-->
                                                <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                                <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                            </Trigger>

                                            <DataTrigger Binding="{Binding Path=CheckBtn}" Value="{x:Static p:Resources.strMonthly}">
                                                <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>
                                                <!--<Setter TargetName="imgName1" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="imgName" Property="Visibility" Value="Collapsed" />-->
                                                <Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                                <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>

                                </Button.Template>
                            </Button>


                            <telerik:RadToggleButton Visibility="Collapsed" Background="Transparent" Foreground="#00ffcc" Grid.Row="0" Cursor="Hand" 
                                                 x:Name="radTglFilBtnCount" Click="radTglFilBtnCount_Click">
                                <Border Width="130" Height="25" BorderBrush="#00ffcc" BorderThickness="1">
                                    <TextBlock Text="Count" HorizontalAlignment="Center"/>
                                </Border>


                            </telerik:RadToggleButton>

                            <telerik:RadToggleButton Visibility="Collapsed" Background="Transparent" Foreground="#00ffcc" Grid.Row="1" Cursor="Hand" x:Name="radTglFilBtnDays" Click="radTglFilBtnDays_Click">
                                <Border Width="130" Height="25" BorderBrush="#00ffcc" BorderThickness="1">
                                    <TextBlock Text="Daily" HorizontalAlignment="Center"/>
                                </Border>

                            </telerik:RadToggleButton>


                            <telerik:RadToggleButton Visibility="Collapsed" Background="Transparent" Foreground="#00ffcc" Grid.Row="2" Cursor="Hand" x:Name="radTglFilBtnWeekly" Click="radTglFilBtnWeekly_Click">
                                <Border Width="130" Height="25" BorderBrush="#00ffcc" BorderThickness="1">
                                    <TextBlock Text="Weekly" HorizontalAlignment="Center"/>
                                </Border>

                            </telerik:RadToggleButton>

                            <telerik:RadToggleButton Visibility="Collapsed" Background="Transparent" Foreground="#00ffcc" Grid.Row="3" Cursor="Hand" x:Name="radTglFilBtnMonthly" Click="radTglFilBtnMonthly_Click">
                                <Border Width="130" Height="25" BorderBrush="#00ffcc" BorderThickness="1">
                                    <TextBlock Text="Monthly" HorizontalAlignment="Center"/>
                                </Border>

                            </telerik:RadToggleButton>

                        </Grid>
                    </StackPanel>
                </Border>
                <!--<Border x:Name="MenuPanel" Height="200" Width="182" HorizontalAlignment="Right" VerticalAlignment="Top" BorderBrush="#10302d" BorderThickness="1" Grid.RowSpan="3" Grid.Column="3" Grid.Row="0"  Panel.ZIndex="75" Visibility="Collapsed" Background="#000000" Opacity="0.8" Margin="0,-8,0,0">
                <StackPanel>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>

                        </Grid.RowDefinitions>



                        <telerik:RadToggleButton Grid.Row="0" Cursor="Hand" IsChecked="True" x:Name="radToggleBtnViolations" Click="radToggleBtnViolations_Click" Margin="10,5,10,0" VerticalAlignment="Top" Style="{DynamicResource RadToggleButtonStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="107*"/>
                                </Grid.ColumnDefinitions>

                                <Image x:Name="ImgViolationsLayer" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/violation_selc.png" Margin="10,1,0,1" Grid.Column="0" HorizontalAlignment="left" />
                                <TextBlock Text="{x:Static p:Resources.strAssets}" Margin="10,5" Grid.Column="1" />
                            </Grid>
                        </telerik:RadToggleButton>

                        <telerik:RadToggleButton Grid.Row="1" Cursor="Hand" IsChecked="True" x:Name="radToggleBtnIncidents" Click="radToggleBtnIncidents_Click" Margin="10,5,10,0" VerticalAlignment="Top" Grid.Column="1" Style="{DynamicResource RadToggleButtonStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="107*"/>
                                </Grid.ColumnDefinitions>

                                <Image x:Name="ImgIncidentsLayer" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/accident_selc.png" Margin="10,1,0,1" HorizontalAlignment="left"/>
                                <TextBlock Text="{x:Static p:Resources.strAccidents}" Margin="10,5"  Grid.Column="1" />
                            </Grid>
                        </telerik:RadToggleButton>

                        <telerik:RadToggleButton Grid.Row="2" Cursor="Hand" IsChecked="True" x:Name="radToggleBtnPatrols" Click="radToggleBtnPatrols_Click" Margin="10,5,10,0" VerticalAlignment="Top" Style="{DynamicResource RadToggleButtonStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="107*"/>
                                </Grid.ColumnDefinitions>

                                <Image x:Name="ImgPatrolsLayer" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/patrol_selc.png" Margin="10,1,0,1"  HorizontalAlignment="left"/>
                                <TextBlock Text="{x:Static p:Resources.strPatrols}" Margin="10,5" Grid.Column="1"/>
                            </Grid>
                        </telerik:RadToggleButton>

                        <telerik:RadToggleButton Visibility="Collapsed" Grid.Row="3" Cursor="Hand" IsChecked="True" x:Name="radToggleBtnOfficers" Click="radToggleBtnOfficers_Click" Margin="10,5,10,0" Height="40" VerticalAlignment="Top" Foreground="#00ffcc" FontSize="14" FontFamily="Helvetica" Style="{DynamicResource RadToggleButtonStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="90*"/>
                                    <ColumnDefinition Width="107*"/>
                                </Grid.ColumnDefinitions>

                                <Image Grid.Column="0" Width="23" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/officer.png" Margin="10,1,0,1"  HorizontalAlignment="left"/>
                                <TextBlock Text="{x:Static p:Resources.strOfficers}"  Margin="5"  Grid.Column="1"/>
                            </Grid>
                        </telerik:RadToggleButton>

                        <telerik:RadToggleButton Grid.Row="4" Cursor="Hand" IsChecked="True"  x:Name="radToggleBtnNotifications" Click="radToggleBtnNotifications_Click" Margin="10,5,10,10" VerticalAlignment="Top" Style="{DynamicResource RadToggleButtonStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="107*"/>
                                </Grid.ColumnDefinitions>

                                <Image x:Name="ImgNotiLayer" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/noti_selc.png" Margin="10,1,0,1" HorizontalAlignment="left"/>
                                <TextBlock Text="{x:Static p:Resources.strNotification}"  Margin="10,5" Grid.Column="1"/>
                            </Grid>
                        </telerik:RadToggleButton>

                    </Grid>
                </StackPanel>
            </Border>-->

                <Border x:Name="grdCurrentDatetime" BorderBrush="Gray" BorderThickness="2" Grid.RowSpan="3" Grid.Column="0" Grid.Row="0" Margin="-100,50,100,82" VerticalAlignment="Bottom" MaxHeight="200"  Visibility="Collapsed">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Content="{x:Static p:Resources.strDate}" Grid.Row="0" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" ></Label>
                        <Label x:Name="lblDate" Content="{x:Static p:Resources.strToDate}" Grid.Row="1" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Label Content="{x:Static p:Resources.strTime}" Foreground="Black" Grid.Row="2" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" ></Label>
                        <Label x:Name="lblTime" Content="{x:Static p:Resources.strToDate}" Grid.Row="3" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" ></Label>
                    </Grid>
                </Border>
                <Border x:Name="grdCurrentMonthInfo" BorderBrush="Gray" BorderThickness="2" Grid.RowSpan="3" Grid.Column="0" Grid.Row="0" Margin="-100,50,100,82" VerticalAlignment="Bottom" Visibility="Collapsed" MaxHeight="200">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Content="From Month" Grid.Row="0" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" ></Label>
                        <Label x:Name="lblFromMonth"  Grid.Row="1" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Label Content="To Month" Foreground="Black" Grid.Row="2" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" ></Label>
                        <Label x:Name="lblToMonth" Content="" Grid.Row="3" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" ></Label>
                    </Grid>
                </Border>
                <Border x:Name="grdCurrentWeekInfo" BorderBrush="Gray" BorderThickness="2" Grid.RowSpan="3" Grid.Column="0" Grid.Row="0" Margin="-100,50,100,82" VerticalAlignment="Bottom" MaxHeight="200" Visibility="Collapsed">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Content="Month" Grid.Row="0" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" ></Label>
                        <Label x:Name="lblFromMonthforWeek"  Grid.Row="1" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Label Content="From Week" Grid.Row="2" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" ></Label>
                        <Label x:Name="lblFromWeek"  Grid.Row="3" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Label Content="To Week" Foreground="Black" Grid.Row="4" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" ></Label>
                        <Label x:Name="lblToWeek" Content="" Grid.Row="5" Foreground="Black" FontSize="24" VerticalAlignment="Top" HorizontalAlignment="Left" ></Label>
                    </Grid>
                </Border>
            </Grid>
            <Grid Height="100" VerticalAlignment="Bottom" Grid.Row="1" Grid.ColumnSpan="2"
              Background="DimGray"
              Margin="5,0,55,0" x:Name="grdViolationSlider" Visibility="Visible">

                <Grid.RowDefinitions>
                    <RowDefinition Height=".3*"/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="45"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <Label x:Name="lblViewCategSlider" FontSize="16" Content="Daily View" Margin="0,0,0,0"/>
                    <!--<Label x:Name="lblViewCategSlider1" FontSize="16" Content="Daily View" Margin="0,0,-80,0" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch"/>-->
                    <Label x:Name="lblViewCategSliderValue" Content="{Binding CurrentDateRange}" FontSize="16"  Margin="0,0,-120,-30" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch"/>
                </StackPanel>

                <Slider x:Name="ViolationSlider" Grid.Row="1" Grid.Column="1" Margin="5"
                    VerticalAlignment="Center"
                    Background="Transparent" AutoToolTipPlacement="None" 
                    TickPlacement="BottomRight" Foreground="Yellow" TickFrequency="1" 
                    IsSnapToTickEnabled="True"  FontSize="18"
                    Style="{StaticResource SliderCustomStyle}"
                    Minimum="{Binding SliderMinimum}"
                    Maximum="{Binding SliderMaximum}"
                    Value="{Binding SliderCurrValue}"
                    ToolTip="{Binding SliderCurrValue}"
                        ValueChanged="ViolationSlider_ValueChanged">


                </Slider>

                <Button x:Name="btnPlayPause" Grid.Row="1" Click="btnPlayPause_Click" Tag="Pause" Grid.Column="2" Background="Transparent" Height="25" Width="25" BorderThickness="0" Margin="0,-5,0,0">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="imgPausePlay" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_play.png" Height="30" Width="30" Margin="-5,-2,0,0"></Image>
                    </StackPanel>
                </Button>

                <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Center" Width="400" Margin="0,0,45,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Button x:Name="btnPlayBack" VerticalAlignment="Center" Background="Transparent"
                               Grid.Column="0" Margin="-10,-10,0,0" Click="btnPlayBack_Click" >
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="#00ffcc">
                                        <Grid x:Name="grdBtn" Height="25">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="25"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Image x:Name="img" Grid.Column="0" FlowDirection="{Binding ElementName=grdBtn, Path=FlowDirection}"  Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_playback.png" Margin="0,2,0,0"/>
                                            <!--<Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                            <TextBlock x:Name="txtBlkBtnName" Grid.Column="1" Foreground="#00ffcc" VerticalAlignment="Center" FontSize="16"  Text="{x:Static p:Resources.strPlayBack}" TextAlignment="Left" HorizontalAlignment="Stretch" />

                                        </Grid>

                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"   Value="true">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <!--<Setter TargetName="grdBtn" Property="Background" Value="#ffd452"/>-->
                                            <Setter TargetName="grdBtn" Property="Opacity" Value=".7"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>

                            </Button.Template>
                        </Button>

                        <Button x:Name="btnToday" VerticalAlignment="Top" Background="Transparent"
                               Grid.Column="1" Margin="-10,-15,0,2" Click="btnToday_Click" >
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="#00ffcc">
                                        <Grid x:Name="grdBtn" Height="44">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="18"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>


                                            <Image x:Name="img" FlowDirection="{Binding ElementName=grdBtn, Path=FlowDirection}" Grid.Row="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/arrow_today.png" Margin="0,2,0,0"/>
                                            <!--<Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                            <TextBlock x:Name="txtBlkBtnName" Grid.Row="1" Foreground="#00ffcc" VerticalAlignment="Center" FontSize="16"  Text="{x:Static p:Resources.strThisMonth}" TextAlignment="Center" HorizontalAlignment="Stretch" />

                                        </Grid>

                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"   Value="true">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <!--<Setter TargetName="grdBtn" Property="Background" Value="#ffd452"/>-->
                                            <Setter TargetName="grdBtn" Property="Opacity" Value=".7"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </Trigger>

                                        <DataTrigger Binding="{Binding Path=CheckBtn}" Value="{x:Static p:Resources.strDaily}">
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <!--<Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                        <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>-->
                                            <Setter TargetName="txtBlkBtnName" Property="Text" Value="{x:Static p:Resources.strToday}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Path=CheckBtn}" Value="{x:Static p:Resources.strWeekly}">
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <!--<Setter TargetName="spBtn" Property="Background" Value="#ffd452"/>
                                        <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>-->
                                            <Setter TargetName="txtBlkBtnName" Property="Text" Value="{x:Static p:Resources.strThisWeek}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Path=CheckBtn}" Value="{x:Static p:Resources.strMonthly}">
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <Setter TargetName="txtBlkBtnName" Property="Text" Value="{x:Static p:Resources.strThisMonth}"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>



                            </Button.Template>
                        </Button>

                        <Button VerticalAlignment="Center" Background="Transparent"
                               Grid.Column="2" Margin="5,-10,-15,0" IsEnabled="False">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border  x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="#00ffcc">
                                        <Grid x:Name="grdBtn" Height="25">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="25"/>
                                            </Grid.ColumnDefinitions>
                                            <Image x:Name="img" FlowDirection="{Binding ElementName=grdBtn, Path=FlowDirection}" Grid.Column="1" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/icons_forecast.png" Margin="0,2,0,0"/>
                                            <!--<Image x:Name="imgName1"  Source="Images\Prediction_Selected_Icon.png" Width="40" HorizontalAlignment="Left" Margin="5,0,10,0" Visibility="Collapsed"/>-->
                                        <TextBlock x:Name="txtBlkBtnName" Grid.Column="0" Foreground="#00ffcc" VerticalAlignment="Center" FontSize="16"  Text="{x:Static p:Resources.strForecast}" TextAlignment="Right" HorizontalAlignment="Stretch" />

                                        </Grid>

                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"   Value="true">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter TargetName="bg" Property="BorderBrush" Value="#ffd452"/>

                                            <!--<Setter TargetName="grdBtn" Property="Background" Value="#ffd452"/>-->
                                            <Setter TargetName="grdBtn" Property="Opacity" Value=".7"/>
                                            <Setter TargetName="txtBlkBtnName" Property="Foreground" Value="Black"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>


                            </Button.Template>
                        </Button>


                    </Grid>
                </Grid>

                <!--<StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0,10" HorizontalAlignment="Center" Width="300">
                
                -->
                <!--<StackPanel Orientation="Horizontal" Width="100" HorizontalAlignment="Center">
                    <Image Width="30"></Image>
                    <TextBlock Text="Playback"/>
            
            
            
            
            
            
            
            
            
            
            
                </StackPanel>
                <StackPanel Orientation="Vertical" Width="100" HorizontalAlignment="Center">
                    <Image></Image>
                    <TextBlock x:Name="txtBlkthisDayMonthWeek" Text="Today"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Width="100" HorizontalAlignment="Center">
                    <TextBlock Text="Forecast"/>
                    <Image></Image>
                </StackPanel>-->
                <!--
            </StackPanel>-->
            </Grid>
        </Grid>
</UserControl>