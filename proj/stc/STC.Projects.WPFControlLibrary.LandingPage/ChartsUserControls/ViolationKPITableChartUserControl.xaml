<UserControl x:Class="STC.Projects.WPFControlLibrary.LandingPage.ChartsUserControls.ViolationKPITableChartUserControl"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:ChartAnimation="clr-namespace:STC.Projects.ClassLibrary.Common.ChartAnimation;assembly=STC.Projects.ClassLibrary.Common"
             xmlns:ViewModel="clr-namespace:STC.Projects.WPFControlLibrary.LandingPage.ViewModel"
             xmlns:Converter="clr-namespace:STC.Projects.ClassLibrary.Common.Converters;assembly=STC.Projects.ClassLibrary.Common" 
             xmlns:p="clr-namespace:STC.Projects.WPFControlLibrary.LandingPage.Properties"
             mc:Ignorable="d">
    <UserControl.Resources>


        <!--Scroll Viewer and scroll bar styles-->

        <!-- Brushes used in Styling of ScrollViewer -->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" 
			StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" 
			StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GlyphBrush" Color="#eeac23" />
        <LinearGradientBrush x:Key="PressedBrush" 
			StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border 
          Name="Border"
          Margin="1" 
          CornerRadius="2" 
          Background="#004d46"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
                            <Path 
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,
				RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" 
								Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" 
								Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border 
          CornerRadius="2" 
          Background="#00ffcc"
                            
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" 
			TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="12"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="12"/>
                </Grid.RowDefinitions>
                <Border
      Grid.RowSpan="3"
      CornerRadius="2" 
      Background="Transparent" />
                <RepeatButton 
      Grid.Row="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Height="12"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track 
      Name="PART_Track"
                   
      Grid.Row="1"
      IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="1,0,1,0"  
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton 
      Grid.Row="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Height="12"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <!-- HorizontalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="HorizontalScrollBar" 
			TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="12"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="12"/>
                </Grid.ColumnDefinitions>
                <Border
      Grid.ColumnSpan="3"
      CornerRadius="2" 
      Background="Transparent" />
                <RepeatButton 
      Grid.Column="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Width="12"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track 
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,1,0,1"  
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton 
      Grid.Column="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Width="12"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <!-- Style for overall  ScrollBar -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="12" />
                    <Setter Property="Template" 
						Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="12"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" 
						Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for overall  ScrollViewer for left scrollviewr -->
        <!--<Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="1"/>

                            <ScrollBar Name="PART_VerticalScrollBar"  Background="Transparent"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.Column="1"
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <!--Scroll Viewer and scroll bar styles end-->

        <!--Datagrid Style-->
        <ControlTemplate x:Key="gridHeaderTemplate" TargetType="DataGridColumnHeader">

            <TextBlock x:Name="txtBlkHeader" Text="{Binding}" 
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       TextWrapping="Wrap" TextAlignment="Center"
                       
                       Foreground="#00ffcc" Background="#0a1114"/>

        </ControlTemplate>
        <!--<Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Red"/>
        </Style>-->

        <Style x:Key="ColumnHeaderStylekey" TargetType="{x:Type DataGridColumnHeader}">

            <Style.Setters>
                <Setter Property="Background" Value="#0a1114"/>
                <Setter Property="Height" Value="60"/>
                <Setter Property="MinWidth" Value="180"/>

                <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>-->
                <Setter Property="IsHitTestVisible" Value="False"/>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Foreground="#00ffcc" 
                                       FontSize="16"
                                        Text="{Binding}" TextWrapping="Wrap" TextAlignment="Justify" Margin="2,2"></TextBlock>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>





        <Style x:Key="RowStylekey" TargetType="DataGridRow">
            <Setter Property="Foreground" Value="#00ffcc" />
            <Setter Property="Height" Value="50"/>
        </Style>


        <Style x:Key="DataGridCellStyleKey" TargetType="{x:Type DataGridCell}">
            <!--<Setter Property="HorizontalAlignment" Value="Center"/>-->
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="Opacity" Value=".7"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="True">
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                                  Path=Content.Text}" FontSize="14"
                                       TextWrapping="Wrap" TextAlignment="Justify" Foreground="#00ffcc"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#00ffcc"/>
                    <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>-->
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="gridstylekey" TargetType="DataGrid">
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="BorderBrush" Value="#00ffcc"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,10"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="RowBackground" Value="#070c0e"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStylekey}"/>
            <Setter Property="RowStyle" Value="{StaticResource RowStylekey}"/>
            <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyleKey}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="RowBackground" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Datagrid style end-->

        <DataTemplate x:Key="labol">
            <TextBlock Foreground="#00ffcc" FontFamily="Hevetica" Text="{Binding}" Margin="4">
                <TextBlock.Effect>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="5" Opacity=".9" ShadowDepth="0"/>
                </TextBlock.Effect>
            </TextBlock>
        </DataTemplate>
        <Telerik:ChartPalette x:Key="customPalette">
            <Telerik:ChartPalette.SeriesEntries>

                <Telerik:PaletteEntryCollection SeriesFamily="Bar">
                    <Telerik:PaletteEntry Fill="#fffc21" Stroke="#fffc21"/>
                    <Telerik:PaletteEntry Fill="#ff0012" Stroke="#ff0012"/>
                    <Telerik:PaletteEntry Fill="#00d8ff" Stroke="#00d8ff"/>
                    <Telerik:PaletteEntry Fill="#18ff00" Stroke="#18ff00"/>
                    <Telerik:PaletteEntry Fill="#73a337" Stroke="#73a337"/>


                    <Telerik:PaletteEntry Fill="#1e48e2" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#00afba" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#0eb04f" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#87af26" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#f3dd4b" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#ff9c31" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#ff4a4a" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#ff5c92" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#a53fd0" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#584bd2" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#2e698e" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#6c7c86" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#a9b6b7" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#a3eaff" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#14f7ff" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#00bfc6" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#38b2ff" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#3b6fc7" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#607D8B" Stroke="White"/>
                    <Telerik:PaletteEntry Fill="#FFCB00" Stroke="White"/>
                </Telerik:PaletteEntryCollection>
            </Telerik:ChartPalette.SeriesEntries>

            <Telerik:ChartPalette.GlobalEntries>

                <Telerik:PaletteEntry Fill="#fff799" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#f26522" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#0051a0" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#f06eaa" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#73a337" Stroke="White"/>

                <Telerik:PaletteEntry Fill="#1e48e2" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#00afba" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#0eb04f" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#87af26" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#f3dd4b" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#ff9c31" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#ff4a4a" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#ff5c92" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#a53fd0" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#584bd2" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#2e698e" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#6c7c86" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#a9b6b7" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#a3eaff" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#14f7ff" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#00bfc6" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#38b2ff" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#3b6fc7" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#607D8B" Stroke="White"/>
                <Telerik:PaletteEntry Fill="#FFCB00" Stroke="White"/>
            </Telerik:ChartPalette.GlobalEntries>

        </Telerik:ChartPalette>

        <Style x:Key="telrikCombBoxStyle" TargetType="Telerik:RadComboBox">
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Telerik:RadComboBox">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                              Margin="{TemplateBinding Margin}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="..\Images\dotted_bg.png"/>
                </Setter.Value>
            </Setter>

            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style x:Name="comboBoxItemStyle" TargetType="Telerik:RadComboBoxItem">
                        <Setter Property="Foreground" Value="#00ffcc"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <ImageBrush ImageSource="..\Images\dotted_bg.png"/>
                            </Setter.Value>
                        </Setter>
                        <!--<Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="#00ffcc" BlurRadius="3" Opacity=".9" ShadowDepth="0"/>
                            </Setter.Value>
                        </Setter>-->
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="3" Opacity=".9" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock">

            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="3" Opacity=".9" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleKey" TargetType="Button">
            <Setter Property="Foreground" Value="#00ffcc" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="15" Opacity="1" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#49b13c" TargetName="bg" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBoxStyleKey" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#00ffcc"/>
            <!--<Setter Property="BorderThickness" Value="1"/>-->
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckBoxStyleKey" TargetType="CheckBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxStyleKey" TargetType="ComboBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsEditable" Value="True"/>
            <Setter Property="BorderBrush" Value="#00ffcc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Converter:StringEnglishToArabicSelectorConverter x:Key="StringEnglishToArabicSelectorConverter"/>
        <Converter:StringAppendConverter x:Key="StringAppendConverter"/>

    </UserControl.Resources>

    <UserControl.DataContext>
        <ViewModel:VoilationKPITableChartViewModel/>
    </UserControl.DataContext>
    <Grid MinWidth="600" MinHeight="800">
        <Grid.Style>
            <Style>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Page.Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
                                                    BeginTime="0:0:0.1" Duration="0:0:1"  From="-500" To="0"/>
                                </Storyboard>
                            </BeginStoryboard>
                            <!--<BeginStoryboard>
                                    <Storyboard>

                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                                    BeginTime="0:0:0.1" Duration="0:0:0.5"  From="500" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>-->
                        </EventTrigger.Actions>
                    </EventTrigger>



                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid.RenderTransform>

            <TransformGroup>
                <TranslateTransform/>

                <ScaleTransform/>
            </TransformGroup>

        </Grid.RenderTransform>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0"></Grid>
        <Grid Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="375"/>
                <RowDefinition Height="375"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1200"/>

            </Grid.ColumnDefinitions>
            <TextBlock x:Name="txtBlkKPIheadr" Text="{x:Static p:Resources.strKPITableChart}" FontSize="22"
                       HorizontalAlignment="Left" Margin="10,0,0,0"/>
            <Grid x:Name="gridKPICharts" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                </Grid.ColumnDefinitions>
                <ListView x:Name="itemsCtrKPICharts" ItemsSource="{Binding DoughnutSeriesValueColl}"
                              BorderBrush="#00ffcc" BorderThickness="1" Background="Transparent"
                                       ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"  Margin="5,0,0,0">
                    <ListView.Resources>

                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                        <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />-->
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />

                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Padding" Value="2,0,0,0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                            </Trigger>
                                            <!--<MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                            </MultiTrigger>-->
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </ListView.Resources>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>

                            <WrapPanel Orientation="Horizontal" />

                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="#00ffcc"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="FontFamily" Value="Helvetica"/>
                                    <Setter Property="FontSize" Value="14"/>
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect Color="#00ffcc" BlurRadius="2" Opacity=".9" ShadowDepth="0"/>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataTemplate.Resources>

                            <Grid Margin="10,10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35"/>
                                    <RowDefinition Height="120"/>

                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="txtBlkKPIName" Text="{Binding KPIName}" TextWrapping="Wrap" Grid.Row="0" TextAlignment="Center" Margin="5,0,0,0" HorizontalAlignment="Stretch">
                                    <!--<TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource StringEnglishToArabicSelectorConverter}">

                                            <Binding Path="LabelValueArabic"/>
                                            <Binding Path="LabelValueEnglish"/>
                                            <Binding Mode="OneWay" />
                                        </MultiBinding>
                                    </TextBlock.Text>-->
                                </TextBlock>
                                <!--<Grid Grid.Row="1" Width="200" Height="200" Background="Yellow"/>-->
                                <Grid x:Name="gridCurrentItemChart" 
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                      Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <!--<ColumnDefinition Width="40"/>-->
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <!--<RowDefinition Height="20"/>-->
                                    </Grid.RowDefinitions>
                                    <!--<TextBlock x:Name="txtBlkTargetPercent" Grid.Column="1" Text="{Binding TargetValue, Converter={StaticResource StringAppendConverter}, ConverterParameter=ActualPercentage}" Width="30"
                                               VerticalAlignment="Top" HorizontalAlignment="Left" Visibility="Collapsed"/>-->
                                    <TextBlock x:Name="txtBlkActualPercent"  Text="{Binding ActPercentage, Converter={StaticResource StringAppendConverter}, ConverterParameter=ActualPercentage}" Width="60"
                                               VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>

                                    <Telerik:RadPieChart x:Name="PieChart1"   ClipToBounds="False" ScrollViewer.HorizontalScrollBarVisibility="Auto" Grid.Row="0" Foreground="#00ffcc">
                                        <Telerik:DoughnutSeries InnerRadiusFactor=".8" ItemsSource="{Binding DoughnutItemColl}"  ChartAnimation:ChartAnimationUtilities.PieAnimation="SweepAngle" ShowLabels="False">

                                            <Telerik:DoughnutSeries.SliceStyles>
                                                <!--<Style TargetType="Path">
                                                    <Setter Property="Fill" Value="{Binding Color}"/>
                                                </Style>-->
                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="LawnGreen"/>
                                                </Style>
                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="Gray"/>
                                                </Style>

                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="#0eb04f"/>
                                                </Style>
                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="#87af26"/>
                                                </Style>
                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="#f3dd4b"/>
                                                </Style>
                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="#ff9c31"/>
                                                </Style>
                                            </Telerik:DoughnutSeries.SliceStyles>
                                            <Telerik:DoughnutSeries.ValueBinding>
                                                <Telerik:PropertyNameDataPointBinding PropertyName="ChartPercentValue"/>
                                            </Telerik:DoughnutSeries.ValueBinding>

                                            <!--<Telerik:PieSeries.LegendSettings>
                                                <Telerik:DataPointLegendSettings TitleBinding="Key"/>
                                            </Telerik:PieSeries.LegendSettings>-->

                                        </Telerik:DoughnutSeries>
                                    </Telerik:RadPieChart>

                                    <!--<TextBlock x:Name="txtBlkChartCateg" Grid.Row="1" Text="{Binding KpiCategory}" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>-->

                                    <!--<Telerik:RadLegend Grid.Row="1" FlowDirection="RightToLeft" Foreground="#00ffcc" ScrollViewer.HorizontalScrollBarVisibility="Auto" Items="{Binding ElementName=PieChart1, Path=LegendItems}" HorizontalAlignment="Center" VerticalAlignment="Top">
                                        <Telerik:RadLegend.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </Telerik:RadLegend.ItemsPanel>
                                    </Telerik:RadLegend>-->
                                </Grid>
                                <!--<TextBlock x:Name="txtBlkValField" Text="{Binding Path=Value}" Opacity=".7"
                                   Grid.Row="2" IsEnabled="False" TextAlignment="Left" Margin="5,0,0,0" HorizontalAlignment="Stretch"></TextBlock>-->

                            </Grid>
                        </DataTemplate>

                    </ListView.ItemTemplate>
                </ListView>

            </Grid>

            <DataGrid Name="dgrdKPItableViolation"                                         
                  ItemsSource="{Binding ViolationsKPICollection}" 
                  Style="{StaticResource gridstylekey}"
                  SelectionMode="Single"                        
                  CanUserResizeColumns="False" AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  HorizontalContentAlignment="Stretch" 
                  VerticalContentAlignment="Stretch"                    
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  Margin="5,5,5,10" MaxColumnWidth="200"
                  Grid.Row="2">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static p:Resources.strKPIName}">
                        <DataGridTextColumn.Binding >
                            <MultiBinding Converter="{StaticResource StringEnglishToArabicSelectorConverter}">

                                <Binding Path="LabelValueArabic"/>
                                <Binding Path="LabelValueEnglish"/>
                                <Binding Mode="OneWay" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="{x:Static p:Resources.strCurrentValue}" Binding="{Binding CurrentValue}"></DataGridTextColumn>
                    <DataGridTextColumn Header="{x:Static p:Resources.strPreviousValue}" Binding="{Binding PreviousValue}"></DataGridTextColumn>
                    <DataGridTextColumn Header="{x:Static p:Resources.strTargetValue}" Binding="{Binding TargetValue}"></DataGridTextColumn>
                    <DataGridTextColumn  Header="{x:Static p:Resources.strPercentage}" Binding="{Binding Percentage, Converter={StaticResource StringAppendConverter}, ConverterParameter=Percentage}">
                        <!--<DataGridTextColumn  Header="{x:Static p:Resources.strPercentage}" Binding="{Binding Path=Percentage, StringFormat={}{0}%}">-->
                        <!--<DataGridTextColumn.Binding>
                            <MultiBinding StringFormat=" {0}%">
                                <Binding Path="Percentage"/>
                            </MultiBinding>
                        </DataGridTextColumn.Binding>-->
                    </DataGridTextColumn>
                    <DataGridTextColumn  Header="{x:Static p:Resources.strActualPercentage}" Binding="{Binding ActualPercentage, Converter={StaticResource StringAppendConverter}, ConverterParameter=ActualPercentage}">
                        <!--<DataGridTextColumn  Header="{x:Static p:Resources.strActualPercentage}" Binding="{Binding Path=ActualPercentage, StringFormat={}{0}%}">-->
                        <!--<DataGridTextColumn.Binding>
                            <MultiBinding StringFormat=" {0}%">
                                <Binding Path="ActualPercentage"/>
                            </MultiBinding>
                        </DataGridTextColumn.Binding>-->
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

        </Grid>
    </Grid>
</UserControl>
