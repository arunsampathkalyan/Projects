<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:Esri="http://schemas.esri.com/arcgis/runtime/2013"
             xmlns:p="clr-namespace:STC.Projects.WPFControlLibrary.MapControl.Properties"
             xmlns:local="clr-namespace:STC.Projects.WPFControlLibrary.MapControl"
             xmlns:control="clr-namespace:STC.Projects.WPFControlLibrary.MapControl.Control"
             xmlns:VM="clr-namespace:STC.Projects.WPFControlLibrary.MapControl.ViewModel"
             xmlns:ChartAnimation="clr-namespace:STC.Projects.ClassLibrary.Common.ChartAnimation;assembly=STC.Projects.ClassLibrary.Common"
             xmlns:EsriVM="clr-namespace:STC.Projects.ClassLibrary.Common;assembly=STC.Projects.ClassLibrary.Common"
             xmlns:Primitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls.Navigation" xmlns:TabControl="clr-namespace:Telerik.Windows.Controls.TabControl;assembly=Telerik.Windows.Controls.Navigation"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:Converter="clr-namespace:STC.Projects.ClassLibrary.Common.Converters;assembly=STC.Projects.ClassLibrary.Common"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             xmlns:Chromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls" xmlns:System="clr-namespace:System;assembly=mscorlib"
             x:Class="STC.Projects.WPFControlLibrary.MapControl.MapUserControl"
             mc:Ignorable="d">

    <UserControl.Resources>

        <Converter:StringEnglishToArabicSelectorConverter x:Key="StringEnglishToArabicSelectorConverter"/>
        <Converter:VisibilityToBoolConverter x:Key="VisibilityToBoolConverter"/>

        <Storyboard x:Key="AccidentsSearchResultGridOpen">
            <DoubleAnimation Storyboard.TargetName="brdrAccidentsSearchResultGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" From="250" To="0" Duration="0:0:1" SpeedRatio="4" />
        </Storyboard>

        <Storyboard x:Key="AccidentsSearchResultGridClose">
            <DoubleAnimation Storyboard.TargetName="brdrAccidentsSearchResultGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" From="0" To="250" Duration="0:0:1" SpeedRatio="6" />
        </Storyboard>


        <EsriVM:EsriMapViewModel x:Key="EsriVM"/>


        <Esri:SimpleFillSymbol x:Key="BufferSymbolCircleSmall" Style="Solid" >
            <Esri:SimpleFillSymbol.Outline>
                <Esri:SimpleLineSymbol Color="#DE6A58" Width="2" />
            </Esri:SimpleFillSymbol.Outline>
        </Esri:SimpleFillSymbol>

        <Esri:SimpleFillSymbol x:Key="BufferSymbolCircleBig"  Style="Solid" >
            <Esri:SimpleFillSymbol.Outline>
                <Esri:SimpleLineSymbol Color="#DE6A58" Width="2" />
            </Esri:SimpleFillSymbol.Outline>
        </Esri:SimpleFillSymbol>



        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" 
			StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" 
			StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GlyphBrush" Color="#eeac23" />
        <LinearGradientBrush x:Key="PressedBrush" 
			StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border 
          Name="Border"
          Margin="1" 
          CornerRadius="2" 
          Background="#004d46"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
                            <Path 
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,
				RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" 
								Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" 
								Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border 
          CornerRadius="2" 
          Background="#00ffcc"
                            
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" 
			TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="12"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="12"/>
                </Grid.RowDefinitions>
                <Border
      Grid.RowSpan="3"
      CornerRadius="2" 
      Background="Transparent" />
                <RepeatButton 
      Grid.Row="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Height="12"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track 
      Name="PART_Track"
                   
      Grid.Row="1"
      IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="1,0,1,0"  
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton 
      Grid.Row="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Height="12"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <!--HorizontalScrollBar Template using the previously created Templates-->
        <ControlTemplate x:Key="HorizontalScrollBar" 
			TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="12"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="12"/>
                </Grid.ColumnDefinitions>
                <Border
      Grid.ColumnSpan="3"
      CornerRadius="2" 
      Background="Transparent" />
                <RepeatButton 
      Grid.Column="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Width="12"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track 
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,1,0,1"  
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton 
      Grid.Column="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Width="12"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <!-- Style for overall  ScrollBar -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="12" />
                    <Setter Property="Template" 
						Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="12"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" 
						Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Checkbox base style-->


        <Style x:Key="FocusVisualCheckBox">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#0e171b"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#00ffcc"/>

        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#0e171b"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#0e171b"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#00ffcc"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#00ffcc"/>
        <Style x:Key="CheckBoxBaseStyleKey" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualCheckBox}"/>
            <!--<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->

            <Setter Property="BorderThickness" Value="1"/>

            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="BorderBrush" Value="#00ffcc"/>

            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Opacity" Value=".7"/>

            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="2" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" FlowDirection="LeftToRight" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Opacity" Value="1"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Opacity" Value=".6"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Checkbox Base Style-->


        <!--DatePicker Style-->


        <Style  TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Foreground" Value="#00FECE"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                        <Grid>
                            <Grid.Resources>
                                <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ContentElement"/>
                                            <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="watermark_decorator"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="WatermarkStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unwatermarked"/>
                                    <VisualState x:Name="Watermarked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">
                                <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Border x:Name="ContentElement" BorderBrush="#00FECE" BorderThickness="1"/>
                                    <Border x:Name="watermark_decorator" BorderBrush="#00FECE" BorderThickness=".5">
                                        <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" Padding="2"/>
                                    </Border>
                                    <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DatePickerStyle1" TargetType="{x:Type DatePicker}">
            <Setter Property="Foreground" Value="#00FECE"/>
            <Setter Property="IsTodayHighlighted" Value="True"/>
            <Setter Property="SelectedDateFormat" Value="Short"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderBrush" Value="#00FECE">

            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20*"/>
                                                    <ColumnDefinition Width="20*"/>
                                                    <ColumnDefinition Width="20*"/>
                                                    <ColumnDefinition Width="20*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="23*"/>
                                                    <RowDefinition Height="19*"/>
                                                    <RowDefinition Height="19*"/>
                                                    <RowDefinition Height="19*"/>
                                                </Grid.RowDefinitions>
                                                <Border x:Name="Highlight" BorderBrush="#00ffcc" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                                <Border x:Name="Background" BorderBrush="#00ffcc" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                                <Border x:Name="BackgroundGradient"  BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                            <GradientStop Color="Transparent" Offset="0"/>
                                                            <GradientStop Color="Transparent" Offset="0.375"/>
                                                            <GradientStop Color="Transparent" Offset="0.625"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                                <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                            <GradientStop Color="#FF4084BD"/>
                                                            <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                    <Rectangle.Stroke>
                                                        <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                            <GradientStop Color="#00ffcc"/>
                                                            <GradientStop Color="#00ffcc" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Stroke>
                                                </Rectangle>
                                                <Path Grid.ColumnSpan="4" Stroke="#00ffcc" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                                <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                                <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20"/>
                                <DatePickerTextBox x:Name="PART_TextBox"  Background="Transparent" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch"/>
                                <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                    <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                                <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBoxStyle-->

        <Style x:Key="FocusVisualComboBox">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#013228" Offset="0.0"/>
            <GradientStop Color="Black" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#00ffcc"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#00ffcc"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#00ffcc"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#013228" Offset="0.0"/>
            <GradientStop Color="Black" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#00ffcc"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#00ffcc"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#00ffcc"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#00ffcc"/>

        <SolidColorBrush x:Key="ComboBox.PopUp.Background" Color="#FF19282F"/>
        <SolidColorBrush x:Key="ComboBox.Foreground" Color="#FF00FFCC"/>
        <!--<SolidColorBrush x:Key="ComboBox.PopUp.Background" Color="AliceBlue"/>-->


        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource ComboBox.PopUp.Background}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="#00ffcc"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualComboBox}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource  ComboBox.Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA"/>
        <Style  TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualComboBox}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource ComboBox.Foreground}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Combobox Style end-->


        <Style x:Key="telrikCombBoxStyle" TargetType="telerik:RadComboBox">
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="MaxWidth" Value="150"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="telerik:RadComboBox">
                        <Border Background="{TemplateBinding Background}">

                            <ContentPresenter 
                                              Margin="{TemplateBinding Margin}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>


                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="#0e171b">
                <!--<Setter.Value>
                    <ImageBrush ImageSource="..\Images\dotted_bg.png"/>
                </Setter.Value>-->
            </Setter>

            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style x:Name="comboBoxItemStyle" TargetType="telerik:RadComboBoxItem">
                        <Setter Property="Foreground" Value="#00ffcc"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="Background" Value="#0e171b">
                            <!--<Setter.Value>
                                <ImageBrush ImageSource="..\Images\dotted_bg.png"/>
                            </Setter.Value>-->
                        </Setter>
                        <!--<Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="#00ffcc" BlurRadius="3" Opacity=".9" ShadowDepth="0"/>
                            </Setter.Value>
                        </Setter>-->
                    </Style>
                </Setter.Value>
            </Setter>

            <!--<Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="3" Opacity=".9" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>-->
            <!--<Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                   
                </Trigger>
            </Style.Triggers>-->
        </Style>


        <Style x:Key="ToggleBtnEclipseStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="#FF1F3B53"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF6DBDD1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#D8FFFFFF"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#C6FFFFFF"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#8CFFFFFF"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#3FFFFFFF"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <PointAnimation Duration="0" To="0.7,1" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.StartPoint)"/>
                                            <PointAnimation Duration="0" To="0.7,0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.EndPoint)"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Background" CornerRadius="3" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <Grid Background="{TemplateBinding Background}"  Margin="1">
                                    <Border Opacity="0"  x:Name="BackgroundAnimation" Background="#FF448DCA" />
                                    <Rectangle x:Name="BackgroundGradient" >
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                <GradientStop Color="#C6FFFFFF" Offset="1" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </Border>
                            <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                            <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                            <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="RadToggleButtonStyle1" TargetType="{x:Type telerik:RadToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#171717"/>
            <Setter Property="Background" Value="#171717"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterPressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CommonStatesWrapper"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DisabledChecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOverChecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent" Offset="0"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerCheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="0.169"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BackgroundVisibility">
                                    <VisualState x:Name="BackgroundIsHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="BackgroundIsVisible"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStatesGroup">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterMouseOverBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterPressedBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Transparent"/>
                                            <GradientStop Color="Transparent" Offset="0.126"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Border x:Name="DisabledVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="#79bf00" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Grid x:Name="CommonStatesWrapper">
                                <Border x:Name="FocusVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="#79bf00" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                    <Border x:Name="FocusInnerVisual" BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                                <Border x:Name="CheckedVisual" BorderBrush="Transparent" BorderThickness="1" Background="#79bf00" Padding="0" CornerRadius="0">
                                    <Border x:Name="InnerCheckedVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}" Style="{DynamicResource FocusVisual}"/>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsChecked" Value="True"/>
        </Style>

        <Style x:Key="RadToggleButtonStyleSetting" TargetType="{x:Type telerik:RadToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#171717"/>
            <Setter Property="Background" Value="#171717"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterPressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CommonStatesWrapper"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DisabledChecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOverChecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent" Offset="0"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerCheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Transparent"/>
                                                            <GradientStop Color="Transparent" Offset="0.169"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BackgroundVisibility">
                                    <VisualState x:Name="BackgroundIsHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="BackgroundIsVisible"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                        </Storyboard>

                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStatesGroup">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterMouseOverBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterPressedBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Transparent"/>
                                            <GradientStop Color="Transparent" Offset="0.126"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Border x:Name="DisabledVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Grid x:Name="CommonStatesWrapper">
                                <Border x:Name="FocusVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                    <Border x:Name="FocusInnerVisual" BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                                <Border x:Name="CheckedVisual" Opacity="0" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Padding="5" CornerRadius="5">
                                    <Border x:Name="InnerCheckedVisual" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsChecked" Value="True"/>
        </Style>

        <Style x:Key="RadPanelBarItemStyle1" TargetType="{x:Type telerik:RadPanelBarItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                        <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOut"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="HeaderRow" Background="Transparent" Margin="5,0" MinHeight="{TemplateBinding MinHeight}">
                                <Border x:Name="MouseOverVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="SelectedVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="DisabledVisual" BorderBrush="#171717" BorderThickness="1" Background="#fff" CornerRadius="1" Opacity="0">
                                    <Border BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <ContentControl x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" RadiusY="2" RadiusX="2" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
                            </Grid>
                            <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                <ItemsPresenter/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White"/>
                        <GradientStop Color="#fff" Offset="0.43"/>
                        <GradientStop Color="#fff" Offset="0.44"/>
                        <GradientStop Color="#fff" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderBrush" Value="#171717"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="ChildItemsTemplate">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                        <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOut"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="HeaderRow" Background="Transparent" Margin="5,0" MinHeight="{TemplateBinding MinHeight}">
                                <Border x:Name="MouseOverVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="SelectedVisual" BorderBrush="#171717" BorderThickness="1" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#fff" Offset="1"/>
                                            <GradientStop Color="#fff"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="DisabledVisual" BorderBrush="#171717" BorderThickness="1" Background="#fff" CornerRadius="1" Opacity="0">
                                    <Border BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <ContentControl x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" RadiusY="2" RadiusX="2" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
                            </Grid>
                            <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                <ItemsPresenter/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <telerik:PanelBarPanel IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Level" Value="1">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                                <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Arrow"/>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOut"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected"/>
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ExpandStates">
                                            <VisualState x:Name="Expanded">
                                                <Storyboard>

                                                    <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsContainer"/>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsContainer">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Collapsed"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="HeaderRow" UseLayoutRounding="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="NormalVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="5" Margin="-1,0,-1,-1">
                                            <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}"/>
                                        </Border>
                                        <Border x:Name="MouseOverVisual" BorderBrush="#fff" BorderThickness="1" Grid.ColumnSpan="5" Margin="-1,0,-1,-1" Opacity="0">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#fff" Offset="1"/>
                                                    <GradientStop Color="#fff" Offset="0"/>
                                                    <GradientStop Color="#fff" Offset="0.43"/>
                                                    <GradientStop Color="#fff" Offset="0.42"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}"/>
                                        </Border>
                                        <Border x:Name="SelectedVisual" BorderThickness="1" Grid.ColumnSpan="5" Margin="-1,0,-1,-1" Opacity="0">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#fff"/>
                                                    <GradientStop Color="#fff" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#fff" Offset="0.996"/>
                                                    <GradientStop Color="#fff" Offset="0.17"/>
                                                    <GradientStop Color="#fff" Offset="0.57"/>
                                                    <GradientStop Color="#fff" Offset="0.56"/>
                                                    <GradientStop Color="#fff"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border BorderThickness="1" Background="{x:Null}">
                                                <Border.BorderBrush>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#fff"/>
                                                        <GradientStop Color="#fff" Offset="0.126"/>
                                                    </LinearGradientBrush>
                                                </Border.BorderBrush>
                                            </Border>
                                        </Border>
                                        <Path x:Name="Arrow" Grid.Column="5" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="left" Margin="7,0" Opacity="1" RenderTransformOrigin="0.5,0.5" Stretch="None" Stroke="Black" StrokeThickness="2" VerticalAlignment="Center">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0"/>
                                            </Path.RenderTransform>
                                        </Path>
                                        <ContentControl x:Name="Header" Grid.ColumnSpan="4" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Rectangle x:Name="FocusVisual" Grid.ColumnSpan="5" Grid.Column="0" IsHitTestVisible="False" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>
                                    </Grid>
                                    <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                                        <telerik:LayoutTransformControl x:Name="transformationRoot" IsTabStop="False">
                                            <ItemsPresenter/>
                                        </telerik:LayoutTransformControl>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--<Style  TargetType="{x:Type TextBlock}">

            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"/>
            -->
        <!--<Setter Property="FontFamily" Value="Helvetica"/>-->
        <!--
            <Setter Property="FontFamily" Value="Helvetica Neua LT std 47 Light Condensed"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="1" Opacity=".9" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="#00FECE" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />

            <!--<Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#00ffcc"/>-->

            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="1" Opacity="1" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#00ffcc">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Background" Value="#49b13c" TargetName="bg" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}">


            <Setter Property="Background" Value="#013228"/>
            <Setter Property="Foreground" Value="#00FECE"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#00ffcc"/>

            <!--<Setter Property="BorderThickness" Value="1"/>-->
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                    <Setter Property="Text" Value="*"/>

                </Trigger>

            </Style.Triggers>-->

        </Style>

        <Style TargetType="{x:Type CheckBox}">


            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#00FECE"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#00ffcc" BlurRadius="4" Opacity=".6" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
        </Style>





        <SolidColorBrush x:Key="Button.Static.Background2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="Transparent"/>

        <DataTemplate x:Key="labol">
            <TextBlock Foreground="#00ffcc" Text="{Binding}" Margin="4"/>
        </DataTemplate>

        <Style x:Key="MenuButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RadToggleButtonStyle" TargetType="{x:Type telerik:RadToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#00ffcc"/>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#002b22"/>
            <Setter Property="CornerRadius" Value="1"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterPressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CommonStatesWrapper"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DisabledChecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOverChecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774" Offset="0"/>
                                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                                            <GradientStop Color="#2bb774" Offset="0.5"/>
                                                            <GradientStop Color="#2bb774" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774"/>
                                                            <GradientStop Color="#2bb774" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerCheckedVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#2bb774"/>
                                                            <GradientStop Color="#2bb774" Offset="0.169"/>
                                                        </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="BackgroundVisibility">
                                    <VisualState x:Name="BackgroundIsHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="BackgroundIsVisible"/>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="FocusStatesGroup">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Border x:Name="OuterBorder" BorderBrush="#00ffcc" BorderThickness="0.6" Background="{x:Null}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Border BorderBrush="#00ffcc" BorderThickness="0.6" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterMouseOverBorder" BorderBrush="Transparent" BorderThickness="0.6" CornerRadius="{TemplateBinding CornerRadius}" Background="#ffd452" Opacity="0">
                                <Border BorderBrush="Transparent" BorderThickness="0.6" Background="#ffd452" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="OuterPressedBorder" BorderBrush="Transparent" Background="#00ffcc" BorderThickness="0.6" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">

                                <Border BorderBrush="Transparent" BorderThickness="0.6" Background="#00ffcc" CornerRadius="{TemplateBinding InnerCornerRadius}"/>

                            </Border>
                            <Border x:Name="DisabledVisual" BorderBrush="#008C99" BorderThickness="0.6" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                            <Grid x:Name="CommonStatesWrapper">
                                <Border x:Name="FocusVisual" BorderBrush="#008C99" BorderThickness="0.6" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed">
                                    <Border x:Name="FocusInnerVisual" BorderBrush="#008C99" BorderThickness="0.6" Background="{x:Null}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                                <Border x:Name="CheckedVisual" Background="#00ffcc" BorderBrush="Transparent" BorderThickness="0.6" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">

                                    <Border x:Name="InnerCheckedVisual" BorderBrush="Transparent" BorderThickness="0.6" Background="#00ffcc" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="#00ffcc"/>
                </Trigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="IsMoseOvernone" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="bg" />
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Opacity" Value="0.5"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IsMoseOverGrid" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="bg" />
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Storyboard x:Key="BlankingAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.5" Duration="0:0:0.7" AutoReverse="True" RepeatBehavior="Forever"/>
        </Storyboard>

        <Style x:Key="BigButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#00ffcc" />
            <Setter Property="BorderBrush" Value="#10302d"/>
            <Setter Property="BorderThickness" Value="2"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="#008c99">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#00ffcc" TargetName="bg" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <DoubleAnimation x:Key="ScaleMapControl" Storyboard.TargetName="mainGridMapControl" Storyboard.TargetProperty="Width"
                             To="830" Duration="0:0:2"/>

        <DoubleAnimation x:Key="ReturnToDefaultScaleMapControl" Storyboard.TargetName="mainGridMapControl" Storyboard.TargetProperty="Width"
                             To="1310" Duration="0:0:2"/>

        <Storyboard x:Key="OpenPopupsPanel">
            <DoubleAnimation Storyboard.TargetName="gridPopups" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             Duration="0:0:1" To="0" SpeedRatio="2"/>
        </Storyboard>

        <Storyboard x:Key="ClosePopupsPanel">
            <DoubleAnimation Storyboard.TargetName="gridPopups" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" 
                             Duration="0:0:1" To="490" SpeedRatio="2"/>
        </Storyboard>

    </UserControl.Resources>

    <Viewbox>
        <Grid x:Name="mainGridMapControl" Width="1310" Height="900" RenderTransformOrigin="0.5,0.5">

            <Grid.Style>
                <Style>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="UserControl.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>

                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
                                                    BeginTime="0:0:0.1" Duration="0:0:0.5"  From="1600" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Grid.RenderTransform>

                <TransformGroup>
                    <TranslateTransform/>

                    <ScaleTransform/>
                </TransformGroup>

            </Grid.RenderTransform>

            <Grid.Resources>
                <DataTemplate x:Key="ListDataTemplate">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Name}" />
                        <TextBlock Grid.Column="1" Text="{Binding Value}" />
                    </Grid>
                </DataTemplate>
            </Grid.Resources>

            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="841*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>


            <Grid Panel.ZIndex="1"  Opacity="0.95" Grid.ColumnSpan="3">
                <Grid.Background>
                    <ImageBrush ImageSource="Images/dotted_bg.png" Opacity=".8"/>
                </Grid.Background>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="100*"/>
                    <ColumnDefinition Width="60*"/>
                    <ColumnDefinition Width="250*"/>
                </Grid.ColumnDefinitions>

                <!--<Image Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/logo.png" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" />-->
                <TextBlock x:Name="TxtDate" FontSize="16" Foreground="#fcfcfc" Grid.Column="0" Margin="5,7,5,7"/>
                <TextBlock x:Name="TxtTime" FontSize="16" Foreground="#fcfcfc" Grid.Column="1" Margin="15,7,15,7"/>

                <Border Grid.Column="0"  Margin="5,0,5,1" BorderBrush="#10302d" Background="Transparent" Opacity="0.8" BorderThickness="0">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>


                        <telerik:RadWatermarkTextBox Visibility="Collapsed" x:Name="txtSearch" WatermarkContent="Search" Padding="2px" FontSize="14" Foreground="#00ffCC" ToolTip="{x:Static p:Resources.strSearch}" Background="Transparent" BorderBrush="Transparent" KeyDown="txtSearch_KeyDown" FontFamily="Helvetica" />

                        <Button Visibility="Collapsed"  x:Name="btnSearch" Grid.Column="1" ToolTip="{x:Static p:Resources.strSearchNow}" Style="{StaticResource IsMoseOverGrid}" Margin="0,0,5,0" Width="Auto" Height="24" Click="btnSearch_Click">
                            <Image Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/search.png"/>
                        </Button>

                        <Button  Grid.Column="0" Cursor="Hand" Width="35" Height="35" Click="ToggleMenu_Click" HorizontalAlignment="Center"  ToolTip="حدد ماذا تريد ان تشاهد على الخريطه">
                            <!--<Button.Background>
                                <ImageBrush  ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/layers.png"/>
                            </Button.Background>-->

                            <Button.Style>
                                <Style TargetType="Button">

                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <!--<Setter Property="Foreground" Value="#ffffff" />-->

                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border x:Name="bg" Background="Transparent" BorderThickness="1" BorderBrush="Transparent">
                                                    <Image x:Name="imgLayer" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/layers.png"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="bg" Value="#00FECE"/>
                                                        <Setter TargetName="imgLayer" Property="Source" Value="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/layers-hover.png"/>

                                                        <!--<Setter.Value>
                                                                <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/layers-hover.png" />
                                                            </Setter.Value>-->

                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                        <!--<Setter Property="Opacity" Value="0.5"></Setter>-->
                                                    </Trigger>

                                                    <DataTrigger Binding="{Binding Path=CheckBtn}" Value="Check">
                                                        <Setter Property="Background" TargetName="bg" Value="#00FECE"/>
                                                        <Setter TargetName="imgLayer" Property="Source" Value="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/layers-hover.png"/>
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                        <!--<Setter Property="Opacity" Value="0.5"></Setter>-->
                                                    </DataTrigger>

                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>

                        </Button>

                    </Grid>
                </Border>

                <telerik:RadToggleButton Visibility="Collapsed" Grid.Column="6" Panel.ZIndex="50" Cursor="Hand" BorderBrush="Transparent" IsChecked="False" x:Name="radToggleBtnViewSeachBlock" Click="radToggleBtnViewSeachBlock_Click" FontSize="16" Padding="0" Foreground="White" Margin="0" HorizontalAlignment="left" VerticalAlignment="Top" Width="45" Height="40" Style="{DynamicResource RadToggleButtonStyleSetting}" Background="{x:Null}">
                    <Image Width="32" Height="24" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/map_search.png" Margin="0,0,0,2" ToolTip="أبحث بالتحديد عن"/>
                </telerik:RadToggleButton>

            </Grid>

            <Border x:Name="brdrIncidentFilterPopUP" BorderBrush="AliceBlue" Background="Black" Opacity="0.8" 
                    MinWidth="400"  BorderThickness="2" Panel.ZIndex="2" Grid.Column="0" Grid.ColumnSpan="3" 
                    Grid.RowSpan="2" Margin="150,50,150,400" Visibility="Collapsed" >
                <Grid Margin="5,20,5,10">
                    <Grid.Resources>
                        <DataTemplate x:Key="EngArabicNameTemplate">
                            <TextBlock TextAlignment="Left" HorizontalAlignment="Left" Margin="5,2" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" TextWrapping="Wrap">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource StringEnglishToArabicSelectorConverter}">

                                        <Binding Path="ArabicName" FallbackValue=""/>
                                        <Binding Path="EnglishName" FallbackValue=""/>
                                        <Binding Mode="OneWay" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>

                        <Style  TargetType="{x:Type TextBlock}">

                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#00ffcc"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="FontSize" Value="13.5"/>


                            <Setter Property="FontFamily" Value="Helvetica Neua LT std 47 Light Condensed"/>
                            <!--<Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="#00ffcc" BlurRadius="1" Opacity=".9" ShadowDepth="0"/>
                                </Setter.Value>
                            </Setter>-->
                        </Style>

                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height=".2*"/>

                        <!--<RowDefinition Height="1.5*"/>
                        <RowDefinition Height="5.5*"/>-->
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.55*"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0.6*"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0.7*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>


                    <Button x:Name="btnCloseIncidentFilterPopUP" Click="btnCloseIncidentFilterPopUP_Click" Grid.Column="5" HorizontalAlignment="right" Foreground="{x:Null}" BorderBrush="{x:Null}" VerticalAlignment="Top"  Margin="0,-20,-5,0" Width="20" Height="20" Grid.Row="0">
                        <Button.Background>
                            <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/Close-icon.png"/>
                        </Button.Background>
                    </Button>


                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="0" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strAccidentNo}"/>
                    <TextBox VerticalAlignment="Center" Margin="5,0,5,0" MinHeight="25"  Grid.Row="0" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Foreground="#00FECE" FontFamily="Helvetica" TextAlignment="Left" Text="{Binding AccidentNo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="2" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strEmirate}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="0" Grid.Column="3" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                               
                              ItemsSource="{Binding AccidentEmirates}" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentEmirateId}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="4" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strCity}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="0" Grid.Column="5" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                              
                              ItemsSource="{Binding AccidentCities}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentCityId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>




                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strArea}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0"  Grid.Row="1" Grid.Column="1" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                               
                              ItemsSource="{Binding AccidentAreas}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentAreaId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="2" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strAddress}"/>
                    <TextBox VerticalAlignment="Center" Margin="5,0,5,0" MinHeight="25"  Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="3" FontSize="14" TextWrapping="Wrap" Foreground="#00FECE" FontFamily="Helvetica" TextAlignment="Left" Text="{Binding AccidentAddres}"/>



                    <!--<TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="4" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strTime}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="1" Grid.Column="5" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100"
                              
                              ItemsSource="{Binding}" DisplayMemberPath="" SelectedItem="{Binding SelectedPriorityDto, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>-->





                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="2" Grid.Column="0" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strLocation}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0"  Grid.Row="2" Grid.Column="1" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                               
                              ItemsSource="{Binding AccidentLocations}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentLocationId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="2" Grid.Column="2" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strLocationType}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="2" Grid.Column="3" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}" 
                               
                              ItemsSource="{Binding AccidentLocationTypes}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentLocationTypeId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="2" Grid.Column="4" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strPoliceStation}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="2" Grid.Column="5" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}" 
                              
                              ItemsSource="{Binding AccidentPoliceStations}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentPoliceStationId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>




                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="3" Grid.Column="0" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strReportType}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0"  Grid.Row="3" Grid.Column="1" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                               
                              ItemsSource="{Binding AccidentReportTypes}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentReasonTypeId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="3" Grid.Column="2" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strCrashType}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="3" Grid.Column="3" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                               
                              ItemsSource="{Binding AccidentCrashTypes}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentCrashTypeId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="3" Grid.Column="4" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strSeverity}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="3" Grid.Column="5" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                              
                              ItemsSource="{Binding AccidentSeverties}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentSeverityId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>




                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="4" Grid.Column="0" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strWeather}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0"  Grid.Row="4" Grid.Column="1" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                               
                              ItemsSource="{Binding AccidentWeathers}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentWeatherStatusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="4" Grid.Column="2" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strLighting}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="4" Grid.Column="3" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                               
                              ItemsSource="{Binding AccidentLightings}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentLightStatusId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="4" Grid.Column="4" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strPavementCondition}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="4" Grid.Column="5" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                              
                              ItemsSource="{Binding AccidentPConditions}" SelectedValuePath="Id" ItemTemplate="{StaticResource EngArabicNameTemplate}" SelectedItem="{Binding AccidentPConditionId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>



                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="5" Grid.Column="0" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strSlightInjuries}"/>
                    <TextBox VerticalAlignment="Center" Margin="5,0,5,0" MinHeight="25" Grid.Row="5" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Foreground="#00FECE" FontFamily="Helvetica" TextAlignment="Left" Text="{Binding AccidentNoOfEasyInjuries}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="5" Grid.Column="2" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strMediumInjuries}"/>
                    <TextBox VerticalAlignment="Center" Margin="5,0,5,0" MinHeight="25" Grid.Row="5" Grid.Column="3" FontSize="14" TextWrapping="Wrap" Foreground="#00FECE" FontFamily="Helvetica" TextAlignment="Left" Text="{Binding AccidentNoOfMedInjuries}"/>
                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="5" Grid.Column="4" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strSevereInjuries}"/>
                    <TextBox VerticalAlignment="Center" Margin="5,0,5,0" MinHeight="25" Grid.Row="5" Grid.Column="5" FontSize="14" TextWrapping="Wrap" Foreground="#00FECE" FontFamily="Helvetica" TextAlignment="Left" Text="{Binding AccidentNoOfFatalInjuries}"/>


                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="6" Grid.Column="0" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strFatalities}"/>
                    <TextBox VerticalAlignment="Center" Margin="5,0,5,0" MinHeight="25" Grid.Row="6" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Foreground="#00FECE" FontFamily="Helvetica" TextAlignment="Left" Text="{Binding AccidentNoOfDeaths}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="6" Grid.Column="2" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strSpeed}"/>
                    <TextBox VerticalAlignment="Center" Margin="5,0,5,0" MinHeight="25" Grid.Row="6" Grid.Column="3" FontSize="14" TextWrapping="Wrap" Foreground="#00FECE" FontFamily="Helvetica" TextAlignment="Left" Text="{Binding AccidentSpeed}"/>


                    <!--<TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="6" Grid.Column="4" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strTime}"/>
                    <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="6" Grid.Column="5" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Style="{DynamicResource ComboBoxStyle1}"
                              
                              ItemsSource="{Binding}" DisplayMemberPath="" SelectedItem="{Binding SelectedPriorityDto, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>-->




                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="7" Grid.Column="0" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strFrom}"/>
                    <DatePicker VerticalAlignment="Center" Margin="5,0,5,0" MinHeight="25" Grid.Row="7" Grid.Column="1" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" 
                                SelectedDate="{Binding AccidentStartTime}" Style="{StaticResource DatePickerStyle1}"/>

                    <TextBlock VerticalAlignment="Center" Margin="15,0,0,0" HorizontalAlignment="Left" Grid.Row="7" Grid.Column="2" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Left" Text="{x:Static p:Resources.strTo}"/>
                    <DatePicker VerticalAlignment="Center" Margin="5,0,5,0" Grid.Row="7" Grid.Column="3" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" 
                                SelectedDate="{Binding AccidentEndTime}" Style="{DynamicResource DatePickerStyle1}"/>

                    <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="4" Grid.ColumnSpan="2" Margin="5,0,5,0">
                        <Button x:Name="btnClearAccidents" VerticalAlignment="Center" Margin="70,0,5,0" Padding="10,3" Grid.Row="7" Grid.Column="5" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Command="{Binding ClearAccidentsCommand}"
                            Content="{x:Static p:Resources.strClear}"/>

                        <Button x:Name="btnSearchAccidents" VerticalAlignment="Center" Margin="5,0,5,0" Padding="10,3" Grid.Row="7" Grid.Column="5" FontSize="14" Foreground="#00FECE" FontFamily="Helvetica" MinWidth="100" Click="btnSearchAccidents_Click" Command="{Binding SearchAccidentsCommand}"
                            Content="{x:Static p:Resources.strSearch}"/>
                    </StackPanel>

                </Grid>
            </Border>



            <Border x:Name="brdrAccidentsSearchResultGrid" BorderBrush="AliceBlue" Background="Black" Opacity="0.8" 
                   BorderThickness="2" Panel.ZIndex="2" Grid.Row="1" Height="250" Grid.Column="0" Grid.ColumnSpan="3"
                   VerticalAlignment="Bottom" Visibility="Collapsed">
                <Border.RenderTransform>
                    <TranslateTransform Y="0"/>
                </Border.RenderTransform>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="130"/>
                    </Grid.ColumnDefinitions>

                    <telerik:RadToggleButton Cursor="Hand" Background="Black" x:Name="radToggleBtnShowSearchResult" Click="radToggleBtnShowSearchResult_Click" 
                                             Height="40" Width="40" Margin="-2,-40,10,0" Style="{DynamicResource RadToggleButtonStyle}"
                                             HorizontalAlignment="Left" VerticalAlignment="Top">

                        <telerik:RadToggleButton.Template>
                            <ControlTemplate>
                                <Border x:Name="brdrPanel" BorderBrush="#00FECE" Background="Black" Opacity="0.9" BorderThickness="1.5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Image x:Name="Img" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/accidents.png" Margin="0,1,0,1" Width="30"  HorizontalAlignment="left"/>
                                        <TextBlock x:Name="txtBlk" TextWrapping="Wrap" TextAlignment="Center" Margin="5,5,5,5" FontSize="13.5" VerticalAlignment="Center" Grid.Column="1"/>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="brdrPanel" Property="Background" Value="#00FECE"/>
                                        <Setter TargetName="txtBlk" Property="Foreground" Value="Black"/>
                                        <Setter TargetName="Img" Property="Source" Value="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/accident_selc.png"/>
                                    </Trigger>
                                    <Trigger Property="telerik:RadToggleButton.IsChecked" Value="True">
                                        <Setter TargetName="brdrPanel" Property="Background" Value="#00FECE"/>
                                        <Setter TargetName="txtBlk" Property="Foreground" Value="Black"/>
                                        <Setter TargetName="Img" Property="Source" Value="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/accident_selc.png"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </telerik:RadToggleButton.Template>

                    </telerik:RadToggleButton>

                    <StackPanel Orientation="Vertical" Grid.Column="1">

                        <telerik:RadToggleButton IsChecked="True" Cursor="Hand" x:Name="radToggleBtnShowSearchFilter" Click="radToggleBtnShowSearchFilter_Click" 
                                                 Height="50" Margin="5,10,10,0" Style="{DynamicResource RadToggleButtonStyle}">
                            <telerik:RadToggleButton.Template>
                                <ControlTemplate>
                                    <Border x:Name="brdrPanel" BorderBrush="#00FECE" BorderThickness="1.5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Image x:Name="Img" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/preview.png" Margin="0,1,0,1" Width="30"  HorizontalAlignment="left"/>
                                            <TextBlock x:Name="txtBlk" Text="{x:Static p:Resources.strSearch}" Margin="10,5,5,5" FontSize="14" VerticalAlignment="Center" Grid.Column="1"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--<Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="brdrPanel" Property="Background" Value="#00FECE"/>
                                            <Setter TargetName="txtBlk" Property="Foreground" Value="Black"/>
                                            <Setter TargetName="Img" Property="Source" Value="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/preview-hover.png"/>
                                        </Trigger>-->
                                        <Trigger Property="telerik:RadToggleButton.IsChecked" Value="True">
                                            <Setter TargetName="brdrPanel" Property="Background" Value="#00FECE"/>
                                            <Setter TargetName="txtBlk" Property="Foreground" Value="Black"/>
                                            <Setter TargetName="Img" Property="Source" Value="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/preview-hover.png"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </telerik:RadToggleButton.Template>
                            <!--<Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="ImgShowResult" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/preview.png" Margin="0,1,0,1" Width="30"  HorizontalAlignment="left"/>
                                <TextBlock Text="{x:Static p:Resources.strSearch}" Margin="5,5" FontSize="13.5" VerticalAlignment="Center" Grid.Column="1"/>
                            </Grid>-->
                        </telerik:RadToggleButton>

                        <telerik:RadToggleButton Cursor="Hand" x:Name="radToggleBtnShowOnMap" IsEnabled="{Binding EnableShowOnMap}" Height="50" Click="radToggleBtnShowOnMap_Click" Margin="5,5,10,0" Style="{DynamicResource RadToggleButtonStyle}">

                            <telerik:RadToggleButton.Template>
                                <ControlTemplate>
                                    <Border x:Name="brdrPanel" Cursor="Hand" BorderBrush="#00FECE" BorderThickness="1.5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Image x:Name="Img" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/view_in_map.png" Margin="5,1,0,1" Width="20" Height="20" VerticalAlignment="Center"  HorizontalAlignment="left"/>
                                            <TextBlock x:Name="txtBlk" Text="{x:Static p:Resources.strViewInMap}" TextWrapping="Wrap" TextAlignment="Center" Margin="10,5,10,5" FontSize="14" VerticalAlignment="Center" Grid.Column="1"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--<Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="brdrPanel" Property="Background" Value="#00FECE"/>
                                            <Setter TargetName="txtBlk" Property="Foreground" Value="Black"/>
                                            <Setter TargetName="Img" Property="Source" Value="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/view_in_map-hover.png"/>
                                        </Trigger>-->
                                        <Trigger Property="telerik:RadToggleButton.IsChecked" Value="True">
                                            <Setter TargetName="brdrPanel" Property="Background" Value="#00FECE"/>
                                            <Setter TargetName="txtBlk" Property="Foreground" Value="Black"/>
                                            <Setter TargetName="Img" Property="Source" Value="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/view_in_map-hover.png"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </telerik:RadToggleButton.Template>

                        </telerik:RadToggleButton>

                        <!--<Button x:Name="btnShowOnMap" Background="Transparent" IsEnabled="{Binding EnableShowOnMap}" VerticalAlignment="Center" Width="55" Margin="15,0,0,0" Padding="5,3" Grid.Row="8" Grid.Column="0" FontSize="14"  Click="btnShowOnMap_Click" Style="{x:Null}" BorderBrush="Transparent">
                            <Button.Template>
                                <ControlTemplate>
                                    <Border BorderBrush="Transparent">
                                        <Image Cursor="Hand" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/Icons/show_all_on_map.png"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>-->
                        <TextBlock VerticalAlignment="Center" Margin="5,5,0,0" Grid.Row="8" Grid.Column="2" Grid.ColumnSpan="4" FontSize="14" TextWrapping="Wrap" FontFamily="Helvetica" TextAlignment="Center" Foreground="Yellow" Text="{Binding AccidentSearchStatus}"/>
                    </StackPanel>



                    


                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Margin="15,10,10,0" Height="50" BorderBrush="#00FECE" BorderThickness="1,1,1,0">
                            <Grid Background="#0e2b2b">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock  Text="{x:Static p:Resources.strAccidentNo}" HorizontalAlignment="Left" Margin="10,10,0,10" Foreground="#00FECE" FontWeight="Bold" FontSize="14.667" VerticalAlignment="Center">
                                    <TextBlock.Effect>
                                        <DropShadowEffect BlurRadius="0" ShadowDepth="0"/>
                                    </TextBlock.Effect>
                                </TextBlock>
                                <TextBlock Grid.Column="1" Text="{x:Static p:Resources.strDateTime}" HorizontalAlignment="Left" Margin="0,10" Foreground="#00FECE" FontWeight="Bold" FontSize="14.667" VerticalAlignment="Center">
                                    <TextBlock.Effect>
                                        <DropShadowEffect BlurRadius="0" ShadowDepth="0"/>
                                    </TextBlock.Effect>
                                </TextBlock>



                                <ToggleButton Grid.Column="2" Content="{x:Static p:Resources.strSeverity}" BorderBrush="{x:Null}" BorderThickness="0" HorizontalAlignment="Left" Command="{Binding CreationDateSortCommand}" Style="{DynamicResource SortToggleButtonStyle}" Background="#00DDDDDD" Foreground="#00FECE" Margin="0,10" FontWeight="Bold" FontSize="14.667" VerticalAlignment="Center"/>

                                <TextBlock Grid.Column="3" Text="{x:Static p:Resources.strAddress}" HorizontalAlignment="Left" Margin="0,10" Foreground="#00FECE" FontWeight="Bold" FontSize="14.667" VerticalAlignment="Center">
                                    <TextBlock.Effect>
                                        <DropShadowEffect BlurRadius="0" ShadowDepth="0"/>
                                    </TextBlock.Effect>
                                </TextBlock>

                                <Grid Grid.Column="4" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <!--<TextBlock Grid.Column="0" Text="{x:Static p:Resources.strShowOnMap}" HorizontalAlignment="Left" Margin="0,10" Foreground="#00FECE" FontWeight="Bold" FontSize="14.667" VerticalAlignment="Center">
                                        <TextBlock.Effect>
                                            <DropShadowEffect BlurRadius="0" ShadowDepth="0"/>
                                        </TextBlock.Effect>
                                    </TextBlock>-->

                                    <CheckBox Grid.Column="0" Grid.ColumnSpan="2" Width="120" HorizontalContentAlignment="Center" HorizontalAlignment="Center" IsEnabled="{Binding CheckUncheckAllisEnabled}" IsChecked="{Binding CheckUncheckAll}" Style="{DynamicResource CheckBoxBaseStyleKey}"></CheckBox>


                                </Grid>


                            </Grid>
                        </Border>
                        <ListView Grid.Row="1" Background="{x:Null}" BorderBrush="#00FECE" BorderThickness="1" Foreground="#00FECE" IsTextSearchEnabled="True" 
                                  ItemsSource="{Binding AccidentSearchResultsUI}" HorizontalContentAlignment="Stretch" Margin="15,0,10,10"
                                  ItemContainerStyle="{DynamicResource ListViewItemStyle1}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ListView.Resources>
                                <Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Grid>
                                                    <ContentPresenter HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                                            <Setter Property="Background" Value="#FF0E171B" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                                            <Setter Property="Background" Value="#3b3c3e" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#0e2b2b"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.Resources>
                            <ListView.ItemTemplate>
                                <DataTemplate>

                                    <Border BorderThickness="0,0,0,1" BorderBrush="Black" Height="50">

                                        <Grid Background="#FF0E171B" Height="Auto">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="0.5*"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="120"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock x:Name="txtBlkIncidentNum" Text="{Binding AccidentDetailDto.IncidentNumber}" Tag="{Binding}" Cursor="Hand" MouseDown="txtBlkIncidentNum_MouseDown" FontSize="14.667" Margin="10"/>
                                            <TextBlock Grid.Column="1" Text="{Binding AccidentDetailDto.CreatedTime}" TextWrapping="Wrap" FontSize="14.667" Margin="0,10,10,10"/>
                                            <TextBlock Grid.Column="2" Text="{Binding AccidentDetailDto.CrashSeverityId}" FontSize="14.667" Margin="0,10,10,10"/>
                                            <TextBlock Grid.Column="3" Text="{Binding AccidentDetailDto.IncidentAddress}" TextWrapping="Wrap" MaxWidth="200" FontSize="14.667" Margin="0,10,10,10"/>
                                            <CheckBox  IsChecked="{Binding ShowOnMap}" Grid.Column="4" BorderThickness="1"  Margin="10,0"  FontSize="14.667" MinWidth="40" MinHeight="25"  FontWeight="Normal" Style="{DynamicResource CheckBoxBaseStyleKey}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Checked">
                                                        <i:InvokeCommandAction CommandParameter="{Binding AccidentDetailDto.IncidentNumber}" Command="{Binding DataContext.ShowOnMapCheckedCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Unchecked">
                                                        <i:InvokeCommandAction CommandParameter="{Binding AccidentDetailDto.IncidentNumber}" Command="{Binding DataContext.ShowOnMapUnCheckedCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>

                                            </CheckBox>

                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>

                </Grid>

            </Border>

            <Esri:MapView x:Name="esriMapView" ExtentChanged="esriMapView_ExtentChanged" Loaded="esriMapView_Loaded" Grid.Column="0" Grid.ColumnSpan="3" MouseDown="esriMapView_MouseDown" Grid.RowSpan="2" TouchLeave="esriMapView_TouchLeave" Margin="0,0,0,0" MouseLeftButtonDown="esriMapView_MouseLeftButtonDown" MouseRightButtonDown="esriMapView_MouseRightButtonDown" MouseRightButtonUp="esriMapView_MouseRightButtonUp" MouseMove="esriMapView_MouseMove">

                <Esri:MapView.Overlays>
                    <Esri:OverlayItemsControl>

                        <Border x:Name="mapTipOfficers" Width="400" Height="470" CornerRadius="15" BorderThickness="2" Opacity="0.9" Padding="0" HorizontalAlignment="left" VerticalAlignment="Top" Margin="5" Visibility="Collapsed" Esri:ViewBase.ViewOverlayAnchor="{Binding Geometry}">
                            <Grid Width="380">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="radBtnCloseOfficers" Click="radBtnCloseOfficers_Click" HorizontalAlignment="right" Foreground="{x:Null}" BorderBrush="{x:Null}" FontSize="9" Margin="0,2,-10,0" Width="20" Height="20" Grid.Row="0" TouchLeave="radBtnCloseOfficers_TouchLeave">
                                    <Button.Background>
                                        <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/Close-icon.png"/>
                                    </Button.Background>
                                </Button>

                                <Border CornerRadius="10" Background="#171717" BorderThickness="1" BorderBrush="#171717" Margin="0,0,-5,0" Grid.Row="1">
                                    <telerik:RadTabControl FontSize="15" BackgroundVisibility="Hidden" Background="Transparent" Foreground="#ffffff" x:Name="radTabControlOfficers" DisplayMemberPath="Content" DropDownDisplayMode="Collapsed" ScrollMode="Viewport" BorderThickness="1" Style="{DynamicResource TabControlStyleH}">
                                        <telerik:RadTabItem Header="{x:Static p:Resources.strOfficerDetails}" Background="#171717" BorderBrush="#d4d4d4" Foreground="#ffffff">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="200*"/>

                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="21*"/>
                                                    <ColumnDefinition Width="26*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static p:Resources.strOfficerName}" Margin="15,20,48,47" />
                                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Officer.OfficerName}" Foreground="#ffffff" Margin="15,17,48,47" />

                                                <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static p:Resources.strOfficerAllocation}" Margin="15,20,48,47" />
                                                <TextBlock Grid.Row="1" Grid.Column="1" Text="مركز الشعبية" Foreground="#ffffff" Margin="15,17,48,47" />

                                                <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static p:Resources.strActiveWorkingHours}" Margin="15,20,48,47" />
                                                <TextBlock Grid.Row="2" Grid.Column="1" Text="7 ساعات" Foreground="#ffffff" Margin="15,17,48,47" />

                                                <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static p:Resources.strAchievementPercentage}" Margin="15,20,48,47" />
                                                <TextBlock Grid.Row="3" Grid.Column="1" Text="90%" Foreground="#ffffff" Margin="15,17,48,47" />

                                                <MediaElement Grid.Row="4" Grid.Column="0" x:Name="OfficersVideoControl" LoadedBehavior="Play" Margin="44,25" Source="{Binding Officer.CameraURL}" Grid.ColumnSpan="2" />

                                            </Grid>
                                        </telerik:RadTabItem>
                                        <telerik:RadTabItem Header="{x:Static p:Resources.strHealthKPIs}" BorderBrush="#d4d4d4" Background="#171717" Foreground="#ffffff" Height="40">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />


                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="21*"/>
                                                    <ColumnDefinition Width="26*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static p:Resources.strHeartPluseRate}" Margin="15,20,48,47" />
                                                <TextBlock Grid.Row="0" Grid.Column="1" Text="100" Foreground="#ffffff" Margin="15,17,48,47" />

                                                <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static p:Resources.strBloodPressure}" Margin="15,20,48,47" />
                                                <TextBlock Grid.Row="1" Grid.Column="1" Text="120/80" Foreground="#ffffff" Margin="15,17,48,47" />

                                                <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static p:Resources.strTemperature}" Margin="15,20,48,47" />
                                                <TextBlock Grid.Row="2" Grid.Column="1" Text="37°C" Foreground="#ffffff" Margin="15,17,48,47" />



                                            </Grid>
                                        </telerik:RadTabItem>
                                    </telerik:RadTabControl>
                                </Border>
                            </Grid>
                        </Border>

                    </Esri:OverlayItemsControl>
                </Esri:MapView.Overlays>

                <Esri:Map>
                    <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"/>-->
                    <Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer"/>

                    <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Dark_Gray_Base/MapServer"/>-->

                    <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="http://services.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer"/>-->

                    <!--<Esri:ArcGISTiledMapServiceLayer  ID="BaseMap" ServiceUri="{Binding Source={StaticResource EsriVM}, Path=MapLayerServiceUrl}"/>-->

                    <!--<Esri:ArcGISLocalTiledLayer ID="BaseMap" Path="ESRI TPK File\EsriBaseMap.tpk" />-->

                    <Esri:GraphicsLayer ID="MyGraphicsLayer" />

                </Esri:Map>
            </Esri:MapView>

            <Border x:Name="mapTipWantedCar" Width="440" CornerRadius="15" BorderThickness="2" 
							Padding="0" HorizontalAlignment="Left" Margin="100,520,0,0" VerticalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Opacity="0.95"
							Visibility="Collapsed" Height="auto">
                <Grid Width="400">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="radBtnCloseWantedCar" Background="{x:Null}" Style="{StaticResource IsMoseOvernone}" BorderThickness="0" Click="radBtnCloseWantedCar_Click" HorizontalAlignment="Right" BorderBrush="{x:Null}" FontSize="9" Width="20" Height="20" VerticalAlignment="Top" Margin="0,2,-10,0" Foreground="{x:Null}" Grid.Row="0" TouchLeave="radBtnCloseWantedCar_TouchLeave">
                        <Image Cursor="Hand" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/Close-icon.png"/>
                    </Button>

                    <Border CornerRadius="10" Background="#171717" BorderThickness="1" BorderBrush="#d4d4d4" Margin="0,0,-5,0" Grid.Row="1">

                        <telerik:RadTabControl Height="auto" FontSize="15" x:Name="radTabControlWantedCar" BackgroundVisibility="Hidden" DisplayMemberPath="Content" DropDownDisplayMode="Collapsed" ScrollMode="Viewport" BorderThickness="1" Background="Transparent" Foreground="#fff" Style="{DynamicResource TabControlStyleH}">

                            <telerik:RadTabControl.Resources>
                                <Style x:Key="TabControlStyleH" TargetType="{x:Type telerik:RadTabControl}">
                                    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                                    <Setter Property="BorderBrush" Value="#171717"/>
                                    <Setter Property="BorderThickness" Value="1,0,1,1"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="Foreground" Value="#ffffff" />
                                    <Setter Property="MinWidth" Value="5"/>
                                    <Setter Property="MinHeight" Value="26"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="HeaderBackground" Value="#171717"/>
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <Primitives:TabWrapPanel IsItemsHost="True"/>
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="DropDownButtonStyle">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="White" Offset="0"/>
                                                            <GradientStop Color="Gainsboro" Offset="0.5"/>
                                                            <GradientStop Color="#ADADAD" Offset="0.5"/>
                                                            <GradientStop Color="#D4D4D4" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" Value="#171717"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Margin" Value="2,4,4,2"/>
                                                <Setter Property="Padding" Value="5,0"/>
                                                <Setter Property="MinWidth" Value="18"/>
                                                <Setter Property="Content" Value=""/>
                                                <Setter Property="telerik:RadDockPanel.Dock" Value="Right"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Grid x:Name="root" Background="#01FFFFFF">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <SolidColorBrush Color="#FFC92B"/>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFFBDA" Offset="0"/>
                                                                                                <GradientStop Color="#FEEBAE" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFD25A" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFFBA3" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <SolidColorBrush Color="White"/>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#171717"/>
                                                                                                <GradientStop Color="#171717" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFDCAB" Offset="0"/>
                                                                                                <GradientStop Color="#FFD18F" Offset="0.5"/>
                                                                                                <GradientStop Color="#FE9227" Offset="0.5"/>
                                                                                                <GradientStop Color="#FFBA74" Offset="0"/>
                                                                                            </LinearGradientBrush>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#B69A78"/>
                                                                                                <GradientStop Color="#FFE17A" Offset="0.126"/>
                                                                                            </LinearGradientBrush>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="root"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                        <VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unchecked"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                                    <Border x:Name="InnerBorder" BorderBrush="White" BorderThickness="1"/>
                                                                </Border>
                                                                <Border x:Name="CheckedVisual" BorderBrush="#FFFFC92B" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                                                                    <Border.Background>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFFFDCAB" Offset="0"/>
                                                                            <GradientStop Color="#FFFFD18F" Offset="0.5"/>
                                                                            <GradientStop Color="#FFFE9227" Offset="0.5"/>
                                                                            <GradientStop Color="#FFFFD74E" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Border.Background>
                                                                    <Border BorderBrush="White" BorderThickness="1"/>
                                                                </Border>
                                                                <Grid>
                                                                    <Path Data="M0,2L6,2 3,6z M0,0L6,0 6,1 0,1z" Fill="White" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
                                                                    <Path x:Name="arrow" Data="M0,2L6,2 3,6z M0,0L6,0 6,1 0,1z" Fill="#171717" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                                </Grid>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="DropDownStyle">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type TabControl:DropDownMenu}">
                                                <Setter Property="Background" Value="#171717"/>
                                                <Setter Property="BorderBrush" Value="#171717"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Padding" Value="2"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="MaxHeight" Value="500"/>
                                                <Setter Property="ItemsPanel">
                                                    <Setter.Value>
                                                        <ItemsPanelTemplate>
                                                            <telerik:RadWrapPanel IsItemsHost="True" Orientation="Vertical"/>
                                                        </ItemsPanelTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type TabControl:DropDownMenu}">
                                                            <Grid>
                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0,0,3,3">
                                                                    <Border.Effect>
                                                                        <DropShadowEffect Color="#171717" Opacity="0.3" ShadowDepth="3"/>
                                                                    </Border.Effect>
                                                                    <ItemsPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                                <Rectangle x:Name="BorderMaskElement" Fill="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type telerik:RadTabControl}">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Disabled"/>
                                                            <VisualState x:Name="Normal"/>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="DropDownDisplayStates">
                                                            <VisualState x:Name="DropDownButtonCollapsed"/>
                                                            <VisualState x:Name="DropDownButtonVisible">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DropDownButtonElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="PlacementStates">
                                                            <VisualState x:Name="Left">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="HeaderDockedElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <RotateTransform Angle="-90"/>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="ScrollViewerElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <HorizontalAlignment>Right</HorizontalAlignment>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(telerik:RadDockPanel.Dock)" Storyboard.TargetName="AdditionalContentTransform">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Dock>Left</Dock>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(telerik:RadDockPanel.Dock)" Storyboard.TargetName="DropDownButtonElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Dock>Left</Dock>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Right">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="HeaderDockedElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <RotateTransform Angle="90"/>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="ScrollViewerElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <HorizontalAlignment>Left</HorizontalAlignment>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="ContentBorder">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Thickness>1,1,0,1</Thickness>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Top"/>
                                                            <VisualState x:Name="Bottom">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="ContentBorder">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Thickness>1,1,1,0</Thickness>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="HeaderDockedElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <RotateTransform Angle="180"/>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="AdditionalContentTransform">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <RotateTransform Angle="180"/>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(telerik:RadDockPanel.Dock)" Storyboard.TargetName="AdditionalContentTransform">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Dock>Left</Dock>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(telerik:RadDockPanel.Dock)" Storyboard.TargetName="DropDownButtonElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Dock>Left</Dock>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <telerik:RadDockPanel LastChildFill="True">
                                                        <telerik:LayoutTransformControl x:Name="HeaderDockedElement" telerik:RadDockPanel.Dock="Top" IsTabStop="False">
                                                            <Grid SnapsToDevicePixels="True">
                                                                <Border x:Name="HeaderBackground" Background="{TemplateBinding HeaderBackground}" Visibility="{TemplateBinding BackgroundVisibility}"/>
                                                                <Border BorderBrush="#171717" BorderThickness="0,0,0,1"/>
                                                                <telerik:RadDockPanel Panel.ZIndex="10">
                                                                    <telerik:LayoutTransformControl x:Name="AdditionalContentTransform" telerik:RadDockPanel.Dock="Right" IsTabStop="False" Margin="0,4,0,2">
                                                                        <ContentPresenter x:Name="AdditionalContentElement" Content="{TemplateBinding AdditionalContent}"/>
                                                                    </telerik:LayoutTransformControl>
                                                                    <ToggleButton x:Name="DropDownButtonElement" ClickMode="Press" telerik:RadDockPanel.Dock="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="Collapsed">
                                                                        <telerik:RadContextMenu.ContextMenu>
                                                                            <TabControl:DropDownMenu x:Name="DropDownMenuElement" ClickToOpen="True" DisplayMemberPath="{TemplateBinding DropDownDisplayMemberPath}" ItemTemplate="{TemplateBinding ItemDropDownContentTemplate}" Placement="Bottom" Style="{TemplateBinding DropDownStyle}" StaysOpen="False"/>
                                                                        </telerik:RadContextMenu.ContextMenu>
                                                                    </ToggleButton>
                                                                    <RepeatButton x:Name="LeftScrollButtonElement" Margin="4,4,2,2">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="Content" Value=""/>
                                                                                <Setter Property="MinWidth" Value="18"/>
                                                                                <Setter Property="Padding" Value="6,0"/>
                                                                                <Setter Property="telerik:RadDockPanel.Dock" Value="Left"/>
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Grid x:Name="ButtonBorder" Background="Transparent">
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <SolidColorBrush Color="#FFC92B"/>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFFBDA" Offset="0"/>
                                                                                                                                <GradientStop Color="#FEEBAE" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFD25A" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFFBA3" Offset="1"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <SolidColorBrush Color="White"/>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#282828"/>
                                                                                                                                <GradientStop Color="#5F5F5F" Offset="1"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFDCAB" Offset="0"/>
                                                                                                                                <GradientStop Color="#FFD18F" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FE9227" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFBA74" Offset="0"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#B69A78"/>
                                                                                                                                <GradientStop Color="#FFE17A" Offset="0.126"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Path"/>
                                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OuterBorder"/>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <Border x:Name="OuterBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" CornerRadius="0">
                                                                                                    <Border x:Name="InnerBorder" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" CornerRadius="0"/>
                                                                                                </Border>
                                                                                                <Grid>
                                                                                                    <Path Data="M4,0L4,7 0,3.5z" Fill="White" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,1,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                    <Path x:Name="Path" Data="M4,0L4,7 0,3.5z" Fill="#171717" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Stretch="None" SnapsToDevicePixels="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                </Grid>
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                    </RepeatButton>
                                                                    <RepeatButton x:Name="RightScrollButtonElement" telerik:RadDockPanel.Dock="Right" Margin="2,4,0,2" RenderTransformOrigin="0.5,0.5">
                                                                        <RepeatButton.RenderTransform>
                                                                            <ScaleTransform ScaleX="-1"/>
                                                                        </RepeatButton.RenderTransform>
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="Content" Value=""/>
                                                                                <Setter Property="MinWidth" Value="18"/>
                                                                                <Setter Property="Padding" Value="6,0"/>
                                                                                <Setter Property="telerik:RadDockPanel.Dock" Value="Left"/>
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Grid x:Name="ButtonBorder" Background="Transparent">
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <SolidColorBrush Color="#FFFFC92B"/>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFFFFBDA" Offset="0"/>
                                                                                                                                <GradientStop Color="#FFFEEBAE" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFFFD25A" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFFFFBA3" Offset="1"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <SolidColorBrush Color="White"/>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FF282828"/>
                                                                                                                                <GradientStop Color="#FF5F5F5F" Offset="1"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFFFDCAB" Offset="0"/>
                                                                                                                                <GradientStop Color="#FFFFD18F" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFFE9227" Offset="0.5"/>
                                                                                                                                <GradientStop Color="#FFFFBA74" Offset="0"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                                                <GradientStop Color="#FFB69A78"/>
                                                                                                                                <GradientStop Color="#FFFFE17A" Offset="0.126"/>
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Path"/>
                                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OuterBorder"/>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <Border x:Name="OuterBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" CornerRadius="0">
                                                                                                    <Border x:Name="InnerBorder" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" CornerRadius="0"/>
                                                                                                </Border>
                                                                                                <Grid>
                                                                                                    <Path Data="M4,0L4,7 0,3.5z" Fill="White" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,1,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                    <Path x:Name="Path" Data="M4,0L4,7 0,3.5z" Fill="#171717" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Stretch="None" SnapsToDevicePixels="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                </Grid>
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                    </RepeatButton>
                                                                    <ScrollViewer x:Name="ScrollViewerElement" BorderThickness="0" HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Margin="2,4,2,0" VerticalScrollBarVisibility="Disabled">
                                                                        <ScrollViewer.Style>
                                                                            <Style TargetType="{x:Type ScrollViewer}">
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                                                <Setter Property="Padding" Value="0"/>
                                                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                                                                                                <Grid Background="{TemplateBinding Background}">
                                                                                                    <Grid.ColumnDefinitions>
                                                                                                        <ColumnDefinition Width="*"/>
                                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                                    </Grid.ColumnDefinitions>
                                                                                                    <Grid.RowDefinitions>
                                                                                                        <RowDefinition Height="*"/>
                                                                                                        <RowDefinition Height="Auto"/>
                                                                                                    </Grid.RowDefinitions>
                                                                                                    <ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                                                                                </Grid>
                                                                                            </Border>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </ScrollViewer.Style>
                                                                        <ItemsPresenter/>
                                                                    </ScrollViewer>
                                                                </telerik:RadDockPanel>
                                                            </Grid>
                                                        </telerik:LayoutTransformControl>
                                                        <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                            <Grid>
                                                                <ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}">
                                                                    <ContentPresenter.Visibility>
                                                                        <Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
                                                                            <Binding.Converter>
                                                                                <telerik:InvertedBooleanToVisibilityConverter/>
                                                                            </Binding.Converter>
                                                                        </Binding>
                                                                    </ContentPresenter.Visibility>
                                                                </ContentPresenter>
                                                                <Grid x:Name="ContentElementsPanel">
                                                                    <Grid.Visibility>
                                                                        <Binding Path="IsContentPreserved" RelativeSource="{RelativeSource TemplatedParent}">
                                                                            <Binding.Converter>
                                                                                <telerik:BooleanToVisibilityConverter/>
                                                                            </Binding.Converter>
                                                                        </Binding>
                                                                    </Grid.Visibility>
                                                                </Grid>
                                                            </Grid>
                                                        </Border>
                                                    </telerik:RadDockPanel>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </telerik:RadTabControl.Resources>

                            <telerik:RadTabItem Header="معلومات اساسية" BorderBrush="#d4d4d4" Background="#d4d4d4" Foreground="#ffffff" Width="127" Height="30">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="22*"/>
                                        <ColumnDefinition Width="196*"/>
                                        <ColumnDefinition Width="183*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="2" FontSize="14" TextAlignment="Left" Text="مخالفة كسر اشارة مرتان" Margin="10,10,10,10"/>
                                    <TextBlock Grid.Row="0" Grid.Column="0" FontSize="13" TextAlignment="Left" Text=" نوع المخالفة " Margin="20,10,20,10" Grid.ColumnSpan="2" />

                                    <Image Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" Margin="128,10,151,10" Width="100" Height="50" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/UAE Plate Number.jpg" ToolTip="Plate Number"></Image>

                                </Grid>

                            </telerik:RadTabItem>

                            <telerik:RadTabItem Header="{x:Static p:Resources.strCarDetails}" BorderBrush="#d4d4d4" Background="#d4d4d4" Foreground="#ffffff" Width="100" Height="30">
                                <Grid Margin="4,7,4,7">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="61*"/>
                                        <ColumnDefinition Width="51*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" FontSize="14" Text="{x:Static p:Resources.strPlateNum}"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="0" Grid.Column="1" FontSize="13" Text="{Binding VehicleDetail.PlateNumber}" Margin="0,10,10,10" />
                                    <TextBlock Grid.Row="1" Grid.Column="0" FontSize="14" Text="{x:Static p:Resources.strLicenceNum}" Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" FontSize="13" Text="{Binding VehicleDetail.LicenseNumber}" Margin="0,10,10,10" />
                                    <TextBlock Grid.Row="2" Grid.Column="0" FontSize="14" Text="{x:Static p:Resources.strLicenceExpiryDate}" Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" FontSize="13" Text="{Binding VehicleDetail.LicenseExpiryDate}" Margin="0,10,10,10" />
                                    <TextBlock Grid.Row="3" Grid.Column="0" FontSize="14" Text="{x:Static p:Resources.strModel}" Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="3" Grid.Column="1" FontSize="13" Text="{Binding VehicleDetail.Model}" Margin="0,10,10,10" />
                                    <TextBlock Grid.Row="4" Grid.Column="0" FontSize="14" Text="{x:Static p:Resources.strColor}" Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="4" Grid.Column="1" FontSize="13" Text="Black" Margin="0,10,10,10" />
                                    <TextBlock Grid.Row="5" Grid.Column="0" FontSize="14" Text="{x:Static p:Resources.strOwnerName}" Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="5" Grid.Column="1" FontSize="13" Text="{Binding VehicleDetail.OwnerName}" Margin="0,10,10,10" />
                                    <TextBlock Grid.Row="6" Grid.Column="0" FontSize="14" Text="{x:Static p:Resources.strOwnerMobileNum}" Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="6" Grid.Column="1" FontSize="13" Text="{Binding VehicleDetail.OwnerMobileNumber}" Margin="0,10,10,7" />
                                    <TextBlock Grid.Row="7" Grid.Column="0" FontSize="14" Text="{x:Static p:Resources.strOwnerNationality}" Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="7" Grid.Column="1" FontSize="13" Text="{Binding VehicleDetail.OwnerNationality}" Margin="0,10,10,10"/>
                                    <TextBlock Grid.Row="8" Grid.Column="0" FontSize="14" Text="{x:Static p:Resources.strOwnerAge}" Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="8" Grid.Column="1" FontSize="13" Text="{Binding VehicleDetail.OwnerAge}" Margin="0,10,10,10" />

                                </Grid>
                            </telerik:RadTabItem>

                            <!--<telerik:RadTabItem Header="{x:Static p:Resources.strKPI}" BorderBrush="#d4d4d4" Background="#171717" Foreground="#ffffff" Width="200" Height="30">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    -->
                            <!--Headers-->
                            <!--
                                    <TextBlock Grid.Row="0" Grid.Column="0" FontSize="14" Text="{x:Static p:Resources.strLocation}"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="0" Grid.Column="1" FontSize="14" Text="{x:Static p:Resources.strDate}"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="0" Grid.Column="2" FontSize="14" Text="{x:Static p:Resources.strViolationsbyTypes}"  Margin="15,12,10,12"/>

                                    -->
                            <!--first Item-->
                            <!--
                                    <TextBlock Grid.Row="1" Grid.Column="0" FontSize="14" Text="Location 1"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" FontSize="14" Text="23/07/2015 15:30"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="1" Grid.Column="2" FontSize="14" Text="Violation 1"  Margin="15,12,10,12"/>

                                    -->
                            <!--second Item-->
                            <!--
                                    <TextBlock Grid.Row="2" Grid.Column="0" FontSize="14" Text="Location 2"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" FontSize="14" Text="05/6/2015 09:05"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="2" Grid.Column="2" FontSize="14" Text="Violation 2"  Margin="15,12,10,12"/>

                                    -->
                            <!--third Item-->
                            <!--
                                    <TextBlock Grid.Row="3" Grid.Column="0" FontSize="14" Text="Location 3"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="3" Grid.Column="1" FontSize="14" Text="23/07/2015 15:30"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="3" Grid.Column="2" FontSize="14" Text="Violation 3"  Margin="15,12,10,12"/>

                                    -->
                            <!--forth Item-->
                            <!--
                                    <TextBlock Grid.Row="4" Grid.Column="0" FontSize="14" Text="Location 4"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="4" Grid.Column="1" FontSize="14" Text="23/07/2015 15:30"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="4" Grid.Column="2" FontSize="14" Text="Violation 4"  Margin="15,12,10,12"/>

                                    -->
                            <!--fifth Item-->
                            <!--
                                    <TextBlock Grid.Row="5" Grid.Column="0" FontSize="14" Text="Location 5"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="5" Grid.Column="1" FontSize="14" Text="23/07/2015 15:30"  Margin="15,12,10,12"/>
                                    <TextBlock Grid.Row="5" Grid.Column="2" FontSize="14" Text="Violation 5"  Margin="15,12,10,12"/>
                                </Grid>
                            </telerik:RadTabItem>-->
                        </telerik:RadTabControl>

                    </Border>
                </Grid>
            </Border>

            <Grid Width="224" Grid.Column="0" Grid.Row="1" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="81*"/>
                    <ColumnDefinition Width="149*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <telerik:RadPanelBar Height="auto" Visibility="Collapsed" Grid.ColumnSpan="2" Grid.Row="2" x:Name="radPanelBar" VerticalAlignment="Top" Margin="0,0,-4,0" >
                    <telerik:StyleManager.Theme>
                        <telerik:Windows8TouchTheme/>
                    </telerik:StyleManager.Theme>
                    <telerik:RadPanelBarItem Width="229" HorizontalAlignment="right" IsExpanded="True">
                        <telerik:RadPanelBarItem.Header>
                            <TextBlock Text="{x:Static p:Resources.strViolations}" Margin="5 3" />
                        </telerik:RadPanelBarItem.Header>
                        <Grid Width="200" Margin="5,5,5,5" HorizontalAlignment="left" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Label Content="{x:Static p:Resources.strTime}" Width="60" HorizontalAlignment="left" Grid.Column="0" />
                            <telerik:RadDateTimePicker telerik:StyleManager.Theme="Windows8Touch" x:Name="radDateTimeViolation" SelectedValue="{Binding SelectedViolationDateFilter}" Margin="6,6,10,6" Grid.Column="0" Grid.Row="1"/>
                            <Label Grid.Row="2" Content="{x:Static p:Resources.strType}" Width="60" HorizontalAlignment="left" Grid.Column="0"/>
                            <ComboBox Grid.Row="3" x:Name="comboViolationType" 
                               ItemsSource="{Binding ViolationTypesList}"
                               DisplayMemberPath="ViolationType"
                               SelectedItem="{Binding SelectedViolationType}"
                               SelectedValuePath="ViolationTypeId" MaxDropDownHeight="255" Margin="6,6,10,6" Grid.Column="0" />
                            <telerik:RadButton FontSize="13" Cursor="Hand" telerik:StyleManager.Theme="Windows8Touch" x:Name="radBtn_SearchViolations" Content="{x:Static p:Resources.strSearch}" Click="radBtn_SearchViolations_Click" Grid.Row="5" Command="{Binding FilterViolationsCommand}" Margin="15,2"/>
                        </Grid>
                    </telerik:RadPanelBarItem>

                    <telerik:RadPanelBarItem Width="229" HorizontalAlignment="right">
                        <telerik:RadPanelBarItem.Header>
                            <TextBlock Text="{x:Static p:Resources.strPatrols}" Margin="5 3" />
                        </telerik:RadPanelBarItem.Header>
                        <Grid Width="200" Margin="5,5,5,5" HorizontalAlignment="left" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="35"/>
                            </Grid.RowDefinitions>
                            <Label Content="{x:Static p:Resources.strStatus}" Width="60" HorizontalAlignment="left" Grid.Column="0" Grid.ColumnSpan="2"/>
                            <ComboBox x:Name="comboPatrolStatus"   ItemsSource="{Binding PatrolStatusList}"
                               DisplayMemberPath="PatrolStatus"
                               SelectedItem="{Binding SelectedPatrolStatus}"
                               SelectedValuePath="PatrolStatusId" Margin="4,3,4,5" Grid.Column="1"/>
                            <telerik:RadButton FontSize="13" Cursor="Hand" telerik:StyleManager.Theme="Windows8Touch" x:Name="radBtn_SearchPatrols" Click="radBtn_SearchPatrols_Click" Content="{x:Static p:Resources.strSearch}" Grid.ColumnSpan="2" Grid.Row="1" Command="{Binding FilterPatrolsCommand}"  Margin="15,2"/>
                        </Grid>
                    </telerik:RadPanelBarItem>
                </telerik:RadPanelBar>

                <Border x:Name="MenuPanel" Visibility="Collapsed" BorderBrush="#10302d" BorderThickness="1" Grid.Row="1" Grid.ColumnSpan="2" Panel.ZIndex="75" Background="#000000" Opacity="0.8" Margin="0,-8,0,0" Grid.RowSpan="2">
                    <StackPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <telerik:RadToggleButton Grid.Row="0" Cursor="Hand" IsChecked="False" x:Name="radToggleBtnAssetsSmartTower" Click="radToggleBtnAssetsSmartTower_Click" Margin="10,5,10,0" VerticalAlignment="Top" Style="{DynamicResource RadToggleButtonStyle}">
                                <Grid Width="198">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="107*"/>

                                    </Grid.ColumnDefinitions>

                                    <Image x:Name="ImgAssetsLayerSmartTower" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Assets_icons.png" Margin="10,1,0,1" Grid.Column="0" HorizontalAlignment="left" />
                                    <TextBlock Text="{x:Static p:Resources.strAssetsSmartTower}" Margin="10,5" Grid.Column="1" />
                                </Grid>
                            </telerik:RadToggleButton>

                            <telerik:RadToggleButton Grid.Row="1" Cursor="Hand" IsChecked="False" x:Name="radToggleBtnAssetsRedLight" Click="radToggleBtnAssetsRedLight_Click" Margin="10,5,10,0" VerticalAlignment="Top" Style="{DynamicResource RadToggleButtonStyle}">
                                <Grid Width="198">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="107*"/>
                                    </Grid.ColumnDefinitions>

                                    <Image x:Name="ImgAssetsLayerRedLight" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Assets_icons.png" Margin="10,1,0,1" Grid.Column="0" HorizontalAlignment="left" />
                                    <TextBlock Text="{x:Static p:Resources.strAssetsRedLight}" Margin="10,5" Grid.Column="1" />
                                </Grid>
                            </telerik:RadToggleButton>

                            <telerik:RadToggleButton Grid.Row="2" Cursor="Hand" IsChecked="False" x:Name="radToggleBtnAssetsSpeed" Click="radToggleBtnAssetsSpeed_Click" Margin="10,5,10,0" VerticalAlignment="Top" Style="{DynamicResource RadToggleButtonStyle}">
                                <Grid Width="198">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="107*"/>
                                    </Grid.ColumnDefinitions>

                                    <Image x:Name="ImgAssetsSpeedLayer" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Assets_icons.png" Margin="10,1,0,1" Grid.Column="0" HorizontalAlignment="left" />
                                    <TextBlock Text="{x:Static p:Resources.strAssetsSpeed}" Margin="10,5" Grid.Column="1" />
                                </Grid>
                            </telerik:RadToggleButton>

                            <telerik:RadToggleButton Grid.Row="3" Cursor="Hand" IsChecked="False" x:Name="radToggleBtnViolations" Click="radToggleBtnViolations_Click" Margin="10,5,10,0" VerticalAlignment="Top" Style="{DynamicResource RadToggleButtonStyle}">
                                <Grid Width="198">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="107*"/>
                                    </Grid.ColumnDefinitions>

                                    <Image x:Name="ImgViolationsLayer" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/violatians.png" Margin="10,1,0,1" Grid.Column="0" HorizontalAlignment="left" />
                                    <TextBlock Text="{x:Static p:Resources.strViolations}" Margin="10,5" Grid.Column="1" />
                                </Grid>
                            </telerik:RadToggleButton>

                            <telerik:RadToggleButton Grid.Row="4" Cursor="Hand" IsChecked="False" x:Name="radToggleBtnIncidents" Click="radToggleBtnIncidents_Click" Margin="10,5,10,0" VerticalAlignment="Top" Grid.Column="1" Style="{DynamicResource RadToggleButtonStyle}">
                                <Grid Width="198">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="107*"/>
                                        <ColumnDefinition Width="40"/>
                                    </Grid.ColumnDefinitions>

                                    <Image x:Name="ImgIncidentsLayer" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/accidents.png" Margin="10,1,0,1" HorizontalAlignment="left"/>
                                    <TextBlock Text="{x:Static p:Resources.strAccidents}" Margin="10,5"  Grid.Column="1" />
                                    <Border Margin="0" Visibility="Visible" Grid.Column="2"  HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <ToggleButton x:Name="tglBtnIncidentFilter" Checked="tglBtnIncidentFilter_Checked" Unchecked="tglBtnIncidentFilter_Unchecked">
                                            <ToggleButton.Resources>
                                                <BitmapImage UriSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/filterEmpty.png" x:Key="filterEmptyImagePath" DecodePixelWidth="16"  DecodePixelHeight="16" />
                                                <BitmapImage UriSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/FilterFilled.png" x:Key="filterFilledImagePath" DecodePixelWidth="16"  DecodePixelHeight="16" />
                                            </ToggleButton.Resources>
                                            <ToggleButton.Template>
                                                <ControlTemplate>

                                                    <Border x:Name="brdrIncidentFilter" BorderBrush="Gray" BorderThickness="1" CornerRadius="12" MinHeight="25" MinWidth="25"  Background="White">
                                                        <Image x:Name="ImgIncidentsLayerFilter" Width="15" Height="15" Grid.Column="0" Source="{StaticResource filterEmptyImagePath}" HorizontalAlignment="Center"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="brdrIncidentFilter" Property="Background" Value="#00ffcc"/>
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True">
                                                            <Setter TargetName="ImgIncidentsLayerFilter" Property="Source" Value="{StaticResource filterFilledImagePath}"/>
                                                            <Setter TargetName="brdrIncidentFilter" Property="Background" Value="Yellow"/>
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>

                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                                                                <Condition Binding="{Binding ElementName=brdrIncidentFilter, Path=IsMouseOver}" Value="True"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter TargetName="brdrIncidentFilter" Property="Background" Value="#00ffcc"/>
                                                        </MultiDataTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ToggleButton.Template>


                                        </ToggleButton>
                                    </Border>

                                </Grid>
                            </telerik:RadToggleButton>

                            <telerik:RadToggleButton Grid.Row="5" Cursor="Hand" IsChecked="True" x:Name="radToggleBtnPatrols" Click="radToggleBtnPatrols_Click" Margin="10,5,10,0" VerticalAlignment="Top" Style="{DynamicResource RadToggleButtonStyle}">
                                <Grid Width="198">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="107*"/>
                                    </Grid.ColumnDefinitions>

                                    <Image x:Name="ImgPatrolsLayer" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/patrol_selc.png" Margin="10,1,0,1"  HorizontalAlignment="left"/>
                                    <TextBlock Text="{x:Static p:Resources.strPatrols}" Margin="10,5" Grid.Column="1"/>
                                </Grid>
                            </telerik:RadToggleButton>

                            <telerik:RadToggleButton Visibility="Collapsed" Grid.Row="5" Cursor="Hand" IsChecked="True" x:Name="radToggleBtnOfficers" Click="radToggleBtnOfficers_Click" Margin="10,5,10,0" Height="40" VerticalAlignment="Top" Foreground="#00ffcc" FontSize="14" FontFamily="Helvetica" Style="{DynamicResource RadToggleButtonStyle}">
                                <Grid Width="198">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="90*"/>
                                        <ColumnDefinition Width="107*"/>
                                    </Grid.ColumnDefinitions>

                                    <Image Grid.Column="0" Width="23" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/officer.png" Margin="10,1,0,1"  HorizontalAlignment="left"/>
                                    <TextBlock Text="{x:Static p:Resources.strOfficers}"  Margin="5"  Grid.Column="1"/>
                                </Grid>
                            </telerik:RadToggleButton>

                            <telerik:RadToggleButton Grid.Row="6" Cursor="Hand" IsChecked="True"  x:Name="radToggleBtnNotifications" Click="radToggleBtnNotifications_Click" Margin="10,5,10,0" VerticalAlignment="Top" Style="{DynamicResource RadToggleButtonStyle}">
                                <Grid Width="198">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="107*"/>
                                    </Grid.ColumnDefinitions>

                                    <Image x:Name="ImgNotiLayer" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/noti_selc.png" Margin="10,1,0,1" HorizontalAlignment="left"/>
                                    <TextBlock Text="{x:Static p:Resources.strNotification}"  Margin="10,5" Grid.Column="1"/>
                                </Grid>
                            </telerik:RadToggleButton>

                            <telerik:RadToggleButton Grid.Row="7" Cursor="Hand" IsChecked="True"  x:Name="radToggleBtnTraffic" Click="radToggleBtnTraffic_Click" Margin="10,5,10,10" VerticalAlignment="Top" Style="{DynamicResource RadToggleButtonStyle}">
                                <Grid Width="198">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="107*"/>
                                    </Grid.ColumnDefinitions>

                                    <Image x:Name="ImgTrafficLayer" Grid.Column="0" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Traffic_icons_selc.png" Margin="10,1,0,1" HorizontalAlignment="left"/>
                                    <TextBlock Text="{x:Static p:Resources.strTraffic}"  Margin="10,5" Grid.Column="1"/>
                                </Grid>
                            </telerik:RadToggleButton>
                        </Grid>
                    </StackPanel>
                </Border>
            </Grid>

            <StackPanel Panel.ZIndex="1" Background="Transparent" Orientation="Vertical" 
                        Grid.Row="1" Grid.Column="0" Height="Auto" Width="Auto" VerticalAlignment="Bottom" 
                        HorizontalAlignment="Left" Margin="5,70">
                <RepeatButton  x:Name="btnZoomIn" ToolTip="تكبير" Grid.Column="7" HorizontalAlignment="Left" Width="35" Height="35" BorderBrush="{x:Null}" Click="btnZoomIn_Click">
                    <RepeatButton.Background>
                        <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Zoom_IN.png"/>
                    </RepeatButton.Background>

                    <RepeatButton.Style>
                        <Style TargetType="RepeatButton">

                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Cursor" Value="Hand"/>
                            <!--<Setter Property="Foreground" Value="#ffffff" />-->

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="bg">
                                                    <Setter.Value>
                                                        <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Zoom_IN_hover.png" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Foreground" Value="Transparent" />
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                <Setter Property="Opacity" Value="1"></Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                </RepeatButton>

                <RepeatButton  x:Name="btnZoomOut" ToolTip="تصغير" Grid.Column="7" HorizontalAlignment="Left" Width="35" Height="35" BorderBrush="{x:Null}" Click="btnZoomOut_Click">
                    <RepeatButton.Background>
                        <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Zoom_Out.png"/>
                    </RepeatButton.Background>

                    <RepeatButton.Style>
                        <Style TargetType="RepeatButton">

                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Cursor" Value="Hand"/>
                            <!--<Setter Property="Foreground" Value="#ffffff" />-->

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="bg">
                                                    <Setter.Value>
                                                        <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/Zoom_Out_hover.png" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Foreground" Value="Transparent" />
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                <Setter Property="Opacity" Value="1"></Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                </RepeatButton>

                <Button  x:Name="btnReturnToDefaultView" ToolTip="تصغير" Grid.Column="7" HorizontalAlignment="Left" Width="35" Height="35" BorderBrush="{x:Null}" Click="btnReturnToDefaultView_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/zoom_default.png"/>
                    </Button.Background>

                    <Button.Style>
                        <Style TargetType="Button">

                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Cursor" Value="Hand"/>
                            <!--<Setter Property="Foreground" Value="#ffffff" />-->

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="bg" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="bg">
                                                    <Setter.Value>
                                                        <ImageBrush ImageSource="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/icons/zoom_default_hover.png" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Foreground" Value="Transparent" />
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                <Setter Property="Opacity" Value="1"></Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <StackPanel Visibility="Collapsed" Background="Transparent" Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Height="40" Width="123" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="430,10,0,0">
                <Button Margin="3,0,0,0" x:Name="btnESRITOPO" ToolTip="طريقة عرض الشوارع بالليل" Grid.Column="7" HorizontalAlignment="Left" Width="40" Height="40" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource IsMoseOvernone}"
                        Tag="http://services.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer" Click="btnESRITOPO_Click">
                    <Image Width="35" Height="35" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/noti_icon/Topo icon.png" Visibility="Collapsed"/>
                </Button>

                <Button x:Name="btnESRIStreet" ToolTip="طريقة عرض الشوارع" Grid.Column="7" HorizontalAlignment="Left" Width="40" Height="40" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource IsMoseOvernone}"
                        Tag="http://services.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer" Click="btnESRIStreet_Click">
                    <Image Width="35" Height="35" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/noti_icon/street icon.png" Visibility="Collapsed"/>
                </Button>

                <Button x:Name="btnESRIImagery" ToolTip="طريقة عرض القمر الصناعي" Grid.Column="7" HorizontalAlignment="Left" Width="40" Height="40" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource IsMoseOvernone}"
                        Tag="http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer" Click="btnESRIImagery_Click" Visibility="Collapsed">
                    <Image Width="35" Height="35" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/noti_icon/sat icon.png"/>
                </Button>
            </StackPanel>

            <Border Visibility="Collapsed" Panel.ZIndex="5" CornerRadius="10" BorderBrush="#008c99" BorderThickness="3" Background="Transparent" Opacity="0.95" Grid.Column="1" Grid.Row="1" Height="auto" Width="auto" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="20,20,20,20">
                <TextBlock Name="txtTitle" IsEnabled="False" TextAlignment="Center" FontSize="20" Text="" Background="#008c99" Foreground="#00ffcc" Padding="10" />
            </Border>

            <!--Search-->
            <Border x:Name="SearchGrid" Visibility="Collapsed" Margin="56,32,0,0" Background="Transparent"
                    Panel.ZIndex="5" Opacity="0.95" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" 
                    Height="Auto" Width="379" VerticalAlignment="Top" HorizontalAlignment="Left">
                <Grid>
                    <ListView>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="5,0,0,0" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Left" Text="{Binding }"/>
                                    <TextBlock Margin="5,0,0,0" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Left" Text="{Binding }"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </Border>

            <!--Search Result-->
            <Border x:Name="SearchResultGrid" Background="#2bb774" Panel.ZIndex="5" Opacity="0.95" Grid.Column="1" Grid.ColumnSpan="2"
                    Grid.Row="1" Height="510" Width="700" VerticalAlignment="Center" Visibility="Collapsed"
                    HorizontalAlignment="Left" CornerRadius="15">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30*"/>
                        <RowDefinition Height="120*"/>
                    </Grid.RowDefinitions>


                    <!--<StackPanel Orientation="Horizontal" Grid.Row="0" Background="#2bb774" Margin="0,0,0,0">
                        <TextBlock Margin="0" Width="465" FontSize="20" Foreground="#ffffff" VerticalAlignment="Center" TextAlignment="Center" Text="{x:Static p:Resources.strViolationsAssetsDetails}"/>

                        <Button x:Name="radBtnCloseRadarAssetsViolations" Style="{StaticResource IsMoseOvernone}" Click="radBtnCloseRadarAssetsViolations_Click" HorizontalAlignment="Right" Foreground="{x:Null}" BorderBrush="{x:Null}" FontSize="9" Margin="0,2,-10,0" Width="20" Height="20" Grid.Row="0">
                            <Image Height="18" Width="18" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/Close-icon.png"></Image>
                        </Button>
                    </StackPanel>-->

                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        <Button x:Name="radBtnCloseSearchResultGrid" Style="{StaticResource IsMoseOvernone}" BorderThickness="0" HorizontalAlignment="Right" BorderBrush="{x:Null}" FontSize="9" Width="20" Height="20" VerticalAlignment="Top" Margin="670,5,-10,0" Foreground="{x:Null}" Grid.Row="0" Click="radBtnCloseSearchResultGrid_Click">
                            <Image Width="18" Height="18" Source="pack://application:,,,/STC.Projects.ClassLibrary.Common;component/Images/Close-icon.png"></Image>
                        </Button>
                    </StackPanel>

                    <!--Vehicle Details-->
                    <Grid Grid.Row="1" Background="#171717">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Margin="5,0,0,0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" FontSize="25" Foreground="White" TextAlignment="Left" Text="{x:Static p:Resources.strCarDetails}"/>

                        <TextBlock Margin="5,0,0,0" Grid.Row="1" Grid.Column="0" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Left" Text="{x:Static p:Resources.strPlateNum}"/>
                        <TextBlock Margin="5,0,0,0" Grid.Row="1" Grid.Column="1" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Center" Text="{Binding FirstItemOfvehicleViolationsDetails.PlateNumber}"/>

                        <TextBlock Margin="5,0,0,0" Grid.Row="2" Grid.Column="0" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Left" Text="{x:Static p:Resources.strSource}"/>
                        <TextBlock Margin="5,0,0,0" Grid.Row="2" Grid.Column="1" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Center" Text="{Binding FirstItemOfvehicleViolationsDetails.PlateSourceName}"/>

                        <!--<TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="0" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Left" Text="{x:Static p:Resources.strPassingCode}"/>
                        <TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="1" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Center" Text="{Binding VehicleViolationsDetails.PlateNumber}"/>

                        <TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="2" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Left" Text="{x:Static p:Resources.strOwnerName}"/>
                        <TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="3" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Center" Text="{Binding VehicleViolationsDetails.PlateNumber}"/>-->

                        <TextBlock Margin="5,0,0,0" Grid.Row="1" Grid.Column="2" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Left" Text="{x:Static p:Resources.strColor}"/>
                        <TextBlock Margin="5,0,0,0" Grid.Row="1" Grid.Column="3" FontSize="20" TextWrapping="Wrap" Foreground="White" TextAlignment="Center" Text="{Binding FirstItemOfvehicleViolationsDetails.PlateColorName}"/>

                    </Grid>

                    <!--Vehicle Violations-->
                    <Grid Grid.Row="2" Background="#171717">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock Margin="5,0,0,0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" FontSize="25" Foreground="White" TextAlignment="Left" Text="{x:Static p:Resources.strVehicleViolations}"/>

                        <ListView ScrollViewer.VerticalScrollBarVisibility="Visible" Grid.Row="1" Margin="5" ItemsSource="{Binding VehicleViolationsDetails}"
                                  x:Name="LstVehicleViolationsDetails"
                                  MouseDoubleClick="ListView_MouseDoubleClick">
                            <ListView.View>
                                <GridView >
                                    <GridViewColumn Header="{x:Static p:Resources.strViolationID}" DisplayMemberBinding="{Binding MessageId}"  Width="Auto"/>
                                    <GridViewColumn Header="{x:Static p:Resources.strViolationType}" DisplayMemberBinding="{Binding ViolationTypeName}" Width="Auto"/>
                                    <GridViewColumn Header="{x:Static p:Resources.strViolationDateTime}" DisplayMemberBinding="{Binding DateTaken}" Width="Auto"/>
                                    <GridViewColumn Header="{x:Static p:Resources.strCapturedSpeed}" DisplayMemberBinding="{Binding CapturedSpeed}" Width="Auto"/>
                                    <GridViewColumn Header="{x:Static p:Resources.strSpeedLimit}" DisplayMemberBinding="{Binding SpeedLimit}" Width="Auto"/>
                                    <GridViewColumn Header="{x:Static p:Resources.strImage}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Style="{x:Null}" Content="{x:Static p:Resources.strImage}" 
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl},Mode=FindAncestor},Path=DataContext.ShowImageCommand}"
                                                        CommandParameter="{Binding }"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="{x:Static p:Resources.strVideo}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Style="{x:Null}" Content="{x:Static p:Resources.strVideo}" 
                                                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl},Mode=FindAncestor},Path=DataContext.ShowVideoCommand}"
                                                        CommandParameter="{Binding }"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </Grid>
            </Border>
            <Border x:Name="BorderPlate" Visibility="Collapsed" Background="Transparent" VerticalAlignment="Top"  HorizontalAlignment="Left" Grid.Row="0"  Grid.RowSpan="2" Grid.ColumnSpan="6">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Border Background="Black" Padding="2"  BorderThickness="1.5, 1.5, 1.5, 1.5" Margin="1,1,1,0" BorderBrush="#FF00FAC8"  Grid.Row="0" Grid.RowSpan="3" CornerRadius="5">
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!--<Polygon Grid.ColumnSpan="3" Grid.RowSpan="3" Fill="Black" Stroke="Aqua" StrokeThickness="1" Points="0,0 10,0 10,-10 20,0 140,0 140,80 0,80" />-->
                            
                            <Grid Background="Black" Grid.RowSpan="3" Grid.ColumnSpan="3"/>
                            <TextBlock  FontSize="14" FontFamily="Helvetica" Text="{x:Static p:Resources.strPlateNum}" Margin="5" Foreground="#FF00FAC8"/>

                            <TextBlock  FontSize="14" Grid.Row="0" Grid.Column="1" FontFamily="Helvetica" Text=":" Margin="0,5" Foreground="#FF00FAC8"/>

                            <TextBlock x:Name="txtPlateNo" Grid.Column="2" FontFamily="Helvetica" Margin="5" Foreground="#FF00FAC8" Opacity="0.7" ><Run Text="{x:Static p:Resources.NA}"/></TextBlock>
                            <TextBlock  FontSize="14" FontFamily="Helvetica" Text="{x:Static p:Resources.strViolationDateTime}" Grid.Row="1" Margin="5,0,5,5" Foreground="#FF00FAC8" />

                            <TextBlock  FontSize="14" Grid.Row="1" Grid.Column="1" FontFamily="Helvetica" Text=":" Margin="0,0,0,5" Foreground="#FF00FAC8"/>

                            <TextBlock x:Name="txtViolationTime" FontFamily="Helvetica" Grid.Row="1" Grid.Column="2" Margin="5,0,5,5" Foreground="#FF00FAC8" Opacity="0.7" ><Run Text="{x:Static p:Resources.NA}"/></TextBlock>
                            <TextBlock  FontSize="14" FontFamily="Helvetica" Text="{x:Static p:Resources.strViolationType}" Grid.Row="2" Margin="5" Foreground="#FF00FAC8" />

                            <TextBlock  FontSize="14" Grid.Row="2" Grid.Column="1" FontFamily="Helvetica" Text=":" Margin="0,5" Foreground="#FF00FAC8"/>

                            <TextBlock x:Name="txtViolationType"  FontSize="14" FontFamily="Helvetica" Grid.Row="3" TextWrapping="Wrap" Grid.Column="2" Margin="5" Foreground="#FF00FAC8" ><Run Text="{x:Static p:Resources.NA}"/></TextBlock>
                        </Grid>
                    </Border>
                    <Grid Grid.Row="3">
                        <Path Opacity="0.8" Grid.ColumnSpan="3" Grid.Row="2" Fill="#FF00FAC8" Stroke="#FF00FAC8" Width="25" Height="25" StrokeThickness="1" HorizontalAlignment="Center" Data="M 0,0 10,20 20,0" />
                    </Grid>
                </Grid>
                

            </Border>
            <Border x:Name="BorderPatrolsId" Visibility="Collapsed" VerticalAlignment="Top" HorizontalAlignment="Left"  Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="6" Background="Transparent" BorderBrush="#FF00FAC8" BorderThickness="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>

                    </Grid.RowDefinitions>

                    <Border Background="Black" Padding="2"  BorderThickness="1.5, 1.5, 1.5, 1.5" Margin="1,1,1,0" BorderBrush="#FF00FAC8"  Grid.Row="0" Grid.RowSpan="2" CornerRadius="5">
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!--<Polygon Grid.ColumnSpan="3" Grid.RowSpan="3" Fill="Black" Stroke="Aqua" StrokeThickness="1" Points="0,0 10,0 10,-10 20,0 140,0 140,80 0,80" />-->
                            <Grid Background="Black" Grid.RowSpan="3" Grid.ColumnSpan="2"/>
                            <TextBlock  FontSize="14" FontFamily="Helvetica" Text="{x:Static p:Resources.PatrolId}" Margin="5" Foreground="#FF00FAC8"/>

                            <TextBlock  FontSize="14" Grid.Row="0" Grid.Column="1" FontFamily="Helvetica" Text=":" Margin="0,5" Foreground="#FF00FAC8"/>

                            <TextBlock x:Name="txtPatrolId" Grid.Column="2" FontFamily="Helvetica" Margin="5" Foreground="#FF00FAC8" Opacity="0.7" ><Run Text="{x:Static p:Resources.NA}"/></TextBlock>
                            <TextBlock  FontSize="14" FontFamily="Helvetica" Text="{x:Static p:Resources.Status}" Grid.Row="1" Margin="5,0,5,5" Foreground="#FF00FAC8" />

                            <TextBlock  FontSize="14" Grid.Row="1" Grid.Column="1" FontFamily="Helvetica" Text=":" Margin="0,0,0,5" Foreground="#FF00FAC8"/>

                            <TextBlock x:Name="txtStatus" FontFamily="Helvetica" Grid.Row="1" Grid.Column="2" Margin="5,0,5,5" Foreground="#FF00FAC8" Opacity="0.7" ><Run Text="{x:Static p:Resources.NA}"/></TextBlock>
                            <!--<TextBlock  FontSize="14" FontFamily="Helvetica" Text="{x:Static p:Resources.ETA}" Grid.Row="2" Margin="5" Foreground="#FF00FAC8" />

                    <TextBlock  FontSize="14" Grid.Row="2" Grid.Column="1" FontFamily="Helvetica" Text=":" Margin="0,5" Foreground="#FF00FAC8"/>
                    
                    <TextBlock x:Name="txtETA"  FontSize="14" FontFamily="Helvetica" Grid.Row="3" Grid.Column="2" Margin="5" Foreground="#FF00FAC8" ><Run Text="{x:Static p:Resources.NA}"/></TextBlock>-->
                        </Grid>
                    </Border>
                    <Grid Grid.Row="2">
                        <Path Opacity="0.8" Grid.ColumnSpan="3" Grid.Row="2" Fill="#FF00FAC8" Stroke="#FF00FAC8" Width="25" Height="25" StrokeThickness="1" HorizontalAlignment="Center" Data="M 0,0 10,20 20,0" />
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Viewbox>
</UserControl>